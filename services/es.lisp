;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/es
  (:use)
  (:nicknames #:aws/es)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/es)

(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (access-policies-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or policy-document common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-policies-status 'make-access-policies-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-policies-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (tag-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-list is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-request 'make-add-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "TagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list))))))
(common-lisp:progn
 (common-lisp:defstruct (additional-limit (:copier common-lisp:nil))
   (limit-name common-lisp:nil :type
    (common-lisp:or limit-name common-lisp:null))
   (limit-values common-lisp:nil :type
    (common-lisp:or limit-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'additional-limit 'make-additional-limit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape additional-limit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LimitName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit-name)))
    (aws-sdk/generator/shape::to-query-params "LimitValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit-values))))))
(common-lisp:progn
 (common-lisp:deftype additional-limit-list ()
   '(trivial-types:proper-list additional-limit))
 (common-lisp:defun |make-additional-limit-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list additional-limit))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (advanced-options
     (:constructor |make-advanced-options|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (advanced-options-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or advanced-options common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'advanced-options-status 'make-advanced-options-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          advanced-options-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (base-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'base-exception 'make-base-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape base-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (create-elasticsearch-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (elasticsearch-version common-lisp:nil :type
    (common-lisp:or elasticsearch-version-string common-lisp:null))
   (elasticsearch-cluster-config common-lisp:nil :type
    (common-lisp:or elasticsearch-cluster-config common-lisp:null))
   (ebsoptions common-lisp:nil :type
    (common-lisp:or ebsoptions common-lisp:null))
   (access-policies common-lisp:nil :type
    (common-lisp:or policy-document common-lisp:null))
   (snapshot-options common-lisp:nil :type
    (common-lisp:or snapshot-options common-lisp:null))
   (advanced-options common-lisp:nil :type
    (common-lisp:or advanced-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-elasticsearch-domain-request
                    'make-create-elasticsearch-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-elasticsearch-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ElasticsearchVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-version)))
    (aws-sdk/generator/shape::to-query-params "ElasticsearchClusterConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-cluster-config)))
    (aws-sdk/generator/shape::to-query-params "EBSOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebsoptions)))
    (aws-sdk/generator/shape::to-query-params "AccessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policies)))
    (aws-sdk/generator/shape::to-query-params "SnapshotOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-options)))
    (aws-sdk/generator/shape::to-query-params "AdvancedOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'advanced-options))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-elasticsearch-domain-response (:copier common-lisp:nil))
   (domain-status common-lisp:nil :type
    (common-lisp:or elasticsearch-domain-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-elasticsearch-domain-response
                    'make-create-elasticsearch-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-elasticsearch-domain-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-elasticsearch-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-elasticsearch-domain-request
                    'make-delete-elasticsearch-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-elasticsearch-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-elasticsearch-domain-response (:copier common-lisp:nil))
   (domain-status common-lisp:nil :type
    (common-lisp:or elasticsearch-domain-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-elasticsearch-domain-response
                    'make-delete-elasticsearch-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-elasticsearch-domain-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-domain-config-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-domain-config-request
                    'make-describe-elasticsearch-domain-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-domain-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-domain-config-response (:copier common-lisp:nil))
   (domain-config
    (common-lisp:error
     #A((26) common-lisp:base-char . ":domain-config is required"))
    :type (common-lisp:or elasticsearch-domain-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-domain-config-response
                    'make-describe-elasticsearch-domain-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-domain-config-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-domain-request
                    'make-describe-elasticsearch-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-domain-response (:copier common-lisp:nil))
   (domain-status
    (common-lisp:error
     #A((26) common-lisp:base-char . ":domain-status is required"))
    :type (common-lisp:or elasticsearch-domain-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-domain-response
                    'make-describe-elasticsearch-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-domain-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-domains-request (:copier common-lisp:nil))
   (domain-names
    (common-lisp:error
     #A((25) common-lisp:base-char . ":domain-names is required"))
    :type (common-lisp:or domain-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-domains-request
                    'make-describe-elasticsearch-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-domains-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-domains-response (:copier common-lisp:nil))
   (domain-status-list
    (common-lisp:error
     #A((31) common-lisp:base-char . ":domain-status-list is required"))
    :type (common-lisp:or elasticsearch-domain-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-domains-response
                    'make-describe-elasticsearch-domains-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-domains-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainStatusList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-status-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-instance-type-limits-request
      (:copier common-lisp:nil))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or espartition-instance-type common-lisp:null))
   (elasticsearch-version
    (common-lisp:error
     #A((34) common-lisp:base-char . ":elasticsearch-version is required"))
    :type (common-lisp:or elasticsearch-version-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-instance-type-limits-request
                    'make-describe-elasticsearch-instance-type-limits-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-instance-type-limits-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "ElasticsearchVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elasticsearch-instance-type-limits-response
      (:copier common-lisp:nil))
   (limits-by-role common-lisp:nil :type
    (common-lisp:or limits-by-role common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elasticsearch-instance-type-limits-response
                    'make-describe-elasticsearch-instance-type-limits-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elasticsearch-instance-type-limits-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LimitsByRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits-by-role))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disabled-operation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disabled-operation-exception
                    'make-disabled-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disabled-operation-exception))
   (common-lisp:append)))
(common-lisp:deftype domain-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (domain-info (:copier common-lisp:nil))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-info 'make-domain-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:deftype domain-info-list ()
   '(trivial-types:proper-list domain-info))
 (common-lisp:defun |make-domain-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype domain-name-list ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun |make-domain-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ebsoptions (:copier common-lisp:nil))
   (ebsenabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (volume-type common-lisp:nil :type
    (common-lisp:or volume-type common-lisp:null))
   (volume-size common-lisp:nil :type
    (common-lisp:or integer-class common-lisp:null))
   (iops common-lisp:nil :type
    (common-lisp:or integer-class common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebsoptions 'make-ebsoptions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ebsoptions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EBSEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebsenabled)))
    (aws-sdk/generator/shape::to-query-params "VolumeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-type)))
    (aws-sdk/generator/shape::to-query-params "VolumeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-size)))
    (aws-sdk/generator/shape::to-query-params "Iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops))))))
(common-lisp:progn
 (common-lisp:defstruct (ebsoptions-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or ebsoptions common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ebsoptions-status 'make-ebsoptions-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ebsoptions-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype espartition-instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (elasticsearch-cluster-config (:copier common-lisp:nil))
   (instance-type common-lisp:nil :type
    (common-lisp:or espartition-instance-type common-lisp:null))
   (instance-count common-lisp:nil :type
    (common-lisp:or integer-class common-lisp:null))
   (dedicated-master-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (zone-awareness-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (dedicated-master-type common-lisp:nil :type
    (common-lisp:or espartition-instance-type common-lisp:null))
   (dedicated-master-count common-lisp:nil :type
    (common-lisp:or integer-class common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'elasticsearch-cluster-config
                    'make-elasticsearch-cluster-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          elasticsearch-cluster-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "InstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-count)))
    (aws-sdk/generator/shape::to-query-params "DedicatedMasterEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dedicated-master-enabled)))
    (aws-sdk/generator/shape::to-query-params "ZoneAwarenessEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'zone-awareness-enabled)))
    (aws-sdk/generator/shape::to-query-params "DedicatedMasterType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dedicated-master-type)))
    (aws-sdk/generator/shape::to-query-params "DedicatedMasterCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dedicated-master-count))))))
(common-lisp:progn
 (common-lisp:defstruct
     (elasticsearch-cluster-config-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or elasticsearch-cluster-config common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'elasticsearch-cluster-config-status
                    'make-elasticsearch-cluster-config-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          elasticsearch-cluster-config-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (elasticsearch-domain-config (:copier common-lisp:nil))
   (elasticsearch-version common-lisp:nil :type
    (common-lisp:or elasticsearch-version-status common-lisp:null))
   (elasticsearch-cluster-config common-lisp:nil :type
    (common-lisp:or elasticsearch-cluster-config-status common-lisp:null))
   (ebsoptions common-lisp:nil :type
    (common-lisp:or ebsoptions-status common-lisp:null))
   (access-policies common-lisp:nil :type
    (common-lisp:or access-policies-status common-lisp:null))
   (snapshot-options common-lisp:nil :type
    (common-lisp:or snapshot-options-status common-lisp:null))
   (advanced-options common-lisp:nil :type
    (common-lisp:or advanced-options-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'elasticsearch-domain-config
                    'make-elasticsearch-domain-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          elasticsearch-domain-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticsearchVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-version)))
    (aws-sdk/generator/shape::to-query-params "ElasticsearchClusterConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-cluster-config)))
    (aws-sdk/generator/shape::to-query-params "EBSOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebsoptions)))
    (aws-sdk/generator/shape::to-query-params "AccessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policies)))
    (aws-sdk/generator/shape::to-query-params "SnapshotOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-options)))
    (aws-sdk/generator/shape::to-query-params "AdvancedOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'advanced-options))))))
(common-lisp:progn
 (common-lisp:defstruct (elasticsearch-domain-status (:copier common-lisp:nil))
   (domain-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":domain-id is required"))
    :type (common-lisp:or domain-id common-lisp:null))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (deleted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (endpoint common-lisp:nil :type
    (common-lisp:or service-url common-lisp:null))
   (processing common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (elasticsearch-version common-lisp:nil :type
    (common-lisp:or elasticsearch-version-string common-lisp:null))
   (elasticsearch-cluster-config
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":elasticsearch-cluster-config is required"))
    :type (common-lisp:or elasticsearch-cluster-config common-lisp:null))
   (ebsoptions common-lisp:nil :type
    (common-lisp:or ebsoptions common-lisp:null))
   (access-policies common-lisp:nil :type
    (common-lisp:or policy-document common-lisp:null))
   (snapshot-options common-lisp:nil :type
    (common-lisp:or snapshot-options common-lisp:null))
   (advanced-options common-lisp:nil :type
    (common-lisp:or advanced-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'elasticsearch-domain-status
                    'make-elasticsearch-domain-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          elasticsearch-domain-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-id)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "Deleted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deleted)))
    (aws-sdk/generator/shape::to-query-params "Endpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint)))
    (aws-sdk/generator/shape::to-query-params "Processing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'processing)))
    (aws-sdk/generator/shape::to-query-params "ElasticsearchVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-version)))
    (aws-sdk/generator/shape::to-query-params "ElasticsearchClusterConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-cluster-config)))
    (aws-sdk/generator/shape::to-query-params "EBSOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebsoptions)))
    (aws-sdk/generator/shape::to-query-params "AccessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policies)))
    (aws-sdk/generator/shape::to-query-params "SnapshotOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-options)))
    (aws-sdk/generator/shape::to-query-params "AdvancedOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'advanced-options))))))
(common-lisp:progn
 (common-lisp:deftype elasticsearch-domain-status-list ()
   '(trivial-types:proper-list elasticsearch-domain-status))
 (common-lisp:defun |make-elasticsearch-domain-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            elasticsearch-domain-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype elasticsearch-instance-type-list ()
   '(trivial-types:proper-list espartition-instance-type))
 (common-lisp:defun |make-elasticsearch-instance-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            espartition-instance-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype elasticsearch-version-list ()
   '(trivial-types:proper-list elasticsearch-version-string))
 (common-lisp:defun |make-elasticsearch-version-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            elasticsearch-version-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (elasticsearch-version-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or elasticsearch-version-string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'elasticsearch-version-status
                    'make-elasticsearch-version-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          elasticsearch-version-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype elasticsearch-version-string () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-count-limits (:copier common-lisp:nil))
   (minimum-instance-count common-lisp:nil :type
    (common-lisp:or minimum-instance-count common-lisp:null))
   (maximum-instance-count common-lisp:nil :type
    (common-lisp:or maximum-instance-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-count-limits 'make-instance-count-limits))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-count-limits))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MinimumInstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minimum-instance-count)))
    (aws-sdk/generator/shape::to-query-params "MaximumInstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-instance-count))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-limits (:copier common-lisp:nil))
   (instance-count-limits common-lisp:nil :type
    (common-lisp:or instance-count-limits common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-limits 'make-instance-limits))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-limits))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceCountLimits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-count-limits))))))
(common-lisp:deftype instance-role () 'common-lisp:string)
(common-lisp:deftype integer-class () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'internal-exception 'make-internal-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape internal-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-type-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-type-exception 'make-invalid-type-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-type-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype limit-name () 'common-lisp:string)
(common-lisp:deftype limit-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype limit-value-list ()
   '(trivial-types:proper-list limit-value))
 (common-lisp:defun |make-limit-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list limit-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (limits (:copier common-lisp:nil))
   (storage-types common-lisp:nil :type
    (common-lisp:or storage-type-list common-lisp:null))
   (instance-limits common-lisp:nil :type
    (common-lisp:or instance-limits common-lisp:null))
   (additional-limits common-lisp:nil :type
    (common-lisp:or additional-limit-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'limits 'make-limits))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape limits))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StorageTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-types)))
    (aws-sdk/generator/shape::to-query-params "InstanceLimits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-limits)))
    (aws-sdk/generator/shape::to-query-params "AdditionalLimits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-limits))))))
(common-lisp:defstruct
    (limits-by-role
     (:constructor |make-limits-by-role|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (list-domain-names-response (:copier common-lisp:nil))
   (domain-names common-lisp:nil :type
    (common-lisp:or domain-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domain-names-response
                    'make-list-domain-names-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-domain-names-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-elasticsearch-instance-types-request (:copier common-lisp:nil))
   (elasticsearch-version
    (common-lisp:error
     #A((34) common-lisp:base-char . ":elasticsearch-version is required"))
    :type (common-lisp:or elasticsearch-version-string common-lisp:null))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-elasticsearch-instance-types-request
                    'make-list-elasticsearch-instance-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-elasticsearch-instance-types-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticsearchVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-version)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-elasticsearch-instance-types-response (:copier common-lisp:nil))
   (elasticsearch-instance-types common-lisp:nil :type
    (common-lisp:or elasticsearch-instance-type-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-elasticsearch-instance-types-response
                    'make-list-elasticsearch-instance-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-elasticsearch-instance-types-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticsearchInstanceTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-instance-types)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-elasticsearch-versions-request (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-elasticsearch-versions-request
                    'make-list-elasticsearch-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-elasticsearch-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-elasticsearch-versions-response (:copier common-lisp:nil))
   (elasticsearch-versions common-lisp:nil :type
    (common-lisp:or elasticsearch-version-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-elasticsearch-versions-response
                    'make-list-elasticsearch-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-elasticsearch-versions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticsearchVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-versions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-request 'make-list-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-response (:copier common-lisp:nil))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-response 'make-list-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list))))))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype maximum-instance-count () 'common-lisp:integer)
(common-lisp:deftype minimum-instance-count () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype option-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (option-status (:copier common-lisp:nil))
   (creation-date
    (common-lisp:error
     #A((26) common-lisp:base-char . ":creation-date is required"))
    :type (common-lisp:or update-timestamp common-lisp:null))
   (update-date
    (common-lisp:error
     #A((24) common-lisp:base-char . ":update-date is required"))
    :type (common-lisp:or update-timestamp common-lisp:null))
   (update-version common-lisp:nil :type
    (common-lisp:or uint-value common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or option-state common-lisp:null))
   (pending-deletion common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'option-status 'make-option-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape option-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "UpdateDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-date)))
    (aws-sdk/generator/shape::to-query-params "UpdateVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-version)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "PendingDeletion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending-deletion))))))
(common-lisp:deftype policy-document () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (remove-tags-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-request 'make-remove-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape remove-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'make-resource-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-already-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype service-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (snapshot-options (:copier common-lisp:nil))
   (automated-snapshot-start-hour common-lisp:nil :type
    (common-lisp:or integer-class common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snapshot-options 'make-snapshot-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape snapshot-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomatedSnapshotStartHour"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automated-snapshot-start-hour))))))
(common-lisp:progn
 (common-lisp:defstruct (snapshot-options-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or snapshot-options common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snapshot-options-status 'make-snapshot-options-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          snapshot-options-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype storage-sub-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (storage-type (:copier common-lisp:nil))
   (storage-type-name common-lisp:nil :type
    (common-lisp:or storage-type-name common-lisp:null))
   (storage-sub-type-name common-lisp:nil :type
    (common-lisp:or storage-sub-type-name common-lisp:null))
   (storage-type-limits common-lisp:nil :type
    (common-lisp:or storage-type-limit-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'storage-type 'make-storage-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape storage-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StorageTypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-type-name)))
    (aws-sdk/generator/shape::to-query-params "StorageSubTypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-sub-type-name)))
    (aws-sdk/generator/shape::to-query-params "StorageTypeLimits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-type-limits))))))
(common-lisp:progn
 (common-lisp:defstruct (storage-type-limit (:copier common-lisp:nil))
   (limit-name common-lisp:nil :type
    (common-lisp:or limit-name common-lisp:null))
   (limit-values common-lisp:nil :type
    (common-lisp:or limit-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-type-limit 'make-storage-type-limit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape storage-type-limit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LimitName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit-name)))
    (aws-sdk/generator/shape::to-query-params "LimitValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit-values))))))
(common-lisp:progn
 (common-lisp:deftype storage-type-limit-list ()
   '(trivial-types:proper-list storage-type-limit))
 (common-lisp:defun |make-storage-type-limit-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list storage-type-limit))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype storage-type-list ()
   '(trivial-types:proper-list storage-type))
 (common-lisp:defun |make-storage-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list storage-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype storage-type-name () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype uint-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (update-elasticsearch-domain-config-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (elasticsearch-cluster-config common-lisp:nil :type
    (common-lisp:or elasticsearch-cluster-config common-lisp:null))
   (ebsoptions common-lisp:nil :type
    (common-lisp:or ebsoptions common-lisp:null))
   (snapshot-options common-lisp:nil :type
    (common-lisp:or snapshot-options common-lisp:null))
   (advanced-options common-lisp:nil :type
    (common-lisp:or advanced-options common-lisp:null))
   (access-policies common-lisp:nil :type
    (common-lisp:or policy-document common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-elasticsearch-domain-config-request
                    'make-update-elasticsearch-domain-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-elasticsearch-domain-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ElasticsearchClusterConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elasticsearch-cluster-config)))
    (aws-sdk/generator/shape::to-query-params "EBSOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebsoptions)))
    (aws-sdk/generator/shape::to-query-params "SnapshotOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-options)))
    (aws-sdk/generator/shape::to-query-params "AdvancedOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'advanced-options)))
    (aws-sdk/generator/shape::to-query-params "AccessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policies))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-elasticsearch-domain-config-response (:copier common-lisp:nil))
   (domain-config
    (common-lisp:error
     #A((26) common-lisp:base-char . ":domain-config is required"))
    :type (common-lisp:or elasticsearch-domain-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-elasticsearch-domain-config-response
                    'make-update-elasticsearch-domain-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-elasticsearch-domain-config-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-config))))))
(common-lisp:deftype update-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (validation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'make-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape validation-exception))
   (common-lisp:append)))
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tag-list)
   (common-lisp:declare (common-lisp:ignorable arn tag-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddTags")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'add-tags))
(common-lisp:progn
 (common-lisp:defun create-elasticsearch-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name elasticsearch-version
                     elasticsearch-cluster-config ebsoptions access-policies
                     snapshot-options advanced-options)
   (common-lisp:declare
    (common-lisp:ignorable domain-name elasticsearch-version
     elasticsearch-cluster-config ebsoptions access-policies snapshot-options
     advanced-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-elasticsearch-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateElasticsearchDomain")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateElasticsearchDomainResponse" common-lisp:nil)))
 (common-lisp:export 'create-elasticsearch-domain))
(common-lisp:progn
 (common-lisp:defun delete-elasticsearch-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-elasticsearch-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-01-01/es/domain/~a"
                                                   domainname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteElasticsearchDomain")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteElasticsearchDomainResponse" common-lisp:nil)))
 (common-lisp:export 'delete-elasticsearch-domain))
(common-lisp:progn
 (common-lisp:defun describe-elasticsearch-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-elasticsearch-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-01-01/es/domain/~a"
                                                   domainname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeElasticsearchDomain")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeElasticsearchDomainResponse" common-lisp:nil)))
 (common-lisp:export 'describe-elasticsearch-domain))
(common-lisp:progn
 (common-lisp:defun describe-elasticsearch-domain-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-elasticsearch-domain-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-01-01/es/domain/~a/config"
                                                   domainname)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeElasticsearchDomainConfig")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeElasticsearchDomainConfigResponse" common-lisp:nil)))
 (common-lisp:export 'describe-elasticsearch-domain-config))
(common-lisp:progn
 (common-lisp:defun describe-elasticsearch-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-names)
   (common-lisp:declare (common-lisp:ignorable domain-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-elasticsearch-domains-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeElasticsearchDomains")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeElasticsearchDomainsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-elasticsearch-domains))
(common-lisp:progn
 (common-lisp:defun describe-elasticsearch-instance-type-limits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name instance-type
                     elasticsearch-version)
   (common-lisp:declare
    (common-lisp:ignorable domain-name instance-type elasticsearch-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-elasticsearch-instance-type-limits-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-01-01/es/instanceTypeLimits/~a/~a"
                                                   elasticsearchversion
                                                   instancetype)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeElasticsearchInstanceTypeLimits")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeElasticsearchInstanceTypeLimitsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-elasticsearch-instance-type-limits))
(common-lisp:progn
 (common-lisp:defun list-domain-names ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                             :method :get :params
                             (common-lisp:cons "Action" "ListDomainNames"))
    "ListDomainNamesResponse" common-lisp:nil))
 (common-lisp:export 'list-domain-names))
(common-lisp:progn
 (common-lisp:defun list-elasticsearch-instance-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elasticsearch-version domain-name
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable elasticsearch-version domain-name max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-elasticsearch-instance-types-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-01-01/es/instanceTypes/~a"
                                                   elasticsearchversion)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListElasticsearchInstanceTypes")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListElasticsearchInstanceTypesResponse" common-lisp:nil)))
 (common-lisp:export 'list-elasticsearch-instance-types))
(common-lisp:progn
 (common-lisp:defun list-elasticsearch-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-elasticsearch-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListElasticsearchVersions")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListElasticsearchVersionsResponse" common-lisp:nil)))
 (common-lisp:export 'list-elasticsearch-versions))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListTags")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsResponse" common-lisp:nil)))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun remove-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveTags")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-tags))
(common-lisp:progn
 (common-lisp:defun update-elasticsearch-domain-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name elasticsearch-cluster-config
                     ebsoptions snapshot-options advanced-options
                     access-policies)
   (common-lisp:declare
    (common-lisp:ignorable domain-name elasticsearch-cluster-config ebsoptions
     snapshot-options advanced-options access-policies))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-elasticsearch-domain-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "es")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-01-01/es/domain/~a/config"
                                                   domainname)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"UpdateElasticsearchDomainConfig")
                                  ("Version" ,@"2015-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateElasticsearchDomainConfigResponse" common-lisp:nil)))
 (common-lisp:export 'update-elasticsearch-domain-config))