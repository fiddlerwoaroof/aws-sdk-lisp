;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/elastictranscoder
  (:use)
  (:nicknames #:aws/elastictranscoder)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/elastictranscoder)

(common-lisp:deftype access-control () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype access-controls ()
   '(trivial-types:proper-list access-control))
 (common-lisp:defun |make-access-controls|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list access-control))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (access-denied-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'make-access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-denied-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (artwork (:copier common-lisp:nil))
   (input-key common-lisp:nil :type
    (common-lisp:or watermark-key common-lisp:null))
   (max-width common-lisp:nil :type
    (common-lisp:or digits-or-auto common-lisp:null))
   (max-height common-lisp:nil :type
    (common-lisp:or digits-or-auto common-lisp:null))
   (sizing-policy common-lisp:nil :type
    (common-lisp:or sizing-policy common-lisp:null))
   (padding-policy common-lisp:nil :type
    (common-lisp:or padding-policy common-lisp:null))
   (album-art-format common-lisp:nil :type
    (common-lisp:or jpg-or-png common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null)))
 (common-lisp:export (common-lisp:list 'artwork 'make-artwork))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape artwork))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InputKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-key)))
    (aws-sdk/generator/shape::to-query-params "MaxWidth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-width)))
    (aws-sdk/generator/shape::to-query-params "MaxHeight"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-height)))
    (aws-sdk/generator/shape::to-query-params "SizingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sizing-policy)))
    (aws-sdk/generator/shape::to-query-params "PaddingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'padding-policy)))
    (aws-sdk/generator/shape::to-query-params "AlbumArtFormat"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'album-art-format)))
    (aws-sdk/generator/shape::to-query-params "Encryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption))))))
(common-lisp:progn
 (common-lisp:deftype artworks () '(trivial-types:proper-list artwork))
 (common-lisp:defun |make-artworks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list artwork))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ascending () 'common-lisp:string)
(common-lisp:deftype aspect-ratio () 'common-lisp:string)
(common-lisp:deftype audio-bit-depth () 'common-lisp:string)
(common-lisp:deftype audio-bit-order () 'common-lisp:string)
(common-lisp:deftype audio-bit-rate () 'common-lisp:string)
(common-lisp:deftype audio-channels () 'common-lisp:string)
(common-lisp:deftype audio-codec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (audio-codec-options (:copier common-lisp:nil))
   (profile common-lisp:nil :type
    (common-lisp:or audio-codec-profile common-lisp:null))
   (bit-depth common-lisp:nil :type
    (common-lisp:or audio-bit-depth common-lisp:null))
   (bit-order common-lisp:nil :type
    (common-lisp:or audio-bit-order common-lisp:null))
   (signed common-lisp:nil :type
    (common-lisp:or audio-signed common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'audio-codec-options 'make-audio-codec-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape audio-codec-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Profile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'profile)))
    (aws-sdk/generator/shape::to-query-params "BitDepth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bit-depth)))
    (aws-sdk/generator/shape::to-query-params "BitOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bit-order)))
    (aws-sdk/generator/shape::to-query-params "Signed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signed))))))
(common-lisp:deftype audio-codec-profile () 'common-lisp:string)
(common-lisp:deftype audio-packing-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (audio-parameters (:copier common-lisp:nil))
   (codec common-lisp:nil :type (common-lisp:or audio-codec common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or audio-sample-rate common-lisp:null))
   (bit-rate common-lisp:nil :type
    (common-lisp:or audio-bit-rate common-lisp:null))
   (channels common-lisp:nil :type
    (common-lisp:or audio-channels common-lisp:null))
   (audio-packing-mode common-lisp:nil :type
    (common-lisp:or audio-packing-mode common-lisp:null))
   (codec-options common-lisp:nil :type
    (common-lisp:or audio-codec-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'audio-parameters 'make-audio-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape audio-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Codec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'codec)))
    (aws-sdk/generator/shape::to-query-params "SampleRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-rate)))
    (aws-sdk/generator/shape::to-query-params "BitRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bit-rate)))
    (aws-sdk/generator/shape::to-query-params "Channels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'channels)))
    (aws-sdk/generator/shape::to-query-params "AudioPackingMode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'audio-packing-mode)))
    (aws-sdk/generator/shape::to-query-params "CodecOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'codec-options))))))
(common-lisp:deftype audio-sample-rate () 'common-lisp:string)
(common-lisp:deftype audio-signed () 'common-lisp:string)
(common-lisp:deftype base64encoded-string () 'common-lisp:string)
(common-lisp:deftype bucket-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cancel-job-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-request 'make-cancel-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-job-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-response 'make-cancel-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-job-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (caption-format (:copier common-lisp:nil))
   (format common-lisp:nil :type
    (common-lisp:or caption-format-format common-lisp:null))
   (pattern common-lisp:nil :type
    (common-lisp:or caption-format-pattern common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null)))
 (common-lisp:export (common-lisp:list 'caption-format 'make-caption-format))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape caption-format))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "Pattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pattern)))
    (aws-sdk/generator/shape::to-query-params "Encryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption))))))
(common-lisp:deftype caption-format-format () 'common-lisp:string)
(common-lisp:deftype caption-format-pattern () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype caption-formats ()
   '(trivial-types:proper-list caption-format))
 (common-lisp:defun |make-caption-formats|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list caption-format))
   aws-sdk/generator/shape::members))
(common-lisp:deftype caption-merge-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (caption-source (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or long-key common-lisp:null))
   (language common-lisp:nil :type (common-lisp:or key common-lisp:null))
   (time-offset common-lisp:nil :type
    (common-lisp:or time-offset common-lisp:null))
   (label common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null)))
 (common-lisp:export (common-lisp:list 'caption-source 'make-caption-source))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape caption-source))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language)))
    (aws-sdk/generator/shape::to-query-params "TimeOffset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-offset)))
    (aws-sdk/generator/shape::to-query-params "Label"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'label)))
    (aws-sdk/generator/shape::to-query-params "Encryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption))))))
(common-lisp:progn
 (common-lisp:deftype caption-sources ()
   '(trivial-types:proper-list caption-source))
 (common-lisp:defun |make-caption-sources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list caption-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (captions (:copier common-lisp:nil))
   (merge-policy common-lisp:nil :type
    (common-lisp:or caption-merge-policy common-lisp:null))
   (caption-sources common-lisp:nil :type
    (common-lisp:or caption-sources common-lisp:null))
   (caption-formats common-lisp:nil :type
    (common-lisp:or caption-formats common-lisp:null)))
 (common-lisp:export (common-lisp:list 'captions 'make-captions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape captions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MergePolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'merge-policy)))
    (aws-sdk/generator/shape::to-query-params "CaptionSources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caption-sources)))
    (aws-sdk/generator/shape::to-query-params "CaptionFormats"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caption-formats))))))
(common-lisp:progn
 (common-lisp:defstruct (clip (:copier common-lisp:nil))
   (time-span common-lisp:nil :type
    (common-lisp:or time-span common-lisp:null)))
 (common-lisp:export (common-lisp:list 'clip 'make-clip))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape clip))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TimeSpan"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-span))))))
(common-lisp:deftype codec-option () 'common-lisp:string)
(common-lisp:defstruct
    (codec-options
     (:constructor |make-codec-options|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype composition () '(trivial-types:proper-list clip))
 (common-lisp:defun |make-composition|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list clip))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-job-output (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or key common-lisp:null))
   (thumbnail-pattern common-lisp:nil :type
    (common-lisp:or thumbnail-pattern common-lisp:null))
   (thumbnail-encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (rotate common-lisp:nil :type (common-lisp:or rotate common-lisp:null))
   (preset-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (segment-duration common-lisp:nil :type
    (common-lisp:or float-string common-lisp:null))
   (watermarks common-lisp:nil :type
    (common-lisp:or job-watermarks common-lisp:null))
   (album-art common-lisp:nil :type
    (common-lisp:or job-album-art common-lisp:null))
   (composition common-lisp:nil :type
    (common-lisp:or composition common-lisp:null))
   (captions common-lisp:nil :type (common-lisp:or captions common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-output 'make-create-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-job-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "ThumbnailPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail-pattern)))
    (aws-sdk/generator/shape::to-query-params "ThumbnailEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail-encryption)))
    (aws-sdk/generator/shape::to-query-params "Rotate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rotate)))
    (aws-sdk/generator/shape::to-query-params "PresetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preset-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentDuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-duration)))
    (aws-sdk/generator/shape::to-query-params "Watermarks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'watermarks)))
    (aws-sdk/generator/shape::to-query-params "AlbumArt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'album-art)))
    (aws-sdk/generator/shape::to-query-params "Composition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'composition)))
    (aws-sdk/generator/shape::to-query-params "Captions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'captions)))
    (aws-sdk/generator/shape::to-query-params "Encryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption))))))
(common-lisp:progn
 (common-lisp:deftype create-job-outputs ()
   '(trivial-types:proper-list create-job-output))
 (common-lisp:defun |make-create-job-outputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list create-job-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-job-playlist (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or filename common-lisp:null))
   (format common-lisp:nil :type
    (common-lisp:or playlist-format common-lisp:null))
   (output-keys common-lisp:nil :type
    (common-lisp:or output-keys common-lisp:null))
   (hls-content-protection common-lisp:nil :type
    (common-lisp:or hls-content-protection common-lisp:null))
   (play-ready-drm common-lisp:nil :type
    (common-lisp:or play-ready-drm common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-playlist 'make-create-job-playlist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-job-playlist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "OutputKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-keys)))
    (aws-sdk/generator/shape::to-query-params "HlsContentProtection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hls-content-protection)))
    (aws-sdk/generator/shape::to-query-params "PlayReadyDrm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'play-ready-drm))))))
(common-lisp:progn
 (common-lisp:deftype create-job-playlists ()
   '(trivial-types:proper-list create-job-playlist))
 (common-lisp:defun |make-create-job-playlists|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list create-job-playlist))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-job-request (:copier common-lisp:nil))
   (pipeline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":pipeline-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or job-input common-lisp:null))
   (inputs common-lisp:nil :type (common-lisp:or job-inputs common-lisp:null))
   (output common-lisp:nil :type
    (common-lisp:or create-job-output common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or create-job-outputs common-lisp:null))
   (output-key-prefix common-lisp:nil :type
    (common-lisp:or key common-lisp:null))
   (playlists common-lisp:nil :type
    (common-lisp:or create-job-playlists common-lisp:null))
   (user-metadata common-lisp:nil :type
    (common-lisp:or user-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-request 'make-create-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PipelineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline-id)))
    (aws-sdk/generator/shape::to-query-params "Input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "Inputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inputs)))
    (aws-sdk/generator/shape::to-query-params "Output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output)))
    (aws-sdk/generator/shape::to-query-params "Outputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'outputs)))
    (aws-sdk/generator/shape::to-query-params "OutputKeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-key-prefix)))
    (aws-sdk/generator/shape::to-query-params "Playlists"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'playlists)))
    (aws-sdk/generator/shape::to-query-params "UserMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (create-job-response (:copier common-lisp:nil))
   (job common-lisp:nil :type (common-lisp:or job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-response 'make-create-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Job"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job))))))
(common-lisp:progn
 (common-lisp:defstruct (create-pipeline-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (input-bucket
    (common-lisp:error
     #A((25) common-lisp:base-char . ":input-bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (output-bucket common-lisp:nil :type
    (common-lisp:or bucket-name common-lisp:null))
   (role
    (common-lisp:error #A((17) common-lisp:base-char . ":role is required"))
    :type (common-lisp:or role common-lisp:null))
   (aws-kms-key-arn common-lisp:nil :type
    (common-lisp:or key-arn common-lisp:null))
   (notifications common-lisp:nil :type
    (common-lisp:or notifications common-lisp:null))
   (content-config common-lisp:nil :type
    (common-lisp:or pipeline-output-config common-lisp:null))
   (thumbnail-config common-lisp:nil :type
    (common-lisp:or pipeline-output-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pipeline-request 'make-create-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-pipeline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InputBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-bucket)))
    (aws-sdk/generator/shape::to-query-params "OutputBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-bucket)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "AwsKmsKeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aws-kms-key-arn)))
    (aws-sdk/generator/shape::to-query-params "Notifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notifications)))
    (aws-sdk/generator/shape::to-query-params "ContentConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-config)))
    (aws-sdk/generator/shape::to-query-params "ThumbnailConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail-config))))))
(common-lisp:progn
 (common-lisp:defstruct (create-pipeline-response (:copier common-lisp:nil))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null))
   (warnings common-lisp:nil :type (common-lisp:or warnings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pipeline-response 'make-create-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-pipeline-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pipeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline)))
    (aws-sdk/generator/shape::to-query-params "Warnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warnings))))))
(common-lisp:progn
 (common-lisp:defstruct (create-preset-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (container
    (common-lisp:error
     #A((22) common-lisp:base-char . ":container is required"))
    :type (common-lisp:or preset-container common-lisp:null))
   (video common-lisp:nil :type
    (common-lisp:or video-parameters common-lisp:null))
   (audio common-lisp:nil :type
    (common-lisp:or audio-parameters common-lisp:null))
   (thumbnails common-lisp:nil :type
    (common-lisp:or thumbnails common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-preset-request 'make-create-preset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-preset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Container"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container)))
    (aws-sdk/generator/shape::to-query-params "Video"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'video)))
    (aws-sdk/generator/shape::to-query-params "Audio"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'audio)))
    (aws-sdk/generator/shape::to-query-params "Thumbnails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnails))))))
(common-lisp:progn
 (common-lisp:defstruct (create-preset-response (:copier common-lisp:nil))
   (preset common-lisp:nil :type (common-lisp:or preset common-lisp:null))
   (warning common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-preset-response 'make-create-preset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-preset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Preset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preset)))
    (aws-sdk/generator/shape::to-query-params "Warning"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warning))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-pipeline-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-pipeline-request 'make-delete-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-pipeline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-pipeline-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-pipeline-response 'make-delete-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-pipeline-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-preset-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-preset-request 'make-delete-preset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-preset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-preset-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-preset-response 'make-delete-preset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-preset-response))
   (common-lisp:append)))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (detected-properties (:copier common-lisp:nil))
   (width common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (height common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (frame-rate common-lisp:nil :type
    (common-lisp:or float-string common-lisp:null))
   (file-size common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null))
   (duration-millis common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detected-properties 'make-detected-properties))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape detected-properties))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Width"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'width)))
    (aws-sdk/generator/shape::to-query-params "Height"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'height)))
    (aws-sdk/generator/shape::to-query-params "FrameRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frame-rate)))
    (aws-sdk/generator/shape::to-query-params "FileSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-size)))
    (aws-sdk/generator/shape::to-query-params "DurationMillis"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-millis))))))
(common-lisp:deftype digits () 'common-lisp:string)
(common-lisp:deftype digits-or-auto () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (encryption (:copier common-lisp:nil))
   (mode common-lisp:nil :type
    (common-lisp:or encryption-mode common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or base64encoded-string common-lisp:null))
   (key-md5 common-lisp:nil :type
    (common-lisp:or base64encoded-string common-lisp:null))
   (initialization-vector common-lisp:nil :type
    (common-lisp:or zero-to255string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'encryption 'make-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape encryption))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Mode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mode)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "KeyMd5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-md5)))
    (aws-sdk/generator/shape::to-query-params "InitializationVector"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initialization-vector))))))
(common-lisp:deftype encryption-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exception-messages ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-exception-messages|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype filename () 'common-lisp:string)
(common-lisp:deftype fixed-gop () 'common-lisp:string)
(common-lisp:deftype float-string () 'common-lisp:string)
(common-lisp:deftype frame-rate () 'common-lisp:string)
(common-lisp:deftype grantee () 'common-lisp:string)
(common-lisp:deftype grantee-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (hls-content-protection (:copier common-lisp:nil))
   (method common-lisp:nil :type
    (common-lisp:or hls-content-protection-method common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or base64encoded-string common-lisp:null))
   (key-md5 common-lisp:nil :type
    (common-lisp:or base64encoded-string common-lisp:null))
   (initialization-vector common-lisp:nil :type
    (common-lisp:or zero-to255string common-lisp:null))
   (license-acquisition-url common-lisp:nil :type
    (common-lisp:or zero-to512string common-lisp:null))
   (key-storage-policy common-lisp:nil :type
    (common-lisp:or key-storage-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-content-protection 'make-hls-content-protection))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          hls-content-protection))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Method"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'method)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "KeyMd5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-md5)))
    (aws-sdk/generator/shape::to-query-params "InitializationVector"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initialization-vector)))
    (aws-sdk/generator/shape::to-query-params "LicenseAcquisitionUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'license-acquisition-url)))
    (aws-sdk/generator/shape::to-query-params "KeyStoragePolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-storage-policy))))))
(common-lisp:deftype hls-content-protection-method () 'common-lisp:string)
(common-lisp:deftype horizontal-align () 'common-lisp:string)
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (incompatible-version-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'incompatible-version-exception
                    'make-incompatible-version-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          incompatible-version-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (input-captions (:copier common-lisp:nil))
   (merge-policy common-lisp:nil :type
    (common-lisp:or caption-merge-policy common-lisp:null))
   (caption-sources common-lisp:nil :type
    (common-lisp:or caption-sources common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input-captions 'make-input-captions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-captions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MergePolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'merge-policy)))
    (aws-sdk/generator/shape::to-query-params "CaptionSources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caption-sources))))))
(common-lisp:deftype interlaced () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (internal-service-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'make-internal-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-service-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (job (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pipeline-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or job-input common-lisp:null))
   (inputs common-lisp:nil :type (common-lisp:or job-inputs common-lisp:null))
   (output common-lisp:nil :type (common-lisp:or job-output common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or job-outputs common-lisp:null))
   (output-key-prefix common-lisp:nil :type
    (common-lisp:or key common-lisp:null))
   (playlists common-lisp:nil :type
    (common-lisp:or playlists common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or job-status common-lisp:null))
   (user-metadata common-lisp:nil :type
    (common-lisp:or user-metadata common-lisp:null))
   (timing common-lisp:nil :type (common-lisp:or timing common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job 'make-job))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "PipelineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline-id)))
    (aws-sdk/generator/shape::to-query-params "Input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "Inputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inputs)))
    (aws-sdk/generator/shape::to-query-params "Output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output)))
    (aws-sdk/generator/shape::to-query-params "Outputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'outputs)))
    (aws-sdk/generator/shape::to-query-params "OutputKeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-key-prefix)))
    (aws-sdk/generator/shape::to-query-params "Playlists"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'playlists)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "UserMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-metadata)))
    (aws-sdk/generator/shape::to-query-params "Timing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timing))))))
(common-lisp:progn
 (common-lisp:defstruct (job-album-art (:copier common-lisp:nil))
   (merge-policy common-lisp:nil :type
    (common-lisp:or merge-policy common-lisp:null))
   (artwork common-lisp:nil :type (common-lisp:or artworks common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-album-art 'make-job-album-art))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-album-art))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MergePolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'merge-policy)))
    (aws-sdk/generator/shape::to-query-params "Artwork"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artwork))))))
(common-lisp:deftype job-container () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (job-input (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or long-key common-lisp:null))
   (frame-rate common-lisp:nil :type
    (common-lisp:or frame-rate common-lisp:null))
   (resolution common-lisp:nil :type
    (common-lisp:or resolution common-lisp:null))
   (aspect-ratio common-lisp:nil :type
    (common-lisp:or aspect-ratio common-lisp:null))
   (interlaced common-lisp:nil :type
    (common-lisp:or interlaced common-lisp:null))
   (container common-lisp:nil :type
    (common-lisp:or job-container common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (time-span common-lisp:nil :type
    (common-lisp:or time-span common-lisp:null))
   (input-captions common-lisp:nil :type
    (common-lisp:or input-captions common-lisp:null))
   (detected-properties common-lisp:nil :type
    (common-lisp:or detected-properties common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-input 'make-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "FrameRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frame-rate)))
    (aws-sdk/generator/shape::to-query-params "Resolution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resolution)))
    (aws-sdk/generator/shape::to-query-params "AspectRatio"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aspect-ratio)))
    (aws-sdk/generator/shape::to-query-params "Interlaced"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'interlaced)))
    (aws-sdk/generator/shape::to-query-params "Container"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container)))
    (aws-sdk/generator/shape::to-query-params "Encryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption)))
    (aws-sdk/generator/shape::to-query-params "TimeSpan"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-span)))
    (aws-sdk/generator/shape::to-query-params "InputCaptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-captions)))
    (aws-sdk/generator/shape::to-query-params "DetectedProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detected-properties))))))
(common-lisp:progn
 (common-lisp:deftype job-inputs () '(trivial-types:proper-list job-input))
 (common-lisp:defun |make-job-inputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-input))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (job-output (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or key common-lisp:null))
   (thumbnail-pattern common-lisp:nil :type
    (common-lisp:or thumbnail-pattern common-lisp:null))
   (thumbnail-encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (rotate common-lisp:nil :type (common-lisp:or rotate common-lisp:null))
   (preset-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (segment-duration common-lisp:nil :type
    (common-lisp:or float-string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or job-status common-lisp:null))
   (status-detail common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (duration common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (height common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (frame-rate common-lisp:nil :type
    (common-lisp:or float-string common-lisp:null))
   (file-size common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null))
   (duration-millis common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null))
   (watermarks common-lisp:nil :type
    (common-lisp:or job-watermarks common-lisp:null))
   (album-art common-lisp:nil :type
    (common-lisp:or job-album-art common-lisp:null))
   (composition common-lisp:nil :type
    (common-lisp:or composition common-lisp:null))
   (captions common-lisp:nil :type (common-lisp:or captions common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (applied-color-space-conversion common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-output 'make-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "ThumbnailPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail-pattern)))
    (aws-sdk/generator/shape::to-query-params "ThumbnailEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail-encryption)))
    (aws-sdk/generator/shape::to-query-params "Rotate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rotate)))
    (aws-sdk/generator/shape::to-query-params "PresetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preset-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentDuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-duration)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-detail)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "Width"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'width)))
    (aws-sdk/generator/shape::to-query-params "Height"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'height)))
    (aws-sdk/generator/shape::to-query-params "FrameRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frame-rate)))
    (aws-sdk/generator/shape::to-query-params "FileSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-size)))
    (aws-sdk/generator/shape::to-query-params "DurationMillis"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-millis)))
    (aws-sdk/generator/shape::to-query-params "Watermarks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'watermarks)))
    (aws-sdk/generator/shape::to-query-params "AlbumArt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'album-art)))
    (aws-sdk/generator/shape::to-query-params "Composition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'composition)))
    (aws-sdk/generator/shape::to-query-params "Captions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'captions)))
    (aws-sdk/generator/shape::to-query-params "Encryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption)))
    (aws-sdk/generator/shape::to-query-params "AppliedColorSpaceConversion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applied-color-space-conversion))))))
(common-lisp:progn
 (common-lisp:deftype job-outputs () '(trivial-types:proper-list job-output))
 (common-lisp:defun |make-job-outputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-output))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (job-watermark (:copier common-lisp:nil))
   (preset-watermark-id common-lisp:nil :type
    (common-lisp:or preset-watermark-id common-lisp:null))
   (input-key common-lisp:nil :type
    (common-lisp:or watermark-key common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-watermark 'make-job-watermark))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-watermark))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PresetWatermarkId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preset-watermark-id)))
    (aws-sdk/generator/shape::to-query-params "InputKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-key)))
    (aws-sdk/generator/shape::to-query-params "Encryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption))))))
(common-lisp:progn
 (common-lisp:deftype job-watermarks ()
   '(trivial-types:proper-list job-watermark))
 (common-lisp:defun |make-job-watermarks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-watermark))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype jobs () '(trivial-types:proper-list job))
 (common-lisp:defun |make-jobs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job))
   aws-sdk/generator/shape::members))
(common-lisp:deftype jpg-or-png () 'common-lisp:string)
(common-lisp:deftype key () 'common-lisp:string)
(common-lisp:deftype key-arn () 'common-lisp:string)
(common-lisp:deftype key-id-guid () 'common-lisp:string)
(common-lisp:deftype key-storage-policy () 'common-lisp:string)
(common-lisp:deftype keyframes-max-dist () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-by-pipeline-request (:copier common-lisp:nil))
   (pipeline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":pipeline-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (ascending common-lisp:nil :type
    (common-lisp:or ascending common-lisp:null))
   (page-token common-lisp:nil :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-by-pipeline-request
                    'make-list-jobs-by-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-jobs-by-pipeline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PipelineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline-id)))
    (aws-sdk/generator/shape::to-query-params "Ascending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ascending)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-by-pipeline-response (:copier common-lisp:nil))
   (jobs common-lisp:nil :type (common-lisp:or jobs common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-by-pipeline-response
                    'make-list-jobs-by-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-jobs-by-pipeline-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Jobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jobs)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-by-status-request (:copier common-lisp:nil))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or job-status common-lisp:null))
   (ascending common-lisp:nil :type
    (common-lisp:or ascending common-lisp:null))
   (page-token common-lisp:nil :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-by-status-request
                    'make-list-jobs-by-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-jobs-by-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Ascending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ascending)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-by-status-response (:copier common-lisp:nil))
   (jobs common-lisp:nil :type (common-lisp:or jobs common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-by-status-response
                    'make-list-jobs-by-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-jobs-by-status-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Jobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jobs)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-pipelines-request (:copier common-lisp:nil))
   (ascending common-lisp:nil :type
    (common-lisp:or ascending common-lisp:null))
   (page-token common-lisp:nil :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pipelines-request 'make-list-pipelines-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-pipelines-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Ascending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ascending)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-pipelines-response (:copier common-lisp:nil))
   (pipelines common-lisp:nil :type
    (common-lisp:or pipelines common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pipelines-response 'make-list-pipelines-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-pipelines-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pipelines"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipelines)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-presets-request (:copier common-lisp:nil))
   (ascending common-lisp:nil :type
    (common-lisp:or ascending common-lisp:null))
   (page-token common-lisp:nil :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-presets-request 'make-list-presets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-presets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Ascending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ascending)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-presets-response (:copier common-lisp:nil))
   (presets common-lisp:nil :type (common-lisp:or presets common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-presets-response 'make-list-presets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-presets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Presets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'presets)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:deftype long-key () 'common-lisp:string)
(common-lisp:deftype max-frame-rate () 'common-lisp:string)
(common-lisp:deftype merge-policy () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype non-empty-base64encoded-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (notifications (:copier common-lisp:nil))
   (progressing common-lisp:nil :type
    (common-lisp:or sns-topic common-lisp:null))
   (completed common-lisp:nil :type
    (common-lisp:or sns-topic common-lisp:null))
   (warning common-lisp:nil :type (common-lisp:or sns-topic common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or sns-topic common-lisp:null)))
 (common-lisp:export (common-lisp:list 'notifications 'make-notifications))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape notifications))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Progressing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'progressing)))
    (aws-sdk/generator/shape::to-query-params "Completed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed)))
    (aws-sdk/generator/shape::to-query-params "Warning"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warning)))
    (aws-sdk/generator/shape::to-query-params "Error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error))))))
(common-lisp:deftype nullable-integer () 'common-lisp:integer)
(common-lisp:deftype nullable-long () 'common-lisp:integer)
(common-lisp:deftype one-to512string () 'common-lisp:string)
(common-lisp:deftype opacity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype output-keys () '(trivial-types:proper-list key))
 (common-lisp:defun |make-output-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype padding-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (permission (:copier common-lisp:nil))
   (grantee-type common-lisp:nil :type
    (common-lisp:or grantee-type common-lisp:null))
   (grantee common-lisp:nil :type (common-lisp:or grantee common-lisp:null))
   (access common-lisp:nil :type
    (common-lisp:or access-controls common-lisp:null)))
 (common-lisp:export (common-lisp:list 'permission 'make-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape permission))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GranteeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grantee-type)))
    (aws-sdk/generator/shape::to-query-params "Grantee"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grantee)))
    (aws-sdk/generator/shape::to-query-params "Access"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access))))))
(common-lisp:progn
 (common-lisp:deftype permissions () '(trivial-types:proper-list permission))
 (common-lisp:defun |make-permissions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (pipeline (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or pipeline-status common-lisp:null))
   (input-bucket common-lisp:nil :type
    (common-lisp:or bucket-name common-lisp:null))
   (output-bucket common-lisp:nil :type
    (common-lisp:or bucket-name common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role common-lisp:null))
   (aws-kms-key-arn common-lisp:nil :type
    (common-lisp:or key-arn common-lisp:null))
   (notifications common-lisp:nil :type
    (common-lisp:or notifications common-lisp:null))
   (content-config common-lisp:nil :type
    (common-lisp:or pipeline-output-config common-lisp:null))
   (thumbnail-config common-lisp:nil :type
    (common-lisp:or pipeline-output-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pipeline 'make-pipeline))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape pipeline))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "InputBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-bucket)))
    (aws-sdk/generator/shape::to-query-params "OutputBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-bucket)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "AwsKmsKeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aws-kms-key-arn)))
    (aws-sdk/generator/shape::to-query-params "Notifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notifications)))
    (aws-sdk/generator/shape::to-query-params "ContentConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-config)))
    (aws-sdk/generator/shape::to-query-params "ThumbnailConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail-config))))))
(common-lisp:progn
 (common-lisp:defstruct (pipeline-output-config (:copier common-lisp:nil))
   (bucket common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (permissions common-lisp:nil :type
    (common-lisp:or permissions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pipeline-output-config 'make-pipeline-output-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          pipeline-output-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "Permissions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'permissions))))))
(common-lisp:deftype pipeline-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pipelines () '(trivial-types:proper-list pipeline))
 (common-lisp:defun |make-pipelines|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pipeline))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pixels-or-percent () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (play-ready-drm (:copier common-lisp:nil))
   (format common-lisp:nil :type
    (common-lisp:or play-ready-drm-format-string common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or non-empty-base64encoded-string common-lisp:null))
   (key-md5 common-lisp:nil :type
    (common-lisp:or non-empty-base64encoded-string common-lisp:null))
   (key-id common-lisp:nil :type (common-lisp:or key-id-guid common-lisp:null))
   (initialization-vector common-lisp:nil :type
    (common-lisp:or zero-to255string common-lisp:null))
   (license-acquisition-url common-lisp:nil :type
    (common-lisp:or one-to512string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'play-ready-drm 'make-play-ready-drm))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape play-ready-drm))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "KeyMd5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-md5)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "InitializationVector"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initialization-vector)))
    (aws-sdk/generator/shape::to-query-params "LicenseAcquisitionUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'license-acquisition-url))))))
(common-lisp:deftype play-ready-drm-format-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (playlist (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or filename common-lisp:null))
   (format common-lisp:nil :type
    (common-lisp:or playlist-format common-lisp:null))
   (output-keys common-lisp:nil :type
    (common-lisp:or output-keys common-lisp:null))
   (hls-content-protection common-lisp:nil :type
    (common-lisp:or hls-content-protection common-lisp:null))
   (play-ready-drm common-lisp:nil :type
    (common-lisp:or play-ready-drm common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or job-status common-lisp:null))
   (status-detail common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'playlist 'make-playlist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape playlist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "OutputKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-keys)))
    (aws-sdk/generator/shape::to-query-params "HlsContentProtection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hls-content-protection)))
    (aws-sdk/generator/shape::to-query-params "PlayReadyDrm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'play-ready-drm)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-detail))))))
(common-lisp:deftype playlist-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype playlists () '(trivial-types:proper-list playlist))
 (common-lisp:defun |make-playlists|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list playlist))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (preset (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (container common-lisp:nil :type
    (common-lisp:or preset-container common-lisp:null))
   (audio common-lisp:nil :type
    (common-lisp:or audio-parameters common-lisp:null))
   (video common-lisp:nil :type
    (common-lisp:or video-parameters common-lisp:null))
   (thumbnails common-lisp:nil :type
    (common-lisp:or thumbnails common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or preset-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'preset 'make-preset))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape preset))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Container"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container)))
    (aws-sdk/generator/shape::to-query-params "Audio"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'audio)))
    (aws-sdk/generator/shape::to-query-params "Video"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'video)))
    (aws-sdk/generator/shape::to-query-params "Thumbnails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnails)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype preset-container () 'common-lisp:string)
(common-lisp:deftype preset-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (preset-watermark (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or preset-watermark-id common-lisp:null))
   (max-width common-lisp:nil :type
    (common-lisp:or pixels-or-percent common-lisp:null))
   (max-height common-lisp:nil :type
    (common-lisp:or pixels-or-percent common-lisp:null))
   (sizing-policy common-lisp:nil :type
    (common-lisp:or watermark-sizing-policy common-lisp:null))
   (horizontal-align common-lisp:nil :type
    (common-lisp:or horizontal-align common-lisp:null))
   (horizontal-offset common-lisp:nil :type
    (common-lisp:or pixels-or-percent common-lisp:null))
   (vertical-align common-lisp:nil :type
    (common-lisp:or vertical-align common-lisp:null))
   (vertical-offset common-lisp:nil :type
    (common-lisp:or pixels-or-percent common-lisp:null))
   (opacity common-lisp:nil :type (common-lisp:or opacity common-lisp:null))
   (target common-lisp:nil :type (common-lisp:or target common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'preset-watermark 'make-preset-watermark))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape preset-watermark))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "MaxWidth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-width)))
    (aws-sdk/generator/shape::to-query-params "MaxHeight"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-height)))
    (aws-sdk/generator/shape::to-query-params "SizingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sizing-policy)))
    (aws-sdk/generator/shape::to-query-params "HorizontalAlign"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'horizontal-align)))
    (aws-sdk/generator/shape::to-query-params "HorizontalOffset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'horizontal-offset)))
    (aws-sdk/generator/shape::to-query-params "VerticalAlign"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vertical-align)))
    (aws-sdk/generator/shape::to-query-params "VerticalOffset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vertical-offset)))
    (aws-sdk/generator/shape::to-query-params "Opacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'opacity)))
    (aws-sdk/generator/shape::to-query-params "Target"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target))))))
(common-lisp:deftype preset-watermark-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype preset-watermarks ()
   '(trivial-types:proper-list preset-watermark))
 (common-lisp:defun |make-preset-watermarks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list preset-watermark))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype presets () '(trivial-types:proper-list preset))
 (common-lisp:defun |make-presets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list preset))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (read-job-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'read-job-request 'make-read-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape read-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (read-job-response (:copier common-lisp:nil))
   (job common-lisp:nil :type (common-lisp:or job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'read-job-response 'make-read-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape read-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Job"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job))))))
(common-lisp:progn
 (common-lisp:defstruct (read-pipeline-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'read-pipeline-request 'make-read-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          read-pipeline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (read-pipeline-response (:copier common-lisp:nil))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null))
   (warnings common-lisp:nil :type (common-lisp:or warnings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'read-pipeline-response 'make-read-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          read-pipeline-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pipeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline)))
    (aws-sdk/generator/shape::to-query-params "Warnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warnings))))))
(common-lisp:progn
 (common-lisp:defstruct (read-preset-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'read-preset-request 'make-read-preset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape read-preset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (read-preset-response (:copier common-lisp:nil))
   (preset common-lisp:nil :type (common-lisp:or preset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'read-preset-response 'make-read-preset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape read-preset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Preset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preset))))))
(common-lisp:deftype resolution () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:deftype rotate () 'common-lisp:string)
(common-lisp:deftype sizing-policy () 'common-lisp:string)
(common-lisp:deftype sns-topic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sns-topics () '(trivial-types:proper-list sns-topic))
 (common-lisp:defun |make-sns-topics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sns-topic))
   aws-sdk/generator/shape::members))
(common-lisp:deftype storage-class () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype success () 'common-lisp:string)
(common-lisp:deftype target () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (test-role-request (:copier common-lisp:nil))
   (role
    (common-lisp:error #A((17) common-lisp:base-char . ":role is required"))
    :type (common-lisp:or role common-lisp:null))
   (input-bucket
    (common-lisp:error
     #A((25) common-lisp:base-char . ":input-bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (output-bucket
    (common-lisp:error
     #A((26) common-lisp:base-char . ":output-bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (topics
    (common-lisp:error #A((19) common-lisp:base-char . ":topics is required"))
    :type (common-lisp:or sns-topics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-role-request 'make-test-role-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape test-role-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "InputBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-bucket)))
    (aws-sdk/generator/shape::to-query-params "OutputBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-bucket)))
    (aws-sdk/generator/shape::to-query-params "Topics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topics))))))
(common-lisp:progn
 (common-lisp:defstruct (test-role-response (:copier common-lisp:nil))
   (success common-lisp:nil :type (common-lisp:or success common-lisp:null))
   (messages common-lisp:nil :type
    (common-lisp:or exception-messages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-role-response 'make-test-role-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape test-role-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Success"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'success)))
    (aws-sdk/generator/shape::to-query-params "Messages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'messages))))))
(common-lisp:deftype thumbnail-pattern () 'common-lisp:string)
(common-lisp:deftype thumbnail-resolution () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (thumbnails (:copier common-lisp:nil))
   (format common-lisp:nil :type (common-lisp:or jpg-or-png common-lisp:null))
   (interval common-lisp:nil :type (common-lisp:or digits common-lisp:null))
   (resolution common-lisp:nil :type
    (common-lisp:or thumbnail-resolution common-lisp:null))
   (aspect-ratio common-lisp:nil :type
    (common-lisp:or aspect-ratio common-lisp:null))
   (max-width common-lisp:nil :type
    (common-lisp:or digits-or-auto common-lisp:null))
   (max-height common-lisp:nil :type
    (common-lisp:or digits-or-auto common-lisp:null))
   (sizing-policy common-lisp:nil :type
    (common-lisp:or sizing-policy common-lisp:null))
   (padding-policy common-lisp:nil :type
    (common-lisp:or padding-policy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'thumbnails 'make-thumbnails))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape thumbnails))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "Interval"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'interval)))
    (aws-sdk/generator/shape::to-query-params "Resolution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resolution)))
    (aws-sdk/generator/shape::to-query-params "AspectRatio"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aspect-ratio)))
    (aws-sdk/generator/shape::to-query-params "MaxWidth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-width)))
    (aws-sdk/generator/shape::to-query-params "MaxHeight"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-height)))
    (aws-sdk/generator/shape::to-query-params "SizingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sizing-policy)))
    (aws-sdk/generator/shape::to-query-params "PaddingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'padding-policy))))))
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:deftype time-offset () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (time-span (:copier common-lisp:nil))
   (start-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'time-span 'make-time-span))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape time-span))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration))))))
(common-lisp:progn
 (common-lisp:defstruct (timing (:copier common-lisp:nil))
   (submit-time-millis common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null))
   (start-time-millis common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null))
   (finish-time-millis common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'timing 'make-timing))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape timing))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubmitTimeMillis"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'submit-time-millis)))
    (aws-sdk/generator/shape::to-query-params "StartTimeMillis"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time-millis)))
    (aws-sdk/generator/shape::to-query-params "FinishTimeMillis"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finish-time-millis))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pipeline-notifications-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (notifications
    (common-lisp:error
     #A((26) common-lisp:base-char . ":notifications is required"))
    :type (common-lisp:or notifications common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-notifications-request
                    'make-update-pipeline-notifications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-pipeline-notifications-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Notifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notifications))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pipeline-notifications-response (:copier common-lisp:nil))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-notifications-response
                    'make-update-pipeline-notifications-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-pipeline-notifications-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pipeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline))))))
(common-lisp:progn
 (common-lisp:defstruct (update-pipeline-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (input-bucket common-lisp:nil :type
    (common-lisp:or bucket-name common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role common-lisp:null))
   (aws-kms-key-arn common-lisp:nil :type
    (common-lisp:or key-arn common-lisp:null))
   (notifications common-lisp:nil :type
    (common-lisp:or notifications common-lisp:null))
   (content-config common-lisp:nil :type
    (common-lisp:or pipeline-output-config common-lisp:null))
   (thumbnail-config common-lisp:nil :type
    (common-lisp:or pipeline-output-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-request 'make-update-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-pipeline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InputBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-bucket)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "AwsKmsKeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aws-kms-key-arn)))
    (aws-sdk/generator/shape::to-query-params "Notifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notifications)))
    (aws-sdk/generator/shape::to-query-params "ContentConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-config)))
    (aws-sdk/generator/shape::to-query-params "ThumbnailConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail-config))))))
(common-lisp:progn
 (common-lisp:defstruct (update-pipeline-response (:copier common-lisp:nil))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null))
   (warnings common-lisp:nil :type (common-lisp:or warnings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-response 'make-update-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-pipeline-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pipeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline)))
    (aws-sdk/generator/shape::to-query-params "Warnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warnings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pipeline-status-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or pipeline-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-status-request
                    'make-update-pipeline-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-pipeline-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pipeline-status-response (:copier common-lisp:nil))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-status-response
                    'make-update-pipeline-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-pipeline-status-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pipeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pipeline))))))
(common-lisp:defstruct
    (user-metadata
     (:constructor |make-user-metadata|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (validation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'make-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape validation-exception))
   (common-lisp:append)))
(common-lisp:deftype vertical-align () 'common-lisp:string)
(common-lisp:deftype video-bit-rate () 'common-lisp:string)
(common-lisp:deftype video-codec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (video-parameters (:copier common-lisp:nil))
   (codec common-lisp:nil :type (common-lisp:or video-codec common-lisp:null))
   (codec-options common-lisp:nil :type
    (common-lisp:or codec-options common-lisp:null))
   (keyframes-max-dist common-lisp:nil :type
    (common-lisp:or keyframes-max-dist common-lisp:null))
   (fixed-gop common-lisp:nil :type
    (common-lisp:or fixed-gop common-lisp:null))
   (bit-rate common-lisp:nil :type
    (common-lisp:or video-bit-rate common-lisp:null))
   (frame-rate common-lisp:nil :type
    (common-lisp:or frame-rate common-lisp:null))
   (max-frame-rate common-lisp:nil :type
    (common-lisp:or max-frame-rate common-lisp:null))
   (resolution common-lisp:nil :type
    (common-lisp:or resolution common-lisp:null))
   (aspect-ratio common-lisp:nil :type
    (common-lisp:or aspect-ratio common-lisp:null))
   (max-width common-lisp:nil :type
    (common-lisp:or digits-or-auto common-lisp:null))
   (max-height common-lisp:nil :type
    (common-lisp:or digits-or-auto common-lisp:null))
   (display-aspect-ratio common-lisp:nil :type
    (common-lisp:or aspect-ratio common-lisp:null))
   (sizing-policy common-lisp:nil :type
    (common-lisp:or sizing-policy common-lisp:null))
   (padding-policy common-lisp:nil :type
    (common-lisp:or padding-policy common-lisp:null))
   (watermarks common-lisp:nil :type
    (common-lisp:or preset-watermarks common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'video-parameters 'make-video-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape video-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Codec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'codec)))
    (aws-sdk/generator/shape::to-query-params "CodecOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'codec-options)))
    (aws-sdk/generator/shape::to-query-params "KeyframesMaxDist"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keyframes-max-dist)))
    (aws-sdk/generator/shape::to-query-params "FixedGOP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fixed-gop)))
    (aws-sdk/generator/shape::to-query-params "BitRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bit-rate)))
    (aws-sdk/generator/shape::to-query-params "FrameRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frame-rate)))
    (aws-sdk/generator/shape::to-query-params "MaxFrameRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-frame-rate)))
    (aws-sdk/generator/shape::to-query-params "Resolution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resolution)))
    (aws-sdk/generator/shape::to-query-params "AspectRatio"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aspect-ratio)))
    (aws-sdk/generator/shape::to-query-params "MaxWidth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-width)))
    (aws-sdk/generator/shape::to-query-params "MaxHeight"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-height)))
    (aws-sdk/generator/shape::to-query-params "DisplayAspectRatio"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-aspect-ratio)))
    (aws-sdk/generator/shape::to-query-params "SizingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sizing-policy)))
    (aws-sdk/generator/shape::to-query-params "PaddingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'padding-policy)))
    (aws-sdk/generator/shape::to-query-params "Watermarks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'watermarks))))))
(common-lisp:progn
 (common-lisp:defstruct (warning (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'warning 'make-warning))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape warning))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype warnings () '(trivial-types:proper-list warning))
 (common-lisp:defun |make-warnings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list warning))
   aws-sdk/generator/shape::members))
(common-lisp:deftype watermark-key () 'common-lisp:string)
(common-lisp:deftype watermark-sizing-policy () 'common-lisp:string)
(common-lisp:deftype zero-to255string () 'common-lisp:string)
(common-lisp:deftype zero-to512string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun cancel-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/jobs/~a" id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CancelJob")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelJobResponse" common-lisp:nil)))
 (common-lisp:export 'cancel-job))
(common-lisp:progn
 (common-lisp:defun create-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-id input inputs output outputs
                     output-key-prefix playlists user-metadata)
   (common-lisp:declare
    (common-lisp:ignorable pipeline-id input inputs output outputs
     output-key-prefix playlists user-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateJob")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateJobResponse" common-lisp:nil)))
 (common-lisp:export 'create-job))
(common-lisp:progn
 (common-lisp:defun create-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name input-bucket output-bucket role
                     aws-kms-key-arn notifications content-config
                     thumbnail-config)
   (common-lisp:declare
    (common-lisp:ignorable name input-bucket output-bucket role aws-kms-key-arn
     notifications content-config thumbnail-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePipeline")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePipelineResponse" common-lisp:nil)))
 (common-lisp:export 'create-pipeline))
(common-lisp:progn
 (common-lisp:defun create-preset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description container video audio
                     thumbnails)
   (common-lisp:declare
    (common-lisp:ignorable name description container video audio thumbnails))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-preset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePreset")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePresetResponse" common-lisp:nil)))
 (common-lisp:export 'create-preset))
(common-lisp:progn
 (common-lisp:defun delete-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/pipelines/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePipeline")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeletePipelineResponse" common-lisp:nil)))
 (common-lisp:export 'delete-pipeline))
(common-lisp:progn
 (common-lisp:defun delete-preset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-preset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/presets/~a" id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePreset")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeletePresetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-preset))
(common-lisp:progn
 (common-lisp:defun list-jobs-by-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-id ascending page-token)
   (common-lisp:declare
    (common-lisp:ignorable pipeline-id ascending page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-by-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/jobsByPipeline/~a"
                                                   pipelineid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListJobsByPipeline")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListJobsByPipelineResponse" common-lisp:nil)))
 (common-lisp:export 'list-jobs-by-pipeline))
(common-lisp:progn
 (common-lisp:defun list-jobs-by-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status ascending page-token)
   (common-lisp:declare (common-lisp:ignorable status ascending page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-by-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/jobsByStatus/~a"
                                                   status)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListJobsByStatus")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListJobsByStatusResponse" common-lisp:nil)))
 (common-lisp:export 'list-jobs-by-status))
(common-lisp:progn
 (common-lisp:defun list-pipelines
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ascending page-token)
   (common-lisp:declare (common-lisp:ignorable ascending page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-pipelines-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListPipelines")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPipelinesResponse" common-lisp:nil)))
 (common-lisp:export 'list-pipelines))
(common-lisp:progn
 (common-lisp:defun list-presets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ascending page-token)
   (common-lisp:declare (common-lisp:ignorable ascending page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-presets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListPresets")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPresetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-presets))
(common-lisp:progn
 (common-lisp:defun read-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-read-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/jobs/~a" id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ReadJob")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ReadJobResponse" common-lisp:nil)))
 (common-lisp:export 'read-job))
(common-lisp:progn
 (common-lisp:defun read-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-read-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/pipelines/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ReadPipeline")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ReadPipelineResponse" common-lisp:nil)))
 (common-lisp:export 'read-pipeline))
(common-lisp:progn
 (common-lisp:defun read-preset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-read-preset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/presets/~a" id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ReadPreset")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ReadPresetResponse" common-lisp:nil)))
 (common-lisp:export 'read-preset))
(common-lisp:progn
 (common-lisp:defun test-role
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role input-bucket output-bucket topics)
   (common-lisp:declare
    (common-lisp:ignorable role input-bucket output-bucket topics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-role-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TestRole")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TestRoleResponse" common-lisp:nil)))
 (common-lisp:export 'test-role))
(common-lisp:progn
 (common-lisp:defun update-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name input-bucket role aws-kms-key-arn
                     notifications content-config thumbnail-config)
   (common-lisp:declare
    (common-lisp:ignorable id name input-bucket role aws-kms-key-arn
     notifications content-config thumbnail-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/pipelines/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdatePipeline")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdatePipelineResponse" common-lisp:nil)))
 (common-lisp:export 'update-pipeline))
(common-lisp:progn
 (common-lisp:defun update-pipeline-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id notifications)
   (common-lisp:declare (common-lisp:ignorable id notifications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-pipeline-notifications-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/pipelines/~a/notifications"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdatePipelineNotifications")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdatePipelineNotificationsResponse" common-lisp:nil)))
 (common-lisp:export 'update-pipeline-notifications))
(common-lisp:progn
 (common-lisp:defun update-pipeline-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id status)
   (common-lisp:declare (common-lisp:ignorable id status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-pipeline-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((17) common-lisp:base-char
                                  . "elastictranscoder")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2012-09-25/pipelines/~a/status"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdatePipelineStatus")
                                  ("Version" ,@"2012-09-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdatePipelineStatusResponse" common-lisp:nil)))
 (common-lisp:export 'update-pipeline-status))