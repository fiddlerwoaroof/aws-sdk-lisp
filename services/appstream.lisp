;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/appstream
  (:use)
  (:nicknames #:aws/appstream)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/appstream)

(common-lisp:deftype account-name () 'common-lisp:string)
(common-lisp:deftype account-password () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (application (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (icon-url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-parameters common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (metadata common-lisp:nil :type (common-lisp:or metadata common-lisp:null)))
 (common-lisp:export (common-lisp:list 'application 'make-application))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "IconURL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'icon-url)))
    (aws-sdk/generator/shape::to-query-params "LaunchPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-path)))
    (aws-sdk/generator/shape::to-query-params "LaunchParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-parameters)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata))))))
(common-lisp:progn
 (common-lisp:deftype applications () '(trivial-types:proper-list application))
 (common-lisp:defun |make-applications|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application))
   aws-sdk/generator/shape::members))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (associate-fleet-request (:copier common-lisp:nil))
   (fleet-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":fleet-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (stack-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stack-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-fleet-request 'make-associate-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-fleet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-name)))
    (aws-sdk/generator/shape::to-query-params "StackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-name))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-fleet-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-fleet-result 'make-associate-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-fleet-result))
   (common-lisp:append)))
(common-lisp:deftype authentication-type () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype boolean-object () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (compute-capacity (:copier common-lisp:nil))
   (desired-instances
    (common-lisp:error
     #A((30) common-lisp:base-char . ":desired-instances is required"))
    :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compute-capacity 'make-compute-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape compute-capacity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DesiredInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-instances))))))
(common-lisp:progn
 (common-lisp:defstruct (compute-capacity-status (:copier common-lisp:nil))
   (desired
    (common-lisp:error #A((20) common-lisp:base-char . ":desired is required"))
    :type (common-lisp:or integer common-lisp:null))
   (running common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (in-use common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (available common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compute-capacity-status 'make-compute-capacity-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compute-capacity-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Desired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired)))
    (aws-sdk/generator/shape::to-query-params "Running"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'running)))
    (aws-sdk/generator/shape::to-query-params "InUse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'in-use)))
    (aws-sdk/generator/shape::to-query-params "Available"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'available))))))
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-directory-config-request (:copier common-lisp:nil))
   (directory-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":directory-name is required"))
    :type (common-lisp:or directory-name common-lisp:null))
   (organizational-unit-distinguished-names
    (common-lisp:error
     #A((52) common-lisp:base-char
        . ":organizational-unit-distinguished-names is required"))
    :type
    (common-lisp:or organizational-unit-distinguished-names-list
                    common-lisp:null))
   (service-account-credentials
    (common-lisp:error
     #A((40) common-lisp:base-char
        . ":service-account-credentials is required"))
    :type (common-lisp:or service-account-credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-directory-config-request
                    'make-create-directory-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-directory-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-name)))
    (aws-sdk/generator/shape::to-query-params
     "OrganizationalUnitDistinguishedNames"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'organizational-unit-distinguished-names)))
    (aws-sdk/generator/shape::to-query-params "ServiceAccountCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-account-credentials))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-directory-config-result (:copier common-lisp:nil))
   (directory-config common-lisp:nil :type
    (common-lisp:or directory-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-directory-config-result
                    'make-create-directory-config-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-directory-config-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-config))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (image-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":image-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or string common-lisp:null))
   (compute-capacity
    (common-lisp:error
     #A((29) common-lisp:base-char . ":compute-capacity is required"))
    :type (common-lisp:or compute-capacity common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (max-user-duration-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (disconnect-timeout-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or display-name common-lisp:null))
   (enable-default-internet-access common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (domain-join-info common-lisp:nil :type
    (common-lisp:or domain-join-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-fleet-request 'make-create-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-fleet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ImageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-name)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "ComputeCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-capacity)))
    (aws-sdk/generator/shape::to-query-params "VpcConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-config)))
    (aws-sdk/generator/shape::to-query-params "MaxUserDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-user-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "DisconnectTimeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'disconnect-timeout-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "EnableDefaultInternetAccess"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-default-internet-access)))
    (aws-sdk/generator/shape::to-query-params "DomainJoinInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-join-info))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-result (:copier common-lisp:nil))
   (fleet common-lisp:nil :type (common-lisp:or fleet common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-fleet-result 'make-create-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-fleet-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Fleet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet))))))
(common-lisp:progn
 (common-lisp:defstruct (create-stack-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or display-name common-lisp:null))
   (storage-connectors common-lisp:nil :type
    (common-lisp:or storage-connector-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stack-request 'make-create-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "StorageConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-connectors))))))
(common-lisp:progn
 (common-lisp:defstruct (create-stack-result (:copier common-lisp:nil))
   (stack common-lisp:nil :type (common-lisp:or stack common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stack-result 'make-create-stack-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-stack-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Stack"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack))))))
(common-lisp:progn
 (common-lisp:defstruct (create-streaming-urlrequest (:copier common-lisp:nil))
   (stack-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stack-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (fleet-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":fleet-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (user-id
    (common-lisp:error #A((20) common-lisp:base-char . ":user-id is required"))
    :type (common-lisp:or streaming-url-user-id common-lisp:null))
   (application-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (validity common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (session-context common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-streaming-urlrequest
                    'make-create-streaming-urlrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-streaming-urlrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-name)))
    (aws-sdk/generator/shape::to-query-params "FleetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-name)))
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "Validity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'validity)))
    (aws-sdk/generator/shape::to-query-params "SessionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session-context))))))
(common-lisp:progn
 (common-lisp:defstruct (create-streaming-urlresult (:copier common-lisp:nil))
   (streaming-url common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (expires common-lisp:nil :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-streaming-urlresult
                    'make-create-streaming-urlresult))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-streaming-urlresult))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingURL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-url)))
    (aws-sdk/generator/shape::to-query-params "Expires"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-directory-config-request (:copier common-lisp:nil))
   (directory-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":directory-name is required"))
    :type (common-lisp:or directory-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-directory-config-request
                    'make-delete-directory-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-directory-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-directory-config-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-directory-config-result
                    'make-delete-directory-config-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-directory-config-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-fleet-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-fleet-request 'make-delete-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-fleet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-fleet-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-fleet-result 'make-delete-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-fleet-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-stack-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-stack-request 'make-delete-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-stack-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-stack-result 'make-delete-stack-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-stack-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-directory-configs-request (:copier common-lisp:nil))
   (directory-names common-lisp:nil :type
    (common-lisp:or directory-name-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-directory-configs-request
                    'make-describe-directory-configs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-directory-configs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-names)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-directory-configs-result (:copier common-lisp:nil))
   (directory-configs common-lisp:nil :type
    (common-lisp:or directory-config-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-directory-configs-result
                    'make-describe-directory-configs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-directory-configs-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryConfigs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-configs)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleets-request (:copier common-lisp:nil))
   (names common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleets-request 'make-describe-fleets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleets-result (:copier common-lisp:nil))
   (fleets common-lisp:nil :type (common-lisp:or fleet-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleets-result 'make-describe-fleets-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleets-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Fleets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-images-request (:copier common-lisp:nil))
   (names common-lisp:nil :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-images-request 'make-describe-images-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-images-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-images-result (:copier common-lisp:nil))
   (images common-lisp:nil :type (common-lisp:or image-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-images-result 'make-describe-images-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-images-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Images"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'images))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-sessions-request (:copier common-lisp:nil))
   (stack-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stack-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (fleet-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":fleet-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (user-id common-lisp:nil :type (common-lisp:or user-id common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (authentication-type common-lisp:nil :type
    (common-lisp:or authentication-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-sessions-request
                    'make-describe-sessions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-sessions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-name)))
    (aws-sdk/generator/shape::to-query-params "FleetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-name)))
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-type))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-sessions-result (:copier common-lisp:nil))
   (sessions common-lisp:nil :type
    (common-lisp:or session-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-sessions-result 'make-describe-sessions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-sessions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Sessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sessions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-stacks-request (:copier common-lisp:nil))
   (names common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stacks-request 'make-describe-stacks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stacks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-stacks-result (:copier common-lisp:nil))
   (stacks common-lisp:nil :type (common-lisp:or stack-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stacks-result 'make-describe-stacks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stacks-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Stacks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stacks)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (directory-config (:copier common-lisp:nil))
   (directory-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":directory-name is required"))
    :type (common-lisp:or directory-name common-lisp:null))
   (organizational-unit-distinguished-names common-lisp:nil :type
    (common-lisp:or organizational-unit-distinguished-names-list
                    common-lisp:null))
   (service-account-credentials common-lisp:nil :type
    (common-lisp:or service-account-credentials common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'directory-config 'make-directory-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape directory-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-name)))
    (aws-sdk/generator/shape::to-query-params
     "OrganizationalUnitDistinguishedNames"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'organizational-unit-distinguished-names)))
    (aws-sdk/generator/shape::to-query-params "ServiceAccountCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-account-credentials)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time))))))
(common-lisp:progn
 (common-lisp:deftype directory-config-list ()
   '(trivial-types:proper-list directory-config))
 (common-lisp:defun |make-directory-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list directory-config))
   aws-sdk/generator/shape::members))
(common-lisp:deftype directory-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype directory-name-list ()
   '(trivial-types:proper-list directory-name))
 (common-lisp:defun |make-directory-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list directory-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-fleet-request (:copier common-lisp:nil))
   (fleet-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":fleet-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (stack-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stack-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-fleet-request
                    'make-disassociate-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-fleet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-name)))
    (aws-sdk/generator/shape::to-query-params "StackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-name))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-fleet-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-fleet-result
                    'make-disassociate-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-fleet-result))
   (common-lisp:append)))
(common-lisp:deftype display-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (domain-join-info (:copier common-lisp:nil))
   (directory-name common-lisp:nil :type
    (common-lisp:or directory-name common-lisp:null))
   (organizational-unit-distinguished-name common-lisp:nil :type
    (common-lisp:or organizational-unit-distinguished-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-join-info 'make-domain-join-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-join-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-name)))
    (aws-sdk/generator/shape::to-query-params
     "OrganizationalUnitDistinguishedName"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'organizational-unit-distinguished-name))))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (expire-session-request (:copier common-lisp:nil))
   (session-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":session-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expire-session-request 'make-expire-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expire-session-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session-id))))))
(common-lisp:progn
 (common-lisp:defstruct (expire-session-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'expire-session-result 'make-expire-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expire-session-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (fleet (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":image-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or string common-lisp:null))
   (compute-capacity-status
    (common-lisp:error
     #A((36) common-lisp:base-char . ":compute-capacity-status is required"))
    :type (common-lisp:or compute-capacity-status common-lisp:null))
   (max-user-duration-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (disconnect-timeout-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or fleet-state common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (fleet-errors common-lisp:nil :type
    (common-lisp:or fleet-errors common-lisp:null))
   (enable-default-internet-access common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (domain-join-info common-lisp:nil :type
    (common-lisp:or domain-join-info common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet 'make-fleet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape fleet))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ImageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-name)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "ComputeCapacityStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-capacity-status)))
    (aws-sdk/generator/shape::to-query-params "MaxUserDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-user-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "DisconnectTimeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'disconnect-timeout-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "VpcConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-config)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "FleetErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-errors)))
    (aws-sdk/generator/shape::to-query-params "EnableDefaultInternetAccess"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-default-internet-access)))
    (aws-sdk/generator/shape::to-query-params "DomainJoinInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-join-info))))))
(common-lisp:deftype fleet-attribute () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fleet-attributes ()
   '(trivial-types:proper-list fleet-attribute))
 (common-lisp:defun |make-fleet-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fleet-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (fleet-error (:copier common-lisp:nil))
   (error-code common-lisp:nil :type
    (common-lisp:or fleet-error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-error 'make-fleet-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape fleet-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:deftype fleet-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fleet-errors () '(trivial-types:proper-list fleet-error))
 (common-lisp:defun |make-fleet-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fleet-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype fleet-list () '(trivial-types:proper-list fleet))
 (common-lisp:defun |make-fleet-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fleet))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fleet-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (image (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (base-image-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or image-state common-lisp:null))
   (visibility common-lisp:nil :type
    (common-lisp:or visibility-type common-lisp:null))
   (image-builder-supported common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or platform-type common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or image-state-change-reason common-lisp:null))
   (applications common-lisp:nil :type
    (common-lisp:or applications common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (public-base-image-released-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image 'make-image))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape image))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "BaseImageArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'base-image-arn)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "Visibility"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'visibility)))
    (aws-sdk/generator/shape::to-query-params "ImageBuilderSupported"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-builder-supported)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "Applications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "PublicBaseImageReleasedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-base-image-released-date))))))
(common-lisp:progn
 (common-lisp:deftype image-list () '(trivial-types:proper-list image))
 (common-lisp:defun |make-image-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list image))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (image-state-change-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or image-state-change-reason-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'image-state-change-reason
                    'make-image-state-change-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          image-state-change-reason))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype image-state-change-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (incompatible-image-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'incompatible-image-exception
                    'make-incompatible-image-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          incompatible-image-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-combination-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-combination-exception
                    'make-invalid-parameter-combination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-combination-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-role-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-role-exception 'make-invalid-role-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-role-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-associated-fleets-request (:copier common-lisp:nil))
   (stack-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stack-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associated-fleets-request
                    'make-list-associated-fleets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-associated-fleets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-associated-fleets-result (:copier common-lisp:nil))
   (names common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associated-fleets-result
                    'make-list-associated-fleets-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-associated-fleets-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-associated-stacks-request (:copier common-lisp:nil))
   (fleet-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":fleet-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associated-stacks-request
                    'make-list-associated-stacks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-associated-stacks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-associated-stacks-result (:copier common-lisp:nil))
   (names common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associated-stacks-result
                    'make-list-associated-stacks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-associated-stacks-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:defstruct
    (metadata
     (:constructor |make-metadata|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-not-permitted-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-not-permitted-exception
                    'make-operation-not-permitted-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-not-permitted-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype organizational-unit-distinguished-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype organizational-unit-distinguished-names-list ()
   '(trivial-types:proper-list organizational-unit-distinguished-name))
 (common-lisp:defun |make-organizational-unit-distinguished-names-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            organizational-unit-distinguished-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype platform-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'make-resource-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype resource-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-available-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-available-exception
                    'make-resource-not-available-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-available-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype security-group-id-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-security-group-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (service-account-credentials (:copier common-lisp:nil))
   (account-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":account-name is required"))
    :type (common-lisp:or account-name common-lisp:null))
   (account-password
    (common-lisp:error
     #A((29) common-lisp:base-char . ":account-password is required"))
    :type (common-lisp:or account-password common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-account-credentials
                    'make-service-account-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          service-account-credentials))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-name)))
    (aws-sdk/generator/shape::to-query-params "AccountPassword"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-password))))))
(common-lisp:progn
 (common-lisp:defstruct (session (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or string common-lisp:null))
   (user-id
    (common-lisp:error #A((20) common-lisp:base-char . ":user-id is required"))
    :type (common-lisp:or user-id common-lisp:null))
   (stack-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stack-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (fleet-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":fleet-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or session-state common-lisp:null))
   (authentication-type common-lisp:nil :type
    (common-lisp:or authentication-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'session 'make-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape session))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "StackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-name)))
    (aws-sdk/generator/shape::to-query-params "FleetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-name)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-type))))))
(common-lisp:progn
 (common-lisp:deftype session-list () '(trivial-types:proper-list session))
 (common-lisp:defun |make-session-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list session))
   aws-sdk/generator/shape::members))
(common-lisp:deftype session-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stack (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (storage-connectors common-lisp:nil :type
    (common-lisp:or storage-connector-list common-lisp:null))
   (stack-errors common-lisp:nil :type
    (common-lisp:or stack-errors common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stack 'make-stack))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stack))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "StorageConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-connectors)))
    (aws-sdk/generator/shape::to-query-params "StackErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-errors))))))
(common-lisp:progn
 (common-lisp:defstruct (stack-error (:copier common-lisp:nil))
   (error-code common-lisp:nil :type
    (common-lisp:or stack-error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stack-error 'make-stack-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stack-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:deftype stack-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype stack-errors () '(trivial-types:proper-list stack-error))
 (common-lisp:defun |make-stack-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stack-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype stack-list () '(trivial-types:proper-list stack))
 (common-lisp:defun |make-stack-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stack))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (start-fleet-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-fleet-request 'make-start-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape start-fleet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (start-fleet-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-fleet-result 'make-start-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape start-fleet-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (stop-fleet-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-fleet-request 'make-stop-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-fleet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-fleet-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'stop-fleet-result 'make-stop-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-fleet-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (storage-connector (:copier common-lisp:nil))
   (connector-type
    (common-lisp:error
     #A((27) common-lisp:base-char . ":connector-type is required"))
    :type (common-lisp:or storage-connector-type common-lisp:null))
   (resource-identifier common-lisp:nil :type
    (common-lisp:or resource-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-connector 'make-storage-connector))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape storage-connector))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConnectorType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connector-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-identifier))))))
(common-lisp:progn
 (common-lisp:deftype storage-connector-list ()
   '(trivial-types:proper-list storage-connector))
 (common-lisp:defun |make-storage-connector-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list storage-connector))
   aws-sdk/generator/shape::members))
(common-lisp:deftype storage-connector-type () 'common-lisp:string)
(common-lisp:deftype streaming-url-user-id () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype subnet-id-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-subnet-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-directory-config-request (:copier common-lisp:nil))
   (directory-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":directory-name is required"))
    :type (common-lisp:or directory-name common-lisp:null))
   (organizational-unit-distinguished-names common-lisp:nil :type
    (common-lisp:or organizational-unit-distinguished-names-list
                    common-lisp:null))
   (service-account-credentials common-lisp:nil :type
    (common-lisp:or service-account-credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-directory-config-request
                    'make-update-directory-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-directory-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-name)))
    (aws-sdk/generator/shape::to-query-params
     "OrganizationalUnitDistinguishedNames"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'organizational-unit-distinguished-names)))
    (aws-sdk/generator/shape::to-query-params "ServiceAccountCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-account-credentials))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-directory-config-result (:copier common-lisp:nil))
   (directory-config common-lisp:nil :type
    (common-lisp:or directory-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-directory-config-result
                    'make-update-directory-config-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-directory-config-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-config))))))
(common-lisp:progn
 (common-lisp:defstruct (update-fleet-request (:copier common-lisp:nil))
   (image-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (compute-capacity common-lisp:nil :type
    (common-lisp:or compute-capacity common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (max-user-duration-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (disconnect-timeout-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (delete-vpc-config common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or display-name common-lisp:null))
   (enable-default-internet-access common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (domain-join-info common-lisp:nil :type
    (common-lisp:or domain-join-info common-lisp:null))
   (attributes-to-delete common-lisp:nil :type
    (common-lisp:or fleet-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-request 'make-update-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-fleet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ImageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-name)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "ComputeCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-capacity)))
    (aws-sdk/generator/shape::to-query-params "VpcConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-config)))
    (aws-sdk/generator/shape::to-query-params "MaxUserDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-user-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "DisconnectTimeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'disconnect-timeout-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "DeleteVpcConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-vpc-config)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "EnableDefaultInternetAccess"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-default-internet-access)))
    (aws-sdk/generator/shape::to-query-params "DomainJoinInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-join-info)))
    (aws-sdk/generator/shape::to-query-params "AttributesToDelete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes-to-delete))))))
(common-lisp:progn
 (common-lisp:defstruct (update-fleet-result (:copier common-lisp:nil))
   (fleet common-lisp:nil :type (common-lisp:or fleet common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-result 'make-update-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-fleet-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Fleet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet))))))
(common-lisp:progn
 (common-lisp:defstruct (update-stack-request (:copier common-lisp:nil))
   (display-name common-lisp:nil :type
    (common-lisp:or display-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (storage-connectors common-lisp:nil :type
    (common-lisp:or storage-connector-list common-lisp:null))
   (delete-storage-connectors common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stack-request 'make-update-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "StorageConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-connectors)))
    (aws-sdk/generator/shape::to-query-params "DeleteStorageConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-storage-connectors))))))
(common-lisp:progn
 (common-lisp:defstruct (update-stack-result (:copier common-lisp:nil))
   (stack common-lisp:nil :type (common-lisp:or stack common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stack-result 'make-update-stack-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-stack-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Stack"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack))))))
(common-lisp:deftype user-id () 'common-lisp:string)
(common-lisp:deftype visibility-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpc-config (:copier common-lisp:nil))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-config 'make-vpc-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape vpc-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids))))))
(common-lisp:progn
 (common-lisp:defun associate-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-name stack-name)
   (common-lisp:declare (common-lisp:ignorable fleet-name stack-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssociateFleet")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssociateFleetResult" common-lisp:nil)))
 (common-lisp:export 'associate-fleet))
(common-lisp:progn
 (common-lisp:defun create-directory-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-name
                     organizational-unit-distinguished-names
                     service-account-credentials)
   (common-lisp:declare
    (common-lisp:ignorable directory-name
     organizational-unit-distinguished-names service-account-credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-directory-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDirectoryConfig")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDirectoryConfigResult" common-lisp:nil)))
 (common-lisp:export 'create-directory-config))
(common-lisp:progn
 (common-lisp:defun create-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name image-name instance-type
                     compute-capacity vpc-config max-user-duration-in-seconds
                     disconnect-timeout-in-seconds description display-name
                     enable-default-internet-access domain-join-info)
   (common-lisp:declare
    (common-lisp:ignorable name image-name instance-type compute-capacity
     vpc-config max-user-duration-in-seconds disconnect-timeout-in-seconds
     description display-name enable-default-internet-access domain-join-info))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateFleet")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateFleetResult" common-lisp:nil)))
 (common-lisp:export 'create-fleet))
(common-lisp:progn
 (common-lisp:defun create-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description display-name
                     storage-connectors)
   (common-lisp:declare
    (common-lisp:ignorable name description display-name storage-connectors))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateStack")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateStackResult" common-lisp:nil)))
 (common-lisp:export 'create-stack))
(common-lisp:progn
 (common-lisp:defun create-streaming-url
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-name fleet-name user-id
                     application-id validity session-context)
   (common-lisp:declare
    (common-lisp:ignorable stack-name fleet-name user-id application-id
     validity session-context))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-streaming-urlrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateStreamingURL")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateStreamingURLResult" common-lisp:nil)))
 (common-lisp:export 'create-streaming-url))
(common-lisp:progn
 (common-lisp:defun delete-directory-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-name)
   (common-lisp:declare (common-lisp:ignorable directory-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-directory-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDirectoryConfig")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDirectoryConfigResult" common-lisp:nil)))
 (common-lisp:export 'delete-directory-config))
(common-lisp:progn
 (common-lisp:defun delete-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteFleet")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteFleetResult" common-lisp:nil)))
 (common-lisp:export 'delete-fleet))
(common-lisp:progn
 (common-lisp:defun delete-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteStack")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteStackResult" common-lisp:nil)))
 (common-lisp:export 'delete-stack))
(common-lisp:progn
 (common-lisp:defun describe-directory-configs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-names max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable directory-names max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-directory-configs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDirectoryConfigs")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDirectoryConfigsResult" common-lisp:nil)))
 (common-lisp:export 'describe-directory-configs))
(common-lisp:progn
 (common-lisp:defun describe-fleets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names next-token)
   (common-lisp:declare (common-lisp:ignorable names next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-fleets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFleets")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFleetsResult" common-lisp:nil)))
 (common-lisp:export 'describe-fleets))
(common-lisp:progn
 (common-lisp:defun describe-images
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names)
   (common-lisp:declare (common-lisp:ignorable names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-images-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeImages")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeImagesResult" common-lisp:nil)))
 (common-lisp:export 'describe-images))
(common-lisp:progn
 (common-lisp:defun describe-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-name fleet-name user-id next-token
                     limit authentication-type)
   (common-lisp:declare
    (common-lisp:ignorable stack-name fleet-name user-id next-token limit
     authentication-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-sessions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeSessions")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSessionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-sessions))
(common-lisp:progn
 (common-lisp:defun describe-stacks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names next-token)
   (common-lisp:declare (common-lisp:ignorable names next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-stacks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeStacks")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeStacksResult" common-lisp:nil)))
 (common-lisp:export 'describe-stacks))
(common-lisp:progn
 (common-lisp:defun disassociate-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-name stack-name)
   (common-lisp:declare (common-lisp:ignorable fleet-name stack-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisassociateFleet")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisassociateFleetResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-fleet))
(common-lisp:progn
 (common-lisp:defun expire-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key session-id)
   (common-lisp:declare (common-lisp:ignorable session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-expire-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ExpireSession")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ExpireSessionResult" common-lisp:nil)))
 (common-lisp:export 'expire-session))
(common-lisp:progn
 (common-lisp:defun list-associated-fleets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-name next-token)
   (common-lisp:declare (common-lisp:ignorable stack-name next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-associated-fleets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssociatedFleets")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssociatedFleetsResult" common-lisp:nil)))
 (common-lisp:export 'list-associated-fleets))
(common-lisp:progn
 (common-lisp:defun list-associated-stacks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-name next-token)
   (common-lisp:declare (common-lisp:ignorable fleet-name next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-associated-stacks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssociatedStacks")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssociatedStacksResult" common-lisp:nil)))
 (common-lisp:export 'list-associated-stacks))
(common-lisp:progn
 (common-lisp:defun start-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartFleet")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartFleetResult" common-lisp:nil)))
 (common-lisp:export 'start-fleet))
(common-lisp:progn
 (common-lisp:defun stop-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopFleet")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopFleetResult" common-lisp:nil)))
 (common-lisp:export 'stop-fleet))
(common-lisp:progn
 (common-lisp:defun update-directory-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-name
                     organizational-unit-distinguished-names
                     service-account-credentials)
   (common-lisp:declare
    (common-lisp:ignorable directory-name
     organizational-unit-distinguished-names service-account-credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-directory-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDirectoryConfig")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDirectoryConfigResult" common-lisp:nil)))
 (common-lisp:export 'update-directory-config))
(common-lisp:progn
 (common-lisp:defun update-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key image-name name instance-type
                     compute-capacity vpc-config max-user-duration-in-seconds
                     disconnect-timeout-in-seconds delete-vpc-config
                     description display-name enable-default-internet-access
                     domain-join-info attributes-to-delete)
   (common-lisp:declare
    (common-lisp:ignorable image-name name instance-type compute-capacity
     vpc-config max-user-duration-in-seconds disconnect-timeout-in-seconds
     delete-vpc-config description display-name enable-default-internet-access
     domain-join-info attributes-to-delete))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFleet")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateFleetResult" common-lisp:nil)))
 (common-lisp:export 'update-fleet))
(common-lisp:progn
 (common-lisp:defun update-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key display-name description name
                     storage-connectors delete-storage-connectors)
   (common-lisp:declare
    (common-lisp:ignorable display-name description name storage-connectors
     delete-storage-connectors))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "appstream")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateStack")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateStackResult" common-lisp:nil)))
 (common-lisp:export 'update-stack))