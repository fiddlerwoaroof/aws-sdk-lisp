;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/kms
  (:use)
  (:nicknames #:aws/kms)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/kms)

(common-lisp:deftype awsaccount-id-type () 'common-lisp:string)
(common-lisp:deftype algorithm-spec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alias-list ()
   '(trivial-types:proper-list alias-list-entry))
 (common-lisp:defun |make-alias-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alias-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (alias-list-entry (:copier common-lisp:nil))
   (alias-name common-lisp:nil :type
    (common-lisp:or alias-name-type common-lisp:null))
   (alias-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (target-key-id common-lisp:nil :type
    (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alias-list-entry 'make-alias-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape alias-list-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-name)))
    (aws-sdk/generator/shape::to-query-params "AliasArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-arn)))
    (aws-sdk/generator/shape::to-query-params "TargetKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-key-id))))))
(common-lisp:deftype alias-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'already-exists-exception 'make-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype arn-type () 'common-lisp:string)
(common-lisp:deftype boolean-type () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (cancel-key-deletion-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-key-deletion-request
                    'make-cancel-key-deletion-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-key-deletion-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-key-deletion-response (:copier common-lisp:nil))
   (key-id common-lisp:nil :type
    (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-key-deletion-response
                    'make-cancel-key-deletion-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-key-deletion-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:deftype ciphertext-type ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct (create-alias-request (:copier common-lisp:nil))
   (alias-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":alias-name is required"))
    :type (common-lisp:or alias-name-type common-lisp:null))
   (target-key-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":target-key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alias-request 'make-create-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-name)))
    (aws-sdk/generator/shape::to-query-params "TargetKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-grant-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (grantee-principal
    (common-lisp:error
     #A((30) common-lisp:base-char . ":grantee-principal is required"))
    :type (common-lisp:or principal-id-type common-lisp:null))
   (retiring-principal common-lisp:nil :type
    (common-lisp:or principal-id-type common-lisp:null))
   (operations common-lisp:nil :type
    (common-lisp:or grant-operation-list common-lisp:null))
   (constraints common-lisp:nil :type
    (common-lisp:or grant-constraints common-lisp:null))
   (grant-tokens common-lisp:nil :type
    (common-lisp:or grant-token-list common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or grant-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-grant-request 'make-create-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-grant-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "GranteePrincipal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grantee-principal)))
    (aws-sdk/generator/shape::to-query-params "RetiringPrincipal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retiring-principal)))
    (aws-sdk/generator/shape::to-query-params "Operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations)))
    (aws-sdk/generator/shape::to-query-params "Constraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraints)))
    (aws-sdk/generator/shape::to-query-params "GrantTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-tokens)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-grant-response (:copier common-lisp:nil))
   (grant-token common-lisp:nil :type
    (common-lisp:or grant-token-type common-lisp:null))
   (grant-id common-lisp:nil :type
    (common-lisp:or grant-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-grant-response 'make-create-grant-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-grant-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GrantToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-token)))
    (aws-sdk/generator/shape::to-query-params "GrantId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-key-request (:copier common-lisp:nil))
   (policy common-lisp:nil :type (common-lisp:or policy-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (key-usage common-lisp:nil :type
    (common-lisp:or key-usage-type common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or origin-type common-lisp:null))
   (bypass-policy-lockout-safety-check common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-key-request 'make-create-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "KeyUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-usage)))
    (aws-sdk/generator/shape::to-query-params "Origin"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin)))
    (aws-sdk/generator/shape::to-query-params "BypassPolicyLockoutSafetyCheck"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bypass-policy-lockout-safety-check)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-key-response (:copier common-lisp:nil))
   (key-metadata common-lisp:nil :type
    (common-lisp:or key-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-key-response 'make-create-key-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-key-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-metadata))))))
(common-lisp:deftype data-key-spec () 'common-lisp:string)
(common-lisp:deftype date-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (decrypt-request (:copier common-lisp:nil))
   (ciphertext-blob
    (common-lisp:error
     #A((28) common-lisp:base-char . ":ciphertext-blob is required"))
    :type (common-lisp:or ciphertext-type common-lisp:null))
   (encryption-context common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null))
   (grant-tokens common-lisp:nil :type
    (common-lisp:or grant-token-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'decrypt-request 'make-decrypt-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape decrypt-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CiphertextBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ciphertext-blob)))
    (aws-sdk/generator/shape::to-query-params "EncryptionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-context)))
    (aws-sdk/generator/shape::to-query-params "GrantTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-tokens))))))
(common-lisp:progn
 (common-lisp:defstruct (decrypt-response (:copier common-lisp:nil))
   (key-id common-lisp:nil :type (common-lisp:or key-id-type common-lisp:null))
   (plaintext common-lisp:nil :type
    (common-lisp:or plaintext-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decrypt-response 'make-decrypt-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape decrypt-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Plaintext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'plaintext))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-alias-request (:copier common-lisp:nil))
   (alias-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":alias-name is required"))
    :type (common-lisp:or alias-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-alias-request 'make-delete-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-imported-key-material-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-imported-key-material-request
                    'make-delete-imported-key-material-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-imported-key-material-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (dependency-timeout-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dependency-timeout-exception
                    'make-dependency-timeout-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          dependency-timeout-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-key-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (grant-tokens common-lisp:nil :type
    (common-lisp:or grant-token-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-key-request 'make-describe-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "GrantTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-tokens))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-key-response (:copier common-lisp:nil))
   (key-metadata common-lisp:nil :type
    (common-lisp:or key-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-key-response 'make-describe-key-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-key-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-metadata))))))
(common-lisp:deftype description-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (disable-key-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-key-request 'make-disable-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape disable-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-key-rotation-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-key-rotation-request
                    'make-disable-key-rotation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disable-key-rotation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disabled-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disabled-exception 'make-disabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape disabled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-key-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-key-request 'make-enable-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape enable-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-key-rotation-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-key-rotation-request
                    'make-enable-key-rotation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-key-rotation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (encrypt-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (plaintext
    (common-lisp:error
     #A((22) common-lisp:base-char . ":plaintext is required"))
    :type (common-lisp:or plaintext-type common-lisp:null))
   (encryption-context common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null))
   (grant-tokens common-lisp:nil :type
    (common-lisp:or grant-token-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'encrypt-request 'make-encrypt-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape encrypt-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Plaintext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'plaintext)))
    (aws-sdk/generator/shape::to-query-params "EncryptionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-context)))
    (aws-sdk/generator/shape::to-query-params "GrantTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-tokens))))))
(common-lisp:progn
 (common-lisp:defstruct (encrypt-response (:copier common-lisp:nil))
   (ciphertext-blob common-lisp:nil :type
    (common-lisp:or ciphertext-type common-lisp:null))
   (key-id common-lisp:nil :type
    (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'encrypt-response 'make-encrypt-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape encrypt-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CiphertextBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ciphertext-blob)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:deftype encryption-context-key () 'common-lisp:string)
(common-lisp:defstruct
    (encryption-context-type
     (:constructor |make-encryption-context-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype encryption-context-value () 'common-lisp:string)
(common-lisp:deftype error-message-type () 'common-lisp:string)
(common-lisp:deftype expiration-model-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (expired-import-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expired-import-token-exception
                    'make-expired-import-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expired-import-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (generate-data-key-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (encryption-context common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null))
   (number-of-bytes common-lisp:nil :type
    (common-lisp:or number-of-bytes-type common-lisp:null))
   (key-spec common-lisp:nil :type
    (common-lisp:or data-key-spec common-lisp:null))
   (grant-tokens common-lisp:nil :type
    (common-lisp:or grant-token-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-data-key-request
                    'make-generate-data-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generate-data-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "EncryptionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-context)))
    (aws-sdk/generator/shape::to-query-params "NumberOfBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-bytes)))
    (aws-sdk/generator/shape::to-query-params "KeySpec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-spec)))
    (aws-sdk/generator/shape::to-query-params "GrantTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-tokens))))))
(common-lisp:progn
 (common-lisp:defstruct (generate-data-key-response (:copier common-lisp:nil))
   (ciphertext-blob common-lisp:nil :type
    (common-lisp:or ciphertext-type common-lisp:null))
   (plaintext common-lisp:nil :type
    (common-lisp:or plaintext-type common-lisp:null))
   (key-id common-lisp:nil :type
    (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-data-key-response
                    'make-generate-data-key-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generate-data-key-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CiphertextBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ciphertext-blob)))
    (aws-sdk/generator/shape::to-query-params "Plaintext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'plaintext)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-data-key-without-plaintext-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (encryption-context common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null))
   (key-spec common-lisp:nil :type
    (common-lisp:or data-key-spec common-lisp:null))
   (number-of-bytes common-lisp:nil :type
    (common-lisp:or number-of-bytes-type common-lisp:null))
   (grant-tokens common-lisp:nil :type
    (common-lisp:or grant-token-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-data-key-without-plaintext-request
                    'make-generate-data-key-without-plaintext-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generate-data-key-without-plaintext-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "EncryptionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-context)))
    (aws-sdk/generator/shape::to-query-params "KeySpec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-spec)))
    (aws-sdk/generator/shape::to-query-params "NumberOfBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-bytes)))
    (aws-sdk/generator/shape::to-query-params "GrantTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-tokens))))))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-data-key-without-plaintext-response (:copier common-lisp:nil))
   (ciphertext-blob common-lisp:nil :type
    (common-lisp:or ciphertext-type common-lisp:null))
   (key-id common-lisp:nil :type
    (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-data-key-without-plaintext-response
                    'make-generate-data-key-without-plaintext-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generate-data-key-without-plaintext-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CiphertextBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ciphertext-blob)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (generate-random-request (:copier common-lisp:nil))
   (number-of-bytes common-lisp:nil :type
    (common-lisp:or number-of-bytes-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-random-request 'make-generate-random-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generate-random-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NumberOfBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-bytes))))))
(common-lisp:progn
 (common-lisp:defstruct (generate-random-response (:copier common-lisp:nil))
   (plaintext common-lisp:nil :type
    (common-lisp:or plaintext-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-random-response 'make-generate-random-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generate-random-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Plaintext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'plaintext))))))
(common-lisp:progn
 (common-lisp:defstruct (get-key-policy-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-policy-request 'make-get-key-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-key-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-key-policy-response (:copier common-lisp:nil))
   (policy common-lisp:nil :type
    (common-lisp:or policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-policy-response 'make-get-key-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-key-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-key-rotation-status-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-rotation-status-request
                    'make-get-key-rotation-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-key-rotation-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-key-rotation-status-response (:copier common-lisp:nil))
   (key-rotation-enabled common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-rotation-status-response
                    'make-get-key-rotation-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-key-rotation-status-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyRotationEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-rotation-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-parameters-for-import-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (wrapping-algorithm
    (common-lisp:error
     #A((31) common-lisp:base-char . ":wrapping-algorithm is required"))
    :type (common-lisp:or algorithm-spec common-lisp:null))
   (wrapping-key-spec
    (common-lisp:error
     #A((30) common-lisp:base-char . ":wrapping-key-spec is required"))
    :type (common-lisp:or wrapping-key-spec common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameters-for-import-request
                    'make-get-parameters-for-import-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameters-for-import-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "WrappingAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'wrapping-algorithm)))
    (aws-sdk/generator/shape::to-query-params "WrappingKeySpec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'wrapping-key-spec))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-parameters-for-import-response (:copier common-lisp:nil))
   (key-id common-lisp:nil :type (common-lisp:or key-id-type common-lisp:null))
   (import-token common-lisp:nil :type
    (common-lisp:or ciphertext-type common-lisp:null))
   (public-key common-lisp:nil :type
    (common-lisp:or plaintext-type common-lisp:null))
   (parameters-valid-to common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameters-for-import-response
                    'make-get-parameters-for-import-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameters-for-import-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "ImportToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-token)))
    (aws-sdk/generator/shape::to-query-params "PublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-key)))
    (aws-sdk/generator/shape::to-query-params "ParametersValidTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters-valid-to))))))
(common-lisp:progn
 (common-lisp:defstruct (grant-constraints (:copier common-lisp:nil))
   (encryption-context-subset common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null))
   (encryption-context-equals common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'grant-constraints 'make-grant-constraints))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape grant-constraints))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EncryptionContextSubset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-context-subset)))
    (aws-sdk/generator/shape::to-query-params "EncryptionContextEquals"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-context-equals))))))
(common-lisp:deftype grant-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype grant-list ()
   '(trivial-types:proper-list grant-list-entry))
 (common-lisp:defun |make-grant-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list grant-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (grant-list-entry (:copier common-lisp:nil))
   (key-id common-lisp:nil :type (common-lisp:or key-id-type common-lisp:null))
   (grant-id common-lisp:nil :type
    (common-lisp:or grant-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or grant-name-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (grantee-principal common-lisp:nil :type
    (common-lisp:or principal-id-type common-lisp:null))
   (retiring-principal common-lisp:nil :type
    (common-lisp:or principal-id-type common-lisp:null))
   (issuing-account common-lisp:nil :type
    (common-lisp:or principal-id-type common-lisp:null))
   (operations common-lisp:nil :type
    (common-lisp:or grant-operation-list common-lisp:null))
   (constraints common-lisp:nil :type
    (common-lisp:or grant-constraints common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'grant-list-entry 'make-grant-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape grant-list-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "GrantId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "GranteePrincipal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grantee-principal)))
    (aws-sdk/generator/shape::to-query-params "RetiringPrincipal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retiring-principal)))
    (aws-sdk/generator/shape::to-query-params "IssuingAccount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'issuing-account)))
    (aws-sdk/generator/shape::to-query-params "Operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations)))
    (aws-sdk/generator/shape::to-query-params "Constraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraints))))))
(common-lisp:deftype grant-name-type () 'common-lisp:string)
(common-lisp:deftype grant-operation () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype grant-operation-list ()
   '(trivial-types:proper-list grant-operation))
 (common-lisp:defun |make-grant-operation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list grant-operation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype grant-token-list ()
   '(trivial-types:proper-list grant-token-type))
 (common-lisp:defun |make-grant-token-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list grant-token-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype grant-token-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (import-key-material-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (import-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":import-token is required"))
    :type (common-lisp:or ciphertext-type common-lisp:null))
   (encrypted-key-material
    (common-lisp:error
     #A((35) common-lisp:base-char . ":encrypted-key-material is required"))
    :type (common-lisp:or ciphertext-type common-lisp:null))
   (valid-to common-lisp:nil :type (common-lisp:or date-type common-lisp:null))
   (expiration-model common-lisp:nil :type
    (common-lisp:or expiration-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-key-material-request
                    'make-import-key-material-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          import-key-material-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "ImportToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-token)))
    (aws-sdk/generator/shape::to-query-params "EncryptedKeyMaterial"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encrypted-key-material)))
    (aws-sdk/generator/shape::to-query-params "ValidTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'valid-to)))
    (aws-sdk/generator/shape::to-query-params "ExpirationModel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-model))))))
(common-lisp:progn
 (common-lisp:defstruct
     (import-key-material-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'import-key-material-response
                    'make-import-key-material-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          import-key-material-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (incorrect-key-material-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'incorrect-key-material-exception
                    'make-incorrect-key-material-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          incorrect-key-material-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-alias-name-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-alias-name-exception
                    'make-invalid-alias-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-alias-name-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-arn-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-arn-exception 'make-invalid-arn-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-arn-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-ciphertext-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-ciphertext-exception
                    'make-invalid-ciphertext-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-ciphertext-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-grant-id-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-grant-id-exception
                    'make-invalid-grant-id-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-grant-id-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-grant-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-grant-token-exception
                    'make-invalid-grant-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-grant-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-import-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-import-token-exception
                    'make-invalid-import-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-import-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-key-usage-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-key-usage-exception
                    'make-invalid-key-usage-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-key-usage-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-marker-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-marker-exception 'make-invalid-marker-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-marker-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (kmsinternal-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kmsinternal-exception 'make-kmsinternal-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kmsinternal-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (kmsinvalid-state-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kmsinvalid-state-exception
                    'make-kmsinvalid-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kmsinvalid-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype key-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype key-list () '(trivial-types:proper-list key-list-entry))
 (common-lisp:defun |make-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (key-list-entry (:copier common-lisp:nil))
   (key-id common-lisp:nil :type (common-lisp:or key-id-type common-lisp:null))
   (key-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-list-entry 'make-key-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-list-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "KeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-arn))))))
(common-lisp:deftype key-manager-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (key-metadata (:copier common-lisp:nil))
   (awsaccount-id common-lisp:nil :type
    (common-lisp:or awsaccount-id-type common-lisp:null))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (key-usage common-lisp:nil :type
    (common-lisp:or key-usage-type common-lisp:null))
   (key-state common-lisp:nil :type
    (common-lisp:or key-state common-lisp:null))
   (deletion-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (valid-to common-lisp:nil :type (common-lisp:or date-type common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or origin-type common-lisp:null))
   (expiration-model common-lisp:nil :type
    (common-lisp:or expiration-model-type common-lisp:null))
   (key-manager common-lisp:nil :type
    (common-lisp:or key-manager-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-metadata 'make-key-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AWSAccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'awsaccount-id)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "KeyUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-usage)))
    (aws-sdk/generator/shape::to-query-params "KeyState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-state)))
    (aws-sdk/generator/shape::to-query-params "DeletionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deletion-date)))
    (aws-sdk/generator/shape::to-query-params "ValidTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'valid-to)))
    (aws-sdk/generator/shape::to-query-params "Origin"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin)))
    (aws-sdk/generator/shape::to-query-params "ExpirationModel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-model)))
    (aws-sdk/generator/shape::to-query-params "KeyManager"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-manager))))))
(common-lisp:deftype key-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (key-unavailable-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'key-unavailable-exception
                    'make-key-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          key-unavailable-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype key-usage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype limit-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (list-aliases-request (:copier common-lisp:nil))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-aliases-request 'make-list-aliases-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-aliases-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-aliases-response (:copier common-lisp:nil))
   (aliases common-lisp:nil :type (common-lisp:or alias-list common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null))
   (truncated common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-aliases-response 'make-list-aliases-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-aliases-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Aliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aliases)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Truncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'truncated))))))
(common-lisp:progn
 (common-lisp:defstruct (list-grants-request (:copier common-lisp:nil))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker-type common-lisp:null))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-grants-request 'make-list-grants-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-grants-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (list-grants-response (:copier common-lisp:nil))
   (grants common-lisp:nil :type (common-lisp:or grant-list common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null))
   (truncated common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-grants-response 'make-list-grants-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-grants-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Grants"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grants)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Truncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'truncated))))))
(common-lisp:progn
 (common-lisp:defstruct (list-key-policies-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-key-policies-request
                    'make-list-key-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-key-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-key-policies-response (:copier common-lisp:nil))
   (policy-names common-lisp:nil :type
    (common-lisp:or policy-name-list common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null))
   (truncated common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-key-policies-response
                    'make-list-key-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-key-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Truncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'truncated))))))
(common-lisp:progn
 (common-lisp:defstruct (list-keys-request (:copier common-lisp:nil))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-keys-request 'make-list-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-keys-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-keys-response (:copier common-lisp:nil))
   (keys common-lisp:nil :type (common-lisp:or key-list common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null))
   (truncated common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-keys-response 'make-list-keys-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-keys-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Keys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keys)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Truncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'truncated))))))
(common-lisp:progn
 (common-lisp:defstruct (list-resource-tags-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-tags-request
                    'make-list-resource-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-resource-tags-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null))
   (truncated common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-tags-response
                    'make-list-resource-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-tags-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Truncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'truncated))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-retirable-grants-request (:copier common-lisp:nil))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker-type common-lisp:null))
   (retiring-principal
    (common-lisp:error
     #A((31) common-lisp:base-char . ":retiring-principal is required"))
    :type (common-lisp:or principal-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-retirable-grants-request
                    'make-list-retirable-grants-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-retirable-grants-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "RetiringPrincipal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retiring-principal))))))
(common-lisp:progn
 (common-lisp:defstruct
     (malformed-policy-document-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'malformed-policy-document-exception
                    'make-malformed-policy-document-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          malformed-policy-document-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype marker-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype number-of-bytes-type () 'common-lisp:integer)
(common-lisp:deftype origin-type () 'common-lisp:string)
(common-lisp:deftype pending-window-in-days-type () 'common-lisp:integer)
(common-lisp:deftype plaintext-type ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:deftype policy-name-list ()
   '(trivial-types:proper-list policy-name-type))
 (common-lisp:defun |make-policy-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-name-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype policy-name-type () 'common-lisp:string)
(common-lisp:deftype policy-type () 'common-lisp:string)
(common-lisp:deftype principal-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (put-key-policy-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name-type common-lisp:null))
   (policy
    (common-lisp:error #A((19) common-lisp:base-char . ":policy is required"))
    :type (common-lisp:or policy-type common-lisp:null))
   (bypass-policy-lockout-safety-check common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-key-policy-request 'make-put-key-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-key-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "BypassPolicyLockoutSafetyCheck"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bypass-policy-lockout-safety-check))))))
(common-lisp:progn
 (common-lisp:defstruct (re-encrypt-request (:copier common-lisp:nil))
   (ciphertext-blob
    (common-lisp:error
     #A((28) common-lisp:base-char . ":ciphertext-blob is required"))
    :type (common-lisp:or ciphertext-type common-lisp:null))
   (source-encryption-context common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null))
   (destination-key-id
    (common-lisp:error
     #A((31) common-lisp:base-char . ":destination-key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (destination-encryption-context common-lisp:nil :type
    (common-lisp:or encryption-context-type common-lisp:null))
   (grant-tokens common-lisp:nil :type
    (common-lisp:or grant-token-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 're-encrypt-request 'make-re-encrypt-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape re-encrypt-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CiphertextBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ciphertext-blob)))
    (aws-sdk/generator/shape::to-query-params "SourceEncryptionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-encryption-context)))
    (aws-sdk/generator/shape::to-query-params "DestinationKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-key-id)))
    (aws-sdk/generator/shape::to-query-params "DestinationEncryptionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-encryption-context)))
    (aws-sdk/generator/shape::to-query-params "GrantTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-tokens))))))
(common-lisp:progn
 (common-lisp:defstruct (re-encrypt-response (:copier common-lisp:nil))
   (ciphertext-blob common-lisp:nil :type
    (common-lisp:or ciphertext-type common-lisp:null))
   (source-key-id common-lisp:nil :type
    (common-lisp:or key-id-type common-lisp:null))
   (key-id common-lisp:nil :type
    (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 're-encrypt-response 'make-re-encrypt-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape re-encrypt-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CiphertextBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ciphertext-blob)))
    (aws-sdk/generator/shape::to-query-params "SourceKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-key-id)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (retire-grant-request (:copier common-lisp:nil))
   (grant-token common-lisp:nil :type
    (common-lisp:or grant-token-type common-lisp:null))
   (key-id common-lisp:nil :type (common-lisp:or key-id-type common-lisp:null))
   (grant-id common-lisp:nil :type
    (common-lisp:or grant-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retire-grant-request 'make-retire-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape retire-grant-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GrantToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-token)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "GrantId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-id))))))
(common-lisp:progn
 (common-lisp:defstruct (revoke-grant-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (grant-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":grant-id is required"))
    :type (common-lisp:or grant-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revoke-grant-request 'make-revoke-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape revoke-grant-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "GrantId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-key-deletion-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (pending-window-in-days common-lisp:nil :type
    (common-lisp:or pending-window-in-days-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-key-deletion-request
                    'make-schedule-key-deletion-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schedule-key-deletion-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "PendingWindowInDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending-window-in-days))))))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-key-deletion-response (:copier common-lisp:nil))
   (key-id common-lisp:nil :type (common-lisp:or key-id-type common-lisp:null))
   (deletion-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-key-deletion-response
                    'make-schedule-key-deletion-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schedule-key-deletion-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "DeletionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deletion-date))))))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (tag-key
    (common-lisp:error #A((20) common-lisp:base-char . ":tag-key is required"))
    :type (common-lisp:or tag-key-type common-lisp:null))
   (tag-value
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tag-value is required"))
    :type (common-lisp:or tag-value-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-key)))
    (aws-sdk/generator/shape::to-query-params "TagValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-value))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-exception 'make-tag-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype tag-key-list ()
   '(trivial-types:proper-list tag-key-type))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype tag-value-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-operation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-operation-exception
                    'make-unsupported-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-operation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (update-alias-request (:copier common-lisp:nil))
   (alias-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":alias-name is required"))
    :type (common-lisp:or alias-name-type common-lisp:null))
   (target-key-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":target-key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alias-request 'make-update-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-name)))
    (aws-sdk/generator/shape::to-query-params "TargetKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-key-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-key-description-request (:copier common-lisp:nil))
   (key-id
    (common-lisp:error #A((19) common-lisp:base-char . ":key-id is required"))
    :type (common-lisp:or key-id-type common-lisp:null))
   (description
    (common-lisp:error
     #A((24) common-lisp:base-char . ":description is required"))
    :type (common-lisp:or description-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-key-description-request
                    'make-update-key-description-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-key-description-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:deftype wrapping-key-spec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun cancel-key-deletion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id)
   (common-lisp:declare (common-lisp:ignorable key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-key-deletion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelKeyDeletion")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelKeyDeletionResponse" common-lisp:nil)))
 (common-lisp:export 'cancel-key-deletion))
(common-lisp:progn
 (common-lisp:defun create-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alias-name target-key-id)
   (common-lisp:declare (common-lisp:ignorable alias-name target-key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAlias")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-alias))
(common-lisp:progn
 (common-lisp:defun create-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id grantee-principal
                     retiring-principal operations constraints grant-tokens
                     name)
   (common-lisp:declare
    (common-lisp:ignorable key-id grantee-principal retiring-principal
     operations constraints grant-tokens name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateGrant")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateGrantResponse" common-lisp:nil)))
 (common-lisp:export 'create-grant))
(common-lisp:progn
 (common-lisp:defun create-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy description key-usage origin
                     bypass-policy-lockout-safety-check tags)
   (common-lisp:declare
    (common-lisp:ignorable policy description key-usage origin
     bypass-policy-lockout-safety-check tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateKey")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateKeyResponse" common-lisp:nil)))
 (common-lisp:export 'create-key))
(common-lisp:progn
 (common-lisp:defun decrypt
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ciphertext-blob encryption-context
                     grant-tokens)
   (common-lisp:declare
    (common-lisp:ignorable ciphertext-blob encryption-context grant-tokens))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-decrypt-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"Decrypt")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DecryptResponse" common-lisp:nil)))
 (common-lisp:export 'decrypt))
(common-lisp:progn
 (common-lisp:defun delete-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alias-name)
   (common-lisp:declare (common-lisp:ignorable alias-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAlias")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-alias))
(common-lisp:progn
 (common-lisp:defun delete-imported-key-material
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id)
   (common-lisp:declare (common-lisp:ignorable key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-imported-key-material-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteImportedKeyMaterial")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-imported-key-material))
(common-lisp:progn
 (common-lisp:defun describe-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id grant-tokens)
   (common-lisp:declare (common-lisp:ignorable key-id grant-tokens))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeKey")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeKeyResponse" common-lisp:nil)))
 (common-lisp:export 'describe-key))
(common-lisp:progn
 (common-lisp:defun disable-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id)
   (common-lisp:declare (common-lisp:ignorable key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisableKey")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disable-key))
(common-lisp:progn
 (common-lisp:defun disable-key-rotation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id)
   (common-lisp:declare (common-lisp:ignorable key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-key-rotation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisableKeyRotation")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disable-key-rotation))
(common-lisp:progn
 (common-lisp:defun enable-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id)
   (common-lisp:declare (common-lisp:ignorable key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"EnableKey")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-key))
(common-lisp:progn
 (common-lisp:defun enable-key-rotation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id)
   (common-lisp:declare (common-lisp:ignorable key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-key-rotation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"EnableKeyRotation")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-key-rotation))
(common-lisp:progn
 (common-lisp:defun encrypt
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id plaintext encryption-context
                     grant-tokens)
   (common-lisp:declare
    (common-lisp:ignorable key-id plaintext encryption-context grant-tokens))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-encrypt-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"Encrypt")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EncryptResponse" common-lisp:nil)))
 (common-lisp:export 'encrypt))
(common-lisp:progn
 (common-lisp:defun generate-data-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id encryption-context number-of-bytes
                     key-spec grant-tokens)
   (common-lisp:declare
    (common-lisp:ignorable key-id encryption-context number-of-bytes key-spec
     grant-tokens))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-generate-data-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GenerateDataKey")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GenerateDataKeyResponse" common-lisp:nil)))
 (common-lisp:export 'generate-data-key))
(common-lisp:progn
 (common-lisp:defun generate-data-key-without-plaintext
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id encryption-context key-spec
                     number-of-bytes grant-tokens)
   (common-lisp:declare
    (common-lisp:ignorable key-id encryption-context key-spec number-of-bytes
     grant-tokens))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-generate-data-key-without-plaintext-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GenerateDataKeyWithoutPlaintext")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GenerateDataKeyWithoutPlaintextResponse" common-lisp:nil)))
 (common-lisp:export 'generate-data-key-without-plaintext))
(common-lisp:progn
 (common-lisp:defun generate-random
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key number-of-bytes)
   (common-lisp:declare (common-lisp:ignorable number-of-bytes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-generate-random-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GenerateRandom")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GenerateRandomResponse" common-lisp:nil)))
 (common-lisp:export 'generate-random))
(common-lisp:progn
 (common-lisp:defun get-key-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id policy-name)
   (common-lisp:declare (common-lisp:ignorable key-id policy-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-key-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetKeyPolicy")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetKeyPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'get-key-policy))
(common-lisp:progn
 (common-lisp:defun get-key-rotation-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id)
   (common-lisp:declare (common-lisp:ignorable key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-key-rotation-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetKeyRotationStatus")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetKeyRotationStatusResponse" common-lisp:nil)))
 (common-lisp:export 'get-key-rotation-status))
(common-lisp:progn
 (common-lisp:defun get-parameters-for-import
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id wrapping-algorithm
                     wrapping-key-spec)
   (common-lisp:declare
    (common-lisp:ignorable key-id wrapping-algorithm wrapping-key-spec))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-parameters-for-import-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetParametersForImport")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetParametersForImportResponse" common-lisp:nil)))
 (common-lisp:export 'get-parameters-for-import))
(common-lisp:progn
 (common-lisp:defun import-key-material
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id import-token
                     encrypted-key-material valid-to expiration-model)
   (common-lisp:declare
    (common-lisp:ignorable key-id import-token encrypted-key-material valid-to
     expiration-model))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-key-material-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ImportKeyMaterial")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ImportKeyMaterialResponse" common-lisp:nil)))
 (common-lisp:export 'import-key-material))
(common-lisp:progn
 (common-lisp:defun list-aliases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key limit marker)
   (common-lisp:declare (common-lisp:ignorable limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-aliases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAliases")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAliasesResponse" common-lisp:nil)))
 (common-lisp:export 'list-aliases))
(common-lisp:progn
 (common-lisp:defun list-grants
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key limit marker key-id)
   (common-lisp:declare (common-lisp:ignorable limit marker key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-grants-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListGrants")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListGrantsResponse" common-lisp:nil)))
 (common-lisp:export 'list-grants))
(common-lisp:progn
 (common-lisp:defun list-key-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id limit marker)
   (common-lisp:declare (common-lisp:ignorable key-id limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-key-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListKeyPolicies")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListKeyPoliciesResponse" common-lisp:nil)))
 (common-lisp:export 'list-key-policies))
(common-lisp:progn
 (common-lisp:defun list-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key limit marker)
   (common-lisp:declare (common-lisp:ignorable limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListKeys")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListKeysResponse" common-lisp:nil)))
 (common-lisp:export 'list-keys))
(common-lisp:progn
 (common-lisp:defun list-resource-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id limit marker)
   (common-lisp:declare (common-lisp:ignorable key-id limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListResourceTags")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListResourceTagsResponse" common-lisp:nil)))
 (common-lisp:export 'list-resource-tags))
(common-lisp:progn
 (common-lisp:defun list-retirable-grants
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key limit marker retiring-principal)
   (common-lisp:declare
    (common-lisp:ignorable limit marker retiring-principal))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-retirable-grants-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRetirableGrants")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListGrantsResponse" common-lisp:nil)))
 (common-lisp:export 'list-retirable-grants))
(common-lisp:progn
 (common-lisp:defun put-key-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id policy-name policy
                     bypass-policy-lockout-safety-check)
   (common-lisp:declare
    (common-lisp:ignorable key-id policy-name policy
     bypass-policy-lockout-safety-check))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-key-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutKeyPolicy")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-key-policy))
(common-lisp:progn
 (common-lisp:defun re-encrypt
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ciphertext-blob source-encryption-context
                     destination-key-id destination-encryption-context
                     grant-tokens)
   (common-lisp:declare
    (common-lisp:ignorable ciphertext-blob source-encryption-context
     destination-key-id destination-encryption-context grant-tokens))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-re-encrypt-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ReEncrypt")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ReEncryptResponse" common-lisp:nil)))
 (common-lisp:export 're-encrypt))
(common-lisp:progn
 (common-lisp:defun retire-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key grant-token key-id grant-id)
   (common-lisp:declare (common-lisp:ignorable grant-token key-id grant-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-retire-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RetireGrant")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'retire-grant))
(common-lisp:progn
 (common-lisp:defun revoke-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id grant-id)
   (common-lisp:declare (common-lisp:ignorable key-id grant-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-revoke-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RevokeGrant")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'revoke-grant))
(common-lisp:progn
 (common-lisp:defun schedule-key-deletion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id pending-window-in-days)
   (common-lisp:declare (common-lisp:ignorable key-id pending-window-in-days))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-schedule-key-deletion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ScheduleKeyDeletion")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ScheduleKeyDeletionResponse" common-lisp:nil)))
 (common-lisp:export 'schedule-key-deletion))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id tags)
   (common-lisp:declare (common-lisp:ignorable key-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TagResource")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id tag-keys)
   (common-lisp:declare (common-lisp:ignorable key-id tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UntagResource")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alias-name target-key-id)
   (common-lisp:declare (common-lisp:ignorable alias-name target-key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAlias")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-alias))
(common-lisp:progn
 (common-lisp:defun update-key-description
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-id description)
   (common-lisp:declare (common-lisp:ignorable key-id description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-key-description-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "kms")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateKeyDescription")
                                  ("Version" ,@"2014-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-key-description))