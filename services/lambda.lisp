;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/lambda
  (:use)
  (:nicknames #:aws/lambda)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/lambda)

(common-lisp:progn
 (common-lisp:defstruct (account-limit (:copier common-lisp:nil))
   (total-code-size common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (code-size-unzipped common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (code-size-zipped common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (concurrent-executions common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account-limit 'make-account-limit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape account-limit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TotalCodeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-code-size)))
    (aws-sdk/generator/shape::to-query-params "CodeSizeUnzipped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-size-unzipped)))
    (aws-sdk/generator/shape::to-query-params "CodeSizeZipped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-size-zipped)))
    (aws-sdk/generator/shape::to-query-params "ConcurrentExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'concurrent-executions))))))
(common-lisp:progn
 (common-lisp:defstruct (account-usage (:copier common-lisp:nil))
   (total-code-size common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (function-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account-usage 'make-account-usage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape account-usage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TotalCodeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-code-size)))
    (aws-sdk/generator/shape::to-query-params "FunctionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-count))))))
(common-lisp:deftype action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (add-permission-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (statement-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":statement-id is required"))
    :type (common-lisp:or statement-id common-lisp:null))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or action common-lisp:null))
   (principal
    (common-lisp:error
     #A((22) common-lisp:base-char . ":principal is required"))
    :type (common-lisp:or principal common-lisp:null))
   (source-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (source-account common-lisp:nil :type
    (common-lisp:or source-owner common-lisp:null))
   (event-source-token common-lisp:nil :type
    (common-lisp:or event-source-token common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-permission-request 'make-add-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "StatementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statement-id)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Principal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal)))
    (aws-sdk/generator/shape::to-query-params "SourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-arn)))
    (aws-sdk/generator/shape::to-query-params "SourceAccount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-account)))
    (aws-sdk/generator/shape::to-query-params "EventSourceToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-source-token)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier))))))
(common-lisp:progn
 (common-lisp:defstruct (add-permission-response (:copier common-lisp:nil))
   (statement common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-permission-response 'make-add-permission-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-permission-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Statement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statement))))))
(common-lisp:deftype alias () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (alias-configuration (:copier common-lisp:nil))
   (alias-arn common-lisp:nil :type
    (common-lisp:or function-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or alias common-lisp:null))
   (function-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alias-configuration 'make-alias-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape alias-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "FunctionVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-version)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype alias-list ()
   '(trivial-types:proper-list alias-configuration))
 (common-lisp:defun |make-alias-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alias-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype batch-size () 'common-lisp:integer)
(common-lisp:deftype blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype blob-stream ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (code-storage-exceeded-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'code-storage-exceeded-exception
                    'make-code-storage-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          code-storage-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (create-alias-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or alias common-lisp:null))
   (function-version
    (common-lisp:error
     #A((29) common-lisp:base-char . ":function-version is required"))
    :type (common-lisp:or version common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alias-request 'make-create-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "FunctionVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-version)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-event-source-mapping-request (:copier common-lisp:nil))
   (event-source-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":event-source-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (batch-size common-lisp:nil :type
    (common-lisp:or batch-size common-lisp:null))
   (starting-position
    (common-lisp:error
     #A((30) common-lisp:base-char . ":starting-position is required"))
    :type (common-lisp:or event-source-position common-lisp:null))
   (starting-position-timestamp common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-event-source-mapping-request
                    'make-create-event-source-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-event-source-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventSourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-source-arn)))
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "BatchSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-size)))
    (aws-sdk/generator/shape::to-query-params "StartingPosition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'starting-position)))
    (aws-sdk/generator/shape::to-query-params "StartingPositionTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'starting-position-timestamp))))))
(common-lisp:progn
 (common-lisp:defstruct (create-function-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (runtime
    (common-lisp:error #A((20) common-lisp:base-char . ":runtime is required"))
    :type (common-lisp:or runtime common-lisp:null))
   (role
    (common-lisp:error #A((17) common-lisp:base-char . ":role is required"))
    :type (common-lisp:or role-arn common-lisp:null))
   (handler
    (common-lisp:error #A((20) common-lisp:base-char . ":handler is required"))
    :type (common-lisp:or handler common-lisp:null))
   (code
    (common-lisp:error #A((17) common-lisp:base-char . ":code is required"))
    :type (common-lisp:or function-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (timeout common-lisp:nil :type (common-lisp:or timeout common-lisp:null))
   (memory-size common-lisp:nil :type
    (common-lisp:or memory-size common-lisp:null))
   (publish common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (dead-letter-config common-lisp:nil :type
    (common-lisp:or dead-letter-config common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment common-lisp:null))
   (kmskey-arn common-lisp:nil :type
    (common-lisp:or kmskey-arn common-lisp:null))
   (tracing-config common-lisp:nil :type
    (common-lisp:or tracing-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-function-request 'make-create-function-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-function-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Runtime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runtime)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "Handler"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handler)))
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Timeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout)))
    (aws-sdk/generator/shape::to-query-params "MemorySize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory-size)))
    (aws-sdk/generator/shape::to-query-params "Publish"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'publish)))
    (aws-sdk/generator/shape::to-query-params "VpcConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-config)))
    (aws-sdk/generator/shape::to-query-params "DeadLetterConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dead-letter-config)))
    (aws-sdk/generator/shape::to-query-params "Environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "KMSKeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kmskey-arn)))
    (aws-sdk/generator/shape::to-query-params "TracingConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tracing-config)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (dead-letter-config (:copier common-lisp:nil))
   (target-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dead-letter-config 'make-dead-letter-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape dead-letter-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-alias-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or alias common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-alias-request 'make-delete-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-event-source-mapping-request (:copier common-lisp:nil))
   (uuid
    (common-lisp:error #A((17) common-lisp:base-char . ":uuid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-event-source-mapping-request
                    'make-delete-event-source-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-event-source-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UUID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uuid))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-function-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-function-request 'make-delete-function-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-function-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (ec2access-denied-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ec2access-denied-exception
                    'make-ec2access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          ec2access-denied-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (ec2throttled-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ec2throttled-exception 'make-ec2throttled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          ec2throttled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (ec2unexpected-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ec2error-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ec2unexpected-exception 'make-ec2unexpected-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          ec2unexpected-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "EC2ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2error-code))))))
(common-lisp:progn
 (common-lisp:defstruct (enilimit-reached-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enilimit-reached-exception
                    'make-enilimit-reached-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enilimit-reached-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (environment (:copier common-lisp:nil))
   (variables common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null)))
 (common-lisp:export (common-lisp:list 'environment 'make-environment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Variables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'variables))))))
(common-lisp:progn
 (common-lisp:defstruct (environment-error (:copier common-lisp:nil))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or sensitive-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-error 'make-environment-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (environment-response (:copier common-lisp:nil))
   (variables common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null))
   (error common-lisp:nil :type
    (common-lisp:or environment-error common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-response 'make-environment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Variables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'variables)))
    (aws-sdk/generator/shape::to-query-params "Error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error))))))
(common-lisp:deftype environment-variable-name () 'common-lisp:string)
(common-lisp:deftype environment-variable-value () 'common-lisp:string)
(common-lisp:defstruct
    (environment-variables
     (:constructor |make-environment-variables|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct
     (event-source-mapping-configuration (:copier common-lisp:nil))
   (uuid common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (batch-size common-lisp:nil :type
    (common-lisp:or batch-size common-lisp:null))
   (event-source-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (function-arn common-lisp:nil :type
    (common-lisp:or function-arn common-lisp:null))
   (last-modified common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (last-processing-result common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state-transition-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-source-mapping-configuration
                    'make-event-source-mapping-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          event-source-mapping-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UUID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uuid)))
    (aws-sdk/generator/shape::to-query-params "BatchSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-size)))
    (aws-sdk/generator/shape::to-query-params "EventSourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-source-arn)))
    (aws-sdk/generator/shape::to-query-params "FunctionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-arn)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified)))
    (aws-sdk/generator/shape::to-query-params "LastProcessingResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-processing-result)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateTransitionReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-transition-reason))))))
(common-lisp:progn
 (common-lisp:deftype event-source-mappings-list ()
   '(trivial-types:proper-list event-source-mapping-configuration))
 (common-lisp:defun |make-event-source-mappings-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            event-source-mapping-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-source-position () 'common-lisp:string)
(common-lisp:deftype event-source-token () 'common-lisp:string)
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (function-code (:copier common-lisp:nil))
   (zip-file common-lisp:nil :type (common-lisp:or blob common-lisp:null))
   (s3bucket common-lisp:nil :type (common-lisp:or s3bucket common-lisp:null))
   (s3key common-lisp:nil :type (common-lisp:or s3key common-lisp:null))
   (s3object-version common-lisp:nil :type
    (common-lisp:or s3object-version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'function-code 'make-function-code))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape function-code))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ZipFile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'zip-file)))
    (aws-sdk/generator/shape::to-query-params "S3Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket)))
    (aws-sdk/generator/shape::to-query-params "S3Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3key)))
    (aws-sdk/generator/shape::to-query-params "S3ObjectVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3object-version))))))
(common-lisp:progn
 (common-lisp:defstruct (function-code-location (:copier common-lisp:nil))
   (repository-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (location common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'function-code-location 'make-function-code-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          function-code-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RepositoryType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-type)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location))))))
(common-lisp:progn
 (common-lisp:defstruct (function-configuration (:copier common-lisp:nil))
   (function-name common-lisp:nil :type
    (common-lisp:or namespaced-function-name common-lisp:null))
   (function-arn common-lisp:nil :type
    (common-lisp:or name-spaced-function-arn common-lisp:null))
   (runtime common-lisp:nil :type (common-lisp:or runtime common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (handler common-lisp:nil :type (common-lisp:or handler common-lisp:null))
   (code-size common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (timeout common-lisp:nil :type (common-lisp:or timeout common-lisp:null))
   (memory-size common-lisp:nil :type
    (common-lisp:or memory-size common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (code-sha256 common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config-response common-lisp:null))
   (dead-letter-config common-lisp:nil :type
    (common-lisp:or dead-letter-config common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-response common-lisp:null))
   (kmskey-arn common-lisp:nil :type
    (common-lisp:or kmskey-arn common-lisp:null))
   (tracing-config common-lisp:nil :type
    (common-lisp:or tracing-config-response common-lisp:null))
   (master-arn common-lisp:nil :type
    (common-lisp:or function-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'function-configuration 'make-function-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          function-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "FunctionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-arn)))
    (aws-sdk/generator/shape::to-query-params "Runtime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runtime)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "Handler"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handler)))
    (aws-sdk/generator/shape::to-query-params "CodeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-size)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Timeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout)))
    (aws-sdk/generator/shape::to-query-params "MemorySize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory-size)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified)))
    (aws-sdk/generator/shape::to-query-params "CodeSha256"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-sha256)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "VpcConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-config)))
    (aws-sdk/generator/shape::to-query-params "DeadLetterConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dead-letter-config)))
    (aws-sdk/generator/shape::to-query-params "Environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "KMSKeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kmskey-arn)))
    (aws-sdk/generator/shape::to-query-params "TracingConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tracing-config)))
    (aws-sdk/generator/shape::to-query-params "MasterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-arn))))))
(common-lisp:progn
 (common-lisp:deftype function-list ()
   '(trivial-types:proper-list function-configuration))
 (common-lisp:defun |make-function-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list function-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype function-name () 'common-lisp:string)
(common-lisp:deftype function-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-settings-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-request
                    'make-get-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-account-settings-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-settings-response (:copier common-lisp:nil))
   (account-limit common-lisp:nil :type
    (common-lisp:or account-limit common-lisp:null))
   (account-usage common-lisp:nil :type
    (common-lisp:or account-usage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-response
                    'make-get-account-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-account-settings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-limit)))
    (aws-sdk/generator/shape::to-query-params "AccountUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (get-alias-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or alias common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-alias-request 'make-get-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-source-mapping-request (:copier common-lisp:nil))
   (uuid
    (common-lisp:error #A((17) common-lisp:base-char . ":uuid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-source-mapping-request
                    'make-get-event-source-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-event-source-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UUID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uuid))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-function-configuration-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or namespaced-function-name common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-function-configuration-request
                    'make-get-function-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-function-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier))))))
(common-lisp:progn
 (common-lisp:defstruct (get-function-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or namespaced-function-name common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-function-request 'make-get-function-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-function-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier))))))
(common-lisp:progn
 (common-lisp:defstruct (get-function-response (:copier common-lisp:nil))
   (configuration common-lisp:nil :type
    (common-lisp:or function-configuration common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or function-code-location common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-function-response 'make-get-function-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-function-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration)))
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (get-policy-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or namespaced-function-name common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-policy-request 'make-get-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier))))))
(common-lisp:progn
 (common-lisp:defstruct (get-policy-response (:copier common-lisp:nil))
   (policy common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-policy-response 'make-get-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:deftype handler () 'common-lisp:string)
(common-lisp:deftype http-status () 'common-lisp:integer)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-value-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'make-invalid-parameter-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-value-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-request-content-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-content-exception
                    'make-invalid-request-content-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-request-content-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-runtime-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-runtime-exception
                    'make-invalid-runtime-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-runtime-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-security-group-idexception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-security-group-idexception
                    'make-invalid-security-group-idexception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-security-group-idexception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-subnet-idexception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-subnet-idexception
                    'make-invalid-subnet-idexception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-subnet-idexception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-zip-file-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-zip-file-exception
                    'make-invalid-zip-file-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-zip-file-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invocation-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or namespaced-function-name common-lisp:null))
   (invocation-type common-lisp:nil :type
    (common-lisp:or invocation-type common-lisp:null))
   (log-type common-lisp:nil :type (common-lisp:or log-type common-lisp:null))
   (client-context common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or blob common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invocation-request 'make-invocation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invocation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "InvocationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invocation-type)))
    (aws-sdk/generator/shape::to-query-params "LogType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-type)))
    (aws-sdk/generator/shape::to-query-params "ClientContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-context)))
    (aws-sdk/generator/shape::to-query-params "Payload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'payload)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier))))))
(common-lisp:progn
 (common-lisp:defstruct (invocation-response (:copier common-lisp:nil))
   (status-code common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (function-error common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (log-result common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invocation-response 'make-invocation-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invocation-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StatusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "FunctionError"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-error)))
    (aws-sdk/generator/shape::to-query-params "LogResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-result)))
    (aws-sdk/generator/shape::to-query-params "Payload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'payload))))))
(common-lisp:deftype invocation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (invoke-async-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or namespaced-function-name common-lisp:null))
   (invoke-args
    (common-lisp:error
     #A((24) common-lisp:base-char . ":invoke-args is required"))
    :type (common-lisp:or blob-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invoke-async-request 'make-invoke-async-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invoke-async-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "InvokeArgs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invoke-args))))))
(common-lisp:progn
 (common-lisp:defstruct (invoke-async-response (:copier common-lisp:nil))
   (status common-lisp:nil :type
    (common-lisp:or http-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invoke-async-response 'make-invoke-async-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invoke-async-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (kmsaccess-denied-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kmsaccess-denied-exception
                    'make-kmsaccess-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kmsaccess-denied-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (kmsdisabled-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kmsdisabled-exception 'make-kmsdisabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kmsdisabled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (kmsinvalid-state-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kmsinvalid-state-exception
                    'make-kmsinvalid-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kmsinvalid-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype kmskey-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (kmsnot-found-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kmsnot-found-exception 'make-kmsnot-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kmsnot-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-aliases-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (function-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or max-list-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-aliases-request 'make-list-aliases-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-aliases-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "FunctionVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-version)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct (list-aliases-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (aliases common-lisp:nil :type
    (common-lisp:or alias-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-aliases-response 'make-list-aliases-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-aliases-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Aliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aliases))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-source-mappings-request (:copier common-lisp:nil))
   (event-source-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (function-name common-lisp:nil :type
    (common-lisp:or function-name common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or max-list-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-source-mappings-request
                    'make-list-event-source-mappings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-event-source-mappings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventSourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-source-arn)))
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-source-mappings-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-source-mappings common-lisp:nil :type
    (common-lisp:or event-source-mappings-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-source-mappings-response
                    'make-list-event-source-mappings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-event-source-mappings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "EventSourceMappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-source-mappings))))))
(common-lisp:progn
 (common-lisp:defstruct (list-functions-request (:copier common-lisp:nil))
   (master-region common-lisp:nil :type
    (common-lisp:or master-region common-lisp:null))
   (function-version common-lisp:nil :type
    (common-lisp:or function-version common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or max-list-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-functions-request 'make-list-functions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-functions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MasterRegion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-region)))
    (aws-sdk/generator/shape::to-query-params "FunctionVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-version)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct (list-functions-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (functions common-lisp:nil :type
    (common-lisp:or function-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-functions-response 'make-list-functions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-functions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Functions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'functions))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-request (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or function-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-request 'make-list-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-response 'make-list-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-versions-by-function-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or namespaced-function-name common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or max-list-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-versions-by-function-request
                    'make-list-versions-by-function-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-versions-by-function-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-versions-by-function-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (versions common-lisp:nil :type
    (common-lisp:or function-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-versions-by-function-response
                    'make-list-versions-by-function-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-versions-by-function-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Versions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'versions))))))
(common-lisp:deftype log-type () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype master-region () 'common-lisp:string)
(common-lisp:deftype max-list-items () 'common-lisp:integer)
(common-lisp:deftype memory-size () 'common-lisp:integer)
(common-lisp:deftype name-spaced-function-arn () 'common-lisp:string)
(common-lisp:deftype namespaced-function-name () 'common-lisp:string)
(common-lisp:deftype namespaced-statement-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (policy-length-exceeded-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-length-exceeded-exception
                    'make-policy-length-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-length-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype principal () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (publish-version-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (code-sha256 common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'publish-version-request 'make-publish-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          publish-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "CodeSha256"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-sha256)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:deftype qualifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (remove-permission-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (statement-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":statement-id is required"))
    :type (common-lisp:or namespaced-statement-id common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-permission-request
                    'make-remove-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "StatementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statement-id)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier))))))
(common-lisp:progn
 (common-lisp:defstruct (request-too-large-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-too-large-exception
                    'make-request-too-large-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-too-large-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-conflict-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-conflict-exception
                    'make-resource-conflict-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-conflict-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:deftype runtime () 'common-lisp:string)
(common-lisp:deftype s3bucket () 'common-lisp:string)
(common-lisp:deftype s3key () 'common-lisp:string)
(common-lisp:deftype s3object-version () 'common-lisp:string)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-group-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sensitive-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (service-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-exception 'make-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype source-owner () 'common-lisp:string)
(common-lisp:deftype statement-id () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (subnet-ipaddress-limit-reached-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'subnet-ipaddress-limit-reached-exception
                    'make-subnet-ipaddress-limit-reached-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-ipaddress-limit-reached-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnet-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-request (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or function-arn common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:defstruct
    (tags
     (:constructor |make-tags|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype throttle-reason () 'common-lisp:string)
(common-lisp:deftype timeout () 'common-lisp:integer)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (retry-after-seconds common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or throttle-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "retryAfterSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-after-seconds)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct (tracing-config (:copier common-lisp:nil))
   (mode common-lisp:nil :type (common-lisp:or tracing-mode common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tracing-config 'make-tracing-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tracing-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Mode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mode))))))
(common-lisp:progn
 (common-lisp:defstruct (tracing-config-response (:copier common-lisp:nil))
   (mode common-lisp:nil :type (common-lisp:or tracing-mode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tracing-config-response 'make-tracing-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tracing-config-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Mode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mode))))))
(common-lisp:deftype tracing-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-media-type-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-media-type-exception
                    'make-unsupported-media-type-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-media-type-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-request (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or function-arn common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (update-alias-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or alias common-lisp:null))
   (function-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alias-request 'make-update-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "FunctionVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-version)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-event-source-mapping-request (:copier common-lisp:nil))
   (uuid
    (common-lisp:error #A((17) common-lisp:base-char . ":uuid is required"))
    :type (common-lisp:or string common-lisp:null))
   (function-name common-lisp:nil :type
    (common-lisp:or function-name common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (batch-size common-lisp:nil :type
    (common-lisp:or batch-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-event-source-mapping-request
                    'make-update-event-source-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-event-source-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UUID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uuid)))
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "BatchSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-function-code-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (zip-file common-lisp:nil :type (common-lisp:or blob common-lisp:null))
   (s3bucket common-lisp:nil :type (common-lisp:or s3bucket common-lisp:null))
   (s3key common-lisp:nil :type (common-lisp:or s3key common-lisp:null))
   (s3object-version common-lisp:nil :type
    (common-lisp:or s3object-version common-lisp:null))
   (publish common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-function-code-request
                    'make-update-function-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-function-code-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "ZipFile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'zip-file)))
    (aws-sdk/generator/shape::to-query-params "S3Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket)))
    (aws-sdk/generator/shape::to-query-params "S3Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3key)))
    (aws-sdk/generator/shape::to-query-params "S3ObjectVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3object-version)))
    (aws-sdk/generator/shape::to-query-params "Publish"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'publish)))
    (aws-sdk/generator/shape::to-query-params "DryRun"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-function-configuration-request (:copier common-lisp:nil))
   (function-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":function-name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (handler common-lisp:nil :type (common-lisp:or handler common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (timeout common-lisp:nil :type (common-lisp:or timeout common-lisp:null))
   (memory-size common-lisp:nil :type
    (common-lisp:or memory-size common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment common-lisp:null))
   (runtime common-lisp:nil :type (common-lisp:or runtime common-lisp:null))
   (dead-letter-config common-lisp:nil :type
    (common-lisp:or dead-letter-config common-lisp:null))
   (kmskey-arn common-lisp:nil :type
    (common-lisp:or kmskey-arn common-lisp:null))
   (tracing-config common-lisp:nil :type
    (common-lisp:or tracing-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-function-configuration-request
                    'make-update-function-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-function-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-name)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "Handler"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handler)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Timeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout)))
    (aws-sdk/generator/shape::to-query-params "MemorySize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory-size)))
    (aws-sdk/generator/shape::to-query-params "VpcConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-config)))
    (aws-sdk/generator/shape::to-query-params "Environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "Runtime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runtime)))
    (aws-sdk/generator/shape::to-query-params "DeadLetterConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dead-letter-config)))
    (aws-sdk/generator/shape::to-query-params "KMSKeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kmskey-arn)))
    (aws-sdk/generator/shape::to-query-params "TracingConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tracing-config))))))
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpc-config (:copier common-lisp:nil))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-config 'make-vpc-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape vpc-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (vpc-config-response (:copier common-lisp:nil))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-config-response 'make-vpc-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape vpc-config-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id))))))
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name statement-id action
                     principal source-arn source-account event-source-token
                     qualifier)
   (common-lisp:declare
    (common-lisp:ignorable function-name statement-id action principal
     source-arn source-account event-source-token qualifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/policy"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"AddPermission")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddPermissionResponse" common-lisp:nil)))
 (common-lisp:export 'add-permission))
(common-lisp:progn
 (common-lisp:defun create-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name name function-version
                     description)
   (common-lisp:declare
    (common-lisp:ignorable function-name name function-version description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/aliases"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAlias")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AliasConfiguration" common-lisp:nil)))
 (common-lisp:export 'create-alias))
(common-lisp:progn
 (common-lisp:defun create-event-source-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-source-arn function-name enabled
                     batch-size starting-position starting-position-timestamp)
   (common-lisp:declare
    (common-lisp:ignorable event-source-arn function-name enabled batch-size
     starting-position starting-position-timestamp))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-event-source-mapping-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateEventSourceMapping")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EventSourceMappingConfiguration" common-lisp:nil)))
 (common-lisp:export 'create-event-source-mapping))
(common-lisp:progn
 (common-lisp:defun create-function
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name runtime role handler code
                     description timeout memory-size publish vpc-config
                     dead-letter-config environment kmskey-arn tracing-config
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable function-name runtime role handler code description
     timeout memory-size publish vpc-config dead-letter-config environment
     kmskey-arn tracing-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-function-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateFunction")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "FunctionConfiguration" common-lisp:nil)))
 (common-lisp:export 'create-function))
(common-lisp:progn
 (common-lisp:defun delete-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name name)
   (common-lisp:declare (common-lisp:ignorable function-name name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/aliases/~a"
                                                   functionname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAlias")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-alias))
(common-lisp:progn
 (common-lisp:defun delete-event-source-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key uuid)
   (common-lisp:declare (common-lisp:ignorable uuid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-event-source-mapping-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/event-source-mappings/~a"
                                                   uuid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteEventSourceMapping")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EventSourceMappingConfiguration" common-lisp:nil)))
 (common-lisp:export 'delete-event-source-mapping))
(common-lisp:progn
 (common-lisp:defun delete-function
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name qualifier)
   (common-lisp:declare (common-lisp:ignorable function-name qualifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-function-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteFunction")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-function))
(common-lisp:progn
 (common-lisp:defun get-account-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service "lambda" :method :get :params
                             (common-lisp:cons "Action" "GetAccountSettings"))
    "GetAccountSettingsResponse" common-lisp:nil))
 (common-lisp:export 'get-account-settings))
(common-lisp:progn
 (common-lisp:defun get-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name name)
   (common-lisp:declare (common-lisp:ignorable function-name name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/aliases/~a"
                                                   functionname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetAlias")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AliasConfiguration" common-lisp:nil)))
 (common-lisp:export 'get-alias))
(common-lisp:progn
 (common-lisp:defun get-event-source-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key uuid)
   (common-lisp:declare (common-lisp:ignorable uuid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-source-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/event-source-mappings/~a"
                                                   uuid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetEventSourceMapping")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EventSourceMappingConfiguration" common-lisp:nil)))
 (common-lisp:export 'get-event-source-mapping))
(common-lisp:progn
 (common-lisp:defun get-function
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name qualifier)
   (common-lisp:declare (common-lisp:ignorable function-name qualifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-function-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetFunction")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetFunctionResponse" common-lisp:nil)))
 (common-lisp:export 'get-function))
(common-lisp:progn
 (common-lisp:defun get-function-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name qualifier)
   (common-lisp:declare (common-lisp:ignorable function-name qualifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-function-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/configuration"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetFunctionConfiguration")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "FunctionConfiguration" common-lisp:nil)))
 (common-lisp:export 'get-function-configuration))
(common-lisp:progn
 (common-lisp:defun get-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name qualifier)
   (common-lisp:declare (common-lisp:ignorable function-name qualifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/policy"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetPolicy")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'get-policy))
(common-lisp:progn
 (common-lisp:defun invoke
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name invocation-type log-type
                     client-context payload qualifier)
   (common-lisp:declare
    (common-lisp:ignorable function-name invocation-type log-type
     client-context payload qualifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-invocation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/invocations"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"Invoke")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InvocationResponse" common-lisp:nil)))
 (common-lisp:export 'invoke))
(common-lisp:progn
 (common-lisp:defun invoke-async
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name invoke-args)
   (common-lisp:declare (common-lisp:ignorable function-name invoke-args))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-invoke-async-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2014-11-13/functions/~a/invoke-async/"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"InvokeAsync")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InvokeAsyncResponse" common-lisp:nil)))
 (common-lisp:export 'invoke-async))
(common-lisp:progn
 (common-lisp:defun list-aliases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name function-version marker
                     max-items)
   (common-lisp:declare
    (common-lisp:ignorable function-name function-version marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-aliases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/aliases"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListAliases")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAliasesResponse" common-lisp:nil)))
 (common-lisp:export 'list-aliases))
(common-lisp:progn
 (common-lisp:defun list-event-source-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-source-arn function-name marker
                     max-items)
   (common-lisp:declare
    (common-lisp:ignorable event-source-arn function-name marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-event-source-mappings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListEventSourceMappings")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListEventSourceMappingsResponse" common-lisp:nil)))
 (common-lisp:export 'list-event-source-mappings))
(common-lisp:progn
 (common-lisp:defun list-functions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key master-region function-version marker
                     max-items)
   (common-lisp:declare
    (common-lisp:ignorable master-region function-version marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-functions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListFunctions")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListFunctionsResponse" common-lisp:nil)))
 (common-lisp:export 'list-functions))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource)
   (common-lisp:declare (common-lisp:ignorable resource))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-31/tags/~a" arn)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListTags")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsResponse" common-lisp:nil)))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun list-versions-by-function
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name marker max-items)
   (common-lisp:declare (common-lisp:ignorable function-name marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-versions-by-function-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/versions"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListVersionsByFunction")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListVersionsByFunctionResponse" common-lisp:nil)))
 (common-lisp:export 'list-versions-by-function))
(common-lisp:progn
 (common-lisp:defun publish-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name code-sha256 description)
   (common-lisp:declare
    (common-lisp:ignorable function-name code-sha256 description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-publish-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/versions"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PublishVersion")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "FunctionConfiguration" common-lisp:nil)))
 (common-lisp:export 'publish-version))
(common-lisp:progn
 (common-lisp:defun remove-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name statement-id qualifier)
   (common-lisp:declare
    (common-lisp:ignorable function-name statement-id qualifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/policy/~a"
                                                   functionname statementid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"RemovePermission")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-permission))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource tags)
   (common-lisp:declare (common-lisp:ignorable resource tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-31/tags/~a" arn)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"TagResource")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-31/tags/~a" arn)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UntagResource")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name name function-version
                     description)
   (common-lisp:declare
    (common-lisp:ignorable function-name name function-version description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/aliases/~a"
                                                   functionname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAlias")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AliasConfiguration" common-lisp:nil)))
 (common-lisp:export 'update-alias))
(common-lisp:progn
 (common-lisp:defun update-event-source-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key uuid function-name enabled batch-size)
   (common-lisp:declare
    (common-lisp:ignorable uuid function-name enabled batch-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-event-source-mapping-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/event-source-mappings/~a"
                                                   uuid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateEventSourceMapping")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EventSourceMappingConfiguration" common-lisp:nil)))
 (common-lisp:export 'update-event-source-mapping))
(common-lisp:progn
 (common-lisp:defun update-function-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name zip-file s3bucket s3key
                     s3object-version publish dry-run)
   (common-lisp:declare
    (common-lisp:ignorable function-name zip-file s3bucket s3key
     s3object-version publish dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-function-code-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/code"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFunctionCode")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "FunctionConfiguration" common-lisp:nil)))
 (common-lisp:export 'update-function-code))
(common-lisp:progn
 (common-lisp:defun update-function-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-name role handler description
                     timeout memory-size vpc-config environment runtime
                     dead-letter-config kmskey-arn tracing-config)
   (common-lisp:declare
    (common-lisp:ignorable function-name role handler description timeout
     memory-size vpc-config environment runtime dead-letter-config kmskey-arn
     tracing-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-function-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "lambda" :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2015-03-31/functions/~a/configuration"
                                                   functionname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFunctionConfiguration")
                                  ("Version" ,@"2015-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "FunctionConfiguration" common-lisp:nil)))
 (common-lisp:export 'update-function-configuration))