;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/budgets
  (:use)
  (:nicknames #:aws/budgets)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/budgets)

(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (budget (:copier common-lisp:nil))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (budget-limit
    (common-lisp:error
     #A((25) common-lisp:base-char . ":budget-limit is required"))
    :type (common-lisp:or spend common-lisp:null))
   (cost-filters common-lisp:nil :type
    (common-lisp:or cost-filters common-lisp:null))
   (cost-types
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cost-types is required"))
    :type (common-lisp:or cost-types common-lisp:null))
   (time-unit
    (common-lisp:error
     #A((22) common-lisp:base-char . ":time-unit is required"))
    :type (common-lisp:or time-unit common-lisp:null))
   (time-period
    (common-lisp:error
     #A((24) common-lisp:base-char . ":time-period is required"))
    :type (common-lisp:or time-period common-lisp:null))
   (calculated-spend common-lisp:nil :type
    (common-lisp:or calculated-spend common-lisp:null))
   (budget-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-type is required"))
    :type (common-lisp:or budget-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'budget 'make-budget))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape budget))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "BudgetLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-limit)))
    (aws-sdk/generator/shape::to-query-params "CostFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cost-filters)))
    (aws-sdk/generator/shape::to-query-params "CostTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cost-types)))
    (aws-sdk/generator/shape::to-query-params "TimeUnit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-unit)))
    (aws-sdk/generator/shape::to-query-params "TimePeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-period)))
    (aws-sdk/generator/shape::to-query-params "CalculatedSpend"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'calculated-spend)))
    (aws-sdk/generator/shape::to-query-params "BudgetType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-type))))))
(common-lisp:deftype budget-name () 'common-lisp:string)
(common-lisp:deftype budget-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype budgets () '(trivial-types:proper-list budget))
 (common-lisp:defun |make-budgets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list budget))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (calculated-spend (:copier common-lisp:nil))
   (actual-spend
    (common-lisp:error
     #A((25) common-lisp:base-char . ":actual-spend is required"))
    :type (common-lisp:or spend common-lisp:null))
   (forecasted-spend common-lisp:nil :type
    (common-lisp:or spend common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'calculated-spend 'make-calculated-spend))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape calculated-spend))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActualSpend"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'actual-spend)))
    (aws-sdk/generator/shape::to-query-params "ForecastedSpend"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forecasted-spend))))))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:defstruct
    (cost-filters
     (:constructor |make-cost-filters|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (cost-types (:copier common-lisp:nil))
   (include-tax
    (common-lisp:error
     #A((24) common-lisp:base-char . ":include-tax is required"))
    :type (common-lisp:or generic-boolean common-lisp:null))
   (include-subscription
    (common-lisp:error
     #A((33) common-lisp:base-char . ":include-subscription is required"))
    :type (common-lisp:or generic-boolean common-lisp:null))
   (use-blended
    (common-lisp:error
     #A((24) common-lisp:base-char . ":use-blended is required"))
    :type (common-lisp:or generic-boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cost-types 'make-cost-types))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cost-types))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IncludeTax"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-tax)))
    (aws-sdk/generator/shape::to-query-params "IncludeSubscription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-subscription)))
    (aws-sdk/generator/shape::to-query-params "UseBlended"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-blended))))))
(common-lisp:progn
 (common-lisp:defstruct (create-budget-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget
    (common-lisp:error #A((19) common-lisp:base-char . ":budget is required"))
    :type (common-lisp:or budget common-lisp:null))
   (notifications-with-subscribers common-lisp:nil :type
    (common-lisp:or notification-with-subscribers-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-budget-request 'make-create-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-budget-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "Budget"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget)))
    (aws-sdk/generator/shape::to-query-params "NotificationsWithSubscribers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notifications-with-subscribers))))))
(common-lisp:progn
 (common-lisp:defstruct (create-budget-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-budget-response 'make-create-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-budget-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-notification-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification common-lisp:null))
   (subscribers
    (common-lisp:error
     #A((24) common-lisp:base-char . ":subscribers is required"))
    :type (common-lisp:or subscribers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-notification-request
                    'make-create-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-notification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "Subscribers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscribers))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-notification-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-notification-response
                    'make-create-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-notification-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-subscriber-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification common-lisp:null))
   (subscriber
    (common-lisp:error
     #A((23) common-lisp:base-char . ":subscriber is required"))
    :type (common-lisp:or subscriber common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-subscriber-request
                    'make-create-subscriber-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-subscriber-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "Subscriber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscriber))))))
(common-lisp:progn
 (common-lisp:defstruct (create-subscriber-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-subscriber-response
                    'make-create-subscriber-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-subscriber-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (creation-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'creation-limit-exceeded-exception
                    'make-creation-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          creation-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-budget-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-budget-request 'make-delete-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-budget-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-budget-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-budget-response 'make-delete-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-budget-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-notification-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-notification-request
                    'make-delete-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-notification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-notification-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-notification-response
                    'make-delete-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-notification-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-subscriber-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification common-lisp:null))
   (subscriber
    (common-lisp:error
     #A((23) common-lisp:base-char . ":subscriber is required"))
    :type (common-lisp:or subscriber common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-subscriber-request
                    'make-delete-subscriber-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-subscriber-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "Subscriber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscriber))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-subscriber-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-subscriber-response
                    'make-delete-subscriber-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-subscriber-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-budget-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-budget-request 'make-describe-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-budget-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-budget-response (:copier common-lisp:nil))
   (budget common-lisp:nil :type (common-lisp:or budget common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-budget-response 'make-describe-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-budget-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Budget"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-budgets-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-budgets-request 'make-describe-budgets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-budgets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-budgets-response (:copier common-lisp:nil))
   (budgets common-lisp:nil :type (common-lisp:or budgets common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-budgets-response
                    'make-describe-budgets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-budgets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Budgets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budgets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-notifications-for-budget-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-notifications-for-budget-request
                    'make-describe-notifications-for-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-notifications-for-budget-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-notifications-for-budget-response (:copier common-lisp:nil))
   (notifications common-lisp:nil :type
    (common-lisp:or notifications common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-notifications-for-budget-response
                    'make-describe-notifications-for-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-notifications-for-budget-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Notifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notifications)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subscribers-for-notification-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-subscribers-for-notification-request
                    'make-describe-subscribers-for-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-subscribers-for-notification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subscribers-for-notification-response (:copier common-lisp:nil))
   (subscribers common-lisp:nil :type
    (common-lisp:or subscribers common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-subscribers-for-notification-response
                    'make-describe-subscribers-for-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-subscribers-for-notification-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Subscribers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscribers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:deftype dimension-values ()
   '(trivial-types:proper-list generic-string))
 (common-lisp:defun |make-dimension-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list generic-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (duplicate-record-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-record-exception
                    'make-duplicate-record-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-record-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (expired-next-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expired-next-token-exception
                    'make-expired-next-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expired-next-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype generic-boolean () 'common-lisp:boolean)
(common-lisp:deftype generic-string () 'common-lisp:string)
(common-lisp:deftype generic-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (internal-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception 'make-internal-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-next-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'make-invalid-next-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-next-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameter-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (notification (:copier common-lisp:nil))
   (notification-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":notification-type is required"))
    :type (common-lisp:or notification-type common-lisp:null))
   (comparison-operator
    (common-lisp:error
     #A((32) common-lisp:base-char . ":comparison-operator is required"))
    :type (common-lisp:or comparison-operator common-lisp:null))
   (threshold
    (common-lisp:error
     #A((22) common-lisp:base-char . ":threshold is required"))
    :type (common-lisp:or notification-threshold common-lisp:null)))
 (common-lisp:export (common-lisp:list 'notification 'make-notification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape notification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NotificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-type)))
    (aws-sdk/generator/shape::to-query-params "ComparisonOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparison-operator)))
    (aws-sdk/generator/shape::to-query-params "Threshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'threshold))))))
(common-lisp:deftype notification-threshold () 'common-lisp:double-float)
(common-lisp:deftype notification-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (notification-with-subscribers (:copier common-lisp:nil))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification common-lisp:null))
   (subscribers
    (common-lisp:error
     #A((24) common-lisp:base-char . ":subscribers is required"))
    :type (common-lisp:or subscribers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-with-subscribers
                    'make-notification-with-subscribers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notification-with-subscribers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "Subscribers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscribers))))))
(common-lisp:progn
 (common-lisp:deftype notification-with-subscribers-list ()
   '(trivial-types:proper-list notification-with-subscribers))
 (common-lisp:defun |make-notification-with-subscribers-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            notification-with-subscribers))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype notifications ()
   '(trivial-types:proper-list notification))
 (common-lisp:defun |make-notifications|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list notification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype numeric-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (spend (:copier common-lisp:nil))
   (amount
    (common-lisp:error #A((19) common-lisp:base-char . ":amount is required"))
    :type (common-lisp:or numeric-value common-lisp:null))
   (unit
    (common-lisp:error #A((17) common-lisp:base-char . ":unit is required"))
    :type (common-lisp:or unit-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spend 'make-spend))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape spend))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Amount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'amount)))
    (aws-sdk/generator/shape::to-query-params "Unit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unit))))))
(common-lisp:progn
 (common-lisp:defstruct (subscriber (:copier common-lisp:nil))
   (subscription-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":subscription-type is required"))
    :type (common-lisp:or subscription-type common-lisp:null))
   (address
    (common-lisp:error #A((20) common-lisp:base-char . ":address is required"))
    :type (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subscriber 'make-subscriber))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape subscriber))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubscriptionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscription-type)))
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address))))))
(common-lisp:progn
 (common-lisp:deftype subscribers () '(trivial-types:proper-list subscriber))
 (common-lisp:defun |make-subscribers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscriber))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subscription-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (time-period (:copier common-lisp:nil))
   (start
    (common-lisp:error #A((18) common-lisp:base-char . ":start is required"))
    :type (common-lisp:or generic-timestamp common-lisp:null))
   (end (common-lisp:error #A((16) common-lisp:base-char . ":end is required"))
    :type (common-lisp:or generic-timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'time-period 'make-time-period))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape time-period))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Start"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start)))
    (aws-sdk/generator/shape::to-query-params "End"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end))))))
(common-lisp:deftype time-unit () 'common-lisp:string)
(common-lisp:deftype unit-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (update-budget-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (new-budget
    (common-lisp:error
     #A((23) common-lisp:base-char . ":new-budget is required"))
    :type (common-lisp:or budget common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-budget-request 'make-update-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-budget-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "NewBudget"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-budget))))))
(common-lisp:progn
 (common-lisp:defstruct (update-budget-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-budget-response 'make-update-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-budget-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-notification-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (old-notification
    (common-lisp:error
     #A((29) common-lisp:base-char . ":old-notification is required"))
    :type (common-lisp:or notification common-lisp:null))
   (new-notification
    (common-lisp:error
     #A((29) common-lisp:base-char . ":new-notification is required"))
    :type (common-lisp:or notification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-notification-request
                    'make-update-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-notification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "OldNotification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'old-notification)))
    (aws-sdk/generator/shape::to-query-params "NewNotification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-notification))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-notification-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-notification-response
                    'make-update-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-notification-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-subscriber-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (budget-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":budget-name is required"))
    :type (common-lisp:or budget-name common-lisp:null))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification common-lisp:null))
   (old-subscriber
    (common-lisp:error
     #A((27) common-lisp:base-char . ":old-subscriber is required"))
    :type (common-lisp:or subscriber common-lisp:null))
   (new-subscriber
    (common-lisp:error
     #A((27) common-lisp:base-char . ":new-subscriber is required"))
    :type (common-lisp:or subscriber common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-subscriber-request
                    'make-update-subscriber-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-subscriber-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "BudgetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'budget-name)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "OldSubscriber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'old-subscriber)))
    (aws-sdk/generator/shape::to-query-params "NewSubscriber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-subscriber))))))
(common-lisp:progn
 (common-lisp:defstruct (update-subscriber-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-subscriber-response
                    'make-update-subscriber-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-subscriber-response))
   (common-lisp:append)))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget
                     notifications-with-subscribers)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget notifications-with-subscribers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateBudget")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateBudgetResponse" common-lisp:nil)))
 (common-lisp:export 'create-budget))
(common-lisp:progn
 (common-lisp:defun create-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     subscribers)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification subscribers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-notification-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateNotification")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateNotificationResponse" common-lisp:nil)))
 (common-lisp:export 'create-notification))
(common-lisp:progn
 (common-lisp:defun create-subscriber
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     subscriber)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification subscriber))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-subscriber-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSubscriber")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSubscriberResponse" common-lisp:nil)))
 (common-lisp:export 'create-subscriber))
(common-lisp:progn
 (common-lisp:defun delete-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name)
   (common-lisp:declare (common-lisp:ignorable account-id budget-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBudget")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteBudgetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-budget))
(common-lisp:progn
 (common-lisp:defun delete-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-notification-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteNotification")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteNotificationResponse" common-lisp:nil)))
 (common-lisp:export 'delete-notification))
(common-lisp:progn
 (common-lisp:defun delete-subscriber
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     subscriber)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification subscriber))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-subscriber-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSubscriber")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSubscriberResponse" common-lisp:nil)))
 (common-lisp:export 'delete-subscriber))
(common-lisp:progn
 (common-lisp:defun describe-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name)
   (common-lisp:declare (common-lisp:ignorable account-id budget-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeBudget")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeBudgetResponse" common-lisp:nil)))
 (common-lisp:export 'describe-budget))
(common-lisp:progn
 (common-lisp:defun describe-budgets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-budgets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeBudgets")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeBudgetsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-budgets))
(common-lisp:progn
 (common-lisp:defun describe-notifications-for-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-notifications-for-budget-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeNotificationsForBudget")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeNotificationsForBudgetResponse" common-lisp:nil)))
 (common-lisp:export 'describe-notifications-for-budget))
(common-lisp:progn
 (common-lisp:defun describe-subscribers-for-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-subscribers-for-notification-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeSubscribersForNotification")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSubscribersForNotificationResponse" common-lisp:nil)))
 (common-lisp:export 'describe-subscribers-for-notification))
(common-lisp:progn
 (common-lisp:defun update-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id new-budget)
   (common-lisp:declare (common-lisp:ignorable account-id new-budget))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateBudget")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateBudgetResponse" common-lisp:nil)))
 (common-lisp:export 'update-budget))
(common-lisp:progn
 (common-lisp:defun update-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name old-notification
                     new-notification)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name old-notification
     new-notification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-notification-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateNotification")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateNotificationResponse" common-lisp:nil)))
 (common-lisp:export 'update-notification))
(common-lisp:progn
 (common-lisp:defun update-subscriber
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     old-subscriber new-subscriber)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification old-subscriber
     new-subscriber))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-subscriber-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "budgets")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateSubscriber")
                                  ("Version" ,@"2016-10-20"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateSubscriberResponse" common-lisp:nil)))
 (common-lisp:export 'update-subscriber))