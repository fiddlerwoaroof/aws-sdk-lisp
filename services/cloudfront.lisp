;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cloudfront
  (:use)
  (:nicknames #:aws/cloudfront)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/cloudfront)

(common-lisp:progn
 (common-lisp:defstruct (access-denied (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'access-denied 'make-access-denied))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape access-denied))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (active-trusted-signers (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type (common-lisp:or signer-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'active-trusted-signers 'make-active-trusted-signers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          active-trusted-signers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:deftype alias-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-alias-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (aliases (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type (common-lisp:or alias-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'aliases 'make-aliases))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape aliases))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (allowed-methods (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items
    (common-lisp:error #A((18) common-lisp:base-char . ":items is required"))
    :type (common-lisp:or methods-list common-lisp:null))
   (cached-methods common-lisp:nil :type
    (common-lisp:or cached-methods common-lisp:null)))
 (common-lisp:export (common-lisp:list 'allowed-methods 'make-allowed-methods))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape allowed-methods))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items)))
    (aws-sdk/generator/shape::to-query-params "CachedMethods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cached-methods))))))
(common-lisp:progn
 (common-lisp:deftype aws-account-number-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-aws-account-number-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (batch-too-large (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'batch-too-large 'make-batch-too-large))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-too-large))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (cnamealready-exists (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cnamealready-exists 'make-cnamealready-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cnamealready-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (cache-behavior (:copier common-lisp:nil))
   (path-pattern
    (common-lisp:error
     #A((25) common-lisp:base-char . ":path-pattern is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (target-origin-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-origin-id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (forwarded-values
    (common-lisp:error
     #A((29) common-lisp:base-char . ":forwarded-values is required"))
    :type (common-lisp:or forwarded-values common-lisp:null))
   (trusted-signers
    (common-lisp:error
     #A((28) common-lisp:base-char . ":trusted-signers is required"))
    :type (common-lisp:or trusted-signers common-lisp:null))
   (viewer-protocol-policy
    (common-lisp:error
     #A((35) common-lisp:base-char . ":viewer-protocol-policy is required"))
    :type (common-lisp:or viewer-protocol-policy common-lisp:null))
   (min-ttl
    (common-lisp:error #A((20) common-lisp:base-char . ":min-ttl is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (allowed-methods common-lisp:nil :type
    (common-lisp:or allowed-methods common-lisp:null))
   (smooth-streaming common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (default-ttl common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (max-ttl common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (compress common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (lambda-function-associations common-lisp:nil :type
    (common-lisp:or lambda-function-associations common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cache-behavior 'make-cache-behavior))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cache-behavior))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PathPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-pattern)))
    (aws-sdk/generator/shape::to-query-params "TargetOriginId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-origin-id)))
    (aws-sdk/generator/shape::to-query-params "ForwardedValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarded-values)))
    (aws-sdk/generator/shape::to-query-params "TrustedSigners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trusted-signers)))
    (aws-sdk/generator/shape::to-query-params "ViewerProtocolPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'viewer-protocol-policy)))
    (aws-sdk/generator/shape::to-query-params "MinTTL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-ttl)))
    (aws-sdk/generator/shape::to-query-params "AllowedMethods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-methods)))
    (aws-sdk/generator/shape::to-query-params "SmoothStreaming"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smooth-streaming)))
    (aws-sdk/generator/shape::to-query-params "DefaultTTL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-ttl)))
    (aws-sdk/generator/shape::to-query-params "MaxTTL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-ttl)))
    (aws-sdk/generator/shape::to-query-params "Compress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compress)))
    (aws-sdk/generator/shape::to-query-params "LambdaFunctionAssociations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-function-associations))))))
(common-lisp:progn
 (common-lisp:deftype cache-behavior-list ()
   '(trivial-types:proper-list cache-behavior))
 (common-lisp:defun |make-cache-behavior-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cache-behavior))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cache-behaviors (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or cache-behavior-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cache-behaviors 'make-cache-behaviors))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cache-behaviors))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (cached-methods (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items
    (common-lisp:error #A((18) common-lisp:base-char . ":items is required"))
    :type (common-lisp:or methods-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cached-methods 'make-cached-methods))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cached-methods))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:deftype certificate-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-front-origin-access-identity (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (s3canonical-user-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":s3canonical-user-id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (cloud-front-origin-access-identity-config common-lisp:nil :type
    (common-lisp:or cloud-front-origin-access-identity-config
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-front-origin-access-identity
                    'make-cloud-front-origin-access-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-front-origin-access-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "S3CanonicalUserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3canonical-user-id)))
    (aws-sdk/generator/shape::to-query-params
     "CloudFrontOriginAccessIdentityConfig"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cloud-front-origin-access-identity-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-front-origin-access-identity-already-exists
      (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-front-origin-access-identity-already-exists
                    'make-cloud-front-origin-access-identity-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-front-origin-access-identity-already-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-front-origin-access-identity-config (:copier common-lisp:nil))
   (caller-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":caller-reference is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (comment
    (common-lisp:error #A((20) common-lisp:base-char . ":comment is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-front-origin-access-identity-config
                    'make-cloud-front-origin-access-identity-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-front-origin-access-identity-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CallerReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caller-reference)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-front-origin-access-identity-in-use (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-front-origin-access-identity-in-use
                    'make-cloud-front-origin-access-identity-in-use))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-front-origin-access-identity-in-use))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-front-origin-access-identity-list (:copier common-lisp:nil))
   (marker
    (common-lisp:error #A((19) common-lisp:base-char . ":marker is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items
    (common-lisp:error
     #A((22) common-lisp:base-char . ":max-items is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (is-truncated
    (common-lisp:error
     #A((25) common-lisp:base-char . ":is-truncated is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or cloud-front-origin-access-identity-summary-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-front-origin-access-identity-list
                    'make-cloud-front-origin-access-identity-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-front-origin-access-identity-list))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items)))
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-front-origin-access-identity-summary (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (s3canonical-user-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":s3canonical-user-id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (comment
    (common-lisp:error #A((20) common-lisp:base-char . ":comment is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-front-origin-access-identity-summary
                    'make-cloud-front-origin-access-identity-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-front-origin-access-identity-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "S3CanonicalUserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3canonical-user-id)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment))))))
(common-lisp:progn
 (common-lisp:deftype cloud-front-origin-access-identity-summary-list ()
   '(trivial-types:proper-list cloud-front-origin-access-identity-summary))
 (common-lisp:defun |make-cloud-front-origin-access-identity-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-front-origin-access-identity-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cookie-name-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-cookie-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cookie-names (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or cookie-name-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cookie-names 'make-cookie-names))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cookie-names))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (cookie-preference (:copier common-lisp:nil))
   (forward
    (common-lisp:error #A((20) common-lisp:base-char . ":forward is required"))
    :type (common-lisp:or item-selection common-lisp:null))
   (whitelisted-names common-lisp:nil :type
    (common-lisp:or cookie-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cookie-preference 'make-cookie-preference))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cookie-preference))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Forward"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forward)))
    (aws-sdk/generator/shape::to-query-params "WhitelistedNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'whitelisted-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cloud-front-origin-access-identity-request
      (:copier common-lisp:nil))
   (cloud-front-origin-access-identity-config
    (common-lisp:error
     #A((54) common-lisp:base-char
        . ":cloud-front-origin-access-identity-config is required"))
    :type
    (common-lisp:or cloud-front-origin-access-identity-config
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cloud-front-origin-access-identity-request
                    'make-create-cloud-front-origin-access-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-cloud-front-origin-access-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "CloudFrontOriginAccessIdentityConfig"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cloud-front-origin-access-identity-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cloud-front-origin-access-identity-result
      (:copier common-lisp:nil))
   (cloud-front-origin-access-identity common-lisp:nil :type
    (common-lisp:or cloud-front-origin-access-identity common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cloud-front-origin-access-identity-result
                    'make-create-cloud-front-origin-access-identity-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-cloud-front-origin-access-identity-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CloudFrontOriginAccessIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-front-origin-access-identity)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct (create-distribution-request (:copier common-lisp:nil))
   (distribution-config
    (common-lisp:error
     #A((32) common-lisp:base-char . ":distribution-config is required"))
    :type (common-lisp:or distribution-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-distribution-request
                    'make-create-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-config))))))
(common-lisp:progn
 (common-lisp:defstruct (create-distribution-result (:copier common-lisp:nil))
   (distribution common-lisp:nil :type
    (common-lisp:or distribution common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-distribution-result
                    'make-create-distribution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-distribution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Distribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-distribution-with-tags-request (:copier common-lisp:nil))
   (distribution-config-with-tags
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":distribution-config-with-tags is required"))
    :type (common-lisp:or distribution-config-with-tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-distribution-with-tags-request
                    'make-create-distribution-with-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-distribution-with-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionConfigWithTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-config-with-tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-distribution-with-tags-result (:copier common-lisp:nil))
   (distribution common-lisp:nil :type
    (common-lisp:or distribution common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-distribution-with-tags-result
                    'make-create-distribution-with-tags-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-distribution-with-tags-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Distribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct (create-invalidation-request (:copier common-lisp:nil))
   (distribution-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":distribution-id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (invalidation-batch
    (common-lisp:error
     #A((31) common-lisp:base-char . ":invalidation-batch is required"))
    :type (common-lisp:or invalidation-batch common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-invalidation-request
                    'make-create-invalidation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-invalidation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-id)))
    (aws-sdk/generator/shape::to-query-params "InvalidationBatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalidation-batch))))))
(common-lisp:progn
 (common-lisp:defstruct (create-invalidation-result (:copier common-lisp:nil))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (invalidation common-lisp:nil :type
    (common-lisp:or invalidation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-invalidation-result
                    'make-create-invalidation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-invalidation-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "Invalidation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalidation))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-streaming-distribution-request (:copier common-lisp:nil))
   (streaming-distribution-config
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":streaming-distribution-config is required"))
    :type (common-lisp:or streaming-distribution-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-streaming-distribution-request
                    'make-create-streaming-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-streaming-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-streaming-distribution-result (:copier common-lisp:nil))
   (streaming-distribution common-lisp:nil :type
    (common-lisp:or streaming-distribution common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-streaming-distribution-result
                    'make-create-streaming-distribution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-streaming-distribution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-streaming-distribution-with-tags-request
      (:copier common-lisp:nil))
   (streaming-distribution-config-with-tags
    (common-lisp:error
     #A((52) common-lisp:base-char
        . ":streaming-distribution-config-with-tags is required"))
    :type
    (common-lisp:or streaming-distribution-config-with-tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-streaming-distribution-with-tags-request
                    'make-create-streaming-distribution-with-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-streaming-distribution-with-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "StreamingDistributionConfigWithTags"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'streaming-distribution-config-with-tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-streaming-distribution-with-tags-result (:copier common-lisp:nil))
   (streaming-distribution common-lisp:nil :type
    (common-lisp:or streaming-distribution common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-streaming-distribution-with-tags-result
                    'make-create-streaming-distribution-with-tags-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-streaming-distribution-with-tags-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct (custom-error-response (:copier common-lisp:nil))
   (error-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":error-code is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (response-page-path common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (response-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (error-caching-min-ttl common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-error-response 'make-custom-error-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          custom-error-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ResponsePagePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-page-path)))
    (aws-sdk/generator/shape::to-query-params "ResponseCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorCachingMinTTL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-caching-min-ttl))))))
(common-lisp:progn
 (common-lisp:deftype custom-error-response-list ()
   '(trivial-types:proper-list custom-error-response))
 (common-lisp:defun |make-custom-error-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-error-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (custom-error-responses (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or custom-error-response-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-error-responses 'make-custom-error-responses))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          custom-error-responses))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (custom-headers (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or origin-custom-headers-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'custom-headers 'make-custom-headers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape custom-headers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (custom-origin-config (:copier common-lisp:nil))
   (httpport
    (common-lisp:error
     #A((21) common-lisp:base-char . ":httpport is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (httpsport
    (common-lisp:error
     #A((22) common-lisp:base-char . ":httpsport is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (origin-protocol-policy
    (common-lisp:error
     #A((35) common-lisp:base-char . ":origin-protocol-policy is required"))
    :type (common-lisp:or origin-protocol-policy common-lisp:null))
   (origin-ssl-protocols common-lisp:nil :type
    (common-lisp:or origin-ssl-protocols common-lisp:null))
   (origin-read-timeout common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (origin-keepalive-timeout common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-origin-config 'make-custom-origin-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape custom-origin-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HTTPPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'httpport)))
    (aws-sdk/generator/shape::to-query-params "HTTPSPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'httpsport)))
    (aws-sdk/generator/shape::to-query-params "OriginProtocolPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin-protocol-policy)))
    (aws-sdk/generator/shape::to-query-params "OriginSslProtocols"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin-ssl-protocols)))
    (aws-sdk/generator/shape::to-query-params "OriginReadTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin-read-timeout)))
    (aws-sdk/generator/shape::to-query-params "OriginKeepaliveTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin-keepalive-timeout))))))
(common-lisp:progn
 (common-lisp:defstruct (default-cache-behavior (:copier common-lisp:nil))
   (target-origin-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-origin-id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (forwarded-values
    (common-lisp:error
     #A((29) common-lisp:base-char . ":forwarded-values is required"))
    :type (common-lisp:or forwarded-values common-lisp:null))
   (trusted-signers
    (common-lisp:error
     #A((28) common-lisp:base-char . ":trusted-signers is required"))
    :type (common-lisp:or trusted-signers common-lisp:null))
   (viewer-protocol-policy
    (common-lisp:error
     #A((35) common-lisp:base-char . ":viewer-protocol-policy is required"))
    :type (common-lisp:or viewer-protocol-policy common-lisp:null))
   (min-ttl
    (common-lisp:error #A((20) common-lisp:base-char . ":min-ttl is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (allowed-methods common-lisp:nil :type
    (common-lisp:or allowed-methods common-lisp:null))
   (smooth-streaming common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (default-ttl common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (max-ttl common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (compress common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (lambda-function-associations common-lisp:nil :type
    (common-lisp:or lambda-function-associations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'default-cache-behavior 'make-default-cache-behavior))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          default-cache-behavior))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetOriginId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-origin-id)))
    (aws-sdk/generator/shape::to-query-params "ForwardedValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarded-values)))
    (aws-sdk/generator/shape::to-query-params "TrustedSigners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trusted-signers)))
    (aws-sdk/generator/shape::to-query-params "ViewerProtocolPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'viewer-protocol-policy)))
    (aws-sdk/generator/shape::to-query-params "MinTTL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-ttl)))
    (aws-sdk/generator/shape::to-query-params "AllowedMethods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-methods)))
    (aws-sdk/generator/shape::to-query-params "SmoothStreaming"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smooth-streaming)))
    (aws-sdk/generator/shape::to-query-params "DefaultTTL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-ttl)))
    (aws-sdk/generator/shape::to-query-params "MaxTTL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-ttl)))
    (aws-sdk/generator/shape::to-query-params "Compress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compress)))
    (aws-sdk/generator/shape::to-query-params "LambdaFunctionAssociations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-function-associations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cloud-front-origin-access-identity-request
      (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (if-match common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cloud-front-origin-access-identity-request
                    'make-delete-cloud-front-origin-access-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-cloud-front-origin-access-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-distribution-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (if-match common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-distribution-request
                    'make-delete-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-streaming-distribution-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (if-match common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-streaming-distribution-request
                    'make-delete-streaming-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-streaming-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match))))))
(common-lisp:progn
 (common-lisp:defstruct (distribution (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (last-modified-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":last-modified-time is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (in-progress-invalidation-batches
    (common-lisp:error
     #A((45) common-lisp:base-char
        . ":in-progress-invalidation-batches is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (active-trusted-signers
    (common-lisp:error
     #A((35) common-lisp:base-char . ":active-trusted-signers is required"))
    :type (common-lisp:or active-trusted-signers common-lisp:null))
   (distribution-config
    (common-lisp:error
     #A((32) common-lisp:base-char . ":distribution-config is required"))
    :type (common-lisp:or distribution-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'distribution 'make-distribution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape distribution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-time)))
    (aws-sdk/generator/shape::to-query-params "InProgressInvalidationBatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'in-progress-invalidation-batches)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ActiveTrustedSigners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-trusted-signers)))
    (aws-sdk/generator/shape::to-query-params "DistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-config))))))
(common-lisp:progn
 (common-lisp:defstruct (distribution-already-exists (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'distribution-already-exists
                    'make-distribution-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          distribution-already-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (distribution-config (:copier common-lisp:nil))
   (caller-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":caller-reference is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (aliases common-lisp:nil :type (common-lisp:or aliases common-lisp:null))
   (default-root-object common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (origins
    (common-lisp:error #A((20) common-lisp:base-char . ":origins is required"))
    :type (common-lisp:or origins common-lisp:null))
   (default-cache-behavior
    (common-lisp:error
     #A((35) common-lisp:base-char . ":default-cache-behavior is required"))
    :type (common-lisp:or default-cache-behavior common-lisp:null))
   (cache-behaviors common-lisp:nil :type
    (common-lisp:or cache-behaviors common-lisp:null))
   (custom-error-responses common-lisp:nil :type
    (common-lisp:or custom-error-responses common-lisp:null))
   (comment
    (common-lisp:error #A((20) common-lisp:base-char . ":comment is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (logging common-lisp:nil :type
    (common-lisp:or logging-config common-lisp:null))
   (price-class common-lisp:nil :type
    (common-lisp:or price-class common-lisp:null))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (viewer-certificate common-lisp:nil :type
    (common-lisp:or viewer-certificate common-lisp:null))
   (restrictions common-lisp:nil :type
    (common-lisp:or restrictions common-lisp:null))
   (web-aclid common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (http-version common-lisp:nil :type
    (common-lisp:or http-version common-lisp:null))
   (is-ipv6enabled common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'distribution-config 'make-distribution-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape distribution-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CallerReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caller-reference)))
    (aws-sdk/generator/shape::to-query-params "Aliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aliases)))
    (aws-sdk/generator/shape::to-query-params "DefaultRootObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-root-object)))
    (aws-sdk/generator/shape::to-query-params "Origins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origins)))
    (aws-sdk/generator/shape::to-query-params "DefaultCacheBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-cache-behavior)))
    (aws-sdk/generator/shape::to-query-params "CacheBehaviors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-behaviors)))
    (aws-sdk/generator/shape::to-query-params "CustomErrorResponses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-error-responses)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "Logging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging)))
    (aws-sdk/generator/shape::to-query-params "PriceClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'price-class)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "ViewerCertificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'viewer-certificate)))
    (aws-sdk/generator/shape::to-query-params "Restrictions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'restrictions)))
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid)))
    (aws-sdk/generator/shape::to-query-params "HttpVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-version)))
    (aws-sdk/generator/shape::to-query-params "IsIPV6Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-ipv6enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (distribution-config-with-tags (:copier common-lisp:nil))
   (distribution-config
    (common-lisp:error
     #A((32) common-lisp:base-char . ":distribution-config is required"))
    :type (common-lisp:or distribution-config common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'distribution-config-with-tags
                    'make-distribution-config-with-tags))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          distribution-config-with-tags))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-config)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (distribution-list (:copier common-lisp:nil))
   (marker
    (common-lisp:error #A((19) common-lisp:base-char . ":marker is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items
    (common-lisp:error
     #A((22) common-lisp:base-char . ":max-items is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (is-truncated
    (common-lisp:error
     #A((25) common-lisp:base-char . ":is-truncated is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or distribution-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'distribution-list 'make-distribution-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape distribution-list))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items)))
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (distribution-not-disabled (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'distribution-not-disabled
                    'make-distribution-not-disabled))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          distribution-not-disabled))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (distribution-summary (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (last-modified-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":last-modified-time is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (aliases
    (common-lisp:error #A((20) common-lisp:base-char . ":aliases is required"))
    :type (common-lisp:or aliases common-lisp:null))
   (origins
    (common-lisp:error #A((20) common-lisp:base-char . ":origins is required"))
    :type (common-lisp:or origins common-lisp:null))
   (default-cache-behavior
    (common-lisp:error
     #A((35) common-lisp:base-char . ":default-cache-behavior is required"))
    :type (common-lisp:or default-cache-behavior common-lisp:null))
   (cache-behaviors
    (common-lisp:error
     #A((28) common-lisp:base-char . ":cache-behaviors is required"))
    :type (common-lisp:or cache-behaviors common-lisp:null))
   (custom-error-responses
    (common-lisp:error
     #A((35) common-lisp:base-char . ":custom-error-responses is required"))
    :type (common-lisp:or custom-error-responses common-lisp:null))
   (comment
    (common-lisp:error #A((20) common-lisp:base-char . ":comment is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (price-class
    (common-lisp:error
     #A((24) common-lisp:base-char . ":price-class is required"))
    :type (common-lisp:or price-class common-lisp:null))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (viewer-certificate
    (common-lisp:error
     #A((31) common-lisp:base-char . ":viewer-certificate is required"))
    :type (common-lisp:or viewer-certificate common-lisp:null))
   (restrictions
    (common-lisp:error
     #A((25) common-lisp:base-char . ":restrictions is required"))
    :type (common-lisp:or restrictions common-lisp:null))
   (web-aclid
    (common-lisp:error
     #A((22) common-lisp:base-char . ":web-aclid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (http-version
    (common-lisp:error
     #A((25) common-lisp:base-char . ":http-version is required"))
    :type (common-lisp:or http-version common-lisp:null))
   (is-ipv6enabled
    (common-lisp:error
     #A((27) common-lisp:base-char . ":is-ipv6enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'distribution-summary 'make-distribution-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape distribution-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-time)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "Aliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aliases)))
    (aws-sdk/generator/shape::to-query-params "Origins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origins)))
    (aws-sdk/generator/shape::to-query-params "DefaultCacheBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-cache-behavior)))
    (aws-sdk/generator/shape::to-query-params "CacheBehaviors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-behaviors)))
    (aws-sdk/generator/shape::to-query-params "CustomErrorResponses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-error-responses)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "PriceClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'price-class)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "ViewerCertificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'viewer-certificate)))
    (aws-sdk/generator/shape::to-query-params "Restrictions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'restrictions)))
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid)))
    (aws-sdk/generator/shape::to-query-params "HttpVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-version)))
    (aws-sdk/generator/shape::to-query-params "IsIPV6Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-ipv6enabled))))))
(common-lisp:progn
 (common-lisp:deftype distribution-summary-list ()
   '(trivial-types:proper-list distribution-summary))
 (common-lisp:defun |make-distribution-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list distribution-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (forwarded-values (:copier common-lisp:nil))
   (query-string
    (common-lisp:error
     #A((25) common-lisp:base-char . ":query-string is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (cookies
    (common-lisp:error #A((20) common-lisp:base-char . ":cookies is required"))
    :type (common-lisp:or cookie-preference common-lisp:null))
   (headers common-lisp:nil :type (common-lisp:or headers common-lisp:null))
   (query-string-cache-keys common-lisp:nil :type
    (common-lisp:or query-string-cache-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forwarded-values 'make-forwarded-values))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape forwarded-values))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-string)))
    (aws-sdk/generator/shape::to-query-params "Cookies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cookies)))
    (aws-sdk/generator/shape::to-query-params "Headers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'headers)))
    (aws-sdk/generator/shape::to-query-params "QueryStringCacheKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-string-cache-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (geo-restriction (:copier common-lisp:nil))
   (restriction-type
    (common-lisp:error
     #A((29) common-lisp:base-char . ":restriction-type is required"))
    :type (common-lisp:or geo-restriction-type common-lisp:null))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or location-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'geo-restriction 'make-geo-restriction))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape geo-restriction))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RestrictionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'restriction-type)))
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:deftype geo-restriction-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-cloud-front-origin-access-identity-config-request
      (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cloud-front-origin-access-identity-config-request
                    'make-get-cloud-front-origin-access-identity-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-cloud-front-origin-access-identity-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-cloud-front-origin-access-identity-config-result
      (:copier common-lisp:nil))
   (cloud-front-origin-access-identity-config common-lisp:nil :type
    (common-lisp:or cloud-front-origin-access-identity-config
                    common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cloud-front-origin-access-identity-config-result
                    'make-get-cloud-front-origin-access-identity-config-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-cloud-front-origin-access-identity-config-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "CloudFrontOriginAccessIdentityConfig"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cloud-front-origin-access-identity-config)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-cloud-front-origin-access-identity-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cloud-front-origin-access-identity-request
                    'make-get-cloud-front-origin-access-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-cloud-front-origin-access-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-cloud-front-origin-access-identity-result (:copier common-lisp:nil))
   (cloud-front-origin-access-identity common-lisp:nil :type
    (common-lisp:or cloud-front-origin-access-identity common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cloud-front-origin-access-identity-result
                    'make-get-cloud-front-origin-access-identity-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-cloud-front-origin-access-identity-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CloudFrontOriginAccessIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-front-origin-access-identity)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-distribution-config-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-distribution-config-request
                    'make-get-distribution-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-distribution-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-distribution-config-result (:copier common-lisp:nil))
   (distribution-config common-lisp:nil :type
    (common-lisp:or distribution-config common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-distribution-config-result
                    'make-get-distribution-config-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-distribution-config-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-config)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct (get-distribution-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-distribution-request 'make-get-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-distribution-result (:copier common-lisp:nil))
   (distribution common-lisp:nil :type
    (common-lisp:or distribution common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-distribution-result 'make-get-distribution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-distribution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Distribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct (get-invalidation-request (:copier common-lisp:nil))
   (distribution-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":distribution-id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-invalidation-request 'make-get-invalidation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-invalidation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-id)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-invalidation-result (:copier common-lisp:nil))
   (invalidation common-lisp:nil :type
    (common-lisp:or invalidation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-invalidation-result 'make-get-invalidation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-invalidation-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Invalidation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalidation))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-streaming-distribution-config-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-streaming-distribution-config-request
                    'make-get-streaming-distribution-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-streaming-distribution-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-streaming-distribution-config-result (:copier common-lisp:nil))
   (streaming-distribution-config common-lisp:nil :type
    (common-lisp:or streaming-distribution-config common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-streaming-distribution-config-result
                    'make-get-streaming-distribution-config-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-streaming-distribution-config-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution-config)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-streaming-distribution-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-streaming-distribution-request
                    'make-get-streaming-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-streaming-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-streaming-distribution-result (:copier common-lisp:nil))
   (streaming-distribution common-lisp:nil :type
    (common-lisp:or streaming-distribution common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-streaming-distribution-result
                    'make-get-streaming-distribution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-streaming-distribution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:deftype header-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-header-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (headers (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type (common-lisp:or header-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'headers 'make-headers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape headers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:deftype http-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (illegal-update (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'illegal-update 'make-illegal-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape illegal-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (inconsistent-quantities (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inconsistent-quantities 'make-inconsistent-quantities))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inconsistent-quantities))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-argument (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-argument 'make-invalid-argument))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-argument))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-default-root-object (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-default-root-object
                    'make-invalid-default-root-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-default-root-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-error-code (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-error-code 'make-invalid-error-code))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-error-code))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-forward-cookies (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-forward-cookies 'make-invalid-forward-cookies))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-forward-cookies))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-geo-restriction-parameter (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-geo-restriction-parameter
                    'make-invalid-geo-restriction-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-geo-restriction-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-headers-for-s3origin (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-headers-for-s3origin
                    'make-invalid-headers-for-s3origin))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-headers-for-s3origin))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-if-match-version (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-if-match-version 'make-invalid-if-match-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-if-match-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-lambda-function-association (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-lambda-function-association
                    'make-invalid-lambda-function-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-lambda-function-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-location-code (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-location-code 'make-invalid-location-code))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-location-code))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-minimum-protocol-version (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-minimum-protocol-version
                    'make-invalid-minimum-protocol-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-minimum-protocol-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-origin (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-origin 'make-invalid-origin))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-origin))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-origin-access-identity (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-origin-access-identity
                    'make-invalid-origin-access-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-origin-access-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-origin-keepalive-timeout (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-origin-keepalive-timeout
                    'make-invalid-origin-keepalive-timeout))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-origin-keepalive-timeout))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-origin-read-timeout (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-origin-read-timeout
                    'make-invalid-origin-read-timeout))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-origin-read-timeout))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-protocol-settings (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-protocol-settings
                    'make-invalid-protocol-settings))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-protocol-settings))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-query-string-parameters (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-query-string-parameters
                    'make-invalid-query-string-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-query-string-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-relative-path (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-relative-path 'make-invalid-relative-path))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-relative-path))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-required-protocol (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-required-protocol
                    'make-invalid-required-protocol))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-required-protocol))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-response-code (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-response-code 'make-invalid-response-code))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-response-code))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-ttlorder (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-ttlorder 'make-invalid-ttlorder))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-ttlorder))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-tagging (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-tagging 'make-invalid-tagging))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-tagging))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-viewer-certificate (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-viewer-certificate
                    'make-invalid-viewer-certificate))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-viewer-certificate))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-web-aclid (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-web-aclid 'make-invalid-web-aclid))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-web-aclid))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalidation (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (create-time
    (common-lisp:error
     #A((24) common-lisp:base-char . ":create-time is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (invalidation-batch
    (common-lisp:error
     #A((31) common-lisp:base-char . ":invalidation-batch is required"))
    :type (common-lisp:or invalidation-batch common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalidation 'make-invalidation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalidation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "CreateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-time)))
    (aws-sdk/generator/shape::to-query-params "InvalidationBatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalidation-batch))))))
(common-lisp:progn
 (common-lisp:defstruct (invalidation-batch (:copier common-lisp:nil))
   (paths
    (common-lisp:error #A((18) common-lisp:base-char . ":paths is required"))
    :type (common-lisp:or paths common-lisp:null))
   (caller-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":caller-reference is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalidation-batch 'make-invalidation-batch))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalidation-batch))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Paths"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'paths)))
    (aws-sdk/generator/shape::to-query-params "CallerReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caller-reference))))))
(common-lisp:progn
 (common-lisp:defstruct (invalidation-list (:copier common-lisp:nil))
   (marker
    (common-lisp:error #A((19) common-lisp:base-char . ":marker is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items
    (common-lisp:error
     #A((22) common-lisp:base-char . ":max-items is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (is-truncated
    (common-lisp:error
     #A((25) common-lisp:base-char . ":is-truncated is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or invalidation-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalidation-list 'make-invalidation-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalidation-list))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items)))
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (invalidation-summary (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (create-time
    (common-lisp:error
     #A((24) common-lisp:base-char . ":create-time is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalidation-summary 'make-invalidation-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalidation-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "CreateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-time)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype invalidation-summary-list ()
   '(trivial-types:proper-list invalidation-summary))
 (common-lisp:defun |make-invalidation-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list invalidation-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype item-selection () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype key-pair-id-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-key-pair-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (key-pair-ids (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or key-pair-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-pair-ids 'make-key-pair-ids))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-pair-ids))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (lambda-function-association (:copier common-lisp:nil))
   (lambda-function-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (event-type common-lisp:nil :type
    (common-lisp:or event-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-association
                    'make-lambda-function-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LambdaFunctionARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-function-arn)))
    (aws-sdk/generator/shape::to-query-params "EventType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-type))))))
(common-lisp:progn
 (common-lisp:deftype lambda-function-association-list ()
   '(trivial-types:proper-list lambda-function-association))
 (common-lisp:defun |make-lambda-function-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-associations (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or lambda-function-association-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-associations
                    'make-lambda-function-associations))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-associations))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-cloud-front-origin-access-identities-request
      (:copier common-lisp:nil))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cloud-front-origin-access-identities-request
                    'make-list-cloud-front-origin-access-identities-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-cloud-front-origin-access-identities-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-cloud-front-origin-access-identities-result
      (:copier common-lisp:nil))
   (cloud-front-origin-access-identity-list common-lisp:nil :type
    (common-lisp:or cloud-front-origin-access-identity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cloud-front-origin-access-identities-result
                    'make-list-cloud-front-origin-access-identities-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-cloud-front-origin-access-identities-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "CloudFrontOriginAccessIdentityList"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cloud-front-origin-access-identity-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-distributions-by-web-aclid-request (:copier common-lisp:nil))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (web-aclid
    (common-lisp:error
     #A((22) common-lisp:base-char . ":web-aclid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-distributions-by-web-aclid-request
                    'make-list-distributions-by-web-aclid-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-distributions-by-web-aclid-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items)))
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-distributions-by-web-aclid-result (:copier common-lisp:nil))
   (distribution-list common-lisp:nil :type
    (common-lisp:or distribution-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-distributions-by-web-aclid-result
                    'make-list-distributions-by-web-aclid-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-distributions-by-web-aclid-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-list))))))
(common-lisp:progn
 (common-lisp:defstruct (list-distributions-request (:copier common-lisp:nil))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-distributions-request
                    'make-list-distributions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-distributions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct (list-distributions-result (:copier common-lisp:nil))
   (distribution-list common-lisp:nil :type
    (common-lisp:or distribution-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-distributions-result
                    'make-list-distributions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-distributions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-list))))))
(common-lisp:progn
 (common-lisp:defstruct (list-invalidations-request (:copier common-lisp:nil))
   (distribution-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":distribution-id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-invalidations-request
                    'make-list-invalidations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-invalidations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-id)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct (list-invalidations-result (:copier common-lisp:nil))
   (invalidation-list common-lisp:nil :type
    (common-lisp:or invalidation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-invalidations-result
                    'make-list-invalidations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-invalidations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InvalidationList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalidation-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-streaming-distributions-request (:copier common-lisp:nil))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-streaming-distributions-request
                    'make-list-streaming-distributions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-streaming-distributions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-streaming-distributions-result (:copier common-lisp:nil))
   (streaming-distribution-list common-lisp:nil :type
    (common-lisp:or streaming-distribution-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-streaming-distributions-result
                    'make-list-streaming-distributions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-streaming-distributions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistributionList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-result (:copier common-lisp:nil))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-result
                    'make-list-tags-for-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:deftype location-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-location-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (logging-config (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (include-cookies
    (common-lisp:error
     #A((28) common-lisp:base-char . ":include-cookies is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (prefix
    (common-lisp:error #A((19) common-lisp:base-char . ":prefix is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logging-config 'make-logging-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape logging-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "IncludeCookies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-cookies)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix))))))
(common-lisp:deftype method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype methods-list () '(trivial-types:proper-list method))
 (common-lisp:defun |make-methods-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list method))
   aws-sdk/generator/shape::members))
(common-lisp:deftype minimum-protocol-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (missing-body (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'missing-body 'make-missing-body))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape missing-body))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (no-such-cloud-front-origin-access-identity (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'no-such-cloud-front-origin-access-identity
                    'make-no-such-cloud-front-origin-access-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          no-such-cloud-front-origin-access-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (no-such-distribution (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'no-such-distribution 'make-no-such-distribution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-distribution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (no-such-invalidation (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'no-such-invalidation 'make-no-such-invalidation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-invalidation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (no-such-origin (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'no-such-origin 'make-no-such-origin))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-origin))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (no-such-resource (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'no-such-resource 'make-no-such-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (no-such-streaming-distribution (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'no-such-streaming-distribution
                    'make-no-such-streaming-distribution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          no-such-streaming-distribution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (origin (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (origin-path common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (custom-headers common-lisp:nil :type
    (common-lisp:or custom-headers common-lisp:null))
   (s3origin-config common-lisp:nil :type
    (common-lisp:or s3origin-config common-lisp:null))
   (custom-origin-config common-lisp:nil :type
    (common-lisp:or custom-origin-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'origin 'make-origin))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape origin))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "OriginPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin-path)))
    (aws-sdk/generator/shape::to-query-params "CustomHeaders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-headers)))
    (aws-sdk/generator/shape::to-query-params "S3OriginConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3origin-config)))
    (aws-sdk/generator/shape::to-query-params "CustomOriginConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-origin-config))))))
(common-lisp:progn
 (common-lisp:defstruct (origin-custom-header (:copier common-lisp:nil))
   (header-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":header-name is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (header-value
    (common-lisp:error
     #A((25) common-lisp:base-char . ":header-value is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'origin-custom-header 'make-origin-custom-header))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape origin-custom-header))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HeaderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'header-name)))
    (aws-sdk/generator/shape::to-query-params "HeaderValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'header-value))))))
(common-lisp:progn
 (common-lisp:deftype origin-custom-headers-list ()
   '(trivial-types:proper-list origin-custom-header))
 (common-lisp:defun |make-origin-custom-headers-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list origin-custom-header))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype origin-list () '(trivial-types:proper-list origin))
 (common-lisp:defun |make-origin-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list origin))
   aws-sdk/generator/shape::members))
(common-lisp:deftype origin-protocol-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (origin-ssl-protocols (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items
    (common-lisp:error #A((18) common-lisp:base-char . ":items is required"))
    :type (common-lisp:or ssl-protocols-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'origin-ssl-protocols 'make-origin-ssl-protocols))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape origin-ssl-protocols))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (origins (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type (common-lisp:or origin-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'origins 'make-origins))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape origins))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:deftype path-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-path-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (paths (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type (common-lisp:or path-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'paths 'make-paths))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape paths))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (precondition-failed (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'precondition-failed 'make-precondition-failed))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape precondition-failed))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype price-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (query-string-cache-keys (:copier common-lisp:nil))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or query-string-cache-keys-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'query-string-cache-keys 'make-query-string-cache-keys))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          query-string-cache-keys))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:deftype query-string-cache-keys-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-query-string-cache-keys-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (restrictions (:copier common-lisp:nil))
   (geo-restriction
    (common-lisp:error
     #A((28) common-lisp:base-char . ":geo-restriction is required"))
    :type (common-lisp:or geo-restriction common-lisp:null)))
 (common-lisp:export (common-lisp:list 'restrictions 'make-restrictions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape restrictions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GeoRestriction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'geo-restriction))))))
(common-lisp:progn
 (common-lisp:defstruct (s3origin (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (origin-access-identity
    (common-lisp:error
     #A((35) common-lisp:base-char . ":origin-access-identity is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3origin 'make-s3origin))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3origin))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "OriginAccessIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin-access-identity))))))
(common-lisp:progn
 (common-lisp:defstruct (s3origin-config (:copier common-lisp:nil))
   (origin-access-identity
    (common-lisp:error
     #A((35) common-lisp:base-char . ":origin-access-identity is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3origin-config 'make-s3origin-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3origin-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OriginAccessIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'origin-access-identity))))))
(common-lisp:deftype sslsupport-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (signer (:copier common-lisp:nil))
   (aws-account-number common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (key-pair-ids common-lisp:nil :type
    (common-lisp:or key-pair-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'signer 'make-signer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape signer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AwsAccountNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aws-account-number)))
    (aws-sdk/generator/shape::to-query-params "KeyPairIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair-ids))))))
(common-lisp:progn
 (common-lisp:deftype signer-list () '(trivial-types:proper-list signer))
 (common-lisp:defun |make-signer-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list signer))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ssl-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ssl-protocols-list ()
   '(trivial-types:proper-list ssl-protocol))
 (common-lisp:defun |make-ssl-protocols-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ssl-protocol))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (streaming-distribution (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (active-trusted-signers
    (common-lisp:error
     #A((35) common-lisp:base-char . ":active-trusted-signers is required"))
    :type (common-lisp:or active-trusted-signers common-lisp:null))
   (streaming-distribution-config
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":streaming-distribution-config is required"))
    :type (common-lisp:or streaming-distribution-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-distribution 'make-streaming-distribution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-distribution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-time)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ActiveTrustedSigners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-trusted-signers)))
    (aws-sdk/generator/shape::to-query-params "StreamingDistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (streaming-distribution-already-exists (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-distribution-already-exists
                    'make-streaming-distribution-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-distribution-already-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (streaming-distribution-config (:copier common-lisp:nil))
   (caller-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":caller-reference is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (s3origin
    (common-lisp:error
     #A((21) common-lisp:base-char . ":s3origin is required"))
    :type (common-lisp:or s3origin common-lisp:null))
   (aliases common-lisp:nil :type (common-lisp:or aliases common-lisp:null))
   (comment
    (common-lisp:error #A((20) common-lisp:base-char . ":comment is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (logging common-lisp:nil :type
    (common-lisp:or streaming-logging-config common-lisp:null))
   (trusted-signers
    (common-lisp:error
     #A((28) common-lisp:base-char . ":trusted-signers is required"))
    :type (common-lisp:or trusted-signers common-lisp:null))
   (price-class common-lisp:nil :type
    (common-lisp:or price-class common-lisp:null))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-distribution-config
                    'make-streaming-distribution-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-distribution-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CallerReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caller-reference)))
    (aws-sdk/generator/shape::to-query-params "S3Origin"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3origin)))
    (aws-sdk/generator/shape::to-query-params "Aliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aliases)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "Logging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging)))
    (aws-sdk/generator/shape::to-query-params "TrustedSigners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trusted-signers)))
    (aws-sdk/generator/shape::to-query-params "PriceClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'price-class)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (streaming-distribution-config-with-tags (:copier common-lisp:nil))
   (streaming-distribution-config
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":streaming-distribution-config is required"))
    :type (common-lisp:or streaming-distribution-config common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-distribution-config-with-tags
                    'make-streaming-distribution-config-with-tags))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-distribution-config-with-tags))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution-config)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (streaming-distribution-list (:copier common-lisp:nil))
   (marker
    (common-lisp:error #A((19) common-lisp:base-char . ":marker is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-items
    (common-lisp:error
     #A((22) common-lisp:base-char . ":max-items is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (is-truncated
    (common-lisp:error
     #A((25) common-lisp:base-char . ":is-truncated is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or streaming-distribution-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-distribution-list
                    'make-streaming-distribution-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-distribution-list))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items)))
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (streaming-distribution-not-disabled (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-distribution-not-disabled
                    'make-streaming-distribution-not-disabled))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-distribution-not-disabled))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (streaming-distribution-summary (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (last-modified-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":last-modified-time is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (s3origin
    (common-lisp:error
     #A((21) common-lisp:base-char . ":s3origin is required"))
    :type (common-lisp:or s3origin common-lisp:null))
   (aliases
    (common-lisp:error #A((20) common-lisp:base-char . ":aliases is required"))
    :type (common-lisp:or aliases common-lisp:null))
   (trusted-signers
    (common-lisp:error
     #A((28) common-lisp:base-char . ":trusted-signers is required"))
    :type (common-lisp:or trusted-signers common-lisp:null))
   (comment
    (common-lisp:error #A((20) common-lisp:base-char . ":comment is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (price-class
    (common-lisp:error
     #A((24) common-lisp:base-char . ":price-class is required"))
    :type (common-lisp:or price-class common-lisp:null))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-distribution-summary
                    'make-streaming-distribution-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-distribution-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-time)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "S3Origin"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3origin)))
    (aws-sdk/generator/shape::to-query-params "Aliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aliases)))
    (aws-sdk/generator/shape::to-query-params "TrustedSigners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trusted-signers)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "PriceClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'price-class)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled))))))
(common-lisp:progn
 (common-lisp:deftype streaming-distribution-summary-list ()
   '(trivial-types:proper-list streaming-distribution-summary))
 (common-lisp:defun |make-streaming-distribution-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            streaming-distribution-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (streaming-logging-config (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (prefix
    (common-lisp:error #A((19) common-lisp:base-char . ":prefix is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-logging-config 'make-streaming-logging-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          streaming-logging-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix))))))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-keys (:copier common-lisp:nil))
   (items common-lisp:nil :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-keys 'make-tag-keys))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-keys))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-request (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tags (:copier common-lisp:nil))
   (items common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tags 'make-tags))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tags))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (too-many-cache-behaviors (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-cache-behaviors 'make-too-many-cache-behaviors))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-cache-behaviors))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (too-many-certificates (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-certificates 'make-too-many-certificates))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-certificates))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-cloud-front-origin-access-identities (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-cloud-front-origin-access-identities
                    'make-too-many-cloud-front-origin-access-identities))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-cloud-front-origin-access-identities))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-cookie-names-in-white-list (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-cookie-names-in-white-list
                    'make-too-many-cookie-names-in-white-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-cookie-names-in-white-list))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-distribution-cnames (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-distribution-cnames
                    'make-too-many-distribution-cnames))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-distribution-cnames))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (too-many-distributions (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-distributions 'make-too-many-distributions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-distributions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-distributions-with-lambda-associations
      (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-distributions-with-lambda-associations
                    'make-too-many-distributions-with-lambda-associations))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-distributions-with-lambda-associations))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-headers-in-forwarded-values (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-headers-in-forwarded-values
                    'make-too-many-headers-in-forwarded-values))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-headers-in-forwarded-values))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-invalidations-in-progress (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-invalidations-in-progress
                    'make-too-many-invalidations-in-progress))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-invalidations-in-progress))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-lambda-function-associations (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-lambda-function-associations
                    'make-too-many-lambda-function-associations))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-lambda-function-associations))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-origin-custom-headers (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-origin-custom-headers
                    'make-too-many-origin-custom-headers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-origin-custom-headers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (too-many-origins (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-origins 'make-too-many-origins))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape too-many-origins))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-query-string-parameters (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-query-string-parameters
                    'make-too-many-query-string-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-query-string-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-streaming-distribution-cnames (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-streaming-distribution-cnames
                    'make-too-many-streaming-distribution-cnames))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-streaming-distribution-cnames))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-streaming-distributions (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-streaming-distributions
                    'make-too-many-streaming-distributions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-streaming-distributions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (too-many-trusted-signers (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-trusted-signers 'make-too-many-trusted-signers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-trusted-signers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-signer-does-not-exist (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-signer-does-not-exist
                    'make-trusted-signer-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-signer-does-not-exist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (trusted-signers (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or common-lisp:boolean common-lisp:null))
   (quantity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":quantity is required"))
    :type (common-lisp:or common-lisp:integer common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or aws-account-number-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'trusted-signers 'make-trusted-signers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape trusted-signers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-request (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-cloud-front-origin-access-identity-request
      (:copier common-lisp:nil))
   (cloud-front-origin-access-identity-config
    (common-lisp:error
     #A((54) common-lisp:base-char
        . ":cloud-front-origin-access-identity-config is required"))
    :type
    (common-lisp:or cloud-front-origin-access-identity-config
                    common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (if-match common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-cloud-front-origin-access-identity-request
                    'make-update-cloud-front-origin-access-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-cloud-front-origin-access-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "CloudFrontOriginAccessIdentityConfig"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cloud-front-origin-access-identity-config)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-cloud-front-origin-access-identity-result
      (:copier common-lisp:nil))
   (cloud-front-origin-access-identity common-lisp:nil :type
    (common-lisp:or cloud-front-origin-access-identity common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-cloud-front-origin-access-identity-result
                    'make-update-cloud-front-origin-access-identity-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-cloud-front-origin-access-identity-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CloudFrontOriginAccessIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-front-origin-access-identity)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct (update-distribution-request (:copier common-lisp:nil))
   (distribution-config
    (common-lisp:error
     #A((32) common-lisp:base-char . ":distribution-config is required"))
    :type (common-lisp:or distribution-config common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (if-match common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-distribution-request
                    'make-update-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-config)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match))))))
(common-lisp:progn
 (common-lisp:defstruct (update-distribution-result (:copier common-lisp:nil))
   (distribution common-lisp:nil :type
    (common-lisp:or distribution common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-distribution-result
                    'make-update-distribution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-distribution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Distribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-streaming-distribution-request (:copier common-lisp:nil))
   (streaming-distribution-config
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":streaming-distribution-config is required"))
    :type (common-lisp:or streaming-distribution-config common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (if-match common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-streaming-distribution-request
                    'make-update-streaming-distribution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-streaming-distribution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistributionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution-config)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-streaming-distribution-result (:copier common-lisp:nil))
   (streaming-distribution common-lisp:nil :type
    (common-lisp:or streaming-distribution common-lisp:null))
   (etag common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-streaming-distribution-result
                    'make-update-streaming-distribution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-streaming-distribution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamingDistribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-distribution)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag))))))
(common-lisp:progn
 (common-lisp:defstruct (viewer-certificate (:copier common-lisp:nil))
   (cloud-front-default-certificate common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (iamcertificate-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (acmcertificate-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (sslsupport-method common-lisp:nil :type
    (common-lisp:or sslsupport-method common-lisp:null))
   (minimum-protocol-version common-lisp:nil :type
    (common-lisp:or minimum-protocol-version common-lisp:null))
   (certificate common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (certificate-source common-lisp:nil :type
    (common-lisp:or certificate-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'viewer-certificate 'make-viewer-certificate))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape viewer-certificate))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CloudFrontDefaultCertificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-front-default-certificate)))
    (aws-sdk/generator/shape::to-query-params "IAMCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iamcertificate-id)))
    (aws-sdk/generator/shape::to-query-params "ACMCertificateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acmcertificate-arn)))
    (aws-sdk/generator/shape::to-query-params "SSLSupportMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sslsupport-method)))
    (aws-sdk/generator/shape::to-query-params "MinimumProtocolVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minimum-protocol-version)))
    (aws-sdk/generator/shape::to-query-params "Certificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate)))
    (aws-sdk/generator/shape::to-query-params "CertificateSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-source))))))
(common-lisp:deftype viewer-protocol-policy () 'common-lisp:string)
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun create-cloud-front-origin-access-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key
                     cloud-front-origin-access-identity-config)
   (common-lisp:declare
    (common-lisp:ignorable cloud-front-origin-access-identity-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-cloud-front-origin-access-identity-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"CreateCloudFrontOriginAccessIdentity")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateCloudFrontOriginAccessIdentityResult" common-lisp:nil)))
 (common-lisp:export 'create-cloud-front-origin-access-identity))
(common-lisp:progn
 (common-lisp:defun create-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key distribution-config)
   (common-lisp:declare (common-lisp:ignorable distribution-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-distribution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDistributionResult" common-lisp:nil)))
 (common-lisp:export 'create-distribution))
(common-lisp:progn
 (common-lisp:defun create-distribution-with-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key distribution-config-with-tags)
   (common-lisp:declare (common-lisp:ignorable distribution-config-with-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-distribution-with-tags-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDistributionWithTags")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDistributionWithTagsResult" common-lisp:nil)))
 (common-lisp:export 'create-distribution-with-tags))
(common-lisp:progn
 (common-lisp:defun create-invalidation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key distribution-id invalidation-batch)
   (common-lisp:declare
    (common-lisp:ignorable distribution-id invalidation-batch))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-invalidation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distribution/~a/invalidation"
                                                   distributionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateInvalidation")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateInvalidationResult" common-lisp:nil)))
 (common-lisp:export 'create-invalidation))
(common-lisp:progn
 (common-lisp:defun create-streaming-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key streaming-distribution-config)
   (common-lisp:declare (common-lisp:ignorable streaming-distribution-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-streaming-distribution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateStreamingDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateStreamingDistributionResult" common-lisp:nil)))
 (common-lisp:export 'create-streaming-distribution))
(common-lisp:progn
 (common-lisp:defun create-streaming-distribution-with-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key streaming-distribution-config-with-tags)
   (common-lisp:declare
    (common-lisp:ignorable streaming-distribution-config-with-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-streaming-distribution-with-tags-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"CreateStreamingDistributionWithTags")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateStreamingDistributionWithTagsResult" common-lisp:nil)))
 (common-lisp:export 'create-streaming-distribution-with-tags))
(common-lisp:progn
 (common-lisp:defun delete-cloud-front-origin-access-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id if-match)
   (common-lisp:declare (common-lisp:ignorable id if-match))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cloud-front-origin-access-identity-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/origin-access-identity/cloudfront/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteCloudFrontOriginAccessIdentity")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-cloud-front-origin-access-identity))
(common-lisp:progn
 (common-lisp:defun delete-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id if-match)
   (common-lisp:declare (common-lisp:ignorable id if-match))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-distribution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distribution/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-distribution))
(common-lisp:progn
 (common-lisp:defun delete-streaming-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id if-match)
   (common-lisp:declare (common-lisp:ignorable id if-match))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-streaming-distribution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/streaming-distribution/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteStreamingDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-streaming-distribution))
(common-lisp:progn
 (common-lisp:defun get-cloud-front-origin-access-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-cloud-front-origin-access-identity-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/origin-access-identity/cloudfront/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetCloudFrontOriginAccessIdentity")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCloudFrontOriginAccessIdentityResult" common-lisp:nil)))
 (common-lisp:export 'get-cloud-front-origin-access-identity))
(common-lisp:progn
 (common-lisp:defun get-cloud-front-origin-access-identity-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-cloud-front-origin-access-identity-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/origin-access-identity/cloudfront/~a/config"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetCloudFrontOriginAccessIdentityConfig")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCloudFrontOriginAccessIdentityConfigResult" common-lisp:nil)))
 (common-lisp:export 'get-cloud-front-origin-access-identity-config))
(common-lisp:progn
 (common-lisp:defun get-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-distribution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distribution/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDistributionResult" common-lisp:nil)))
 (common-lisp:export 'get-distribution))
(common-lisp:progn
 (common-lisp:defun get-distribution-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-distribution-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distribution/~a/config"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDistributionConfig")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDistributionConfigResult" common-lisp:nil)))
 (common-lisp:export 'get-distribution-config))
(common-lisp:progn
 (common-lisp:defun get-invalidation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key distribution-id id)
   (common-lisp:declare (common-lisp:ignorable distribution-id id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-invalidation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distribution/~a/invalidation/~a"
                                                   distributionid id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetInvalidation")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInvalidationResult" common-lisp:nil)))
 (common-lisp:export 'get-invalidation))
(common-lisp:progn
 (common-lisp:defun get-streaming-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-streaming-distribution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/streaming-distribution/~a"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetStreamingDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetStreamingDistributionResult" common-lisp:nil)))
 (common-lisp:export 'get-streaming-distribution))
(common-lisp:progn
 (common-lisp:defun get-streaming-distribution-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-streaming-distribution-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/streaming-distribution/~a/config"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetStreamingDistributionConfig")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetStreamingDistributionConfigResult" common-lisp:nil)))
 (common-lisp:export 'get-streaming-distribution-config))
(common-lisp:progn
 (common-lisp:defun list-cloud-front-origin-access-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker max-items)
   (common-lisp:declare (common-lisp:ignorable marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-cloud-front-origin-access-identities-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ListCloudFrontOriginAccessIdentities")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListCloudFrontOriginAccessIdentitiesResult" common-lisp:nil)))
 (common-lisp:export 'list-cloud-front-origin-access-identities))
(common-lisp:progn
 (common-lisp:defun list-distributions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker max-items)
   (common-lisp:declare (common-lisp:ignorable marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-distributions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListDistributions")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDistributionsResult" common-lisp:nil)))
 (common-lisp:export 'list-distributions))
(common-lisp:progn
 (common-lisp:defun list-distributions-by-web-aclid
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker max-items web-aclid)
   (common-lisp:declare (common-lisp:ignorable marker max-items web-aclid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-distributions-by-web-aclid-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distributionsByWebACLId/~a"
                                                   webaclid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListDistributionsByWebACLId")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDistributionsByWebACLIdResult" common-lisp:nil)))
 (common-lisp:export 'list-distributions-by-web-aclid))
(common-lisp:progn
 (common-lisp:defun list-invalidations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key distribution-id marker max-items)
   (common-lisp:declare
    (common-lisp:ignorable distribution-id marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-invalidations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distribution/~a/invalidation"
                                                   distributionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListInvalidations")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListInvalidationsResult" common-lisp:nil)))
 (common-lisp:export 'list-invalidations))
(common-lisp:progn
 (common-lisp:defun list-streaming-distributions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker max-items)
   (common-lisp:declare (common-lisp:ignorable marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-streaming-distributions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListStreamingDistributions")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListStreamingDistributionsResult" common-lisp:nil)))
 (common-lisp:export 'list-streaming-distributions))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource)
   (common-lisp:declare (common-lisp:ignorable resource))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagsForResource")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsForResourceResult" common-lisp:nil)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource tags)
   (common-lisp:declare (common-lisp:ignorable resource tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TagResource")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UntagResource")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-cloud-front-origin-access-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cloud-front-origin-access-identity-config
                     id if-match)
   (common-lisp:declare
    (common-lisp:ignorable cloud-front-origin-access-identity-config id
     if-match))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-cloud-front-origin-access-identity-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/origin-access-identity/cloudfront/~a/config"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"UpdateCloudFrontOriginAccessIdentity")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateCloudFrontOriginAccessIdentityResult" common-lisp:nil)))
 (common-lisp:export 'update-cloud-front-origin-access-identity))
(common-lisp:progn
 (common-lisp:defun update-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key distribution-config id if-match)
   (common-lisp:declare
    (common-lisp:ignorable distribution-config id if-match))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-distribution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/distribution/~a/config"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDistributionResult" common-lisp:nil)))
 (common-lisp:export 'update-distribution))
(common-lisp:progn
 (common-lisp:defun update-streaming-distribution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key streaming-distribution-config id
                     if-match)
   (common-lisp:declare
    (common-lisp:ignorable streaming-distribution-config id if-match))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-streaming-distribution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "cloudfront")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/2017-03-25/streaming-distribution/~a/config"
                                                   id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateStreamingDistribution")
                                  ("Version" ,@"2017-03-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateStreamingDistributionResult" common-lisp:nil)))
 (common-lisp:export 'update-streaming-distribution))