;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ssm
  (:use)
  (:nicknames #:aws/ssm)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/ssm)

(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-id-list ()
   '(trivial-types:proper-list account-id))
 (common-lisp:defun |make-account-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (activation (:copier common-lisp:nil))
   (activation-id common-lisp:nil :type
    (common-lisp:or activation-id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or activation-description common-lisp:null))
   (default-instance-name common-lisp:nil :type
    (common-lisp:or default-instance-name common-lisp:null))
   (iam-role common-lisp:nil :type (common-lisp:or iam-role common-lisp:null))
   (registration-limit common-lisp:nil :type
    (common-lisp:or registration-limit common-lisp:null))
   (registrations-count common-lisp:nil :type
    (common-lisp:or registrations-count common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or expiration-date common-lisp:null))
   (expired common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or created-date common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activation 'make-activation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activation-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DefaultInstanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-instance-name)))
    (aws-sdk/generator/shape::to-query-params "IamRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-role)))
    (aws-sdk/generator/shape::to-query-params "RegistrationLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-limit)))
    (aws-sdk/generator/shape::to-query-params "RegistrationsCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registrations-count)))
    (aws-sdk/generator/shape::to-query-params "ExpirationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-date)))
    (aws-sdk/generator/shape::to-query-params "Expired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expired)))
    (aws-sdk/generator/shape::to-query-params "CreatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date))))))
(common-lisp:deftype activation-code () 'common-lisp:string)
(common-lisp:deftype activation-description () 'common-lisp:string)
(common-lisp:deftype activation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype activation-list ()
   '(trivial-types:proper-list activation))
 (common-lisp:defun |make-activation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-resource-request (:copier common-lisp:nil))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or resource-type-for-tagging common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-request
                    'make-add-tags-to-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-tags-to-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-resource-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-result
                    'make-add-tags-to-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-tags-to-resource-result))
   (common-lisp:append)))
(common-lisp:deftype agent-error-code () 'common-lisp:string)
(common-lisp:deftype allowed-pattern () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'already-exists-exception 'make-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype approve-after-days () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (associated-instances (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associated-instances 'make-associated-instances))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape associated-instances))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (association (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (association-id common-lisp:nil :type
    (common-lisp:or association-id common-lisp:null))
   (association-version common-lisp:nil :type
    (common-lisp:or association-version common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (last-execution-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (overview common-lisp:nil :type
    (common-lisp:or association-overview common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (association-name common-lisp:nil :type
    (common-lisp:or association-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'association 'make-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-version)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "LastExecutionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-execution-date)))
    (aws-sdk/generator/shape::to-query-params "Overview"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'overview)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "AssociationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-name))))))
(common-lisp:progn
 (common-lisp:defstruct (association-already-exists (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'association-already-exists
                    'make-association-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          association-already-exists))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (association-description (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (association-version common-lisp:nil :type
    (common-lisp:or association-version common-lisp:null))
   (date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (last-update-association-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or association-status common-lisp:null))
   (overview common-lisp:nil :type
    (common-lisp:or association-overview common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (association-id common-lisp:nil :type
    (common-lisp:or association-id common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (output-location common-lisp:nil :type
    (common-lisp:or instance-association-output-location common-lisp:null))
   (last-execution-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-successful-execution-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (association-name common-lisp:nil :type
    (common-lisp:or association-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'association-description 'make-association-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          association-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-version)))
    (aws-sdk/generator/shape::to-query-params "Date"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date)))
    (aws-sdk/generator/shape::to-query-params "LastUpdateAssociationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-update-association-date)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Overview"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'overview)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "OutputLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-location)))
    (aws-sdk/generator/shape::to-query-params "LastExecutionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-execution-date)))
    (aws-sdk/generator/shape::to-query-params "LastSuccessfulExecutionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-successful-execution-date)))
    (aws-sdk/generator/shape::to-query-params "AssociationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-name))))))
(common-lisp:progn
 (common-lisp:deftype association-description-list ()
   '(trivial-types:proper-list association-description))
 (common-lisp:defun |make-association-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list association-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (association-does-not-exist (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'association-does-not-exist
                    'make-association-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          association-does-not-exist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (association-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or association-filter-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or association-filter-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'association-filter 'make-association-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape association-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype association-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype association-filter-list ()
   '(trivial-types:proper-list association-filter))
 (common-lisp:defun |make-association-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list association-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype association-filter-value () 'common-lisp:string)
(common-lisp:deftype association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (association-limit-exceeded (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'association-limit-exceeded
                    'make-association-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          association-limit-exceeded))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype association-list ()
   '(trivial-types:proper-list association))
 (common-lisp:defun |make-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype association-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (association-overview (:copier common-lisp:nil))
   (status common-lisp:nil :type (common-lisp:or status-name common-lisp:null))
   (detailed-status common-lisp:nil :type
    (common-lisp:or status-name common-lisp:null))
   (association-status-aggregated-count common-lisp:nil :type
    (common-lisp:or association-status-aggregated-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'association-overview 'make-association-overview))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape association-overview))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "DetailedStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detailed-status)))
    (aws-sdk/generator/shape::to-query-params
     "AssociationStatusAggregatedCount"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'association-status-aggregated-count))))))
(common-lisp:progn
 (common-lisp:defstruct (association-status (:copier common-lisp:nil))
   (date
    (common-lisp:error #A((17) common-lisp:base-char . ":date is required"))
    :type (common-lisp:or date-time common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or association-status-name common-lisp:null))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or status-message common-lisp:null))
   (additional-info common-lisp:nil :type
    (common-lisp:or status-additional-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'association-status 'make-association-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape association-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Date"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "AdditionalInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-info))))))
(common-lisp:defstruct
    (association-status-aggregated-count
     (:constructor |make-association-status-aggregated-count|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype association-status-name () 'common-lisp:string)
(common-lisp:deftype association-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (association-version-info (:copier common-lisp:nil))
   (association-id common-lisp:nil :type
    (common-lisp:or association-id common-lisp:null))
   (association-version common-lisp:nil :type
    (common-lisp:or association-version common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (output-location common-lisp:nil :type
    (common-lisp:or instance-association-output-location common-lisp:null))
   (association-name common-lisp:nil :type
    (common-lisp:or association-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'association-version-info 'make-association-version-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          association-version-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-version)))
    (aws-sdk/generator/shape::to-query-params "CreatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "OutputLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-location)))
    (aws-sdk/generator/shape::to-query-params "AssociationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (association-version-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'association-version-limit-exceeded
                    'make-association-version-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          association-version-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype association-version-list ()
   '(trivial-types:proper-list association-version-info))
 (common-lisp:defun |make-association-version-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            association-version-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-name () 'common-lisp:string)
(common-lisp:deftype attribute-value () 'common-lisp:string)
(common-lisp:deftype automation-action-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (automation-definition-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automation-definition-not-found-exception
                    'make-automation-definition-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          automation-definition-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (automation-definition-version-not-found-exception
      (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automation-definition-version-not-found-exception
                    'make-automation-definition-version-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          automation-definition-version-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (automation-execution (:copier common-lisp:nil))
   (automation-execution-id common-lisp:nil :type
    (common-lisp:or automation-execution-id common-lisp:null))
   (document-name common-lisp:nil :type
    (common-lisp:or document-name common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (execution-start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (execution-end-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (automation-execution-status common-lisp:nil :type
    (common-lisp:or automation-execution-status common-lisp:null))
   (step-executions common-lisp:nil :type
    (common-lisp:or step-execution-list common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null))
   (failure-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automation-execution 'make-automation-execution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape automation-execution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-id)))
    (aws-sdk/generator/shape::to-query-params "DocumentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "ExecutionStartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-time)))
    (aws-sdk/generator/shape::to-query-params "ExecutionEndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-end-time)))
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-status)))
    (aws-sdk/generator/shape::to-query-params "StepExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-executions)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "Outputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'outputs)))
    (aws-sdk/generator/shape::to-query-params "FailureMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-message))))))
(common-lisp:progn
 (common-lisp:defstruct (automation-execution-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or automation-execution-filter-key common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type
    (common-lisp:or automation-execution-filter-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automation-execution-filter
                    'make-automation-execution-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          automation-execution-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype automation-execution-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype automation-execution-filter-list ()
   '(trivial-types:proper-list automation-execution-filter))
 (common-lisp:defun |make-automation-execution-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            automation-execution-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype automation-execution-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype automation-execution-filter-value-list ()
   '(trivial-types:proper-list automation-execution-filter-value))
 (common-lisp:defun |make-automation-execution-filter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            automation-execution-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype automation-execution-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (automation-execution-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automation-execution-limit-exceeded-exception
                    'make-automation-execution-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          automation-execution-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (automation-execution-metadata (:copier common-lisp:nil))
   (automation-execution-id common-lisp:nil :type
    (common-lisp:or automation-execution-id common-lisp:null))
   (document-name common-lisp:nil :type
    (common-lisp:or document-name common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (automation-execution-status common-lisp:nil :type
    (common-lisp:or automation-execution-status common-lisp:null))
   (execution-start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (execution-end-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (executed-by common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-file common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automation-execution-metadata
                    'make-automation-execution-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          automation-execution-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-id)))
    (aws-sdk/generator/shape::to-query-params "DocumentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-status)))
    (aws-sdk/generator/shape::to-query-params "ExecutionStartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-time)))
    (aws-sdk/generator/shape::to-query-params "ExecutionEndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-end-time)))
    (aws-sdk/generator/shape::to-query-params "ExecutedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'executed-by)))
    (aws-sdk/generator/shape::to-query-params "LogFile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-file)))
    (aws-sdk/generator/shape::to-query-params "Outputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'outputs))))))
(common-lisp:progn
 (common-lisp:deftype automation-execution-metadata-list ()
   '(trivial-types:proper-list automation-execution-metadata))
 (common-lisp:defun |make-automation-execution-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            automation-execution-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (automation-execution-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automation-execution-not-found-exception
                    'make-automation-execution-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          automation-execution-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype automation-execution-status () 'common-lisp:string)
(common-lisp:deftype automation-parameter-key () 'common-lisp:string)
(common-lisp:defstruct
    (automation-parameter-map
     (:constructor |make-automation-parameter-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype automation-parameter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype automation-parameter-value-list ()
   '(trivial-types:proper-list automation-parameter-value))
 (common-lisp:defun |make-automation-parameter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            automation-parameter-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype baseline-description () 'common-lisp:string)
(common-lisp:deftype baseline-id () 'common-lisp:string)
(common-lisp:deftype baseline-name () 'common-lisp:string)
(common-lisp:deftype batch-error-message () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (cancel-command-request (:copier common-lisp:nil))
   (command-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":command-id is required"))
    :type (common-lisp:or command-id common-lisp:null))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-command-request 'make-cancel-command-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-command-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-command-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cancel-command-result 'make-cancel-command-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-command-result))
   (common-lisp:append)))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (command (:copier common-lisp:nil))
   (command-id common-lisp:nil :type
    (common-lisp:or command-id common-lisp:null))
   (document-name common-lisp:nil :type
    (common-lisp:or document-name common-lisp:null))
   (comment common-lisp:nil :type (common-lisp:or comment common-lisp:null))
   (expires-after common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-id-list common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (requested-date-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or command-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or status-details common-lisp:null))
   (output-s3region common-lisp:nil :type
    (common-lisp:or s3region common-lisp:null))
   (output-s3bucket-name common-lisp:nil :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (output-s3key-prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null))
   (max-concurrency common-lisp:nil :type
    (common-lisp:or max-concurrency common-lisp:null))
   (max-errors common-lisp:nil :type
    (common-lisp:or max-errors common-lisp:null))
   (target-count common-lisp:nil :type
    (common-lisp:or target-count common-lisp:null))
   (completed-count common-lisp:nil :type
    (common-lisp:or completed-count common-lisp:null))
   (error-count common-lisp:nil :type
    (common-lisp:or error-count common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (notification-config common-lisp:nil :type
    (common-lisp:or notification-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'command 'make-command))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape command))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "DocumentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-name)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "ExpiresAfter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires-after)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "RequestedDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-date-time)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "OutputS3Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3region)))
    (aws-sdk/generator/shape::to-query-params "OutputS3BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3bucket-name)))
    (aws-sdk/generator/shape::to-query-params "OutputS3KeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3key-prefix)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "TargetCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-count)))
    (aws-sdk/generator/shape::to-query-params "CompletedCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed-count)))
    (aws-sdk/generator/shape::to-query-params "ErrorCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-count)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "NotificationConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-config))))))
(common-lisp:progn
 (common-lisp:defstruct (command-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or command-filter-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or command-filter-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'command-filter 'make-command-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape command-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype command-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype command-filter-list ()
   '(trivial-types:proper-list command-filter))
 (common-lisp:defun |make-command-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list command-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype command-filter-value () 'common-lisp:string)
(common-lisp:deftype command-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (command-invocation (:copier common-lisp:nil))
   (command-id common-lisp:nil :type
    (common-lisp:or command-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (instance-name common-lisp:nil :type
    (common-lisp:or instance-tag-name common-lisp:null))
   (comment common-lisp:nil :type (common-lisp:or comment common-lisp:null))
   (document-name common-lisp:nil :type
    (common-lisp:or document-name common-lisp:null))
   (requested-date-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or command-invocation-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or status-details common-lisp:null))
   (trace-output common-lisp:nil :type
    (common-lisp:or invocation-trace-output common-lisp:null))
   (standard-output-url common-lisp:nil :type
    (common-lisp:or url common-lisp:null))
   (standard-error-url common-lisp:nil :type
    (common-lisp:or url common-lisp:null))
   (command-plugins common-lisp:nil :type
    (common-lisp:or command-plugin-list common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (notification-config common-lisp:nil :type
    (common-lisp:or notification-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'command-invocation 'make-command-invocation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape command-invocation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "DocumentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-name)))
    (aws-sdk/generator/shape::to-query-params "RequestedDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-date-time)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "TraceOutput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trace-output)))
    (aws-sdk/generator/shape::to-query-params "StandardOutputUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-output-url)))
    (aws-sdk/generator/shape::to-query-params "StandardErrorUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-error-url)))
    (aws-sdk/generator/shape::to-query-params "CommandPlugins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-plugins)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "NotificationConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-config))))))
(common-lisp:progn
 (common-lisp:deftype command-invocation-list ()
   '(trivial-types:proper-list command-invocation))
 (common-lisp:defun |make-command-invocation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list command-invocation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype command-invocation-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype command-list () '(trivial-types:proper-list command))
 (common-lisp:defun |make-command-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list command))
   aws-sdk/generator/shape::members))
(common-lisp:deftype command-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (command-plugin (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or command-plugin-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or command-plugin-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or status-details common-lisp:null))
   (response-code common-lisp:nil :type
    (common-lisp:or response-code common-lisp:null))
   (response-start-date-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (response-finish-date-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (output common-lisp:nil :type
    (common-lisp:or command-plugin-output common-lisp:null))
   (standard-output-url common-lisp:nil :type
    (common-lisp:or url common-lisp:null))
   (standard-error-url common-lisp:nil :type
    (common-lisp:or url common-lisp:null))
   (output-s3region common-lisp:nil :type
    (common-lisp:or s3region common-lisp:null))
   (output-s3bucket-name common-lisp:nil :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (output-s3key-prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null)))
 (common-lisp:export (common-lisp:list 'command-plugin 'make-command-plugin))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape command-plugin))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "ResponseCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-code)))
    (aws-sdk/generator/shape::to-query-params "ResponseStartDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-start-date-time)))
    (aws-sdk/generator/shape::to-query-params "ResponseFinishDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-finish-date-time)))
    (aws-sdk/generator/shape::to-query-params "Output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output)))
    (aws-sdk/generator/shape::to-query-params "StandardOutputUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-output-url)))
    (aws-sdk/generator/shape::to-query-params "StandardErrorUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-error-url)))
    (aws-sdk/generator/shape::to-query-params "OutputS3Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3region)))
    (aws-sdk/generator/shape::to-query-params "OutputS3BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3bucket-name)))
    (aws-sdk/generator/shape::to-query-params "OutputS3KeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3key-prefix))))))
(common-lisp:progn
 (common-lisp:deftype command-plugin-list ()
   '(trivial-types:proper-list command-plugin))
 (common-lisp:defun |make-command-plugin-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list command-plugin))
   aws-sdk/generator/shape::members))
(common-lisp:deftype command-plugin-name () 'common-lisp:string)
(common-lisp:deftype command-plugin-output () 'common-lisp:string)
(common-lisp:deftype command-plugin-status () 'common-lisp:string)
(common-lisp:deftype command-status () 'common-lisp:string)
(common-lisp:deftype comment () 'common-lisp:string)
(common-lisp:deftype completed-count () 'common-lisp:integer)
(common-lisp:deftype compliance-execution-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (compliance-execution-summary (:copier common-lisp:nil))
   (execution-time
    (common-lisp:error
     #A((27) common-lisp:base-char . ":execution-time is required"))
    :type (common-lisp:or date-time common-lisp:null))
   (execution-id common-lisp:nil :type
    (common-lisp:or compliance-execution-id common-lisp:null))
   (execution-type common-lisp:nil :type
    (common-lisp:or compliance-execution-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compliance-execution-summary
                    'make-compliance-execution-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compliance-execution-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ExecutionTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-time)))
    (aws-sdk/generator/shape::to-query-params "ExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-id)))
    (aws-sdk/generator/shape::to-query-params "ExecutionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-type))))))
(common-lisp:deftype compliance-execution-type () 'common-lisp:string)
(common-lisp:deftype compliance-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (compliance-item (:copier common-lisp:nil))
   (compliance-type common-lisp:nil :type
    (common-lisp:or compliance-type-name common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or compliance-resource-type common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or compliance-resource-id common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or compliance-item-id common-lisp:null))
   (title common-lisp:nil :type
    (common-lisp:or compliance-item-title common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or compliance-status common-lisp:null))
   (severity common-lisp:nil :type
    (common-lisp:or compliance-severity common-lisp:null))
   (execution-summary common-lisp:nil :type
    (common-lisp:or compliance-execution-summary common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or compliance-item-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'compliance-item 'make-compliance-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape compliance-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ComplianceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Severity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity)))
    (aws-sdk/generator/shape::to-query-params "ExecutionSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-summary)))
    (aws-sdk/generator/shape::to-query-params "Details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:deftype compliance-item-content-hash () 'common-lisp:string)
(common-lisp:defstruct
    (compliance-item-details
     (:constructor |make-compliance-item-details|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (compliance-item-entry (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or compliance-item-id common-lisp:null))
   (title common-lisp:nil :type
    (common-lisp:or compliance-item-title common-lisp:null))
   (severity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":severity is required"))
    :type (common-lisp:or compliance-severity common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or compliance-status common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or compliance-item-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compliance-item-entry 'make-compliance-item-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compliance-item-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Severity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:deftype compliance-item-entry-list ()
   '(trivial-types:proper-list compliance-item-entry))
 (common-lisp:defun |make-compliance-item-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list compliance-item-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype compliance-item-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype compliance-item-list ()
   '(trivial-types:proper-list compliance-item))
 (common-lisp:defun |make-compliance-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list compliance-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype compliance-item-title () 'common-lisp:string)
(common-lisp:deftype compliance-query-operator-type () 'common-lisp:string)
(common-lisp:deftype compliance-resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype compliance-resource-id-list ()
   '(trivial-types:proper-list compliance-resource-id))
 (common-lisp:defun |make-compliance-resource-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list compliance-resource-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype compliance-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype compliance-resource-type-list ()
   '(trivial-types:proper-list compliance-resource-type))
 (common-lisp:defun |make-compliance-resource-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            compliance-resource-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype compliance-severity () 'common-lisp:string)
(common-lisp:deftype compliance-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (compliance-string-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or compliance-string-filter-key common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or compliance-string-filter-value-list common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or compliance-query-operator-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compliance-string-filter 'make-compliance-string-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compliance-string-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype compliance-string-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype compliance-string-filter-list ()
   '(trivial-types:proper-list compliance-string-filter))
 (common-lisp:defun |make-compliance-string-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            compliance-string-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype compliance-string-filter-value-list ()
   '(trivial-types:proper-list compliance-filter-value))
 (common-lisp:defun |make-compliance-string-filter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list compliance-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype compliance-summary-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (compliance-summary-item (:copier common-lisp:nil))
   (compliance-type common-lisp:nil :type
    (common-lisp:or compliance-type-name common-lisp:null))
   (compliant-summary common-lisp:nil :type
    (common-lisp:or compliant-summary common-lisp:null))
   (non-compliant-summary common-lisp:nil :type
    (common-lisp:or non-compliant-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compliance-summary-item 'make-compliance-summary-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compliance-summary-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ComplianceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-type)))
    (aws-sdk/generator/shape::to-query-params "CompliantSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliant-summary)))
    (aws-sdk/generator/shape::to-query-params "NonCompliantSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'non-compliant-summary))))))
(common-lisp:progn
 (common-lisp:deftype compliance-summary-item-list ()
   '(trivial-types:proper-list compliance-summary-item))
 (common-lisp:defun |make-compliance-summary-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list compliance-summary-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (compliance-type-count-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compliance-type-count-limit-exceeded-exception
                    'make-compliance-type-count-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compliance-type-count-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype compliance-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (compliant-summary (:copier common-lisp:nil))
   (compliant-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null))
   (severity-summary common-lisp:nil :type
    (common-lisp:or severity-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compliant-summary 'make-compliant-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape compliant-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CompliantCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliant-count)))
    (aws-sdk/generator/shape::to-query-params "SeveritySummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity-summary))))))
(common-lisp:deftype computer-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-activation-request (:copier common-lisp:nil))
   (description common-lisp:nil :type
    (common-lisp:or activation-description common-lisp:null))
   (default-instance-name common-lisp:nil :type
    (common-lisp:or default-instance-name common-lisp:null))
   (iam-role
    (common-lisp:error
     #A((21) common-lisp:base-char . ":iam-role is required"))
    :type (common-lisp:or iam-role common-lisp:null))
   (registration-limit common-lisp:nil :type
    (common-lisp:or registration-limit common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or expiration-date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-activation-request
                    'make-create-activation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-activation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DefaultInstanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-instance-name)))
    (aws-sdk/generator/shape::to-query-params "IamRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-role)))
    (aws-sdk/generator/shape::to-query-params "RegistrationLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-limit)))
    (aws-sdk/generator/shape::to-query-params "ExpirationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-date))))))
(common-lisp:progn
 (common-lisp:defstruct (create-activation-result (:copier common-lisp:nil))
   (activation-id common-lisp:nil :type
    (common-lisp:or activation-id common-lisp:null))
   (activation-code common-lisp:nil :type
    (common-lisp:or activation-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-activation-result 'make-create-activation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-activation-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activation-id)))
    (aws-sdk/generator/shape::to-query-params "ActivationCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activation-code))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-association-batch-request (:copier common-lisp:nil))
   (entries
    (common-lisp:error #A((20) common-lisp:base-char . ":entries is required"))
    :type
    (common-lisp:or create-association-batch-request-entries
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-association-batch-request
                    'make-create-association-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-association-batch-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Entries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'entries))))))
(common-lisp:progn
 (common-lisp:deftype create-association-batch-request-entries ()
   '(trivial-types:proper-list create-association-batch-request-entry))
 (common-lisp:defun |make-create-association-batch-request-entries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            create-association-batch-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (create-association-batch-request-entry (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (output-location common-lisp:nil :type
    (common-lisp:or instance-association-output-location common-lisp:null))
   (association-name common-lisp:nil :type
    (common-lisp:or association-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-association-batch-request-entry
                    'make-create-association-batch-request-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-association-batch-request-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "OutputLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-location)))
    (aws-sdk/generator/shape::to-query-params "AssociationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-association-batch-result (:copier common-lisp:nil))
   (successful common-lisp:nil :type
    (common-lisp:or association-description-list common-lisp:null))
   (failed common-lisp:nil :type
    (common-lisp:or failed-create-association-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-association-batch-result
                    'make-create-association-batch-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-association-batch-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Successful"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'successful)))
    (aws-sdk/generator/shape::to-query-params "Failed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed))))))
(common-lisp:progn
 (common-lisp:defstruct (create-association-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (output-location common-lisp:nil :type
    (common-lisp:or instance-association-output-location common-lisp:null))
   (association-name common-lisp:nil :type
    (common-lisp:or association-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-association-request
                    'make-create-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-association-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "OutputLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-location)))
    (aws-sdk/generator/shape::to-query-params "AssociationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-association-result (:copier common-lisp:nil))
   (association-description common-lisp:nil :type
    (common-lisp:or association-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-association-result
                    'make-create-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-association-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-description))))))
(common-lisp:progn
 (common-lisp:defstruct (create-document-request (:copier common-lisp:nil))
   (content
    (common-lisp:error #A((20) common-lisp:base-char . ":content is required"))
    :type (common-lisp:or document-content common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or document-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-document-request 'make-create-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-type))))))
(common-lisp:progn
 (common-lisp:defstruct (create-document-result (:copier common-lisp:nil))
   (document-description common-lisp:nil :type
    (common-lisp:or document-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-document-result 'make-create-document-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-document-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-maintenance-window-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (schedule
    (common-lisp:error
     #A((21) common-lisp:base-char . ":schedule is required"))
    :type (common-lisp:or maintenance-window-schedule common-lisp:null))
   (duration
    (common-lisp:error
     #A((21) common-lisp:base-char . ":duration is required"))
    :type (common-lisp:or maintenance-window-duration-hours common-lisp:null))
   (cutoff
    (common-lisp:error #A((19) common-lisp:base-char . ":cutoff is required"))
    :type (common-lisp:or maintenance-window-cutoff common-lisp:null))
   (allow-unassociated-targets
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":allow-unassociated-targets is required"))
    :type
    (common-lisp:or maintenance-window-allow-unassociated-targets
                    common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-maintenance-window-request
                    'make-create-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "Cutoff"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cutoff)))
    (aws-sdk/generator/shape::to-query-params "AllowUnassociatedTargets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-unassociated-targets)))
    (aws-sdk/generator/shape::to-query-params "ClientToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-maintenance-window-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-maintenance-window-result
                    'make-create-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-patch-baseline-request (:copier common-lisp:nil))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or baseline-name common-lisp:null))
   (global-filters common-lisp:nil :type
    (common-lisp:or patch-filter-group common-lisp:null))
   (approval-rules common-lisp:nil :type
    (common-lisp:or patch-rule-group common-lisp:null))
   (approved-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (approved-patches-compliance-level common-lisp:nil :type
    (common-lisp:or patch-compliance-level common-lisp:null))
   (rejected-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or baseline-description common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-patch-baseline-request
                    'make-create-patch-baseline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-patch-baseline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "GlobalFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-filters)))
    (aws-sdk/generator/shape::to-query-params "ApprovalRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approval-rules)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatchesComplianceLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches-compliance-level)))
    (aws-sdk/generator/shape::to-query-params "RejectedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejected-patches)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ClientToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-patch-baseline-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-patch-baseline-result
                    'make-create-patch-baseline-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-patch-baseline-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-data-sync-request (:copier common-lisp:nil))
   (sync-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":sync-name is required"))
    :type (common-lisp:or resource-data-sync-name common-lisp:null))
   (s3destination
    (common-lisp:error
     #A((26) common-lisp:base-char . ":s3destination is required"))
    :type (common-lisp:or resource-data-sync-s3destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-data-sync-request
                    'make-create-resource-data-sync-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-resource-data-sync-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SyncName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-name)))
    (aws-sdk/generator/shape::to-query-params "S3Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3destination))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-data-sync-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-resource-data-sync-result
                    'make-create-resource-data-sync-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-resource-data-sync-result))
   (common-lisp:append)))
(common-lisp:deftype created-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (custom-schema-count-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-schema-count-limit-exceeded-exception
                    'make-custom-schema-count-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          custom-schema-count-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:deftype default-baseline () 'common-lisp:boolean)
(common-lisp:deftype default-instance-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-activation-request (:copier common-lisp:nil))
   (activation-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":activation-id is required"))
    :type (common-lisp:or activation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-activation-request
                    'make-delete-activation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-activation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-activation-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-activation-result 'make-delete-activation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-activation-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-association-request (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (association-id common-lisp:nil :type
    (common-lisp:or association-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-association-request
                    'make-delete-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-association-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-association-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-association-result
                    'make-delete-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-association-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-document-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-document-request 'make-delete-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-document-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-document-result 'make-delete-document-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-document-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-maintenance-window-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-maintenance-window-request
                    'make-delete-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-maintenance-window-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-maintenance-window-result
                    'make-delete-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-parameter-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or psparameter-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-parameter-request 'make-delete-parameter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-parameter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-parameter-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-parameter-result 'make-delete-parameter-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-parameter-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-parameters-request (:copier common-lisp:nil))
   (names
    (common-lisp:error #A((18) common-lisp:base-char . ":names is required"))
    :type (common-lisp:or parameter-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-parameters-request
                    'make-delete-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-parameters-result (:copier common-lisp:nil))
   (deleted-parameters common-lisp:nil :type
    (common-lisp:or parameter-name-list common-lisp:null))
   (invalid-parameters common-lisp:nil :type
    (common-lisp:or parameter-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-parameters-result 'make-delete-parameters-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-parameters-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeletedParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deleted-parameters)))
    (aws-sdk/generator/shape::to-query-params "InvalidParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalid-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-patch-baseline-request (:copier common-lisp:nil))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-patch-baseline-request
                    'make-delete-patch-baseline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-patch-baseline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-patch-baseline-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-patch-baseline-result
                    'make-delete-patch-baseline-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-patch-baseline-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-data-sync-request (:copier common-lisp:nil))
   (sync-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":sync-name is required"))
    :type (common-lisp:or resource-data-sync-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-data-sync-request
                    'make-delete-resource-data-sync-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-resource-data-sync-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SyncName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-data-sync-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-data-sync-result
                    'make-delete-resource-data-sync-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-resource-data-sync-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-managed-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or managed-instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-managed-instance-request
                    'make-deregister-managed-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-managed-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-managed-instance-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deregister-managed-instance-result
                    'make-deregister-managed-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-managed-instance-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-patch-baseline-for-patch-group-request
      (:copier common-lisp:nil))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null))
   (patch-group
    (common-lisp:error
     #A((24) common-lisp:base-char . ":patch-group is required"))
    :type (common-lisp:or patch-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-patch-baseline-for-patch-group-request
                    'make-deregister-patch-baseline-for-patch-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-patch-baseline-for-patch-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-patch-baseline-for-patch-group-result
      (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null))
   (patch-group common-lisp:nil :type
    (common-lisp:or patch-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-patch-baseline-for-patch-group-result
                    'make-deregister-patch-baseline-for-patch-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-patch-baseline-for-patch-group-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-target-from-maintenance-window-request
      (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (window-target-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":window-target-id is required"))
    :type (common-lisp:or maintenance-window-target-id common-lisp:null))
   (safe common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-target-from-maintenance-window-request
                    'make-deregister-target-from-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-target-from-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id)))
    (aws-sdk/generator/shape::to-query-params "Safe"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'safe))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-target-from-maintenance-window-result
      (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-target-id common-lisp:nil :type
    (common-lisp:or maintenance-window-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-target-from-maintenance-window-result
                    'make-deregister-target-from-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-target-from-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-task-from-maintenance-window-request
      (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (window-task-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":window-task-id is required"))
    :type (common-lisp:or maintenance-window-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-task-from-maintenance-window-request
                    'make-deregister-task-from-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-task-from-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-task-from-maintenance-window-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-task-id common-lisp:nil :type
    (common-lisp:or maintenance-window-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-task-from-maintenance-window-result
                    'make-deregister-task-from-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-task-from-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-activations-filter (:copier common-lisp:nil))
   (filter-key common-lisp:nil :type
    (common-lisp:or describe-activations-filter-keys common-lisp:null))
   (filter-values common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activations-filter
                    'make-describe-activations-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activations-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FilterKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-key)))
    (aws-sdk/generator/shape::to-query-params "FilterValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-values))))))
(common-lisp:deftype describe-activations-filter-keys () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype describe-activations-filter-list ()
   '(trivial-types:proper-list describe-activations-filter))
 (common-lisp:defun |make-describe-activations-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            describe-activations-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-activations-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or describe-activations-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activations-request
                    'make-describe-activations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-activations-result (:copier common-lisp:nil))
   (activation-list common-lisp:nil :type
    (common-lisp:or activation-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activations-result
                    'make-describe-activations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivationList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activation-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-association-request (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (association-id common-lisp:nil :type
    (common-lisp:or association-id common-lisp:null))
   (association-version common-lisp:nil :type
    (common-lisp:or association-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-association-request
                    'make-describe-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-association-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-version))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-association-result (:copier common-lisp:nil))
   (association-description common-lisp:nil :type
    (common-lisp:or association-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-association-result
                    'make-describe-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-association-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-automation-executions-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or automation-execution-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-automation-executions-request
                    'make-describe-automation-executions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-automation-executions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-automation-executions-result (:copier common-lisp:nil))
   (automation-execution-metadata-list common-lisp:nil :type
    (common-lisp:or automation-execution-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-automation-executions-result
                    'make-describe-automation-executions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-automation-executions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionMetadataList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-metadata-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-available-patches-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or patch-orchestrator-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or patch-baseline-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-available-patches-request
                    'make-describe-available-patches-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-available-patches-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-available-patches-result (:copier common-lisp:nil))
   (patches common-lisp:nil :type (common-lisp:or patch-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-available-patches-result
                    'make-describe-available-patches-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-available-patches-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Patches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patches)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-permission-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (permission-type
    (common-lisp:error
     #A((28) common-lisp:base-char . ":permission-type is required"))
    :type (common-lisp:or document-permission-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-permission-request
                    'make-describe-document-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-document-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "PermissionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'permission-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-permission-response (:copier common-lisp:nil))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-permission-response
                    'make-describe-document-permission-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-document-permission-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-document-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-arn common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-request
                    'make-describe-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-document-result (:copier common-lisp:nil))
   (document common-lisp:nil :type
    (common-lisp:or document-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-result 'make-describe-document-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-document-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Document"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-effective-instance-associations-request
      (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or effective-instance-association-max-results
                    common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-effective-instance-associations-request
                    'make-describe-effective-instance-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-effective-instance-associations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-effective-instance-associations-result
      (:copier common-lisp:nil))
   (associations common-lisp:nil :type
    (common-lisp:or instance-association-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-effective-instance-associations-result
                    'make-describe-effective-instance-associations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-effective-instance-associations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Associations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'associations)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-effective-patches-for-patch-baseline-request
      (:copier common-lisp:nil))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or patch-baseline-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-effective-patches-for-patch-baseline-request
                    'make-describe-effective-patches-for-patch-baseline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-effective-patches-for-patch-baseline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-effective-patches-for-patch-baseline-result
      (:copier common-lisp:nil))
   (effective-patches common-lisp:nil :type
    (common-lisp:or effective-patch-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-effective-patches-for-patch-baseline-result
                    'make-describe-effective-patches-for-patch-baseline-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-effective-patches-for-patch-baseline-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EffectivePatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'effective-patches)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-associations-status-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-associations-status-request
                    'make-describe-instance-associations-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-associations-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-associations-status-result (:copier common-lisp:nil))
   (instance-association-status-infos common-lisp:nil :type
    (common-lisp:or instance-association-status-infos common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-associations-status-result
                    'make-describe-instance-associations-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-associations-status-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceAssociationStatusInfos"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-association-status-infos)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-information-request (:copier common-lisp:nil))
   (instance-information-filter-list common-lisp:nil :type
    (common-lisp:or instance-information-filter-list common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or instance-information-string-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-ec2compatible common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-information-request
                    'make-describe-instance-information-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-information-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceInformationFilterList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-information-filter-list)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-information-result (:copier common-lisp:nil))
   (instance-information-list common-lisp:nil :type
    (common-lisp:or instance-information-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-information-result
                    'make-describe-instance-information-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-information-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceInformationList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-information-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-patch-states-for-patch-group-request
      (:copier common-lisp:nil))
   (patch-group
    (common-lisp:error
     #A((24) common-lisp:base-char . ":patch-group is required"))
    :type (common-lisp:or patch-group common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or instance-patch-state-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or patch-compliance-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-patch-states-for-patch-group-request
                    'make-describe-instance-patch-states-for-patch-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-patch-states-for-patch-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-patch-states-for-patch-group-result
      (:copier common-lisp:nil))
   (instance-patch-states common-lisp:nil :type
    (common-lisp:or instance-patch-states-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-patch-states-for-patch-group-result
                    'make-describe-instance-patch-states-for-patch-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-patch-states-for-patch-group-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstancePatchStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-patch-states)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-patch-states-request (:copier common-lisp:nil))
   (instance-ids
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instance-ids is required"))
    :type (common-lisp:or instance-id-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or patch-compliance-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-patch-states-request
                    'make-describe-instance-patch-states-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-patch-states-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-patch-states-result (:copier common-lisp:nil))
   (instance-patch-states common-lisp:nil :type
    (common-lisp:or instance-patch-state-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-patch-states-result
                    'make-describe-instance-patch-states-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-patch-states-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstancePatchStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-patch-states)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-patches-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or patch-orchestrator-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or patch-compliance-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-patches-request
                    'make-describe-instance-patches-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-patches-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-patches-result (:copier common-lisp:nil))
   (patches common-lisp:nil :type
    (common-lisp:or patch-compliance-data-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-patches-result
                    'make-describe-instance-patches-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instance-patches-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Patches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patches)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-execution-task-invocations-request
      (:copier common-lisp:nil))
   (window-execution-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":window-execution-id is required"))
    :type (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-id
    (common-lisp:error #A((20) common-lisp:base-char . ":task-id is required"))
    :type
    (common-lisp:or maintenance-window-execution-task-id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or maintenance-window-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'describe-maintenance-window-execution-task-invocations-request
   'make-describe-maintenance-window-execution-task-invocations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-execution-task-invocations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-id)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-execution-task-invocations-result
      (:copier common-lisp:nil))
   (window-execution-task-invocation-identities common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-invocation-identity-list
                    common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'describe-maintenance-window-execution-task-invocations-result
   'make-describe-maintenance-window-execution-task-invocations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-execution-task-invocations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "WindowExecutionTaskInvocationIdentities"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'window-execution-task-invocation-identities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-execution-tasks-request
      (:copier common-lisp:nil))
   (window-execution-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":window-execution-id is required"))
    :type (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or maintenance-window-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-execution-tasks-request
                    'make-describe-maintenance-window-execution-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-execution-tasks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-execution-tasks-result
      (:copier common-lisp:nil))
   (window-execution-task-identities common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-identity-list
                    common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-execution-tasks-result
                    'make-describe-maintenance-window-execution-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-execution-tasks-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionTaskIdentities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-task-identities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-executions-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or maintenance-window-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-executions-request
                    'make-describe-maintenance-window-executions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-executions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-executions-result (:copier common-lisp:nil))
   (window-executions common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-executions-result
                    'make-describe-maintenance-window-executions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-executions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-executions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-targets-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or maintenance-window-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-targets-request
                    'make-describe-maintenance-window-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-targets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-targets-result (:copier common-lisp:nil))
   (targets common-lisp:nil :type
    (common-lisp:or maintenance-window-target-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-targets-result
                    'make-describe-maintenance-window-targets-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-targets-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-tasks-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or maintenance-window-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-tasks-request
                    'make-describe-maintenance-window-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-tasks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-window-tasks-result (:copier common-lisp:nil))
   (tasks common-lisp:nil :type
    (common-lisp:or maintenance-window-task-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-window-tasks-result
                    'make-describe-maintenance-window-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-window-tasks-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tasks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tasks)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-windows-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or maintenance-window-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-windows-request
                    'make-describe-maintenance-windows-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-windows-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-windows-result (:copier common-lisp:nil))
   (window-identities common-lisp:nil :type
    (common-lisp:or maintenance-window-identity-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-windows-result
                    'make-describe-maintenance-windows-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-maintenance-windows-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowIdentities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-identities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-parameters-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or parameters-filter-list common-lisp:null))
   (parameter-filters common-lisp:nil :type
    (common-lisp:or parameter-string-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-parameters-request
                    'make-describe-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "ParameterFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-parameters-result (:copier common-lisp:nil))
   (parameters common-lisp:nil :type
    (common-lisp:or parameter-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-parameters-result
                    'make-describe-parameters-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-parameters-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-patch-baselines-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or patch-orchestrator-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or patch-baseline-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-patch-baselines-request
                    'make-describe-patch-baselines-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-patch-baselines-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-patch-baselines-result (:copier common-lisp:nil))
   (baseline-identities common-lisp:nil :type
    (common-lisp:or patch-baseline-identity-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-patch-baselines-result
                    'make-describe-patch-baselines-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-patch-baselines-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineIdentities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-identities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-patch-group-state-request (:copier common-lisp:nil))
   (patch-group
    (common-lisp:error
     #A((24) common-lisp:base-char . ":patch-group is required"))
    :type (common-lisp:or patch-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-patch-group-state-request
                    'make-describe-patch-group-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-patch-group-state-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-patch-group-state-result (:copier common-lisp:nil))
   (instances common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instances-with-installed-patches common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instances-with-installed-other-patches common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instances-with-missing-patches common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instances-with-failed-patches common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instances-with-not-applicable-patches common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-patch-group-state-result
                    'make-describe-patch-group-state-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-patch-group-state-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "InstancesWithInstalledPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-with-installed-patches)))
    (aws-sdk/generator/shape::to-query-params
     "InstancesWithInstalledOtherPatches"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'instances-with-installed-other-patches)))
    (aws-sdk/generator/shape::to-query-params "InstancesWithMissingPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-with-missing-patches)))
    (aws-sdk/generator/shape::to-query-params "InstancesWithFailedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-with-failed-patches)))
    (aws-sdk/generator/shape::to-query-params
     "InstancesWithNotApplicablePatches"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'instances-with-not-applicable-patches))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-patch-groups-request (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or patch-baseline-max-results common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or patch-orchestrator-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-patch-groups-request
                    'make-describe-patch-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-patch-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-patch-groups-result (:copier common-lisp:nil))
   (mappings common-lisp:nil :type
    (common-lisp:or patch-group-patch-baseline-mapping-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-patch-groups-result
                    'make-describe-patch-groups-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-patch-groups-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Mappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mappings)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype description-in-document () 'common-lisp:string)
(common-lisp:deftype document-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (document-already-exists (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-already-exists 'make-document-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-already-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype document-content () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (document-default-version-description (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (default-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-default-version-description
                    'make-document-default-version-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-default-version-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DefaultVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-version))))))
(common-lisp:progn
 (common-lisp:defstruct (document-description (:copier common-lisp:nil))
   (sha1 common-lisp:nil :type (common-lisp:or document-sha1 common-lisp:null))
   (hash common-lisp:nil :type (common-lisp:or document-hash common-lisp:null))
   (hash-type common-lisp:nil :type
    (common-lisp:or document-hash-type common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or document-arn common-lisp:null))
   (owner common-lisp:nil :type
    (common-lisp:or document-owner common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or document-status common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-in-document common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or document-parameter-list common-lisp:null))
   (platform-types common-lisp:nil :type
    (common-lisp:or platform-type-list common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or document-type common-lisp:null))
   (schema-version common-lisp:nil :type
    (common-lisp:or document-schema-version common-lisp:null))
   (latest-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (default-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-description 'make-document-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape document-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Sha1"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sha1)))
    (aws-sdk/generator/shape::to-query-params "Hash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hash)))
    (aws-sdk/generator/shape::to-query-params "HashType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hash-type)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "CreatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "PlatformTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-types)))
    (aws-sdk/generator/shape::to-query-params "DocumentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-type)))
    (aws-sdk/generator/shape::to-query-params "SchemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version)))
    (aws-sdk/generator/shape::to-query-params "LatestVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-version)))
    (aws-sdk/generator/shape::to-query-params "DefaultVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-version))))))
(common-lisp:progn
 (common-lisp:defstruct (document-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or document-filter-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or document-filter-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'document-filter 'make-document-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape document-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype document-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype document-filter-list ()
   '(trivial-types:proper-list document-filter))
 (common-lisp:defun |make-document-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-filter-value () 'common-lisp:string)
(common-lisp:deftype document-hash () 'common-lisp:string)
(common-lisp:deftype document-hash-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (document-identifier (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-arn common-lisp:null))
   (owner common-lisp:nil :type
    (common-lisp:or document-owner common-lisp:null))
   (platform-types common-lisp:nil :type
    (common-lisp:or platform-type-list common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or document-type common-lisp:null))
   (schema-version common-lisp:nil :type
    (common-lisp:or document-schema-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-identifier 'make-document-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape document-identifier))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "PlatformTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-types)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "DocumentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-type)))
    (aws-sdk/generator/shape::to-query-params "SchemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version))))))
(common-lisp:progn
 (common-lisp:deftype document-identifier-list ()
   '(trivial-types:proper-list document-identifier))
 (common-lisp:defun |make-document-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (document-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-limit-exceeded 'make-document-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype document-name () 'common-lisp:string)
(common-lisp:deftype document-owner () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (document-parameter (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or document-parameter-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or document-parameter-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or document-parameter-descrption common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or document-parameter-default-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-parameter 'make-document-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape document-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value))))))
(common-lisp:deftype document-parameter-default-value () 'common-lisp:string)
(common-lisp:deftype document-parameter-descrption () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype document-parameter-list ()
   '(trivial-types:proper-list document-parameter))
 (common-lisp:defun |make-document-parameter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-parameter-name () 'common-lisp:string)
(common-lisp:deftype document-parameter-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (document-permission-limit (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-permission-limit
                    'make-document-permission-limit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-permission-limit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype document-permission-type () 'common-lisp:string)
(common-lisp:deftype document-schema-version () 'common-lisp:string)
(common-lisp:deftype document-sha1 () 'common-lisp:string)
(common-lisp:deftype document-status () 'common-lisp:string)
(common-lisp:deftype document-type () 'common-lisp:string)
(common-lisp:deftype document-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (document-version-info (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (is-default-version common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-version-info 'make-document-version-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-version-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "CreatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "IsDefaultVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-default-version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (document-version-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-version-limit-exceeded
                    'make-document-version-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-version-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype document-version-list ()
   '(trivial-types:proper-list document-version-info))
 (common-lisp:defun |make-document-version-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-version-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-version-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (does-not-exist-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'does-not-exist-exception 'make-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          does-not-exist-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (duplicate-document-content (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-document-content
                    'make-duplicate-document-content))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-document-content))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (duplicate-instance-id (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-instance-id 'make-duplicate-instance-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-instance-id))
   (common-lisp:append)))
(common-lisp:deftype effective-instance-association-max-results ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (effective-patch (:copier common-lisp:nil))
   (patch common-lisp:nil :type (common-lisp:or patch common-lisp:null))
   (patch-status common-lisp:nil :type
    (common-lisp:or patch-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'effective-patch 'make-effective-patch))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape effective-patch))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Patch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch)))
    (aws-sdk/generator/shape::to-query-params "PatchStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-status))))))
(common-lisp:progn
 (common-lisp:deftype effective-patch-list ()
   '(trivial-types:proper-list effective-patch))
 (common-lisp:defun |make-effective-patch-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list effective-patch))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-count () 'common-lisp:integer)
(common-lisp:deftype expiration-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (failed-create-association (:copier common-lisp:nil))
   (entry common-lisp:nil :type
    (common-lisp:or create-association-batch-request-entry common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or batch-error-message common-lisp:null))
   (fault common-lisp:nil :type (common-lisp:or fault common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-create-association
                    'make-failed-create-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          failed-create-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Entry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'entry)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Fault"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fault))))))
(common-lisp:progn
 (common-lisp:deftype failed-create-association-list ()
   '(trivial-types:proper-list failed-create-association))
 (common-lisp:defun |make-failed-create-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-create-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (failure-details (:copier common-lisp:nil))
   (failure-stage common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (failure-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failure-details 'make-failure-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape failure-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailureStage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-stage)))
    (aws-sdk/generator/shape::to-query-params "FailureType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-type)))
    (aws-sdk/generator/shape::to-query-params "Details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:deftype fault () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (feature-not-available-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'feature-not-available-exception
                    'make-feature-not-available-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          feature-not-available-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-automation-execution-request (:copier common-lisp:nil))
   (automation-execution-id
    (common-lisp:error
     #A((36) common-lisp:base-char . ":automation-execution-id is required"))
    :type (common-lisp:or automation-execution-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-automation-execution-request
                    'make-get-automation-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-automation-execution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-automation-execution-result (:copier common-lisp:nil))
   (automation-execution common-lisp:nil :type
    (common-lisp:or automation-execution common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-automation-execution-result
                    'make-get-automation-execution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-automation-execution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-command-invocation-request (:copier common-lisp:nil))
   (command-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":command-id is required"))
    :type (common-lisp:or command-id common-lisp:null))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (plugin-name common-lisp:nil :type
    (common-lisp:or command-plugin-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-command-invocation-request
                    'make-get-command-invocation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-command-invocation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "PluginName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'plugin-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-command-invocation-result (:copier common-lisp:nil))
   (command-id common-lisp:nil :type
    (common-lisp:or command-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (comment common-lisp:nil :type (common-lisp:or comment common-lisp:null))
   (document-name common-lisp:nil :type
    (common-lisp:or document-name common-lisp:null))
   (plugin-name common-lisp:nil :type
    (common-lisp:or command-plugin-name common-lisp:null))
   (response-code common-lisp:nil :type
    (common-lisp:or response-code common-lisp:null))
   (execution-start-date-time common-lisp:nil :type
    (common-lisp:or string-date-time common-lisp:null))
   (execution-elapsed-time common-lisp:nil :type
    (common-lisp:or string-date-time common-lisp:null))
   (execution-end-date-time common-lisp:nil :type
    (common-lisp:or string-date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or command-invocation-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or status-details common-lisp:null))
   (standard-output-content common-lisp:nil :type
    (common-lisp:or standard-output-content common-lisp:null))
   (standard-output-url common-lisp:nil :type
    (common-lisp:or url common-lisp:null))
   (standard-error-content common-lisp:nil :type
    (common-lisp:or standard-error-content common-lisp:null))
   (standard-error-url common-lisp:nil :type
    (common-lisp:or url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-command-invocation-result
                    'make-get-command-invocation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-command-invocation-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "DocumentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-name)))
    (aws-sdk/generator/shape::to-query-params "PluginName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'plugin-name)))
    (aws-sdk/generator/shape::to-query-params "ResponseCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-code)))
    (aws-sdk/generator/shape::to-query-params "ExecutionStartDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-date-time)))
    (aws-sdk/generator/shape::to-query-params "ExecutionElapsedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-elapsed-time)))
    (aws-sdk/generator/shape::to-query-params "ExecutionEndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-end-date-time)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "StandardOutputContent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-output-content)))
    (aws-sdk/generator/shape::to-query-params "StandardOutputUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-output-url)))
    (aws-sdk/generator/shape::to-query-params "StandardErrorContent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-error-content)))
    (aws-sdk/generator/shape::to-query-params "StandardErrorUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'standard-error-url))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-default-patch-baseline-request (:copier common-lisp:nil))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-default-patch-baseline-request
                    'make-get-default-patch-baseline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-default-patch-baseline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-default-patch-baseline-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-default-patch-baseline-result
                    'make-get-default-patch-baseline-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-default-patch-baseline-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployable-patch-snapshot-for-instance-request
      (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (snapshot-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":snapshot-id is required"))
    :type (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployable-patch-snapshot-for-instance-request
                    'make-get-deployable-patch-snapshot-for-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployable-patch-snapshot-for-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "SnapshotId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployable-patch-snapshot-for-instance-result
      (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null))
   (snapshot-download-url common-lisp:nil :type
    (common-lisp:or snapshot-download-url common-lisp:null))
   (product common-lisp:nil :type (common-lisp:or product common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployable-patch-snapshot-for-instance-result
                    'make-get-deployable-patch-snapshot-for-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployable-patch-snapshot-for-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "SnapshotId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-id)))
    (aws-sdk/generator/shape::to-query-params "SnapshotDownloadUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-download-url)))
    (aws-sdk/generator/shape::to-query-params "Product"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product))))))
(common-lisp:progn
 (common-lisp:defstruct (get-document-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-arn common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-request 'make-get-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version))))))
(common-lisp:progn
 (common-lisp:defstruct (get-document-result (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or document-arn common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (content common-lisp:nil :type
    (common-lisp:or document-content common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or document-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-result 'make-get-document-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-document-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content)))
    (aws-sdk/generator/shape::to-query-params "DocumentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-type))))))
(common-lisp:progn
 (common-lisp:defstruct (get-inventory-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or inventory-filter-list common-lisp:null))
   (result-attributes common-lisp:nil :type
    (common-lisp:or result-attribute-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-inventory-request 'make-get-inventory-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-inventory-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "ResultAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result-attributes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (get-inventory-result (:copier common-lisp:nil))
   (entities common-lisp:nil :type
    (common-lisp:or inventory-result-entity-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-inventory-result 'make-get-inventory-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-inventory-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Entities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'entities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype get-inventory-schema-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (get-inventory-schema-request (:copier common-lisp:nil))
   (type-name common-lisp:nil :type
    (common-lisp:or inventory-item-type-name-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or get-inventory-schema-max-results common-lisp:null))
   (sub-type common-lisp:nil :type
    (common-lisp:or is-sub-type-schema common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-inventory-schema-request
                    'make-get-inventory-schema-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-inventory-schema-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "SubType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sub-type))))))
(common-lisp:progn
 (common-lisp:defstruct (get-inventory-schema-result (:copier common-lisp:nil))
   (schemas common-lisp:nil :type
    (common-lisp:or inventory-item-schema-result-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-inventory-schema-result
                    'make-get-inventory-schema-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-inventory-schema-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Schemas"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schemas)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-execution-request (:copier common-lisp:nil))
   (window-execution-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":window-execution-id is required"))
    :type (common-lisp:or maintenance-window-execution-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-execution-request
                    'make-get-maintenance-window-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-execution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-execution-result (:copier common-lisp:nil))
   (window-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-ids common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-id-list
                    common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status-details
                    common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-execution-result
                    'make-get-maintenance-window-execution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-execution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-ids)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-execution-task-invocation-request
      (:copier common-lisp:nil))
   (window-execution-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":window-execution-id is required"))
    :type (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-id
    (common-lisp:error #A((20) common-lisp:base-char . ":task-id is required"))
    :type
    (common-lisp:or maintenance-window-execution-task-id common-lisp:null))
   (invocation-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":invocation-id is required"))
    :type
    (common-lisp:or maintenance-window-execution-task-invocation-id
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-execution-task-invocation-request
                    'make-get-maintenance-window-execution-task-invocation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-execution-task-invocation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-id)))
    (aws-sdk/generator/shape::to-query-params "InvocationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invocation-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-execution-task-invocation-result
      (:copier common-lisp:nil))
   (window-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-id common-lisp:null))
   (invocation-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-invocation-id
                    common-lisp:null))
   (execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-execution-id
                    common-lisp:null))
   (task-type common-lisp:nil :type
    (common-lisp:or maintenance-window-task-type common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-invocation-parameters
                    common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status-details
                    common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (owner-information common-lisp:nil :type
    (common-lisp:or owner-information common-lisp:null))
   (window-target-id common-lisp:nil :type
    (common-lisp:or maintenance-window-task-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-execution-task-invocation-result
                    'make-get-maintenance-window-execution-task-invocation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-execution-task-invocation-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-execution-id)))
    (aws-sdk/generator/shape::to-query-params "InvocationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invocation-id)))
    (aws-sdk/generator/shape::to-query-params "ExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-type)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "OwnerInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-information)))
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-execution-task-request (:copier common-lisp:nil))
   (window-execution-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":window-execution-id is required"))
    :type (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-id
    (common-lisp:error #A((20) common-lisp:base-char . ":task-id is required"))
    :type
    (common-lisp:or maintenance-window-execution-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-execution-task-request
                    'make-get-maintenance-window-execution-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-execution-task-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-execution-task-result (:copier common-lisp:nil))
   (window-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-id common-lisp:null))
   (task-arn common-lisp:nil :type
    (common-lisp:or maintenance-window-task-arn common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or maintenance-window-task-type common-lisp:null))
   (task-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-parameters-list common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or maintenance-window-task-priority common-lisp:null))
   (max-concurrency common-lisp:nil :type
    (common-lisp:or max-concurrency common-lisp:null))
   (max-errors common-lisp:nil :type
    (common-lisp:or max-errors common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status-details
                    common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-execution-task-result
                    'make-get-maintenance-window-execution-task-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-execution-task-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "TaskParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-parameters)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-request
                    'make-get-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or maintenance-window-schedule common-lisp:null))
   (duration common-lisp:nil :type
    (common-lisp:or maintenance-window-duration-hours common-lisp:null))
   (cutoff common-lisp:nil :type
    (common-lisp:or maintenance-window-cutoff common-lisp:null))
   (allow-unassociated-targets common-lisp:nil :type
    (common-lisp:or maintenance-window-allow-unassociated-targets
                    common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or maintenance-window-enabled common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (modified-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-result
                    'make-get-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "Cutoff"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cutoff)))
    (aws-sdk/generator/shape::to-query-params "AllowUnassociatedTargets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-unassociated-targets)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "CreatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "ModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'modified-date))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-task-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (window-task-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":window-task-id is required"))
    :type (common-lisp:or maintenance-window-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-task-request
                    'make-get-maintenance-window-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-task-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-maintenance-window-task-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-task-id common-lisp:nil :type
    (common-lisp:or maintenance-window-task-id common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (task-arn common-lisp:nil :type
    (common-lisp:or maintenance-window-task-arn common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (task-type common-lisp:nil :type
    (common-lisp:or maintenance-window-task-type common-lisp:null))
   (task-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-parameters common-lisp:null))
   (task-invocation-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-invocation-parameters
                    common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or maintenance-window-task-priority common-lisp:null))
   (max-concurrency common-lisp:nil :type
    (common-lisp:or max-concurrency common-lisp:null))
   (max-errors common-lisp:nil :type
    (common-lisp:or max-errors common-lisp:null))
   (logging-info common-lisp:nil :type
    (common-lisp:or logging-info common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-maintenance-window-task-result
                    'make-get-maintenance-window-task-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-maintenance-window-task-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "TaskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "TaskType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-type)))
    (aws-sdk/generator/shape::to-query-params "TaskParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-parameters)))
    (aws-sdk/generator/shape::to-query-params "TaskInvocationParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-invocation-parameters)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "LoggingInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-info)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-parameter-history-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or psparameter-name common-lisp:null))
   (with-decryption common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameter-history-request
                    'make-get-parameter-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameter-history-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "WithDecryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'with-decryption)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-parameter-history-result (:copier common-lisp:nil))
   (parameters common-lisp:nil :type
    (common-lisp:or parameter-history-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameter-history-result
                    'make-get-parameter-history-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameter-history-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-parameter-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or psparameter-name common-lisp:null))
   (with-decryption common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameter-request 'make-get-parameter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "WithDecryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'with-decryption))))))
(common-lisp:progn
 (common-lisp:defstruct (get-parameter-result (:copier common-lisp:nil))
   (parameter common-lisp:nil :type
    (common-lisp:or parameter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameter-result 'make-get-parameter-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-parameter-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parameter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter))))))
(common-lisp:deftype get-parameters-by-path-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (get-parameters-by-path-request (:copier common-lisp:nil))
   (path
    (common-lisp:error #A((17) common-lisp:base-char . ":path is required"))
    :type (common-lisp:or psparameter-name common-lisp:null))
   (recursive common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (parameter-filters common-lisp:nil :type
    (common-lisp:or parameter-string-filter-list common-lisp:null))
   (with-decryption common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or get-parameters-by-path-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameters-by-path-request
                    'make-get-parameters-by-path-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameters-by-path-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "Recursive"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recursive)))
    (aws-sdk/generator/shape::to-query-params "ParameterFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-filters)))
    (aws-sdk/generator/shape::to-query-params "WithDecryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'with-decryption)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-parameters-by-path-result (:copier common-lisp:nil))
   (parameters common-lisp:nil :type
    (common-lisp:or parameter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameters-by-path-result
                    'make-get-parameters-by-path-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameters-by-path-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-parameters-request (:copier common-lisp:nil))
   (names
    (common-lisp:error #A((18) common-lisp:base-char . ":names is required"))
    :type (common-lisp:or parameter-name-list common-lisp:null))
   (with-decryption common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameters-request 'make-get-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "WithDecryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'with-decryption))))))
(common-lisp:progn
 (common-lisp:defstruct (get-parameters-result (:copier common-lisp:nil))
   (parameters common-lisp:nil :type
    (common-lisp:or parameter-list common-lisp:null))
   (invalid-parameters common-lisp:nil :type
    (common-lisp:or parameter-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-parameters-result 'make-get-parameters-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-parameters-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "InvalidParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalid-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-patch-baseline-for-patch-group-request (:copier common-lisp:nil))
   (patch-group
    (common-lisp:error
     #A((24) common-lisp:base-char . ":patch-group is required"))
    :type (common-lisp:or patch-group common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-patch-baseline-for-patch-group-request
                    'make-get-patch-baseline-for-patch-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-patch-baseline-for-patch-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-patch-baseline-for-patch-group-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null))
   (patch-group common-lisp:nil :type
    (common-lisp:or patch-group common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-patch-baseline-for-patch-group-result
                    'make-get-patch-baseline-for-patch-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-patch-baseline-for-patch-group-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system))))))
(common-lisp:progn
 (common-lisp:defstruct (get-patch-baseline-request (:copier common-lisp:nil))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-patch-baseline-request
                    'make-get-patch-baseline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-patch-baseline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-patch-baseline-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or baseline-name common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (global-filters common-lisp:nil :type
    (common-lisp:or patch-filter-group common-lisp:null))
   (approval-rules common-lisp:nil :type
    (common-lisp:or patch-rule-group common-lisp:null))
   (approved-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (approved-patches-compliance-level common-lisp:nil :type
    (common-lisp:or patch-compliance-level common-lisp:null))
   (rejected-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (patch-groups common-lisp:nil :type
    (common-lisp:or patch-group-list common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (modified-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or baseline-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-patch-baseline-result
                    'make-get-patch-baseline-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-patch-baseline-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "GlobalFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-filters)))
    (aws-sdk/generator/shape::to-query-params "ApprovalRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approval-rules)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatchesComplianceLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches-compliance-level)))
    (aws-sdk/generator/shape::to-query-params "RejectedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejected-patches)))
    (aws-sdk/generator/shape::to-query-params "PatchGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-groups)))
    (aws-sdk/generator/shape::to-query-params "CreatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "ModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'modified-date)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (hierarchy-level-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hierarchy-level-limit-exceeded-exception
                    'make-hierarchy-level-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          hierarchy-level-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (hierarchy-type-mismatch-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hierarchy-type-mismatch-exception
                    'make-hierarchy-type-mismatch-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          hierarchy-type-mismatch-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype ipaddress () 'common-lisp:string)
(common-lisp:deftype iam-role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (idempotent-parameter-mismatch (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'idempotent-parameter-mismatch
                    'make-idempotent-parameter-mismatch))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          idempotent-parameter-mismatch))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-aggregated-association-overview (:copier common-lisp:nil))
   (detailed-status common-lisp:nil :type
    (common-lisp:or status-name common-lisp:null))
   (instance-association-status-aggregated-count common-lisp:nil :type
    (common-lisp:or instance-association-status-aggregated-count
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-aggregated-association-overview
                    'make-instance-aggregated-association-overview))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-aggregated-association-overview))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DetailedStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detailed-status)))
    (aws-sdk/generator/shape::to-query-params
     "InstanceAssociationStatusAggregatedCount"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'instance-association-status-aggregated-count))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-association (:copier common-lisp:nil))
   (association-id common-lisp:nil :type
    (common-lisp:or association-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (content common-lisp:nil :type
    (common-lisp:or document-content common-lisp:null))
   (association-version common-lisp:nil :type
    (common-lisp:or association-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-association 'make-instance-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content)))
    (aws-sdk/generator/shape::to-query-params "AssociationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-version))))))
(common-lisp:deftype instance-association-execution-summary ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-association-list ()
   '(trivial-types:proper-list instance-association))
 (common-lisp:defun |make-instance-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-association-output-location (:copier common-lisp:nil))
   (s3location common-lisp:nil :type
    (common-lisp:or s3output-location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-association-output-location
                    'make-instance-association-output-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-association-output-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3location))))))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-association-output-url (:copier common-lisp:nil))
   (s3output-url common-lisp:nil :type
    (common-lisp:or s3output-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-association-output-url
                    'make-instance-association-output-url))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-association-output-url))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3OutputUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3output-url))))))
(common-lisp:defstruct
    (instance-association-status-aggregated-count
     (:constructor |make-instance-association-status-aggregated-count|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-association-status-info (:copier common-lisp:nil))
   (association-id common-lisp:nil :type
    (common-lisp:or association-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (association-version common-lisp:nil :type
    (common-lisp:or association-version common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (execution-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status-name common-lisp:null))
   (detailed-status common-lisp:nil :type
    (common-lisp:or status-name common-lisp:null))
   (execution-summary common-lisp:nil :type
    (common-lisp:or instance-association-execution-summary common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or agent-error-code common-lisp:null))
   (output-url common-lisp:nil :type
    (common-lisp:or instance-association-output-url common-lisp:null))
   (association-name common-lisp:nil :type
    (common-lisp:or association-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-association-status-info
                    'make-instance-association-status-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-association-status-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "AssociationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-version)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "ExecutionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-date)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "DetailedStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detailed-status)))
    (aws-sdk/generator/shape::to-query-params "ExecutionSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-summary)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "OutputUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-url)))
    (aws-sdk/generator/shape::to-query-params "AssociationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-name))))))
(common-lisp:progn
 (common-lisp:deftype instance-association-status-infos ()
   '(trivial-types:proper-list instance-association-status-info))
 (common-lisp:defun |make-instance-association-status-infos|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-association-status-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-count () 'common-lisp:integer)
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-id-list ()
   '(trivial-types:proper-list instance-id))
 (common-lisp:defun |make-instance-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-information (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (ping-status common-lisp:nil :type
    (common-lisp:or ping-status common-lisp:null))
   (last-ping-date-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (agent-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (is-latest-version common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (platform-type common-lisp:nil :type
    (common-lisp:or platform-type common-lisp:null))
   (platform-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (platform-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (activation-id common-lisp:nil :type
    (common-lisp:or activation-id common-lisp:null))
   (iam-role common-lisp:nil :type (common-lisp:or iam-role common-lisp:null))
   (registration-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipaddress common-lisp:nil :type
    (common-lisp:or ipaddress common-lisp:null))
   (computer-name common-lisp:nil :type
    (common-lisp:or computer-name common-lisp:null))
   (association-status common-lisp:nil :type
    (common-lisp:or status-name common-lisp:null))
   (last-association-execution-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-successful-association-execution-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (association-overview common-lisp:nil :type
    (common-lisp:or instance-aggregated-association-overview
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-information 'make-instance-information))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-information))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "PingStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ping-status)))
    (aws-sdk/generator/shape::to-query-params "LastPingDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-ping-date-time)))
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version)))
    (aws-sdk/generator/shape::to-query-params "IsLatestVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-latest-version)))
    (aws-sdk/generator/shape::to-query-params "PlatformType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-type)))
    (aws-sdk/generator/shape::to-query-params "PlatformName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-version)))
    (aws-sdk/generator/shape::to-query-params "ActivationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activation-id)))
    (aws-sdk/generator/shape::to-query-params "IamRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-role)))
    (aws-sdk/generator/shape::to-query-params "RegistrationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-date)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "IPAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipaddress)))
    (aws-sdk/generator/shape::to-query-params "ComputerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'computer-name)))
    (aws-sdk/generator/shape::to-query-params "AssociationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-status)))
    (aws-sdk/generator/shape::to-query-params "LastAssociationExecutionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-association-execution-date)))
    (aws-sdk/generator/shape::to-query-params
     "LastSuccessfulAssociationExecutionDate"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'last-successful-association-execution-date)))
    (aws-sdk/generator/shape::to-query-params "AssociationOverview"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-overview))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-information-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or instance-information-filter-key common-lisp:null))
   (value-set
    (common-lisp:error
     #A((21) common-lisp:base-char . ":valueset is required"))
    :type
    (common-lisp:or instance-information-filter-value-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-information-filter
                    'make-instance-information-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-information-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "valueSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value-set))))))
(common-lisp:deftype instance-information-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-information-filter-list ()
   '(trivial-types:proper-list instance-information-filter))
 (common-lisp:defun |make-instance-information-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-information-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-information-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-information-filter-value-set ()
   '(trivial-types:proper-list instance-information-filter-value))
 (common-lisp:defun |make-instance-information-filter-value-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-information-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-information-list ()
   '(trivial-types:proper-list instance-information))
 (common-lisp:defun |make-instance-information-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-information))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-information-string-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type
    (common-lisp:or instance-information-string-filter-key common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type
    (common-lisp:or instance-information-filter-value-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-information-string-filter
                    'make-instance-information-string-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-information-string-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype instance-information-string-filter-key ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-information-string-filter-list ()
   '(trivial-types:proper-list instance-information-string-filter))
 (common-lisp:defun |make-instance-information-string-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-information-string-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-patch-state (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (patch-group
    (common-lisp:error
     #A((24) common-lisp:base-char . ":patch-group is required"))
    :type (common-lisp:or patch-group common-lisp:null))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null))
   (owner-information common-lisp:nil :type
    (common-lisp:or owner-information common-lisp:null))
   (installed-count common-lisp:nil :type
    (common-lisp:or patch-installed-count common-lisp:null))
   (installed-other-count common-lisp:nil :type
    (common-lisp:or patch-installed-other-count common-lisp:null))
   (missing-count common-lisp:nil :type
    (common-lisp:or patch-missing-count common-lisp:null))
   (failed-count common-lisp:nil :type
    (common-lisp:or patch-failed-count common-lisp:null))
   (not-applicable-count common-lisp:nil :type
    (common-lisp:or patch-not-applicable-count common-lisp:null))
   (operation-start-time
    (common-lisp:error
     #A((33) common-lisp:base-char . ":operation-start-time is required"))
    :type (common-lisp:or date-time common-lisp:null))
   (operation-end-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":operation-end-time is required"))
    :type (common-lisp:or date-time common-lisp:null))
   (operation
    (common-lisp:error
     #A((22) common-lisp:base-char . ":operation is required"))
    :type (common-lisp:or patch-operation-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-patch-state 'make-instance-patch-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-patch-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group)))
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "SnapshotId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-id)))
    (aws-sdk/generator/shape::to-query-params "OwnerInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-information)))
    (aws-sdk/generator/shape::to-query-params "InstalledCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'installed-count)))
    (aws-sdk/generator/shape::to-query-params "InstalledOtherCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'installed-other-count)))
    (aws-sdk/generator/shape::to-query-params "MissingCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'missing-count)))
    (aws-sdk/generator/shape::to-query-params "FailedCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-count)))
    (aws-sdk/generator/shape::to-query-params "NotApplicableCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'not-applicable-count)))
    (aws-sdk/generator/shape::to-query-params "OperationStartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-start-time)))
    (aws-sdk/generator/shape::to-query-params "OperationEndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-end-time)))
    (aws-sdk/generator/shape::to-query-params "Operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-patch-state-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or instance-patch-state-filter-key common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or instance-patch-state-filter-values common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type
    (common-lisp:or instance-patch-state-operator-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-patch-state-filter
                    'make-instance-patch-state-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-patch-state-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype instance-patch-state-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-patch-state-filter-list ()
   '(trivial-types:proper-list instance-patch-state-filter))
 (common-lisp:defun |make-instance-patch-state-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-patch-state-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-patch-state-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-patch-state-filter-values ()
   '(trivial-types:proper-list instance-patch-state-filter-value))
 (common-lisp:defun |make-instance-patch-state-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-patch-state-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-patch-state-list ()
   '(trivial-types:proper-list instance-patch-state))
 (common-lisp:defun |make-instance-patch-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-patch-state))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-patch-state-operator-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-patch-states-list ()
   '(trivial-types:proper-list instance-patch-state))
 (common-lisp:defun |make-instance-patch-states-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-patch-state))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-tag-name () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-server-error (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'make-internal-server-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-activation (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-activation 'make-invalid-activation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-activation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-activation-id (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-activation-id 'make-invalid-activation-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-activation-id))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-allowed-pattern-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-allowed-pattern-exception
                    'make-invalid-allowed-pattern-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-allowed-pattern-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-association-version (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-association-version
                    'make-invalid-association-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-association-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-automation-execution-parameters-exception
      (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-automation-execution-parameters-exception
                    'make-invalid-automation-execution-parameters-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-automation-execution-parameters-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-automation-signal-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-automation-signal-exception
                    'make-invalid-automation-signal-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-automation-signal-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-command-id (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-command-id 'make-invalid-command-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-command-id))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-document (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-document 'make-invalid-document))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-document))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-document-content (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-document-content 'make-invalid-document-content))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-document-content))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-document-operation (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-document-operation
                    'make-invalid-document-operation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-document-operation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-document-schema-version (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-document-schema-version
                    'make-invalid-document-schema-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-document-schema-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-document-version (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-document-version 'make-invalid-document-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-document-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-filter (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-filter 'make-invalid-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-filter-key (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-filter-key 'make-invalid-filter-key))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-filter-key))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-filter-option (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-filter-option 'make-invalid-filter-option))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-filter-option))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-filter-value (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-filter-value 'make-invalid-filter-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-filter-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-instance-id (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-instance-id 'make-invalid-instance-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-instance-id))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-instance-information-filter-value (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-instance-information-filter-value
                    'make-invalid-instance-information-filter-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-instance-information-filter-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-inventory-item-context-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-inventory-item-context-exception
                    'make-invalid-inventory-item-context-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-inventory-item-context-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-item-content-exception (:copier common-lisp:nil))
   (type-name common-lisp:nil :type
    (common-lisp:or inventory-item-type-name common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-item-content-exception
                    'make-invalid-item-content-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-item-content-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-key-id (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-key-id 'make-invalid-key-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-key-id))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-next-token (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token 'make-invalid-next-token))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-next-token))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-notification-config (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-notification-config
                    'make-invalid-notification-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-notification-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-output-folder (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-output-folder 'make-invalid-output-folder))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-output-folder))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-output-location (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-output-location 'make-invalid-output-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-output-location))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameters (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameters 'make-invalid-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-permission-type (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-permission-type 'make-invalid-permission-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-permission-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-plugin-name (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-plugin-name 'make-invalid-plugin-name))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-plugin-name))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-resource-id (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-id 'make-invalid-resource-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-resource-id))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-resource-type (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-type 'make-invalid-resource-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-resource-type))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-result-attribute-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-result-attribute-exception
                    'make-invalid-result-attribute-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-result-attribute-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-role (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-role 'make-invalid-role))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-role))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-schedule (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-schedule 'make-invalid-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-schedule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-target (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-target 'make-invalid-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-target))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-type-name-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-type-name-exception
                    'make-invalid-type-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-type-name-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-update (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-update 'make-invalid-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype inventory-attribute-data-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (inventory-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or inventory-filter-key common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or inventory-filter-value-list common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or inventory-query-operator-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-filter 'make-inventory-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape inventory-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype inventory-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inventory-filter-list ()
   '(trivial-types:proper-list inventory-filter))
 (common-lisp:defun |make-inventory-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inventory-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inventory-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inventory-filter-value-list ()
   '(trivial-types:proper-list inventory-filter-value))
 (common-lisp:defun |make-inventory-filter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inventory-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (inventory-item (:copier common-lisp:nil))
   (type-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":type-name is required"))
    :type (common-lisp:or inventory-item-type-name common-lisp:null))
   (schema-version
    (common-lisp:error
     #A((27) common-lisp:base-char . ":schema-version is required"))
    :type (common-lisp:or inventory-item-schema-version common-lisp:null))
   (capture-time
    (common-lisp:error
     #A((25) common-lisp:base-char . ":capture-time is required"))
    :type (common-lisp:or inventory-item-capture-time common-lisp:null))
   (content-hash common-lisp:nil :type
    (common-lisp:or inventory-item-content-hash common-lisp:null))
   (content common-lisp:nil :type
    (common-lisp:or inventory-item-entry-list common-lisp:null))
   (context common-lisp:nil :type
    (common-lisp:or inventory-item-content-context common-lisp:null)))
 (common-lisp:export (common-lisp:list 'inventory-item 'make-inventory-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape inventory-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "SchemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version)))
    (aws-sdk/generator/shape::to-query-params "CaptureTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capture-time)))
    (aws-sdk/generator/shape::to-query-params "ContentHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-hash)))
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content)))
    (aws-sdk/generator/shape::to-query-params "Context"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'context))))))
(common-lisp:progn
 (common-lisp:defstruct (inventory-item-attribute (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or inventory-item-attribute-name common-lisp:null))
   (data-type
    (common-lisp:error
     #A((22) common-lisp:base-char . ":data-type is required"))
    :type (common-lisp:or inventory-attribute-data-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-item-attribute 'make-inventory-item-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-item-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DataType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-type))))))
(common-lisp:progn
 (common-lisp:deftype inventory-item-attribute-list ()
   '(trivial-types:proper-list inventory-item-attribute))
 (common-lisp:defun |make-inventory-item-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            inventory-item-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inventory-item-attribute-name () 'common-lisp:string)
(common-lisp:deftype inventory-item-capture-time () 'common-lisp:string)
(common-lisp:defstruct
    (inventory-item-content-context
     (:constructor |make-inventory-item-content-context|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype inventory-item-content-hash () 'common-lisp:string)
(common-lisp:defstruct
    (inventory-item-entry
     (:constructor |make-inventory-item-entry|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype inventory-item-entry-list ()
   '(trivial-types:proper-list inventory-item-entry))
 (common-lisp:defun |make-inventory-item-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inventory-item-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype inventory-item-list ()
   '(trivial-types:proper-list inventory-item))
 (common-lisp:defun |make-inventory-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inventory-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (inventory-item-schema (:copier common-lisp:nil))
   (type-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":type-name is required"))
    :type (common-lisp:or inventory-item-type-name common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or inventory-item-schema-version common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or inventory-item-attribute-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-item-schema 'make-inventory-item-schema))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-item-schema))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:deftype inventory-item-schema-result-list ()
   '(trivial-types:proper-list inventory-item-schema))
 (common-lisp:defun |make-inventory-item-schema-result-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inventory-item-schema))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inventory-item-schema-version () 'common-lisp:string)
(common-lisp:deftype inventory-item-type-name () 'common-lisp:string)
(common-lisp:deftype inventory-item-type-name-filter () 'common-lisp:string)
(common-lisp:deftype inventory-query-operator-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (inventory-result-entity (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or inventory-result-entity-id common-lisp:null))
   (data common-lisp:nil :type
    (common-lisp:or inventory-result-item-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-result-entity 'make-inventory-result-entity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-result-entity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data))))))
(common-lisp:deftype inventory-result-entity-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inventory-result-entity-list ()
   '(trivial-types:proper-list inventory-result-entity))
 (common-lisp:defun |make-inventory-result-entity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inventory-result-entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (inventory-result-item (:copier common-lisp:nil))
   (type-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":type-name is required"))
    :type (common-lisp:or inventory-item-type-name common-lisp:null))
   (schema-version
    (common-lisp:error
     #A((27) common-lisp:base-char . ":schema-version is required"))
    :type (common-lisp:or inventory-item-schema-version common-lisp:null))
   (capture-time common-lisp:nil :type
    (common-lisp:or inventory-item-capture-time common-lisp:null))
   (content-hash common-lisp:nil :type
    (common-lisp:or inventory-item-content-hash common-lisp:null))
   (content
    (common-lisp:error #A((20) common-lisp:base-char . ":content is required"))
    :type (common-lisp:or inventory-item-entry-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-result-item 'make-inventory-result-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-result-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "SchemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version)))
    (aws-sdk/generator/shape::to-query-params "CaptureTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capture-time)))
    (aws-sdk/generator/shape::to-query-params "ContentHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-hash)))
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content))))))
(common-lisp:deftype inventory-result-item-key () 'common-lisp:string)
(common-lisp:defstruct
    (inventory-result-item-map
     (:constructor |make-inventory-result-item-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (invocation-does-not-exist (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invocation-does-not-exist
                    'make-invocation-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invocation-does-not-exist))
   (common-lisp:append)))
(common-lisp:deftype invocation-trace-output () 'common-lisp:string)
(common-lisp:deftype is-sub-type-schema () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (item-content-mismatch-exception (:copier common-lisp:nil))
   (type-name common-lisp:nil :type
    (common-lisp:or inventory-item-type-name common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'item-content-mismatch-exception
                    'make-item-content-mismatch-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          item-content-mismatch-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (item-size-limit-exceeded-exception (:copier common-lisp:nil))
   (type-name common-lisp:nil :type
    (common-lisp:or inventory-item-type-name common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'item-size-limit-exceeded-exception
                    'make-item-size-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          item-size-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype last-resource-data-sync-status () 'common-lisp:string)
(common-lisp:deftype last-resource-data-sync-time () 'common-lisp:string)
(common-lisp:deftype last-successful-resource-data-sync-time ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-association-versions-request (:copier common-lisp:nil))
   (association-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":association-id is required"))
    :type (common-lisp:or association-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-association-versions-request
                    'make-list-association-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-association-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-association-versions-result (:copier common-lisp:nil))
   (association-versions common-lisp:nil :type
    (common-lisp:or association-version-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-association-versions-result
                    'make-list-association-versions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-association-versions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-versions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-associations-request (:copier common-lisp:nil))
   (association-filter-list common-lisp:nil :type
    (common-lisp:or association-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associations-request
                    'make-list-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-associations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationFilterList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-filter-list)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-associations-result (:copier common-lisp:nil))
   (associations common-lisp:nil :type
    (common-lisp:or association-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associations-result 'make-list-associations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-associations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Associations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'associations)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-command-invocations-request (:copier common-lisp:nil))
   (command-id common-lisp:nil :type
    (common-lisp:or command-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or command-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or command-filter-list common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-command-invocations-request
                    'make-list-command-invocations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-command-invocations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "Details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-command-invocations-result (:copier common-lisp:nil))
   (command-invocations common-lisp:nil :type
    (common-lisp:or command-invocation-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-command-invocations-result
                    'make-list-command-invocations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-command-invocations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandInvocations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-invocations)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-commands-request (:copier common-lisp:nil))
   (command-id common-lisp:nil :type
    (common-lisp:or command-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or command-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or command-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-commands-request 'make-list-commands-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-commands-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (list-commands-result (:copier common-lisp:nil))
   (commands common-lisp:nil :type
    (common-lisp:or command-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-commands-result 'make-list-commands-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-commands-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Commands"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'commands)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-compliance-items-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or compliance-string-filter-list common-lisp:null))
   (resource-ids common-lisp:nil :type
    (common-lisp:or compliance-resource-id-list common-lisp:null))
   (resource-types common-lisp:nil :type
    (common-lisp:or compliance-resource-type-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-compliance-items-request
                    'make-list-compliance-items-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-compliance-items-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "ResourceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-ids)))
    (aws-sdk/generator/shape::to-query-params "ResourceTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-types)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-compliance-items-result (:copier common-lisp:nil))
   (compliance-items common-lisp:nil :type
    (common-lisp:or compliance-item-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-compliance-items-result
                    'make-list-compliance-items-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-compliance-items-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ComplianceItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-items)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-compliance-summaries-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or compliance-string-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-compliance-summaries-request
                    'make-list-compliance-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-compliance-summaries-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-compliance-summaries-result (:copier common-lisp:nil))
   (compliance-summary-items common-lisp:nil :type
    (common-lisp:or compliance-summary-item-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-compliance-summaries-result
                    'make-list-compliance-summaries-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-compliance-summaries-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ComplianceSummaryItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-summary-items)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-versions-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-versions-request
                    'make-list-document-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-document-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-versions-result (:copier common-lisp:nil))
   (document-versions common-lisp:nil :type
    (common-lisp:or document-version-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-versions-result
                    'make-list-document-versions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-document-versions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-versions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-documents-request (:copier common-lisp:nil))
   (document-filter-list common-lisp:nil :type
    (common-lisp:or document-filter-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-documents-request 'make-list-documents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-documents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentFilterList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-filter-list)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-documents-result (:copier common-lisp:nil))
   (document-identifiers common-lisp:nil :type
    (common-lisp:or document-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-documents-result 'make-list-documents-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-documents-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentIdentifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-identifiers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-inventory-entries-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (type-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":type-name is required"))
    :type (common-lisp:or inventory-item-type-name common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or inventory-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-inventory-entries-request
                    'make-list-inventory-entries-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-inventory-entries-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-inventory-entries-result (:copier common-lisp:nil))
   (type-name common-lisp:nil :type
    (common-lisp:or inventory-item-type-name common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (schema-version common-lisp:nil :type
    (common-lisp:or inventory-item-schema-version common-lisp:null))
   (capture-time common-lisp:nil :type
    (common-lisp:or inventory-item-capture-time common-lisp:null))
   (entries common-lisp:nil :type
    (common-lisp:or inventory-item-entry-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-inventory-entries-result
                    'make-list-inventory-entries-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-inventory-entries-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "SchemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version)))
    (aws-sdk/generator/shape::to-query-params "CaptureTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capture-time)))
    (aws-sdk/generator/shape::to-query-params "Entries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'entries)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-compliance-summaries-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or compliance-string-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-compliance-summaries-request
                    'make-list-resource-compliance-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-compliance-summaries-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-compliance-summaries-result (:copier common-lisp:nil))
   (resource-compliance-summary-items common-lisp:nil :type
    (common-lisp:or resource-compliance-summary-item-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-compliance-summaries-result
                    'make-list-resource-compliance-summaries-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-compliance-summaries-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceComplianceSummaryItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-compliance-summary-items)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-data-sync-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-data-sync-request
                    'make-list-resource-data-sync-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-data-sync-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-data-sync-result (:copier common-lisp:nil))
   (resource-data-sync-items common-lisp:nil :type
    (common-lisp:or resource-data-sync-item-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-data-sync-result
                    'make-list-resource-data-sync-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-data-sync-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceDataSyncItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-data-sync-items)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or resource-type-for-tagging common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-result (:copier common-lisp:nil))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-result
                    'make-list-tags-for-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list))))))
(common-lisp:progn
 (common-lisp:defstruct (logging-info (:copier common-lisp:nil))
   (s3bucket-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":s3bucket-name is required"))
    :type (common-lisp:or s3bucket-name common-lisp:null))
   (s3key-prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null))
   (s3region
    (common-lisp:error
     #A((21) common-lisp:base-char . ":s3region is required"))
    :type (common-lisp:or s3region common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logging-info 'make-logging-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape logging-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket-name)))
    (aws-sdk/generator/shape::to-query-params "S3KeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3key-prefix)))
    (aws-sdk/generator/shape::to-query-params "S3Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3region))))))
(common-lisp:deftype maintenance-window-allow-unassociated-targets ()
  'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-automation-parameters (:copier common-lisp:nil))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-automation-parameters
                    'make-maintenance-window-automation-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-automation-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:deftype maintenance-window-cutoff () 'common-lisp:integer)
(common-lisp:deftype maintenance-window-description () 'common-lisp:string)
(common-lisp:deftype maintenance-window-duration-hours () 'common-lisp:integer)
(common-lisp:deftype maintenance-window-enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-execution (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status-details
                    common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-execution
                    'make-maintenance-window-execution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-execution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time))))))
(common-lisp:deftype maintenance-window-execution-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype maintenance-window-execution-list ()
   '(trivial-types:proper-list maintenance-window-execution))
 (common-lisp:defun |make-maintenance-window-execution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-execution))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-execution-status () 'common-lisp:string)
(common-lisp:deftype maintenance-window-execution-status-details ()
  'common-lisp:string)
(common-lisp:deftype maintenance-window-execution-task-execution-id ()
  'common-lisp:string)
(common-lisp:deftype maintenance-window-execution-task-id ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype maintenance-window-execution-task-id-list ()
   '(trivial-types:proper-list maintenance-window-execution-task-id))
 (common-lisp:defun |make-maintenance-window-execution-task-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-execution-task-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-execution-task-identity (:copier common-lisp:nil))
   (window-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status-details
                    common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (task-arn common-lisp:nil :type
    (common-lisp:or maintenance-window-task-arn common-lisp:null))
   (task-type common-lisp:nil :type
    (common-lisp:or maintenance-window-task-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-execution-task-identity
                    'make-maintenance-window-execution-task-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-execution-task-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-execution-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "TaskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "TaskType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-type))))))
(common-lisp:progn
 (common-lisp:deftype maintenance-window-execution-task-identity-list ()
   '(trivial-types:proper-list maintenance-window-execution-task-identity))
 (common-lisp:defun |make-maintenance-window-execution-task-identity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-execution-task-identity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-execution-task-invocation-id ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-execution-task-invocation-identity
      (:copier common-lisp:nil))
   (window-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-id common-lisp:null))
   (task-execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-id common-lisp:null))
   (invocation-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-invocation-id
                    common-lisp:null))
   (execution-id common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-execution-id
                    common-lisp:null))
   (task-type common-lisp:nil :type
    (common-lisp:or maintenance-window-task-type common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-task-invocation-parameters
                    common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or maintenance-window-execution-status-details
                    common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (owner-information common-lisp:nil :type
    (common-lisp:or owner-information common-lisp:null))
   (window-target-id common-lisp:nil :type
    (common-lisp:or maintenance-window-task-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-execution-task-invocation-identity
                    'make-maintenance-window-execution-task-invocation-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-execution-task-invocation-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-execution-id)))
    (aws-sdk/generator/shape::to-query-params "InvocationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invocation-id)))
    (aws-sdk/generator/shape::to-query-params "ExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-id)))
    (aws-sdk/generator/shape::to-query-params "TaskType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-type)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-details)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "OwnerInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-information)))
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id))))))
(common-lisp:progn
 (common-lisp:deftype maintenance-window-execution-task-invocation-identity-list
                      ()
   '(trivial-types:proper-list
     maintenance-window-execution-task-invocation-identity))
 (common-lisp:defun |make-maintenance-window-execution-task-invocation-identity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-execution-task-invocation-identity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-execution-task-invocation-parameters ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (maintenance-window-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-key common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or maintenance-window-filter-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-filter
                    'make-maintenance-window-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype maintenance-window-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype maintenance-window-filter-list ()
   '(trivial-types:proper-list maintenance-window-filter))
 (common-lisp:defun |make-maintenance-window-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype maintenance-window-filter-values ()
   '(trivial-types:proper-list maintenance-window-filter-value))
 (common-lisp:defun |make-maintenance-window-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (maintenance-window-identity (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or maintenance-window-enabled common-lisp:null))
   (duration common-lisp:nil :type
    (common-lisp:or maintenance-window-duration-hours common-lisp:null))
   (cutoff common-lisp:nil :type
    (common-lisp:or maintenance-window-cutoff common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-identity
                    'make-maintenance-window-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "Cutoff"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cutoff))))))
(common-lisp:progn
 (common-lisp:deftype maintenance-window-identity-list ()
   '(trivial-types:proper-list maintenance-window-identity))
 (common-lisp:defun |make-maintenance-window-identity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-identity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-lambda-client-context ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-lambda-parameters (:copier common-lisp:nil))
   (client-context common-lisp:nil :type
    (common-lisp:or maintenance-window-lambda-client-context common-lisp:null))
   (qualifier common-lisp:nil :type
    (common-lisp:or maintenance-window-lambda-qualifier common-lisp:null))
   (payload common-lisp:nil :type
    (common-lisp:or maintenance-window-lambda-payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-lambda-parameters
                    'make-maintenance-window-lambda-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-lambda-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-context)))
    (aws-sdk/generator/shape::to-query-params "Qualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifier)))
    (aws-sdk/generator/shape::to-query-params "Payload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'payload))))))
(common-lisp:deftype maintenance-window-lambda-payload ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype maintenance-window-lambda-qualifier () 'common-lisp:string)
(common-lisp:deftype maintenance-window-max-results () 'common-lisp:integer)
(common-lisp:deftype maintenance-window-name () 'common-lisp:string)
(common-lisp:deftype maintenance-window-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-run-command-parameters (:copier common-lisp:nil))
   (comment common-lisp:nil :type (common-lisp:or comment common-lisp:null))
   (document-hash common-lisp:nil :type
    (common-lisp:or document-hash common-lisp:null))
   (document-hash-type common-lisp:nil :type
    (common-lisp:or document-hash-type common-lisp:null))
   (notification-config common-lisp:nil :type
    (common-lisp:or notification-config common-lisp:null))
   (output-s3bucket-name common-lisp:nil :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (output-s3key-prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (timeout-seconds common-lisp:nil :type
    (common-lisp:or timeout-seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-run-command-parameters
                    'make-maintenance-window-run-command-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-run-command-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "DocumentHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-hash)))
    (aws-sdk/generator/shape::to-query-params "DocumentHashType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-hash-type)))
    (aws-sdk/generator/shape::to-query-params "NotificationConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-config)))
    (aws-sdk/generator/shape::to-query-params "OutputS3BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3bucket-name)))
    (aws-sdk/generator/shape::to-query-params "OutputS3KeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3key-prefix)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "TimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-seconds))))))
(common-lisp:deftype maintenance-window-schedule () 'common-lisp:string)
(common-lisp:deftype maintenance-window-step-functions-input ()
  'common-lisp:string)
(common-lisp:deftype maintenance-window-step-functions-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-step-functions-parameters (:copier common-lisp:nil))
   (input common-lisp:nil :type
    (common-lisp:or maintenance-window-step-functions-input common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-step-functions-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-step-functions-parameters
                    'make-maintenance-window-step-functions-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-step-functions-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (maintenance-window-target (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-target-id common-lisp:nil :type
    (common-lisp:or maintenance-window-target-id common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or maintenance-window-resource-type common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (owner-information common-lisp:nil :type
    (common-lisp:or owner-information common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-target
                    'make-maintenance-window-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-target))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "OwnerInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-information)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:deftype maintenance-window-target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype maintenance-window-target-list ()
   '(trivial-types:proper-list maintenance-window-target))
 (common-lisp:defun |make-maintenance-window-target-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-target))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (maintenance-window-task (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-task-id common-lisp:nil :type
    (common-lisp:or maintenance-window-task-id common-lisp:null))
   (task-arn common-lisp:nil :type
    (common-lisp:or maintenance-window-task-arn common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or maintenance-window-task-type common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (task-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-parameters common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or maintenance-window-task-priority common-lisp:null))
   (logging-info common-lisp:nil :type
    (common-lisp:or logging-info common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (max-concurrency common-lisp:nil :type
    (common-lisp:or max-concurrency common-lisp:null))
   (max-errors common-lisp:nil :type
    (common-lisp:or max-errors common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-task 'make-maintenance-window-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-task))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id)))
    (aws-sdk/generator/shape::to-query-params "TaskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "TaskParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-parameters)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "LoggingInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-info)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:deftype maintenance-window-task-arn () 'common-lisp:string)
(common-lisp:deftype maintenance-window-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-task-invocation-parameters (:copier common-lisp:nil))
   (run-command common-lisp:nil :type
    (common-lisp:or maintenance-window-run-command-parameters
                    common-lisp:null))
   (automation common-lisp:nil :type
    (common-lisp:or maintenance-window-automation-parameters common-lisp:null))
   (step-functions common-lisp:nil :type
    (common-lisp:or maintenance-window-step-functions-parameters
                    common-lisp:null))
   (lambda common-lisp:nil :type
    (common-lisp:or maintenance-window-lambda-parameters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-task-invocation-parameters
                    'make-maintenance-window-task-invocation-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-task-invocation-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RunCommand"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-command)))
    (aws-sdk/generator/shape::to-query-params "Automation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation)))
    (aws-sdk/generator/shape::to-query-params "StepFunctions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-functions)))
    (aws-sdk/generator/shape::to-query-params "Lambda"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda))))))
(common-lisp:progn
 (common-lisp:deftype maintenance-window-task-list ()
   '(trivial-types:proper-list maintenance-window-task))
 (common-lisp:defun |make-maintenance-window-task-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list maintenance-window-task))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-task-parameter-name ()
  'common-lisp:string)
(common-lisp:deftype maintenance-window-task-parameter-value ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-window-task-parameter-value-expression
      (:copier common-lisp:nil))
   (values common-lisp:nil :type
    (common-lisp:or maintenance-window-task-parameter-value-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-window-task-parameter-value-expression
                    'make-maintenance-window-task-parameter-value-expression))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maintenance-window-task-parameter-value-expression))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:progn
 (common-lisp:deftype maintenance-window-task-parameter-value-list ()
   '(trivial-types:proper-list maintenance-window-task-parameter-value))
 (common-lisp:defun |make-maintenance-window-task-parameter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-task-parameter-value))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (maintenance-window-task-parameters
     (:constructor |make-maintenance-window-task-parameters|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype maintenance-window-task-parameters-list ()
   '(trivial-types:proper-list maintenance-window-task-parameters))
 (common-lisp:defun |make-maintenance-window-task-parameters-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            maintenance-window-task-parameters))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintenance-window-task-priority () 'common-lisp:integer)
(common-lisp:deftype maintenance-window-task-target-id () 'common-lisp:string)
(common-lisp:deftype maintenance-window-task-type () 'common-lisp:string)
(common-lisp:deftype managed-instance-id () 'common-lisp:string)
(common-lisp:deftype max-concurrency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (max-document-size-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'max-document-size-exceeded
                    'make-max-document-size-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          max-document-size-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype max-errors () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype max-results-ec2compatible () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (modify-document-permission-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (permission-type
    (common-lisp:error
     #A((28) common-lisp:base-char . ":permission-type is required"))
    :type (common-lisp:or document-permission-type common-lisp:null))
   (account-ids-to-add common-lisp:nil :type
    (common-lisp:or account-id-list common-lisp:null))
   (account-ids-to-remove common-lisp:nil :type
    (common-lisp:or account-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-document-permission-request
                    'make-modify-document-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-document-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "PermissionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'permission-type)))
    (aws-sdk/generator/shape::to-query-params "AccountIdsToAdd"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-ids-to-add)))
    (aws-sdk/generator/shape::to-query-params "AccountIdsToRemove"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-ids-to-remove))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-document-permission-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'modify-document-permission-response
                    'make-modify-document-permission-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-document-permission-response))
   (common-lisp:append)))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (non-compliant-summary (:copier common-lisp:nil))
   (non-compliant-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null))
   (severity-summary common-lisp:nil :type
    (common-lisp:or severity-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'non-compliant-summary 'make-non-compliant-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          non-compliant-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NonCompliantCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'non-compliant-count)))
    (aws-sdk/generator/shape::to-query-params "SeveritySummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity-summary))))))
(common-lisp:defstruct
    (normal-string-map
     (:constructor |make-normal-string-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype notification-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (notification-config (:copier common-lisp:nil))
   (notification-arn common-lisp:nil :type
    (common-lisp:or notification-arn common-lisp:null))
   (notification-events common-lisp:nil :type
    (common-lisp:or notification-event-list common-lisp:null))
   (notification-type common-lisp:nil :type
    (common-lisp:or notification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-config 'make-notification-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape notification-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NotificationArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationEvents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-events)))
    (aws-sdk/generator/shape::to-query-params "NotificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-type))))))
(common-lisp:deftype notification-event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype notification-event-list ()
   '(trivial-types:proper-list notification-event))
 (common-lisp:defun |make-notification-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list notification-event))
   aws-sdk/generator/shape::members))
(common-lisp:deftype notification-type () 'common-lisp:string)
(common-lisp:deftype operating-system () 'common-lisp:string)
(common-lisp:deftype owner-information () 'common-lisp:string)
(common-lisp:deftype psparameter-name () 'common-lisp:string)
(common-lisp:deftype psparameter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (parameter (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or psparameter-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or parameter-type common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or psparameter-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'parameter 'make-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct (parameter-already-exists (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-already-exists 'make-parameter-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-already-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype parameter-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (parameter-history (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or psparameter-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or parameter-type common-lisp:null))
   (key-id common-lisp:nil :type
    (common-lisp:or parameter-key-id common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-modified-user common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or parameter-description common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or psparameter-value common-lisp:null))
   (allowed-pattern common-lisp:nil :type
    (common-lisp:or allowed-pattern common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-history 'make-parameter-history))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter-history))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-user)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "AllowedPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-pattern))))))
(common-lisp:progn
 (common-lisp:deftype parameter-history-list ()
   '(trivial-types:proper-list parameter-history))
 (common-lisp:defun |make-parameter-history-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-history))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parameter-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (parameter-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-limit-exceeded 'make-parameter-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype parameter-list () '(trivial-types:proper-list parameter))
 (common-lisp:defun |make-parameter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (parameter-metadata (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or psparameter-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or parameter-type common-lisp:null))
   (key-id common-lisp:nil :type
    (common-lisp:or parameter-key-id common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-modified-user common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or parameter-description common-lisp:null))
   (allowed-pattern common-lisp:nil :type
    (common-lisp:or allowed-pattern common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-metadata 'make-parameter-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-user)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "AllowedPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-pattern))))))
(common-lisp:progn
 (common-lisp:deftype parameter-metadata-list ()
   '(trivial-types:proper-list parameter-metadata))
 (common-lisp:defun |make-parameter-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parameter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parameter-name-list ()
   '(trivial-types:proper-list psparameter-name))
 (common-lisp:defun |make-parameter-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list psparameter-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (parameter-not-found (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-not-found 'make-parameter-not-found))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter-not-found))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (parameter-pattern-mismatch-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-pattern-mismatch-exception
                    'make-parameter-pattern-mismatch-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-pattern-mismatch-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (parameter-string-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or parameter-string-filter-key common-lisp:null))
   (option common-lisp:nil :type
    (common-lisp:or parameter-string-query-option common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or parameter-string-filter-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-string-filter 'make-parameter-string-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-string-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Option"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype parameter-string-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parameter-string-filter-list ()
   '(trivial-types:proper-list parameter-string-filter))
 (common-lisp:defun |make-parameter-string-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-string-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parameter-string-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parameter-string-filter-value-list ()
   '(trivial-types:proper-list parameter-string-filter-value))
 (common-lisp:defun |make-parameter-string-filter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            parameter-string-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parameter-string-query-option () 'common-lisp:string)
(common-lisp:deftype parameter-type () 'common-lisp:string)
(common-lisp:deftype parameter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parameter-value-list ()
   '(trivial-types:proper-list parameter-value))
 (common-lisp:defun |make-parameter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-value))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (parameters
     (:constructor |make-parameters|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (parameters-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or parameters-filter-key common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or parameters-filter-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameters-filter 'make-parameters-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameters-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype parameters-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parameters-filter-list ()
   '(trivial-types:proper-list parameters-filter))
 (common-lisp:defun |make-parameters-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameters-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parameters-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parameters-filter-value-list ()
   '(trivial-types:proper-list parameters-filter-value))
 (common-lisp:defun |make-parameters-filter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameters-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (patch (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or patch-id common-lisp:null))
   (release-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or patch-title common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or patch-description common-lisp:null))
   (content-url common-lisp:nil :type
    (common-lisp:or patch-content-url common-lisp:null))
   (vendor common-lisp:nil :type
    (common-lisp:or patch-vendor common-lisp:null))
   (product-family common-lisp:nil :type
    (common-lisp:or patch-product-family common-lisp:null))
   (product common-lisp:nil :type
    (common-lisp:or patch-product common-lisp:null))
   (classification common-lisp:nil :type
    (common-lisp:or patch-classification common-lisp:null))
   (msrc-severity common-lisp:nil :type
    (common-lisp:or patch-msrc-severity common-lisp:null))
   (kb-number common-lisp:nil :type
    (common-lisp:or patch-kb-number common-lisp:null))
   (msrc-number common-lisp:nil :type
    (common-lisp:or patch-msrc-number common-lisp:null))
   (language common-lisp:nil :type
    (common-lisp:or patch-language common-lisp:null)))
 (common-lisp:export (common-lisp:list 'patch 'make-patch))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape patch))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ReleaseDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'release-date)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ContentUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-url)))
    (aws-sdk/generator/shape::to-query-params "Vendor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vendor)))
    (aws-sdk/generator/shape::to-query-params "ProductFamily"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-family)))
    (aws-sdk/generator/shape::to-query-params "Product"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product)))
    (aws-sdk/generator/shape::to-query-params "Classification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'classification)))
    (aws-sdk/generator/shape::to-query-params "MsrcSeverity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'msrc-severity)))
    (aws-sdk/generator/shape::to-query-params "KbNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kb-number)))
    (aws-sdk/generator/shape::to-query-params "MsrcNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'msrc-number)))
    (aws-sdk/generator/shape::to-query-params "Language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language))))))
(common-lisp:progn
 (common-lisp:defstruct (patch-baseline-identity (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null))
   (baseline-name common-lisp:nil :type
    (common-lisp:or baseline-name common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (baseline-description common-lisp:nil :type
    (common-lisp:or baseline-description common-lisp:null))
   (default-baseline common-lisp:nil :type
    (common-lisp:or default-baseline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'patch-baseline-identity 'make-patch-baseline-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          patch-baseline-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "BaselineName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-name)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "BaselineDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-description)))
    (aws-sdk/generator/shape::to-query-params "DefaultBaseline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-baseline))))))
(common-lisp:progn
 (common-lisp:deftype patch-baseline-identity-list ()
   '(trivial-types:proper-list patch-baseline-identity))
 (common-lisp:defun |make-patch-baseline-identity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-baseline-identity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-baseline-max-results () 'common-lisp:integer)
(common-lisp:deftype patch-classification () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (patch-compliance-data (:copier common-lisp:nil))
   (title
    (common-lisp:error #A((18) common-lisp:base-char . ":title is required"))
    :type (common-lisp:or patch-title common-lisp:null))
   (kbid
    (common-lisp:error #A((17) common-lisp:base-char . ":kbid is required"))
    :type (common-lisp:or patch-kb-number common-lisp:null))
   (classification
    (common-lisp:error
     #A((27) common-lisp:base-char . ":classification is required"))
    :type (common-lisp:or patch-classification common-lisp:null))
   (severity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":severity is required"))
    :type (common-lisp:or patch-severity common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or patch-compliance-data-state common-lisp:null))
   (installed-time
    (common-lisp:error
     #A((27) common-lisp:base-char . ":installed-time is required"))
    :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'patch-compliance-data 'make-patch-compliance-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          patch-compliance-data))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "KBId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kbid)))
    (aws-sdk/generator/shape::to-query-params "Classification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'classification)))
    (aws-sdk/generator/shape::to-query-params "Severity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "InstalledTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'installed-time))))))
(common-lisp:progn
 (common-lisp:deftype patch-compliance-data-list ()
   '(trivial-types:proper-list patch-compliance-data))
 (common-lisp:defun |make-patch-compliance-data-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-compliance-data))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-compliance-data-state () 'common-lisp:string)
(common-lisp:deftype patch-compliance-level () 'common-lisp:string)
(common-lisp:deftype patch-compliance-max-results () 'common-lisp:integer)
(common-lisp:deftype patch-content-url () 'common-lisp:string)
(common-lisp:deftype patch-deployment-status () 'common-lisp:string)
(common-lisp:deftype patch-description () 'common-lisp:string)
(common-lisp:deftype patch-failed-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (patch-filter (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or patch-filter-key common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or patch-filter-value-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'patch-filter 'make-patch-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape patch-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:progn
 (common-lisp:defstruct (patch-filter-group (:copier common-lisp:nil))
   (patch-filters
    (common-lisp:error
     #A((26) common-lisp:base-char . ":patch-filters is required"))
    :type (common-lisp:or patch-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'patch-filter-group 'make-patch-filter-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape patch-filter-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PatchFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-filters))))))
(common-lisp:deftype patch-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype patch-filter-list ()
   '(trivial-types:proper-list patch-filter))
 (common-lisp:defun |make-patch-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype patch-filter-value-list ()
   '(trivial-types:proper-list patch-filter-value))
 (common-lisp:defun |make-patch-filter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype patch-group-list ()
   '(trivial-types:proper-list patch-group))
 (common-lisp:defun |make-patch-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (patch-group-patch-baseline-mapping (:copier common-lisp:nil))
   (patch-group common-lisp:nil :type
    (common-lisp:or patch-group common-lisp:null))
   (baseline-identity common-lisp:nil :type
    (common-lisp:or patch-baseline-identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'patch-group-patch-baseline-mapping
                    'make-patch-group-patch-baseline-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          patch-group-patch-baseline-mapping))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group)))
    (aws-sdk/generator/shape::to-query-params "BaselineIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-identity))))))
(common-lisp:progn
 (common-lisp:deftype patch-group-patch-baseline-mapping-list ()
   '(trivial-types:proper-list patch-group-patch-baseline-mapping))
 (common-lisp:defun |make-patch-group-patch-baseline-mapping-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            patch-group-patch-baseline-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype patch-id-list () '(trivial-types:proper-list patch-id))
 (common-lisp:defun |make-patch-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-installed-count () 'common-lisp:integer)
(common-lisp:deftype patch-installed-other-count () 'common-lisp:integer)
(common-lisp:deftype patch-kb-number () 'common-lisp:string)
(common-lisp:deftype patch-language () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype patch-list () '(trivial-types:proper-list patch))
 (common-lisp:defun |make-patch-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-missing-count () 'common-lisp:integer)
(common-lisp:deftype patch-msrc-number () 'common-lisp:string)
(common-lisp:deftype patch-msrc-severity () 'common-lisp:string)
(common-lisp:deftype patch-not-applicable-count () 'common-lisp:integer)
(common-lisp:deftype patch-operation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (patch-orchestrator-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or patch-orchestrator-filter-key common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or patch-orchestrator-filter-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'patch-orchestrator-filter
                    'make-patch-orchestrator-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          patch-orchestrator-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype patch-orchestrator-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype patch-orchestrator-filter-list ()
   '(trivial-types:proper-list patch-orchestrator-filter))
 (common-lisp:defun |make-patch-orchestrator-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            patch-orchestrator-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-orchestrator-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype patch-orchestrator-filter-values ()
   '(trivial-types:proper-list patch-orchestrator-filter-value))
 (common-lisp:defun |make-patch-orchestrator-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            patch-orchestrator-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-product () 'common-lisp:string)
(common-lisp:deftype patch-product-family () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (patch-rule (:copier common-lisp:nil))
   (patch-filter-group
    (common-lisp:error
     #A((31) common-lisp:base-char . ":patch-filter-group is required"))
    :type (common-lisp:or patch-filter-group common-lisp:null))
   (compliance-level common-lisp:nil :type
    (common-lisp:or patch-compliance-level common-lisp:null))
   (approve-after-days
    (common-lisp:error
     #A((31) common-lisp:base-char . ":approve-after-days is required"))
    :type (common-lisp:or approve-after-days common-lisp:null)))
 (common-lisp:export (common-lisp:list 'patch-rule 'make-patch-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape patch-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PatchFilterGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-filter-group)))
    (aws-sdk/generator/shape::to-query-params "ComplianceLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-level)))
    (aws-sdk/generator/shape::to-query-params "ApproveAfterDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approve-after-days))))))
(common-lisp:progn
 (common-lisp:defstruct (patch-rule-group (:copier common-lisp:nil))
   (patch-rules
    (common-lisp:error
     #A((24) common-lisp:base-char . ":patch-rules is required"))
    :type (common-lisp:or patch-rule-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'patch-rule-group 'make-patch-rule-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape patch-rule-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PatchRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-rules))))))
(common-lisp:progn
 (common-lisp:deftype patch-rule-list ()
   '(trivial-types:proper-list patch-rule))
 (common-lisp:defun |make-patch-rule-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-severity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (patch-status (:copier common-lisp:nil))
   (deployment-status common-lisp:nil :type
    (common-lisp:or patch-deployment-status common-lisp:null))
   (compliance-level common-lisp:nil :type
    (common-lisp:or patch-compliance-level common-lisp:null))
   (approval-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'patch-status 'make-patch-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape patch-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeploymentStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-status)))
    (aws-sdk/generator/shape::to-query-params "ComplianceLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-level)))
    (aws-sdk/generator/shape::to-query-params "ApprovalDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approval-date))))))
(common-lisp:deftype patch-title () 'common-lisp:string)
(common-lisp:deftype patch-vendor () 'common-lisp:string)
(common-lisp:deftype ping-status () 'common-lisp:string)
(common-lisp:deftype platform-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype platform-type-list ()
   '(trivial-types:proper-list platform-type))
 (common-lisp:defun |make-platform-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype product () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-compliance-items-request (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or compliance-resource-id common-lisp:null))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or compliance-resource-type common-lisp:null))
   (compliance-type
    (common-lisp:error
     #A((28) common-lisp:base-char . ":compliance-type is required"))
    :type (common-lisp:or compliance-type-name common-lisp:null))
   (execution-summary
    (common-lisp:error
     #A((30) common-lisp:base-char . ":execution-summary is required"))
    :type (common-lisp:or compliance-execution-summary common-lisp:null))
   (items
    (common-lisp:error #A((18) common-lisp:base-char . ":items is required"))
    :type (common-lisp:or compliance-item-entry-list common-lisp:null))
   (item-content-hash common-lisp:nil :type
    (common-lisp:or compliance-item-content-hash common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-compliance-items-request
                    'make-put-compliance-items-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-compliance-items-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ComplianceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-type)))
    (aws-sdk/generator/shape::to-query-params "ExecutionSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-summary)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items)))
    (aws-sdk/generator/shape::to-query-params "ItemContentHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-content-hash))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-compliance-items-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-compliance-items-result
                    'make-put-compliance-items-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-compliance-items-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (put-inventory-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (items
    (common-lisp:error #A((18) common-lisp:base-char . ":items is required"))
    :type (common-lisp:or inventory-item-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-inventory-request 'make-put-inventory-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-inventory-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (put-inventory-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-inventory-result 'make-put-inventory-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-inventory-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (put-parameter-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or psparameter-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or parameter-description common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or psparameter-value common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or parameter-type common-lisp:null))
   (key-id common-lisp:nil :type
    (common-lisp:or parameter-key-id common-lisp:null))
   (overwrite common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allowed-pattern common-lisp:nil :type
    (common-lisp:or allowed-pattern common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-parameter-request 'make-put-parameter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-parameter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "KeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "Overwrite"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'overwrite)))
    (aws-sdk/generator/shape::to-query-params "AllowedPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-pattern))))))
(common-lisp:progn
 (common-lisp:defstruct (put-parameter-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-parameter-result 'make-put-parameter-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-parameter-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (register-default-patch-baseline-request (:copier common-lisp:nil))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-default-patch-baseline-request
                    'make-register-default-patch-baseline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-default-patch-baseline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-default-patch-baseline-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-default-patch-baseline-result
                    'make-register-default-patch-baseline-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-default-patch-baseline-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-patch-baseline-for-patch-group-request
      (:copier common-lisp:nil))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null))
   (patch-group
    (common-lisp:error
     #A((24) common-lisp:base-char . ":patch-group is required"))
    :type (common-lisp:or patch-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-patch-baseline-for-patch-group-request
                    'make-register-patch-baseline-for-patch-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-patch-baseline-for-patch-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-patch-baseline-for-patch-group-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null))
   (patch-group common-lisp:nil :type
    (common-lisp:or patch-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-patch-baseline-for-patch-group-result
                    'make-register-patch-baseline-for-patch-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-patch-baseline-for-patch-group-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "PatchGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-target-with-maintenance-window-request
      (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or maintenance-window-resource-type common-lisp:null))
   (targets
    (common-lisp:error #A((20) common-lisp:base-char . ":targets is required"))
    :type (common-lisp:or targets common-lisp:null))
   (owner-information common-lisp:nil :type
    (common-lisp:or owner-information common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-target-with-maintenance-window-request
                    'make-register-target-with-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-target-with-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "OwnerInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-information)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ClientToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-target-with-maintenance-window-result (:copier common-lisp:nil))
   (window-target-id common-lisp:nil :type
    (common-lisp:or maintenance-window-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-target-with-maintenance-window-result
                    'make-register-target-with-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-target-with-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-task-with-maintenance-window-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (targets
    (common-lisp:error #A((20) common-lisp:base-char . ":targets is required"))
    :type (common-lisp:or targets common-lisp:null))
   (task-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":task-arn is required"))
    :type (common-lisp:or maintenance-window-task-arn common-lisp:null))
   (service-role-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":service-role-arn is required"))
    :type (common-lisp:or service-role common-lisp:null))
   (task-type
    (common-lisp:error
     #A((22) common-lisp:base-char . ":task-type is required"))
    :type (common-lisp:or maintenance-window-task-type common-lisp:null))
   (task-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-parameters common-lisp:null))
   (task-invocation-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-invocation-parameters
                    common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or maintenance-window-task-priority common-lisp:null))
   (max-concurrency
    (common-lisp:error
     #A((28) common-lisp:base-char . ":max-concurrency is required"))
    :type (common-lisp:or max-concurrency common-lisp:null))
   (max-errors
    (common-lisp:error
     #A((23) common-lisp:base-char . ":max-errors is required"))
    :type (common-lisp:or max-errors common-lisp:null))
   (logging-info common-lisp:nil :type
    (common-lisp:or logging-info common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-task-with-maintenance-window-request
                    'make-register-task-with-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-task-with-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "TaskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "TaskType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-type)))
    (aws-sdk/generator/shape::to-query-params "TaskParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-parameters)))
    (aws-sdk/generator/shape::to-query-params "TaskInvocationParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-invocation-parameters)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "LoggingInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-info)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ClientToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-task-with-maintenance-window-result (:copier common-lisp:nil))
   (window-task-id common-lisp:nil :type
    (common-lisp:or maintenance-window-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-task-with-maintenance-window-result
                    'make-register-task-with-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-task-with-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id))))))
(common-lisp:deftype registration-limit () 'common-lisp:integer)
(common-lisp:deftype registrations-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-resource-request (:copier common-lisp:nil))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or resource-type-for-tagging common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-request
                    'make-remove-tags-from-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-tags-from-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-resource-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-result
                    'make-remove-tags-from-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-tags-from-resource-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-compliance-summary-item (:copier common-lisp:nil))
   (compliance-type common-lisp:nil :type
    (common-lisp:or compliance-type-name common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or compliance-resource-type common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or compliance-resource-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or compliance-status common-lisp:null))
   (overall-severity common-lisp:nil :type
    (common-lisp:or compliance-severity common-lisp:null))
   (execution-summary common-lisp:nil :type
    (common-lisp:or compliance-execution-summary common-lisp:null))
   (compliant-summary common-lisp:nil :type
    (common-lisp:or compliant-summary common-lisp:null))
   (non-compliant-summary common-lisp:nil :type
    (common-lisp:or non-compliant-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-compliance-summary-item
                    'make-resource-compliance-summary-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-compliance-summary-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ComplianceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliance-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "OverallSeverity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'overall-severity)))
    (aws-sdk/generator/shape::to-query-params "ExecutionSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-summary)))
    (aws-sdk/generator/shape::to-query-params "CompliantSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compliant-summary)))
    (aws-sdk/generator/shape::to-query-params "NonCompliantSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'non-compliant-summary))))))
(common-lisp:progn
 (common-lisp:deftype resource-compliance-summary-item-list ()
   '(trivial-types:proper-list resource-compliance-summary-item))
 (common-lisp:defun |make-resource-compliance-summary-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-compliance-summary-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-data-sync-already-exists-exception (:copier common-lisp:nil))
   (sync-name common-lisp:nil :type
    (common-lisp:or resource-data-sync-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-data-sync-already-exists-exception
                    'make-resource-data-sync-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-data-sync-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SyncName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-data-sync-count-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-data-sync-count-exceeded-exception
                    'make-resource-data-sync-count-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-data-sync-count-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype resource-data-sync-created-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-data-sync-invalid-configuration-exception
      (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-data-sync-invalid-configuration-exception
                    'make-resource-data-sync-invalid-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-data-sync-invalid-configuration-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-data-sync-item (:copier common-lisp:nil))
   (sync-name common-lisp:nil :type
    (common-lisp:or resource-data-sync-name common-lisp:null))
   (s3destination common-lisp:nil :type
    (common-lisp:or resource-data-sync-s3destination common-lisp:null))
   (last-sync-time common-lisp:nil :type
    (common-lisp:or last-resource-data-sync-time common-lisp:null))
   (last-successful-sync-time common-lisp:nil :type
    (common-lisp:or last-successful-resource-data-sync-time common-lisp:null))
   (last-status common-lisp:nil :type
    (common-lisp:or last-resource-data-sync-status common-lisp:null))
   (sync-created-time common-lisp:nil :type
    (common-lisp:or resource-data-sync-created-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-data-sync-item 'make-resource-data-sync-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-data-sync-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SyncName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-name)))
    (aws-sdk/generator/shape::to-query-params "S3Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3destination)))
    (aws-sdk/generator/shape::to-query-params "LastSyncTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-sync-time)))
    (aws-sdk/generator/shape::to-query-params "LastSuccessfulSyncTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-successful-sync-time)))
    (aws-sdk/generator/shape::to-query-params "LastStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-status)))
    (aws-sdk/generator/shape::to-query-params "SyncCreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-created-time))))))
(common-lisp:progn
 (common-lisp:deftype resource-data-sync-item-list ()
   '(trivial-types:proper-list resource-data-sync-item))
 (common-lisp:defun |make-resource-data-sync-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-data-sync-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-data-sync-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-data-sync-not-found-exception (:copier common-lisp:nil))
   (sync-name common-lisp:nil :type
    (common-lisp:or resource-data-sync-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-data-sync-not-found-exception
                    'make-resource-data-sync-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-data-sync-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SyncName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-name))))))
(common-lisp:deftype resource-data-sync-s3bucket-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-data-sync-s3destination (:copier common-lisp:nil))
   (bucket-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":bucket-name is required"))
    :type (common-lisp:or resource-data-sync-s3bucket-name common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or resource-data-sync-s3prefix common-lisp:null))
   (sync-format
    (common-lisp:error
     #A((24) common-lisp:base-char . ":sync-format is required"))
    :type (common-lisp:or resource-data-sync-s3format common-lisp:null))
   (region
    (common-lisp:error #A((19) common-lisp:base-char . ":region is required"))
    :type (common-lisp:or resource-data-sync-s3region common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-data-sync-s3destination
                    'make-resource-data-sync-s3destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-data-sync-s3destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-name)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "SyncFormat"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-format)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region))))))
(common-lisp:deftype resource-data-sync-s3format () 'common-lisp:string)
(common-lisp:deftype resource-data-sync-s3prefix () 'common-lisp:string)
(common-lisp:deftype resource-data-sync-s3region () 'common-lisp:string)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-limit-exceeded-exception
                    'make-resource-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype resource-type-for-tagging () 'common-lisp:string)
(common-lisp:deftype response-code () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (result-attribute (:copier common-lisp:nil))
   (type-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":type-name is required"))
    :type (common-lisp:or inventory-item-type-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'result-attribute 'make-result-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape result-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name))))))
(common-lisp:progn
 (common-lisp:deftype result-attribute-list ()
   '(trivial-types:proper-list result-attribute))
 (common-lisp:defun |make-result-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list result-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype s3bucket-name () 'common-lisp:string)
(common-lisp:deftype s3key-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (s3output-location (:copier common-lisp:nil))
   (output-s3region common-lisp:nil :type
    (common-lisp:or s3region common-lisp:null))
   (output-s3bucket-name common-lisp:nil :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (output-s3key-prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3output-location 'make-s3output-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3output-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OutputS3Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3region)))
    (aws-sdk/generator/shape::to-query-params "OutputS3BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3bucket-name)))
    (aws-sdk/generator/shape::to-query-params "OutputS3KeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3key-prefix))))))
(common-lisp:progn
 (common-lisp:defstruct (s3output-url (:copier common-lisp:nil))
   (output-url common-lisp:nil :type (common-lisp:or url common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3output-url 'make-s3output-url))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3output-url))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OutputUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-url))))))
(common-lisp:deftype s3region () 'common-lisp:string)
(common-lisp:deftype schedule-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (send-automation-signal-request (:copier common-lisp:nil))
   (automation-execution-id
    (common-lisp:error
     #A((36) common-lisp:base-char . ":automation-execution-id is required"))
    :type (common-lisp:or automation-execution-id common-lisp:null))
   (signal-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":signal-type is required"))
    :type (common-lisp:or signal-type common-lisp:null))
   (payload common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-automation-signal-request
                    'make-send-automation-signal-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-automation-signal-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-id)))
    (aws-sdk/generator/shape::to-query-params "SignalType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signal-type)))
    (aws-sdk/generator/shape::to-query-params "Payload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'payload))))))
(common-lisp:progn
 (common-lisp:defstruct
     (send-automation-signal-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'send-automation-signal-result
                    'make-send-automation-signal-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-automation-signal-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (send-command-request (:copier common-lisp:nil))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-id-list common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (document-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":document-name is required"))
    :type (common-lisp:or document-arn common-lisp:null))
   (document-hash common-lisp:nil :type
    (common-lisp:or document-hash common-lisp:null))
   (document-hash-type common-lisp:nil :type
    (common-lisp:or document-hash-type common-lisp:null))
   (timeout-seconds common-lisp:nil :type
    (common-lisp:or timeout-seconds common-lisp:null))
   (comment common-lisp:nil :type (common-lisp:or comment common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (output-s3region common-lisp:nil :type
    (common-lisp:or s3region common-lisp:null))
   (output-s3bucket-name common-lisp:nil :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (output-s3key-prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null))
   (max-concurrency common-lisp:nil :type
    (common-lisp:or max-concurrency common-lisp:null))
   (max-errors common-lisp:nil :type
    (common-lisp:or max-errors common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (notification-config common-lisp:nil :type
    (common-lisp:or notification-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-command-request 'make-send-command-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-command-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "DocumentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-name)))
    (aws-sdk/generator/shape::to-query-params "DocumentHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-hash)))
    (aws-sdk/generator/shape::to-query-params "DocumentHashType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-hash-type)))
    (aws-sdk/generator/shape::to-query-params "TimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "OutputS3Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3region)))
    (aws-sdk/generator/shape::to-query-params "OutputS3BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3bucket-name)))
    (aws-sdk/generator/shape::to-query-params "OutputS3KeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-s3key-prefix)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-config))))))
(common-lisp:progn
 (common-lisp:defstruct (send-command-result (:copier common-lisp:nil))
   (command common-lisp:nil :type (common-lisp:or command common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-command-result 'make-send-command-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-command-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Command"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command))))))
(common-lisp:deftype service-role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (severity-summary (:copier common-lisp:nil))
   (critical-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null))
   (high-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null))
   (medium-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null))
   (low-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null))
   (informational-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null))
   (unspecified-count common-lisp:nil :type
    (common-lisp:or compliance-summary-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'severity-summary 'make-severity-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape severity-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CriticalCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'critical-count)))
    (aws-sdk/generator/shape::to-query-params "HighCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'high-count)))
    (aws-sdk/generator/shape::to-query-params "MediumCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'medium-count)))
    (aws-sdk/generator/shape::to-query-params "LowCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'low-count)))
    (aws-sdk/generator/shape::to-query-params "InformationalCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'informational-count)))
    (aws-sdk/generator/shape::to-query-params "UnspecifiedCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unspecified-count))))))
(common-lisp:deftype signal-type () 'common-lisp:string)
(common-lisp:deftype snapshot-download-url () 'common-lisp:string)
(common-lisp:deftype snapshot-id () 'common-lisp:string)
(common-lisp:deftype standard-error-content () 'common-lisp:string)
(common-lisp:deftype standard-output-content () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-automation-execution-request (:copier common-lisp:nil))
   (document-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":document-name is required"))
    :type (common-lisp:or document-arn common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-automation-execution-request
                    'make-start-automation-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-automation-execution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-automation-execution-result (:copier common-lisp:nil))
   (automation-execution-id common-lisp:nil :type
    (common-lisp:or automation-execution-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-automation-execution-result
                    'make-start-automation-execution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-automation-execution-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-id))))))
(common-lisp:deftype status-additional-info () 'common-lisp:string)
(common-lisp:deftype status-details () 'common-lisp:string)
(common-lisp:deftype status-message () 'common-lisp:string)
(common-lisp:deftype status-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (status-unchanged (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'status-unchanged 'make-status-unchanged))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape status-unchanged))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (step-execution (:copier common-lisp:nil))
   (step-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (action common-lisp:nil :type
    (common-lisp:or automation-action-name common-lisp:null))
   (execution-start-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (execution-end-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (step-status common-lisp:nil :type
    (common-lisp:or automation-execution-status common-lisp:null))
   (response-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (inputs common-lisp:nil :type
    (common-lisp:or normal-string-map common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or automation-parameter-map common-lisp:null))
   (response common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (failure-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (failure-details common-lisp:nil :type
    (common-lisp:or failure-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-execution 'make-step-execution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-execution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StepName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-name)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "ExecutionStartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-time)))
    (aws-sdk/generator/shape::to-query-params "ExecutionEndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-end-time)))
    (aws-sdk/generator/shape::to-query-params "StepStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-status)))
    (aws-sdk/generator/shape::to-query-params "ResponseCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-code)))
    (aws-sdk/generator/shape::to-query-params "Inputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inputs)))
    (aws-sdk/generator/shape::to-query-params "Outputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'outputs)))
    (aws-sdk/generator/shape::to-query-params "Response"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response)))
    (aws-sdk/generator/shape::to-query-params "FailureMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-message)))
    (aws-sdk/generator/shape::to-query-params "FailureDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-details))))))
(common-lisp:progn
 (common-lisp:deftype step-execution-list ()
   '(trivial-types:proper-list step-execution))
 (common-lisp:defun |make-step-execution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-execution))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-automation-execution-request (:copier common-lisp:nil))
   (automation-execution-id
    (common-lisp:error
     #A((36) common-lisp:base-char . ":automation-execution-id is required"))
    :type (common-lisp:or automation-execution-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-automation-execution-request
                    'make-stop-automation-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-automation-execution-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutomationExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'automation-execution-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-automation-execution-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'stop-automation-execution-result
                    'make-stop-automation-execution-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-automation-execution-result))
   (common-lisp:append)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string-date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (sub-type-count-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sub-type-count-limit-exceeded-exception
                    'make-sub-type-count-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sub-type-count-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (target (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or target-key common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or target-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target 'make-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype target-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (target-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-in-use-exception 'make-target-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype target-key () 'common-lisp:string)
(common-lisp:deftype target-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-values ()
   '(trivial-types:proper-list target-value))
 (common-lisp:defun |make-target-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype targets () '(trivial-types:proper-list target))
 (common-lisp:defun |make-targets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timeout-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (too-many-tags-error (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-tags-error 'make-too-many-tags-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape too-many-tags-error))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (too-many-updates (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-updates 'make-too-many-updates))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape too-many-updates))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (total-size-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'total-size-limit-exceeded-exception
                    'make-total-size-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          total-size-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-inventory-item-context-exception (:copier common-lisp:nil))
   (type-name common-lisp:nil :type
    (common-lisp:or inventory-item-type-name common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-inventory-item-context-exception
                    'make-unsupported-inventory-item-context-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-inventory-item-context-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-name)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-inventory-schema-version-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-inventory-schema-version-exception
                    'make-unsupported-inventory-schema-version-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-inventory-schema-version-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-operating-system (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-operating-system
                    'make-unsupported-operating-system))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-operating-system))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (unsupported-parameter-type (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-parameter-type
                    'make-unsupported-parameter-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-parameter-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (unsupported-platform-type (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-platform-type
                    'make-unsupported-platform-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-platform-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (update-association-request (:copier common-lisp:nil))
   (association-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":association-id is required"))
    :type (common-lisp:or association-id common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (output-location common-lisp:nil :type
    (common-lisp:or instance-association-output-location common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or document-name common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (association-name common-lisp:nil :type
    (common-lisp:or association-name common-lisp:null))
   (association-version common-lisp:nil :type
    (common-lisp:or association-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-association-request
                    'make-update-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-association-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-id)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "OutputLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-location)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "AssociationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-name)))
    (aws-sdk/generator/shape::to-query-params "AssociationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-version))))))
(common-lisp:progn
 (common-lisp:defstruct (update-association-result (:copier common-lisp:nil))
   (association-description common-lisp:nil :type
    (common-lisp:or association-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-association-result
                    'make-update-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-association-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-association-status-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null))
   (association-status
    (common-lisp:error
     #A((31) common-lisp:base-char . ":association-status is required"))
    :type (common-lisp:or association-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-association-status-request
                    'make-update-association-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-association-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AssociationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-association-status-result (:copier common-lisp:nil))
   (association-description common-lisp:nil :type
    (common-lisp:or association-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-association-status-result
                    'make-update-association-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-association-status-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssociationDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'association-description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-document-default-version-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (document-version
    (common-lisp:error
     #A((29) common-lisp:base-char . ":document-version is required"))
    :type (common-lisp:or document-version-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-document-default-version-request
                    'make-update-document-default-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-document-default-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-document-default-version-result (:copier common-lisp:nil))
   (description common-lisp:nil :type
    (common-lisp:or document-default-version-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-document-default-version-result
                    'make-update-document-default-version-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-document-default-version-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (update-document-request (:copier common-lisp:nil))
   (content
    (common-lisp:error #A((20) common-lisp:base-char . ":content is required"))
    :type (common-lisp:or document-content common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or document-name common-lisp:null))
   (document-version common-lisp:nil :type
    (common-lisp:or document-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-document-request 'make-update-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DocumentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-version))))))
(common-lisp:progn
 (common-lisp:defstruct (update-document-result (:copier common-lisp:nil))
   (document-description common-lisp:nil :type
    (common-lisp:or document-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-document-result 'make-update-document-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-document-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-window-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or maintenance-window-schedule common-lisp:null))
   (duration common-lisp:nil :type
    (common-lisp:or maintenance-window-duration-hours common-lisp:null))
   (cutoff common-lisp:nil :type
    (common-lisp:or maintenance-window-cutoff common-lisp:null))
   (allow-unassociated-targets common-lisp:nil :type
    (common-lisp:or maintenance-window-allow-unassociated-targets
                    common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or maintenance-window-enabled common-lisp:null))
   (replace common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-window-request
                    'make-update-maintenance-window-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-maintenance-window-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "Cutoff"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cutoff)))
    (aws-sdk/generator/shape::to-query-params "AllowUnassociatedTargets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-unassociated-targets)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Replace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replace))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-window-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or maintenance-window-schedule common-lisp:null))
   (duration common-lisp:nil :type
    (common-lisp:or maintenance-window-duration-hours common-lisp:null))
   (cutoff common-lisp:nil :type
    (common-lisp:or maintenance-window-cutoff common-lisp:null))
   (allow-unassociated-targets common-lisp:nil :type
    (common-lisp:or maintenance-window-allow-unassociated-targets
                    common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or maintenance-window-enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-window-result
                    'make-update-maintenance-window-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-maintenance-window-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "Cutoff"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cutoff)))
    (aws-sdk/generator/shape::to-query-params "AllowUnassociatedTargets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-unassociated-targets)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-window-target-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (window-target-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":window-target-id is required"))
    :type (common-lisp:or maintenance-window-target-id common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (owner-information common-lisp:nil :type
    (common-lisp:or owner-information common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (replace common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-window-target-request
                    'make-update-maintenance-window-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-maintenance-window-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "OwnerInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-information)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Replace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replace))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-window-target-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-target-id common-lisp:nil :type
    (common-lisp:or maintenance-window-target-id common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (owner-information common-lisp:nil :type
    (common-lisp:or owner-information common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-window-target-result
                    'make-update-maintenance-window-target-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-maintenance-window-target-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-target-id)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "OwnerInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-information)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-window-task-request (:copier common-lisp:nil))
   (window-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":window-id is required"))
    :type (common-lisp:or maintenance-window-id common-lisp:null))
   (window-task-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":window-task-id is required"))
    :type (common-lisp:or maintenance-window-task-id common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (task-arn common-lisp:nil :type
    (common-lisp:or maintenance-window-task-arn common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (task-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-parameters common-lisp:null))
   (task-invocation-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-invocation-parameters
                    common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or maintenance-window-task-priority common-lisp:null))
   (max-concurrency common-lisp:nil :type
    (common-lisp:or max-concurrency common-lisp:null))
   (max-errors common-lisp:nil :type
    (common-lisp:or max-errors common-lisp:null))
   (logging-info common-lisp:nil :type
    (common-lisp:or logging-info common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null))
   (replace common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-window-task-request
                    'make-update-maintenance-window-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-maintenance-window-task-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "TaskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "TaskParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-parameters)))
    (aws-sdk/generator/shape::to-query-params "TaskInvocationParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-invocation-parameters)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "LoggingInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-info)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Replace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replace))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-window-task-result (:copier common-lisp:nil))
   (window-id common-lisp:nil :type
    (common-lisp:or maintenance-window-id common-lisp:null))
   (window-task-id common-lisp:nil :type
    (common-lisp:or maintenance-window-task-id common-lisp:null))
   (targets common-lisp:nil :type (common-lisp:or targets common-lisp:null))
   (task-arn common-lisp:nil :type
    (common-lisp:or maintenance-window-task-arn common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or service-role common-lisp:null))
   (task-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-parameters common-lisp:null))
   (task-invocation-parameters common-lisp:nil :type
    (common-lisp:or maintenance-window-task-invocation-parameters
                    common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or maintenance-window-task-priority common-lisp:null))
   (max-concurrency common-lisp:nil :type
    (common-lisp:or max-concurrency common-lisp:null))
   (max-errors common-lisp:nil :type
    (common-lisp:or max-errors common-lisp:null))
   (logging-info common-lisp:nil :type
    (common-lisp:or logging-info common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or maintenance-window-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or maintenance-window-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-window-task-result
                    'make-update-maintenance-window-task-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-maintenance-window-task-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WindowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-id)))
    (aws-sdk/generator/shape::to-query-params "WindowTaskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-task-id)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "TaskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "TaskParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-parameters)))
    (aws-sdk/generator/shape::to-query-params "TaskInvocationParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-invocation-parameters)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "MaxConcurrency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-concurrency)))
    (aws-sdk/generator/shape::to-query-params "MaxErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-errors)))
    (aws-sdk/generator/shape::to-query-params "LoggingInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-info)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-managed-instance-role-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or managed-instance-id common-lisp:null))
   (iam-role
    (common-lisp:error
     #A((21) common-lisp:base-char . ":iam-role is required"))
    :type (common-lisp:or iam-role common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-managed-instance-role-request
                    'make-update-managed-instance-role-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-managed-instance-role-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "IamRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-role))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-managed-instance-role-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-managed-instance-role-result
                    'make-update-managed-instance-role-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-managed-instance-role-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-patch-baseline-request (:copier common-lisp:nil))
   (baseline-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":baseline-id is required"))
    :type (common-lisp:or baseline-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or baseline-name common-lisp:null))
   (global-filters common-lisp:nil :type
    (common-lisp:or patch-filter-group common-lisp:null))
   (approval-rules common-lisp:nil :type
    (common-lisp:or patch-rule-group common-lisp:null))
   (approved-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (approved-patches-compliance-level common-lisp:nil :type
    (common-lisp:or patch-compliance-level common-lisp:null))
   (rejected-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or baseline-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-patch-baseline-request
                    'make-update-patch-baseline-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-patch-baseline-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "GlobalFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-filters)))
    (aws-sdk/generator/shape::to-query-params "ApprovalRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approval-rules)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatchesComplianceLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches-compliance-level)))
    (aws-sdk/generator/shape::to-query-params "RejectedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejected-patches)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-patch-baseline-result (:copier common-lisp:nil))
   (baseline-id common-lisp:nil :type
    (common-lisp:or baseline-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or baseline-name common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (global-filters common-lisp:nil :type
    (common-lisp:or patch-filter-group common-lisp:null))
   (approval-rules common-lisp:nil :type
    (common-lisp:or patch-rule-group common-lisp:null))
   (approved-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (approved-patches-compliance-level common-lisp:nil :type
    (common-lisp:or patch-compliance-level common-lisp:null))
   (rejected-patches common-lisp:nil :type
    (common-lisp:or patch-id-list common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (modified-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or baseline-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-patch-baseline-result
                    'make-update-patch-baseline-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-patch-baseline-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BaselineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'baseline-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "GlobalFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-filters)))
    (aws-sdk/generator/shape::to-query-params "ApprovalRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approval-rules)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches)))
    (aws-sdk/generator/shape::to-query-params "ApprovedPatchesComplianceLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approved-patches-compliance-level)))
    (aws-sdk/generator/shape::to-query-params "RejectedPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejected-patches)))
    (aws-sdk/generator/shape::to-query-params "CreatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "ModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'modified-date)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:deftype url () 'common-lisp:string)
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-tags-to-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type resource-id tags)
   (common-lisp:declare (common-lisp:ignorable resource-type resource-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddTagsToResource")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddTagsToResourceResult" common-lisp:nil)))
 (common-lisp:export 'add-tags-to-resource))
(common-lisp:progn
 (common-lisp:defun cancel-command
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key command-id instance-ids)
   (common-lisp:declare (common-lisp:ignorable command-id instance-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-command-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelCommand")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelCommandResult" common-lisp:nil)))
 (common-lisp:export 'cancel-command))
(common-lisp:progn
 (common-lisp:defun create-activation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description default-instance-name
                     iam-role registration-limit expiration-date)
   (common-lisp:declare
    (common-lisp:ignorable description default-instance-name iam-role
     registration-limit expiration-date))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-activation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateActivation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateActivationResult" common-lisp:nil)))
 (common-lisp:export 'create-activation))
(common-lisp:progn
 (common-lisp:defun create-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name document-version instance-id
                     parameters targets schedule-expression output-location
                     association-name)
   (common-lisp:declare
    (common-lisp:ignorable name document-version instance-id parameters targets
     schedule-expression output-location association-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-association-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAssociation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAssociationResult" common-lisp:nil)))
 (common-lisp:export 'create-association))
(common-lisp:progn
 (common-lisp:defun create-association-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entries)
   (common-lisp:declare (common-lisp:ignorable entries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-association-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAssociationBatch")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAssociationBatchResult" common-lisp:nil)))
 (common-lisp:export 'create-association-batch))
(common-lisp:progn
 (common-lisp:defun create-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key content name document-type)
   (common-lisp:declare (common-lisp:ignorable content name document-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDocument")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDocumentResult" common-lisp:nil)))
 (common-lisp:export 'create-document))
(common-lisp:progn
 (common-lisp:defun create-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description schedule duration cutoff
                     allow-unassociated-targets client-token)
   (common-lisp:declare
    (common-lisp:ignorable name description schedule duration cutoff
     allow-unassociated-targets client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-maintenance-window-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'create-maintenance-window))
(common-lisp:progn
 (common-lisp:defun create-patch-baseline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key operating-system name global-filters
                     approval-rules approved-patches
                     approved-patches-compliance-level rejected-patches
                     description client-token)
   (common-lisp:declare
    (common-lisp:ignorable operating-system name global-filters approval-rules
     approved-patches approved-patches-compliance-level rejected-patches
     description client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-patch-baseline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePatchBaseline")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePatchBaselineResult" common-lisp:nil)))
 (common-lisp:export 'create-patch-baseline))
(common-lisp:progn
 (common-lisp:defun create-resource-data-sync
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sync-name s3destination)
   (common-lisp:declare (common-lisp:ignorable sync-name s3destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-resource-data-sync-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateResourceDataSync")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateResourceDataSyncResult" common-lisp:nil)))
 (common-lisp:export 'create-resource-data-sync))
(common-lisp:progn
 (common-lisp:defun delete-activation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-id)
   (common-lisp:declare (common-lisp:ignorable activation-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-activation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteActivation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteActivationResult" common-lisp:nil)))
 (common-lisp:export 'delete-activation))
(common-lisp:progn
 (common-lisp:defun delete-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name instance-id association-id)
   (common-lisp:declare
    (common-lisp:ignorable name instance-id association-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-association-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAssociation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteAssociationResult" common-lisp:nil)))
 (common-lisp:export 'delete-association))
(common-lisp:progn
 (common-lisp:defun delete-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDocument")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDocumentResult" common-lisp:nil)))
 (common-lisp:export 'delete-document))
(common-lisp:progn
 (common-lisp:defun delete-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id)
   (common-lisp:declare (common-lisp:ignorable window-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-maintenance-window-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'delete-maintenance-window))
(common-lisp:progn
 (common-lisp:defun delete-parameter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-parameter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteParameter")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteParameterResult" common-lisp:nil)))
 (common-lisp:export 'delete-parameter))
(common-lisp:progn
 (common-lisp:defun delete-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names)
   (common-lisp:declare (common-lisp:ignorable names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-parameters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteParameters")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteParametersResult" common-lisp:nil)))
 (common-lisp:export 'delete-parameters))
(common-lisp:progn
 (common-lisp:defun delete-patch-baseline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key baseline-id)
   (common-lisp:declare (common-lisp:ignorable baseline-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-patch-baseline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePatchBaseline")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeletePatchBaselineResult" common-lisp:nil)))
 (common-lisp:export 'delete-patch-baseline))
(common-lisp:progn
 (common-lisp:defun delete-resource-data-sync
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sync-name)
   (common-lisp:declare (common-lisp:ignorable sync-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-resource-data-sync-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteResourceDataSync")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteResourceDataSyncResult" common-lisp:nil)))
 (common-lisp:export 'delete-resource-data-sync))
(common-lisp:progn
 (common-lisp:defun deregister-managed-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id)
   (common-lisp:declare (common-lisp:ignorable instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-managed-instance-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterManagedInstance")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterManagedInstanceResult" common-lisp:nil)))
 (common-lisp:export 'deregister-managed-instance))
(common-lisp:progn
 (common-lisp:defun deregister-patch-baseline-for-patch-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key baseline-id patch-group)
   (common-lisp:declare (common-lisp:ignorable baseline-id patch-group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-patch-baseline-for-patch-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeregisterPatchBaselineForPatchGroup")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterPatchBaselineForPatchGroupResult" common-lisp:nil)))
 (common-lisp:export 'deregister-patch-baseline-for-patch-group))
(common-lisp:progn
 (common-lisp:defun deregister-target-from-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id window-target-id safe)
   (common-lisp:declare
    (common-lisp:ignorable window-id window-target-id safe))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-target-from-maintenance-window-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeregisterTargetFromMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterTargetFromMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'deregister-target-from-maintenance-window))
(common-lisp:progn
 (common-lisp:defun deregister-task-from-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id window-task-id)
   (common-lisp:declare (common-lisp:ignorable window-id window-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-task-from-maintenance-window-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeregisterTaskFromMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterTaskFromMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'deregister-task-from-maintenance-window))
(common-lisp:progn
 (common-lisp:defun describe-activations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-activations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeActivations")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeActivationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-activations))
(common-lisp:progn
 (common-lisp:defun describe-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name instance-id association-id
                     association-version)
   (common-lisp:declare
    (common-lisp:ignorable name instance-id association-id
     association-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-association-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAssociation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAssociationResult" common-lisp:nil)))
 (common-lisp:export 'describe-association))
(common-lisp:progn
 (common-lisp:defun describe-automation-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-automation-executions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAutomationExecutions")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAutomationExecutionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-automation-executions))
(common-lisp:progn
 (common-lisp:defun describe-available-patches
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-available-patches-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAvailablePatches")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAvailablePatchesResult" common-lisp:nil)))
 (common-lisp:export 'describe-available-patches))
(common-lisp:progn
 (common-lisp:defun describe-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name document-version)
   (common-lisp:declare (common-lisp:ignorable name document-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDocument")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDocumentResult" common-lisp:nil)))
 (common-lisp:export 'describe-document))
(common-lisp:progn
 (common-lisp:defun describe-document-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name permission-type)
   (common-lisp:declare (common-lisp:ignorable name permission-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-document-permission-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDocumentPermission")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDocumentPermissionResponse" common-lisp:nil)))
 (common-lisp:export 'describe-document-permission))
(common-lisp:progn
 (common-lisp:defun describe-effective-instance-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-effective-instance-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeEffectiveInstanceAssociations")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEffectiveInstanceAssociationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-effective-instance-associations))
(common-lisp:progn
 (common-lisp:defun describe-effective-patches-for-patch-baseline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key baseline-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable baseline-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-effective-patches-for-patch-baseline-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeEffectivePatchesForPatchBaseline")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEffectivePatchesForPatchBaselineResult" common-lisp:nil)))
 (common-lisp:export 'describe-effective-patches-for-patch-baseline))
(common-lisp:progn
 (common-lisp:defun describe-instance-associations-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instance-associations-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeInstanceAssociationsStatus")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstanceAssociationsStatusResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-associations-status))
(common-lisp:progn
 (common-lisp:defun describe-instance-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-information-filter-list filters
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-information-filter-list filters max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instance-information-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeInstanceInformation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstanceInformationResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-information))
(common-lisp:progn
 (common-lisp:defun describe-instance-patch-states
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instance-patch-states-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeInstancePatchStates")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstancePatchStatesResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-patch-states))
(common-lisp:progn
 (common-lisp:defun describe-instance-patch-states-for-patch-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key patch-group filters next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable patch-group filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instance-patch-states-for-patch-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeInstancePatchStatesForPatchGroup")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstancePatchStatesForPatchGroupResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-patch-states-for-patch-group))
(common-lisp:progn
 (common-lisp:defun describe-instance-patches
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id filters next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable instance-id filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instance-patches-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeInstancePatches")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstancePatchesResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-patches))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-window-execution-task-invocations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-execution-id task-id filters
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable window-execution-id task-id filters max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-window-execution-task-invocations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeMaintenanceWindowExecutionTaskInvocations")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMaintenanceWindowExecutionTaskInvocationsResult"
      common-lisp:nil)))
 (common-lisp:export 'describe-maintenance-window-execution-task-invocations))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-window-execution-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-execution-id filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable window-execution-id filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-window-execution-tasks-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeMaintenanceWindowExecutionTasks")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMaintenanceWindowExecutionTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-maintenance-window-execution-tasks))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-window-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id filters max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable window-id filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-window-executions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeMaintenanceWindowExecutions")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMaintenanceWindowExecutionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-maintenance-window-executions))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-window-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id filters max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable window-id filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-window-targets-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeMaintenanceWindowTargets")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMaintenanceWindowTargetsResult" common-lisp:nil)))
 (common-lisp:export 'describe-maintenance-window-targets))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-window-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id filters max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable window-id filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-window-tasks-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeMaintenanceWindowTasks")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMaintenanceWindowTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-maintenance-window-tasks))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-windows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-windows-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeMaintenanceWindows")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMaintenanceWindowsResult" common-lisp:nil)))
 (common-lisp:export 'describe-maintenance-windows))
(common-lisp:progn
 (common-lisp:defun describe-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters parameter-filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filters parameter-filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-parameters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeParameters")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeParametersResult" common-lisp:nil)))
 (common-lisp:export 'describe-parameters))
(common-lisp:progn
 (common-lisp:defun describe-patch-baselines
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-patch-baselines-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePatchBaselines")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePatchBaselinesResult" common-lisp:nil)))
 (common-lisp:export 'describe-patch-baselines))
(common-lisp:progn
 (common-lisp:defun describe-patch-group-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key patch-group)
   (common-lisp:declare (common-lisp:ignorable patch-group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-patch-group-state-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePatchGroupState")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePatchGroupStateResult" common-lisp:nil)))
 (common-lisp:export 'describe-patch-group-state))
(common-lisp:progn
 (common-lisp:defun describe-patch-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results filters next-token)
   (common-lisp:declare (common-lisp:ignorable max-results filters next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-patch-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePatchGroups")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePatchGroupsResult" common-lisp:nil)))
 (common-lisp:export 'describe-patch-groups))
(common-lisp:progn
 (common-lisp:defun get-automation-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key automation-execution-id)
   (common-lisp:declare (common-lisp:ignorable automation-execution-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-automation-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetAutomationExecution")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetAutomationExecutionResult" common-lisp:nil)))
 (common-lisp:export 'get-automation-execution))
(common-lisp:progn
 (common-lisp:defun get-command-invocation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key command-id instance-id plugin-name)
   (common-lisp:declare
    (common-lisp:ignorable command-id instance-id plugin-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-command-invocation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetCommandInvocation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCommandInvocationResult" common-lisp:nil)))
 (common-lisp:export 'get-command-invocation))
(common-lisp:progn
 (common-lisp:defun get-default-patch-baseline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key operating-system)
   (common-lisp:declare (common-lisp:ignorable operating-system))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-default-patch-baseline-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDefaultPatchBaseline")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDefaultPatchBaselineResult" common-lisp:nil)))
 (common-lisp:export 'get-default-patch-baseline))
(common-lisp:progn
 (common-lisp:defun get-deployable-patch-snapshot-for-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id snapshot-id)
   (common-lisp:declare (common-lisp:ignorable instance-id snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-deployable-patch-snapshot-for-instance-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetDeployablePatchSnapshotForInstance")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDeployablePatchSnapshotForInstanceResult" common-lisp:nil)))
 (common-lisp:export 'get-deployable-patch-snapshot-for-instance))
(common-lisp:progn
 (common-lisp:defun get-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name document-version)
   (common-lisp:declare (common-lisp:ignorable name document-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocument")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDocumentResult" common-lisp:nil)))
 (common-lisp:export 'get-document))
(common-lisp:progn
 (common-lisp:defun get-inventory
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters result-attributes next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable filters result-attributes next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-inventory-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInventory")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInventoryResult" common-lisp:nil)))
 (common-lisp:export 'get-inventory))
(common-lisp:progn
 (common-lisp:defun get-inventory-schema
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key type-name next-token max-results
                     sub-type)
   (common-lisp:declare
    (common-lisp:ignorable type-name next-token max-results sub-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-inventory-schema-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInventorySchema")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInventorySchemaResult" common-lisp:nil)))
 (common-lisp:export 'get-inventory-schema))
(common-lisp:progn
 (common-lisp:defun get-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id)
   (common-lisp:declare (common-lisp:ignorable window-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-maintenance-window-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'get-maintenance-window))
(common-lisp:progn
 (common-lisp:defun get-maintenance-window-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-execution-id)
   (common-lisp:declare (common-lisp:ignorable window-execution-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-maintenance-window-execution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetMaintenanceWindowExecution")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetMaintenanceWindowExecutionResult" common-lisp:nil)))
 (common-lisp:export 'get-maintenance-window-execution))
(common-lisp:progn
 (common-lisp:defun get-maintenance-window-execution-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-execution-id task-id)
   (common-lisp:declare (common-lisp:ignorable window-execution-id task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-maintenance-window-execution-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetMaintenanceWindowExecutionTask")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetMaintenanceWindowExecutionTaskResult" common-lisp:nil)))
 (common-lisp:export 'get-maintenance-window-execution-task))
(common-lisp:progn
 (common-lisp:defun get-maintenance-window-execution-task-invocation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-execution-id task-id
                     invocation-id)
   (common-lisp:declare
    (common-lisp:ignorable window-execution-id task-id invocation-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-maintenance-window-execution-task-invocation-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetMaintenanceWindowExecutionTaskInvocation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetMaintenanceWindowExecutionTaskInvocationResult" common-lisp:nil)))
 (common-lisp:export 'get-maintenance-window-execution-task-invocation))
(common-lisp:progn
 (common-lisp:defun get-maintenance-window-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id window-task-id)
   (common-lisp:declare (common-lisp:ignorable window-id window-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-maintenance-window-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetMaintenanceWindowTask")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetMaintenanceWindowTaskResult" common-lisp:nil)))
 (common-lisp:export 'get-maintenance-window-task))
(common-lisp:progn
 (common-lisp:defun get-parameter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name with-decryption)
   (common-lisp:declare (common-lisp:ignorable name with-decryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-parameter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetParameter")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetParameterResult" common-lisp:nil)))
 (common-lisp:export 'get-parameter))
(common-lisp:progn
 (common-lisp:defun get-parameter-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name with-decryption max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable name with-decryption max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-parameter-history-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetParameterHistory")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetParameterHistoryResult" common-lisp:nil)))
 (common-lisp:export 'get-parameter-history))
(common-lisp:progn
 (common-lisp:defun get-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names with-decryption)
   (common-lisp:declare (common-lisp:ignorable names with-decryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-parameters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetParameters")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetParametersResult" common-lisp:nil)))
 (common-lisp:export 'get-parameters))
(common-lisp:progn
 (common-lisp:defun get-parameters-by-path
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key path recursive parameter-filters
                     with-decryption max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable path recursive parameter-filters with-decryption
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-parameters-by-path-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetParametersByPath")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetParametersByPathResult" common-lisp:nil)))
 (common-lisp:export 'get-parameters-by-path))
(common-lisp:progn
 (common-lisp:defun get-patch-baseline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key baseline-id)
   (common-lisp:declare (common-lisp:ignorable baseline-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-patch-baseline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetPatchBaseline")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetPatchBaselineResult" common-lisp:nil)))
 (common-lisp:export 'get-patch-baseline))
(common-lisp:progn
 (common-lisp:defun get-patch-baseline-for-patch-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key patch-group operating-system)
   (common-lisp:declare (common-lisp:ignorable patch-group operating-system))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-patch-baseline-for-patch-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetPatchBaselineForPatchGroup")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetPatchBaselineForPatchGroupResult" common-lisp:nil)))
 (common-lisp:export 'get-patch-baseline-for-patch-group))
(common-lisp:progn
 (common-lisp:defun list-association-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key association-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable association-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-association-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssociationVersions")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssociationVersionsResult" common-lisp:nil)))
 (common-lisp:export 'list-association-versions))
(common-lisp:progn
 (common-lisp:defun list-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key association-filter-list max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable association-filter-list max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-associations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssociations")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssociationsResult" common-lisp:nil)))
 (common-lisp:export 'list-associations))
(common-lisp:progn
 (common-lisp:defun list-command-invocations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key command-id instance-id max-results
                     next-token filters details)
   (common-lisp:declare
    (common-lisp:ignorable command-id instance-id max-results next-token
     filters details))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-command-invocations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListCommandInvocations")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListCommandInvocationsResult" common-lisp:nil)))
 (common-lisp:export 'list-command-invocations))
(common-lisp:progn
 (common-lisp:defun list-commands
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key command-id instance-id max-results
                     next-token filters)
   (common-lisp:declare
    (common-lisp:ignorable command-id instance-id max-results next-token
     filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-commands-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListCommands")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListCommandsResult" common-lisp:nil)))
 (common-lisp:export 'list-commands))
(common-lisp:progn
 (common-lisp:defun list-compliance-items
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters resource-ids resource-types
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable filters resource-ids resource-types next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-compliance-items-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListComplianceItems")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListComplianceItemsResult" common-lisp:nil)))
 (common-lisp:export 'list-compliance-items))
(common-lisp:progn
 (common-lisp:defun list-compliance-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-compliance-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListComplianceSummaries")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListComplianceSummariesResult" common-lisp:nil)))
 (common-lisp:export 'list-compliance-summaries))
(common-lisp:progn
 (common-lisp:defun list-document-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name max-results next-token)
   (common-lisp:declare (common-lisp:ignorable name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-document-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDocumentVersions")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDocumentVersionsResult" common-lisp:nil)))
 (common-lisp:export 'list-document-versions))
(common-lisp:progn
 (common-lisp:defun list-documents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-filter-list max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable document-filter-list max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-documents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDocuments")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDocumentsResult" common-lisp:nil)))
 (common-lisp:export 'list-documents))
(common-lisp:progn
 (common-lisp:defun list-inventory-entries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id type-name filters next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable instance-id type-name filters next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-inventory-entries-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListInventoryEntries")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListInventoryEntriesResult" common-lisp:nil)))
 (common-lisp:export 'list-inventory-entries))
(common-lisp:progn
 (common-lisp:defun list-resource-compliance-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resource-compliance-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ListResourceComplianceSummaries")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListResourceComplianceSummariesResult" common-lisp:nil)))
 (common-lisp:export 'list-resource-compliance-summaries))
(common-lisp:progn
 (common-lisp:defun list-resource-data-sync
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-data-sync-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListResourceDataSync")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListResourceDataSyncResult" common-lisp:nil)))
 (common-lisp:export 'list-resource-data-sync))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type resource-id)
   (common-lisp:declare (common-lisp:ignorable resource-type resource-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagsForResource")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsForResourceResult" common-lisp:nil)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun modify-document-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name permission-type account-ids-to-add
                     account-ids-to-remove)
   (common-lisp:declare
    (common-lisp:ignorable name permission-type account-ids-to-add
     account-ids-to-remove))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-document-permission-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyDocumentPermission")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyDocumentPermissionResponse" common-lisp:nil)))
 (common-lisp:export 'modify-document-permission))
(common-lisp:progn
 (common-lisp:defun put-compliance-items
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id resource-type compliance-type
                     execution-summary items item-content-hash)
   (common-lisp:declare
    (common-lisp:ignorable resource-id resource-type compliance-type
     execution-summary items item-content-hash))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-compliance-items-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutComplianceItems")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutComplianceItemsResult" common-lisp:nil)))
 (common-lisp:export 'put-compliance-items))
(common-lisp:progn
 (common-lisp:defun put-inventory
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id items)
   (common-lisp:declare (common-lisp:ignorable instance-id items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-inventory-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutInventory")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutInventoryResult" common-lisp:nil)))
 (common-lisp:export 'put-inventory))
(common-lisp:progn
 (common-lisp:defun put-parameter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description value type key-id
                     overwrite allowed-pattern)
   (common-lisp:declare
    (common-lisp:ignorable name description value type key-id overwrite
     allowed-pattern))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-parameter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutParameter")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutParameterResult" common-lisp:nil)))
 (common-lisp:export 'put-parameter))
(common-lisp:progn
 (common-lisp:defun register-default-patch-baseline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key baseline-id)
   (common-lisp:declare (common-lisp:ignorable baseline-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-default-patch-baseline-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterDefaultPatchBaseline")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterDefaultPatchBaselineResult" common-lisp:nil)))
 (common-lisp:export 'register-default-patch-baseline))
(common-lisp:progn
 (common-lisp:defun register-patch-baseline-for-patch-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key baseline-id patch-group)
   (common-lisp:declare (common-lisp:ignorable baseline-id patch-group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-patch-baseline-for-patch-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"RegisterPatchBaselineForPatchGroup")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterPatchBaselineForPatchGroupResult" common-lisp:nil)))
 (common-lisp:export 'register-patch-baseline-for-patch-group))
(common-lisp:progn
 (common-lisp:defun register-target-with-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id resource-type targets
                     owner-information name description client-token)
   (common-lisp:declare
    (common-lisp:ignorable window-id resource-type targets owner-information
     name description client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-target-with-maintenance-window-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"RegisterTargetWithMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterTargetWithMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'register-target-with-maintenance-window))
(common-lisp:progn
 (common-lisp:defun register-task-with-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id targets task-arn
                     service-role-arn task-type task-parameters
                     task-invocation-parameters priority max-concurrency
                     max-errors logging-info name description client-token)
   (common-lisp:declare
    (common-lisp:ignorable window-id targets task-arn service-role-arn
     task-type task-parameters task-invocation-parameters priority
     max-concurrency max-errors logging-info name description client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-task-with-maintenance-window-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"RegisterTaskWithMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterTaskWithMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'register-task-with-maintenance-window))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type resource-id tag-keys)
   (common-lisp:declare
    (common-lisp:ignorable resource-type resource-id tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-tags-from-resource-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveTagsFromResource")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveTagsFromResourceResult" common-lisp:nil)))
 (common-lisp:export 'remove-tags-from-resource))
(common-lisp:progn
 (common-lisp:defun send-automation-signal
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key automation-execution-id signal-type
                     payload)
   (common-lisp:declare
    (common-lisp:ignorable automation-execution-id signal-type payload))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-automation-signal-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendAutomationSignal")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendAutomationSignalResult" common-lisp:nil)))
 (common-lisp:export 'send-automation-signal))
(common-lisp:progn
 (common-lisp:defun send-command
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids targets document-name
                     document-hash document-hash-type timeout-seconds comment
                     parameters output-s3region output-s3bucket-name
                     output-s3key-prefix max-concurrency max-errors
                     service-role-arn notification-config)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids targets document-name document-hash
     document-hash-type timeout-seconds comment parameters output-s3region
     output-s3bucket-name output-s3key-prefix max-concurrency max-errors
     service-role-arn notification-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-command-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendCommand")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendCommandResult" common-lisp:nil)))
 (common-lisp:export 'send-command))
(common-lisp:progn
 (common-lisp:defun start-automation-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-name document-version
                     parameters)
   (common-lisp:declare
    (common-lisp:ignorable document-name document-version parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-automation-execution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartAutomationExecution")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartAutomationExecutionResult" common-lisp:nil)))
 (common-lisp:export 'start-automation-execution))
(common-lisp:progn
 (common-lisp:defun stop-automation-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key automation-execution-id)
   (common-lisp:declare (common-lisp:ignorable automation-execution-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-automation-execution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopAutomationExecution")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopAutomationExecutionResult" common-lisp:nil)))
 (common-lisp:export 'stop-automation-execution))
(common-lisp:progn
 (common-lisp:defun update-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key association-id parameters
                     document-version schedule-expression output-location name
                     targets association-name association-version)
   (common-lisp:declare
    (common-lisp:ignorable association-id parameters document-version
     schedule-expression output-location name targets association-name
     association-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-association-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAssociation")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateAssociationResult" common-lisp:nil)))
 (common-lisp:export 'update-association))
(common-lisp:progn
 (common-lisp:defun update-association-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name instance-id association-status)
   (common-lisp:declare
    (common-lisp:ignorable name instance-id association-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-association-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAssociationStatus")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateAssociationStatusResult" common-lisp:nil)))
 (common-lisp:export 'update-association-status))
(common-lisp:progn
 (common-lisp:defun update-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key content name document-version)
   (common-lisp:declare (common-lisp:ignorable content name document-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDocument")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDocumentResult" common-lisp:nil)))
 (common-lisp:export 'update-document))
(common-lisp:progn
 (common-lisp:defun update-document-default-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name document-version)
   (common-lisp:declare (common-lisp:ignorable name document-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-document-default-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDocumentDefaultVersion")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDocumentDefaultVersionResult" common-lisp:nil)))
 (common-lisp:export 'update-document-default-version))
(common-lisp:progn
 (common-lisp:defun update-maintenance-window
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id name description schedule
                     duration cutoff allow-unassociated-targets enabled
                     replace)
   (common-lisp:declare
    (common-lisp:ignorable window-id name description schedule duration cutoff
     allow-unassociated-targets enabled replace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-maintenance-window-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMaintenanceWindow")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateMaintenanceWindowResult" common-lisp:nil)))
 (common-lisp:export 'update-maintenance-window))
(common-lisp:progn
 (common-lisp:defun update-maintenance-window-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id window-target-id targets
                     owner-information name description replace)
   (common-lisp:declare
    (common-lisp:ignorable window-id window-target-id targets owner-information
     name description replace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-maintenance-window-target-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMaintenanceWindowTarget")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateMaintenanceWindowTargetResult" common-lisp:nil)))
 (common-lisp:export 'update-maintenance-window-target))
(common-lisp:progn
 (common-lisp:defun update-maintenance-window-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key window-id window-task-id targets task-arn
                     service-role-arn task-parameters
                     task-invocation-parameters priority max-concurrency
                     max-errors logging-info name description replace)
   (common-lisp:declare
    (common-lisp:ignorable window-id window-task-id targets task-arn
     service-role-arn task-parameters task-invocation-parameters priority
     max-concurrency max-errors logging-info name description replace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-maintenance-window-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMaintenanceWindowTask")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateMaintenanceWindowTaskResult" common-lisp:nil)))
 (common-lisp:export 'update-maintenance-window-task))
(common-lisp:progn
 (common-lisp:defun update-managed-instance-role
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id iam-role)
   (common-lisp:declare (common-lisp:ignorable instance-id iam-role))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-managed-instance-role-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateManagedInstanceRole")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateManagedInstanceRoleResult" common-lisp:nil)))
 (common-lisp:export 'update-managed-instance-role))
(common-lisp:progn
 (common-lisp:defun update-patch-baseline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key baseline-id name global-filters
                     approval-rules approved-patches
                     approved-patches-compliance-level rejected-patches
                     description)
   (common-lisp:declare
    (common-lisp:ignorable baseline-id name global-filters approval-rules
     approved-patches approved-patches-compliance-level rejected-patches
     description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-patch-baseline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "ssm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdatePatchBaseline")
                                  ("Version" ,@"2014-11-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdatePatchBaselineResult" common-lisp:nil)))
 (common-lisp:export 'update-patch-baseline))