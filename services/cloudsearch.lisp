;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cloudsearch
  (:use)
  (:nicknames #:aws/cloudsearch)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/cloudsearch)

(common-lisp:deftype apiversion () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (access-policies-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or policy-document common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-policies-status 'make-access-policies-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-policies-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype algorithmic-stemming () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (analysis-options (:copier common-lisp:nil))
   (synonyms common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stopwords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stemming-dictionary common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (japanese-tokenization-dictionary common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (algorithmic-stemming common-lisp:nil :type
    (common-lisp:or algorithmic-stemming common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analysis-options 'make-analysis-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape analysis-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Synonyms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'synonyms)))
    (aws-sdk/generator/shape::to-query-params "Stopwords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopwords)))
    (aws-sdk/generator/shape::to-query-params "StemmingDictionary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stemming-dictionary)))
    (aws-sdk/generator/shape::to-query-params "JapaneseTokenizationDictionary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'japanese-tokenization-dictionary)))
    (aws-sdk/generator/shape::to-query-params "AlgorithmicStemming"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'algorithmic-stemming))))))
(common-lisp:progn
 (common-lisp:defstruct (analysis-scheme (:copier common-lisp:nil))
   (analysis-scheme-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":analysis-scheme-name is required"))
    :type (common-lisp:or standard-name common-lisp:null))
   (analysis-scheme-language
    (common-lisp:error
     #A((37) common-lisp:base-char . ":analysis-scheme-language is required"))
    :type (common-lisp:or analysis-scheme-language common-lisp:null))
   (analysis-options common-lisp:nil :type
    (common-lisp:or analysis-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'analysis-scheme 'make-analysis-scheme))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape analysis-scheme))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AnalysisSchemeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme-name)))
    (aws-sdk/generator/shape::to-query-params "AnalysisSchemeLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme-language)))
    (aws-sdk/generator/shape::to-query-params "AnalysisOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-options))))))
(common-lisp:deftype analysis-scheme-language () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (analysis-scheme-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or analysis-scheme common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analysis-scheme-status 'make-analysis-scheme-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          analysis-scheme-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype analysis-scheme-status-list ()
   '(trivial-types:proper-list analysis-scheme-status))
 (common-lisp:defun |make-analysis-scheme-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list analysis-scheme-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (availability-options-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or multi-az common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'availability-options-status
                    'make-availability-options-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          availability-options-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (base-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'base-exception 'make-base-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape base-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (build-suggesters-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'build-suggesters-request 'make-build-suggesters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          build-suggesters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (build-suggesters-response (:copier common-lisp:nil))
   (field-names common-lisp:nil :type
    (common-lisp:or field-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'build-suggesters-response
                    'make-build-suggesters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          build-suggesters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FieldNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-names))))))
(common-lisp:progn
 (common-lisp:defstruct (create-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-request 'make-create-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-domain-response (:copier common-lisp:nil))
   (domain-status common-lisp:nil :type
    (common-lisp:or domain-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-response 'make-create-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-domain-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-status))))))
(common-lisp:progn
 (common-lisp:defstruct (date-array-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or field-value common-lisp:null))
   (source-fields common-lisp:nil :type
    (common-lisp:or field-name-comma-list common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'date-array-options 'make-date-array-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape date-array-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-fields)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (date-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or field-value common-lisp:null))
   (source-field common-lisp:nil :type
    (common-lisp:or field-name common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (sort-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'date-options 'make-date-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape date-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-field)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled)))
    (aws-sdk/generator/shape::to-query-params "SortEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (define-analysis-scheme-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (analysis-scheme
    (common-lisp:error
     #A((28) common-lisp:base-char . ":analysis-scheme is required"))
    :type (common-lisp:or analysis-scheme common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-analysis-scheme-request
                    'make-define-analysis-scheme-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-analysis-scheme-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "AnalysisScheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme))))))
(common-lisp:progn
 (common-lisp:defstruct
     (define-analysis-scheme-response (:copier common-lisp:nil))
   (analysis-scheme
    (common-lisp:error
     #A((28) common-lisp:base-char . ":analysis-scheme is required"))
    :type (common-lisp:or analysis-scheme-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-analysis-scheme-response
                    'make-define-analysis-scheme-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-analysis-scheme-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AnalysisScheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme))))))
(common-lisp:progn
 (common-lisp:defstruct (define-expression-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (expression
    (common-lisp:error
     #A((23) common-lisp:base-char . ":expression is required"))
    :type (common-lisp:or expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-expression-request
                    'make-define-expression-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-expression-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "Expression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression))))))
(common-lisp:progn
 (common-lisp:defstruct (define-expression-response (:copier common-lisp:nil))
   (expression
    (common-lisp:error
     #A((23) common-lisp:base-char . ":expression is required"))
    :type (common-lisp:or expression-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-expression-response
                    'make-define-expression-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-expression-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Expression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression))))))
(common-lisp:progn
 (common-lisp:defstruct (define-index-field-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (index-field
    (common-lisp:error
     #A((24) common-lisp:base-char . ":index-field is required"))
    :type (common-lisp:or index-field common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-index-field-request
                    'make-define-index-field-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-index-field-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "IndexField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-field))))))
(common-lisp:progn
 (common-lisp:defstruct (define-index-field-response (:copier common-lisp:nil))
   (index-field
    (common-lisp:error
     #A((24) common-lisp:base-char . ":index-field is required"))
    :type (common-lisp:or index-field-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-index-field-response
                    'make-define-index-field-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-index-field-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-field))))))
(common-lisp:progn
 (common-lisp:defstruct (define-suggester-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (suggester
    (common-lisp:error
     #A((22) common-lisp:base-char . ":suggester is required"))
    :type (common-lisp:or suggester common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-suggester-request 'make-define-suggester-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-suggester-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "Suggester"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suggester))))))
(common-lisp:progn
 (common-lisp:defstruct (define-suggester-response (:copier common-lisp:nil))
   (suggester
    (common-lisp:error
     #A((22) common-lisp:base-char . ":suggester is required"))
    :type (common-lisp:or suggester-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'define-suggester-response
                    'make-define-suggester-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          define-suggester-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Suggester"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suggester))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-analysis-scheme-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (analysis-scheme-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":analysis-scheme-name is required"))
    :type (common-lisp:or standard-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-analysis-scheme-request
                    'make-delete-analysis-scheme-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-analysis-scheme-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "AnalysisSchemeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-analysis-scheme-response (:copier common-lisp:nil))
   (analysis-scheme
    (common-lisp:error
     #A((28) common-lisp:base-char . ":analysis-scheme is required"))
    :type (common-lisp:or analysis-scheme-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-analysis-scheme-response
                    'make-delete-analysis-scheme-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-analysis-scheme-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AnalysisScheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-request 'make-delete-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-response (:copier common-lisp:nil))
   (domain-status common-lisp:nil :type
    (common-lisp:or domain-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-response 'make-delete-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-domain-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-status))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-expression-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (expression-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":expression-name is required"))
    :type (common-lisp:or standard-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-expression-request
                    'make-delete-expression-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-expression-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ExpressionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-expression-response (:copier common-lisp:nil))
   (expression
    (common-lisp:error
     #A((23) common-lisp:base-char . ":expression is required"))
    :type (common-lisp:or expression-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-expression-response
                    'make-delete-expression-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-expression-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Expression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-index-field-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (index-field-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":index-field-name is required"))
    :type (common-lisp:or dynamic-field-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-index-field-request
                    'make-delete-index-field-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-index-field-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "IndexFieldName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-field-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-index-field-response (:copier common-lisp:nil))
   (index-field
    (common-lisp:error
     #A((24) common-lisp:base-char . ":index-field is required"))
    :type (common-lisp:or index-field-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-index-field-response
                    'make-delete-index-field-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-index-field-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-field))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-suggester-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (suggester-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":suggester-name is required"))
    :type (common-lisp:or standard-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-suggester-request 'make-delete-suggester-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-suggester-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "SuggesterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suggester-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-suggester-response (:copier common-lisp:nil))
   (suggester
    (common-lisp:error
     #A((22) common-lisp:base-char . ":suggester is required"))
    :type (common-lisp:or suggester-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-suggester-response
                    'make-delete-suggester-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-suggester-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Suggester"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suggester))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-analysis-schemes-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (analysis-scheme-names common-lisp:nil :type
    (common-lisp:or standard-name-list common-lisp:null))
   (deployed common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-analysis-schemes-request
                    'make-describe-analysis-schemes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-analysis-schemes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "AnalysisSchemeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme-names)))
    (aws-sdk/generator/shape::to-query-params "Deployed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-analysis-schemes-response (:copier common-lisp:nil))
   (analysis-schemes
    (common-lisp:error
     #A((29) common-lisp:base-char . ":analysis-schemes is required"))
    :type (common-lisp:or analysis-scheme-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-analysis-schemes-response
                    'make-describe-analysis-schemes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-analysis-schemes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AnalysisSchemes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-schemes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-availability-options-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (deployed common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-availability-options-request
                    'make-describe-availability-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-availability-options-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "Deployed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-availability-options-response (:copier common-lisp:nil))
   (availability-options common-lisp:nil :type
    (common-lisp:or availability-options-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-availability-options-response
                    'make-describe-availability-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-availability-options-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AvailabilityOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-options))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-domains-request (:copier common-lisp:nil))
   (domain-names common-lisp:nil :type
    (common-lisp:or domain-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-domains-request 'make-describe-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-domains-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-names))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-domains-response (:copier common-lisp:nil))
   (domain-status-list
    (common-lisp:error
     #A((31) common-lisp:base-char . ":domain-status-list is required"))
    :type (common-lisp:or domain-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-domains-response
                    'make-describe-domains-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-domains-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainStatusList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-status-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-expressions-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (expression-names common-lisp:nil :type
    (common-lisp:or standard-name-list common-lisp:null))
   (deployed common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-expressions-request
                    'make-describe-expressions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-expressions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ExpressionNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-names)))
    (aws-sdk/generator/shape::to-query-params "Deployed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-expressions-response (:copier common-lisp:nil))
   (expressions
    (common-lisp:error
     #A((24) common-lisp:base-char . ":expressions is required"))
    :type (common-lisp:or expression-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-expressions-response
                    'make-describe-expressions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-expressions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Expressions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expressions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-index-fields-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (field-names common-lisp:nil :type
    (common-lisp:or dynamic-field-name-list common-lisp:null))
   (deployed common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-index-fields-request
                    'make-describe-index-fields-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-index-fields-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "FieldNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-names)))
    (aws-sdk/generator/shape::to-query-params "Deployed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-index-fields-response (:copier common-lisp:nil))
   (index-fields
    (common-lisp:error
     #A((25) common-lisp:base-char . ":index-fields is required"))
    :type (common-lisp:or index-field-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-index-fields-response
                    'make-describe-index-fields-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-index-fields-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-fields))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-parameters-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-parameters-request
                    'make-describe-scaling-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-parameters-response (:copier common-lisp:nil))
   (scaling-parameters
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scaling-parameters is required"))
    :type (common-lisp:or scaling-parameters-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-parameters-response
                    'make-describe-scaling-parameters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-parameters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScalingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-service-access-policies-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (deployed common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-service-access-policies-request
                    'make-describe-service-access-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-service-access-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "Deployed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-service-access-policies-response (:copier common-lisp:nil))
   (access-policies
    (common-lisp:error
     #A((28) common-lisp:base-char . ":access-policies is required"))
    :type (common-lisp:or access-policies-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-service-access-policies-response
                    'make-describe-service-access-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-service-access-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policies))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-suggesters-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (suggester-names common-lisp:nil :type
    (common-lisp:or standard-name-list common-lisp:null))
   (deployed common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-suggesters-request
                    'make-describe-suggesters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-suggesters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "SuggesterNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suggester-names)))
    (aws-sdk/generator/shape::to-query-params "Deployed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-suggesters-response (:copier common-lisp:nil))
   (suggesters
    (common-lisp:error
     #A((23) common-lisp:base-char . ":suggesters is required"))
    :type (common-lisp:or suggester-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-suggesters-response
                    'make-describe-suggesters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-suggesters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Suggesters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suggesters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disabled-operation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disabled-operation-exception
                    'make-disabled-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disabled-operation-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (document-suggester-options (:copier common-lisp:nil))
   (source-field
    (common-lisp:error
     #A((25) common-lisp:base-char . ":source-field is required"))
    :type (common-lisp:or field-name common-lisp:null))
   (fuzzy-matching common-lisp:nil :type
    (common-lisp:or suggester-fuzzy-matching common-lisp:null))
   (sort-expression common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-suggester-options
                    'make-document-suggester-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-suggester-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-field)))
    (aws-sdk/generator/shape::to-query-params "FuzzyMatching"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fuzzy-matching)))
    (aws-sdk/generator/shape::to-query-params "SortExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-expression))))))
(common-lisp:deftype domain-id () 'common-lisp:string)
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype domain-name-list ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun |make-domain-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (domain-name-map
     (:constructor |make-domain-name-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (domain-status (:copier common-lisp:nil))
   (domain-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":domain-id is required"))
    :type (common-lisp:or domain-id common-lisp:null))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (deleted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (doc-service common-lisp:nil :type
    (common-lisp:or service-endpoint common-lisp:null))
   (search-service common-lisp:nil :type
    (common-lisp:or service-endpoint common-lisp:null))
   (requires-index-documents
    (common-lisp:error
     #A((37) common-lisp:base-char . ":requires-index-documents is required"))
    :type (common-lisp:or boolean common-lisp:null))
   (processing common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (search-instance-type common-lisp:nil :type
    (common-lisp:or search-instance-type common-lisp:null))
   (search-partition-count common-lisp:nil :type
    (common-lisp:or partition-count common-lisp:null))
   (search-instance-count common-lisp:nil :type
    (common-lisp:or instance-count common-lisp:null))
   (limits common-lisp:nil :type (common-lisp:or limits common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-status 'make-domain-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-id)))
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "Deleted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deleted)))
    (aws-sdk/generator/shape::to-query-params "DocService"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'doc-service)))
    (aws-sdk/generator/shape::to-query-params "SearchService"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-service)))
    (aws-sdk/generator/shape::to-query-params "RequiresIndexDocuments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requires-index-documents)))
    (aws-sdk/generator/shape::to-query-params "Processing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'processing)))
    (aws-sdk/generator/shape::to-query-params "SearchInstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-instance-type)))
    (aws-sdk/generator/shape::to-query-params "SearchPartitionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-partition-count)))
    (aws-sdk/generator/shape::to-query-params "SearchInstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-instance-count)))
    (aws-sdk/generator/shape::to-query-params "Limits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits))))))
(common-lisp:progn
 (common-lisp:deftype domain-status-list ()
   '(trivial-types:proper-list domain-status))
 (common-lisp:defun |make-domain-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (double-array-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (source-fields common-lisp:nil :type
    (common-lisp:or field-name-comma-list common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'double-array-options 'make-double-array-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape double-array-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-fields)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (double-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (source-field common-lisp:nil :type
    (common-lisp:or field-name common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (sort-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'double-options 'make-double-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape double-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-field)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled)))
    (aws-sdk/generator/shape::to-query-params "SortEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-enabled))))))
(common-lisp:deftype dynamic-field-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dynamic-field-name-list ()
   '(trivial-types:proper-list dynamic-field-name))
 (common-lisp:defun |make-dynamic-field-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dynamic-field-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (expression (:copier common-lisp:nil))
   (expression-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":expression-name is required"))
    :type (common-lisp:or standard-name common-lisp:null))
   (expression-value
    (common-lisp:error
     #A((29) common-lisp:base-char . ":expression-value is required"))
    :type (common-lisp:or expression-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'expression 'make-expression))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape expression))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ExpressionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-name)))
    (aws-sdk/generator/shape::to-query-params "ExpressionValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-value))))))
(common-lisp:progn
 (common-lisp:defstruct (expression-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or expression common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expression-status 'make-expression-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape expression-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype expression-status-list ()
   '(trivial-types:proper-list expression-status))
 (common-lisp:defun |make-expression-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list expression-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype expression-value () 'common-lisp:string)
(common-lisp:deftype field-name () 'common-lisp:string)
(common-lisp:deftype field-name-comma-list () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype field-name-list ()
   '(trivial-types:proper-list field-name))
 (common-lisp:defun |make-field-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list field-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype field-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (index-documents-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'index-documents-request 'make-index-documents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          index-documents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (index-documents-response (:copier common-lisp:nil))
   (field-names common-lisp:nil :type
    (common-lisp:or field-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'index-documents-response 'make-index-documents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          index-documents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FieldNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-names))))))
(common-lisp:progn
 (common-lisp:defstruct (index-field (:copier common-lisp:nil))
   (index-field-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":index-field-name is required"))
    :type (common-lisp:or dynamic-field-name common-lisp:null))
   (index-field-type
    (common-lisp:error
     #A((29) common-lisp:base-char . ":index-field-type is required"))
    :type (common-lisp:or index-field-type common-lisp:null))
   (int-options common-lisp:nil :type
    (common-lisp:or int-options common-lisp:null))
   (double-options common-lisp:nil :type
    (common-lisp:or double-options common-lisp:null))
   (literal-options common-lisp:nil :type
    (common-lisp:or literal-options common-lisp:null))
   (text-options common-lisp:nil :type
    (common-lisp:or text-options common-lisp:null))
   (date-options common-lisp:nil :type
    (common-lisp:or date-options common-lisp:null))
   (lat-lon-options common-lisp:nil :type
    (common-lisp:or lat-lon-options common-lisp:null))
   (int-array-options common-lisp:nil :type
    (common-lisp:or int-array-options common-lisp:null))
   (double-array-options common-lisp:nil :type
    (common-lisp:or double-array-options common-lisp:null))
   (literal-array-options common-lisp:nil :type
    (common-lisp:or literal-array-options common-lisp:null))
   (text-array-options common-lisp:nil :type
    (common-lisp:or text-array-options common-lisp:null))
   (date-array-options common-lisp:nil :type
    (common-lisp:or date-array-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'index-field 'make-index-field))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape index-field))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexFieldName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-field-name)))
    (aws-sdk/generator/shape::to-query-params "IndexFieldType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-field-type)))
    (aws-sdk/generator/shape::to-query-params "IntOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'int-options)))
    (aws-sdk/generator/shape::to-query-params "DoubleOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'double-options)))
    (aws-sdk/generator/shape::to-query-params "LiteralOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'literal-options)))
    (aws-sdk/generator/shape::to-query-params "TextOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text-options)))
    (aws-sdk/generator/shape::to-query-params "DateOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-options)))
    (aws-sdk/generator/shape::to-query-params "LatLonOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lat-lon-options)))
    (aws-sdk/generator/shape::to-query-params "IntArrayOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'int-array-options)))
    (aws-sdk/generator/shape::to-query-params "DoubleArrayOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'double-array-options)))
    (aws-sdk/generator/shape::to-query-params "LiteralArrayOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'literal-array-options)))
    (aws-sdk/generator/shape::to-query-params "TextArrayOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text-array-options)))
    (aws-sdk/generator/shape::to-query-params "DateArrayOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-array-options))))))
(common-lisp:progn
 (common-lisp:defstruct (index-field-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or index-field common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'index-field-status 'make-index-field-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape index-field-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype index-field-status-list ()
   '(trivial-types:proper-list index-field-status))
 (common-lisp:defun |make-index-field-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list index-field-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype index-field-type () 'common-lisp:string)
(common-lisp:deftype instance-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (int-array-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (source-fields common-lisp:nil :type
    (common-lisp:or field-name-comma-list common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'int-array-options 'make-int-array-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape int-array-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-fields)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (int-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (source-field common-lisp:nil :type
    (common-lisp:or field-name common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (sort-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'int-options 'make-int-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape int-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-field)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled)))
    (aws-sdk/generator/shape::to-query-params "SortEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (internal-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'internal-exception 'make-internal-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape internal-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-type-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-type-exception 'make-invalid-type-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-type-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (lat-lon-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or field-value common-lisp:null))
   (source-field common-lisp:nil :type
    (common-lisp:or field-name common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (sort-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lat-lon-options 'make-lat-lon-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lat-lon-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-field)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled)))
    (aws-sdk/generator/shape::to-query-params "SortEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (limits (:copier common-lisp:nil))
   (maximum-replication-count
    (common-lisp:error
     #A((38) common-lisp:base-char . ":maximum-replication-count is required"))
    :type (common-lisp:or maximum-replication-count common-lisp:null))
   (maximum-partition-count
    (common-lisp:error
     #A((36) common-lisp:base-char . ":maximum-partition-count is required"))
    :type (common-lisp:or maximum-partition-count common-lisp:null)))
 (common-lisp:export (common-lisp:list 'limits 'make-limits))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape limits))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaximumReplicationCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-replication-count)))
    (aws-sdk/generator/shape::to-query-params "MaximumPartitionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-partition-count))))))
(common-lisp:progn
 (common-lisp:defstruct (list-domain-names-response (:copier common-lisp:nil))
   (domain-names common-lisp:nil :type
    (common-lisp:or domain-name-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domain-names-response
                    'make-list-domain-names-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-domain-names-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-names))))))
(common-lisp:progn
 (common-lisp:defstruct (literal-array-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or field-value common-lisp:null))
   (source-fields common-lisp:nil :type
    (common-lisp:or field-name-comma-list common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'literal-array-options 'make-literal-array-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          literal-array-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-fields)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (literal-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or field-value common-lisp:null))
   (source-field common-lisp:nil :type
    (common-lisp:or field-name common-lisp:null))
   (facet-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (search-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (sort-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'literal-options 'make-literal-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape literal-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-field)))
    (aws-sdk/generator/shape::to-query-params "FacetEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-enabled)))
    (aws-sdk/generator/shape::to-query-params "SearchEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-enabled)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled)))
    (aws-sdk/generator/shape::to-query-params "SortEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-enabled))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype maximum-partition-count () 'common-lisp:integer)
(common-lisp:deftype maximum-replication-count () 'common-lisp:integer)
(common-lisp:deftype multi-az () 'common-lisp:boolean)
(common-lisp:deftype option-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (option-status (:copier common-lisp:nil))
   (creation-date
    (common-lisp:error
     #A((26) common-lisp:base-char . ":creation-date is required"))
    :type (common-lisp:or update-timestamp common-lisp:null))
   (update-date
    (common-lisp:error
     #A((24) common-lisp:base-char . ":update-date is required"))
    :type (common-lisp:or update-timestamp common-lisp:null))
   (update-version common-lisp:nil :type
    (common-lisp:or uint-value common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or option-state common-lisp:null))
   (pending-deletion common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'option-status 'make-option-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape option-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "UpdateDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-date)))
    (aws-sdk/generator/shape::to-query-params "UpdateVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-version)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "PendingDeletion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending-deletion))))))
(common-lisp:deftype partition-count () 'common-lisp:integer)
(common-lisp:deftype partition-instance-type () 'common-lisp:string)
(common-lisp:deftype policy-document () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (scaling-parameters (:copier common-lisp:nil))
   (desired-instance-type common-lisp:nil :type
    (common-lisp:or partition-instance-type common-lisp:null))
   (desired-replication-count common-lisp:nil :type
    (common-lisp:or uint-value common-lisp:null))
   (desired-partition-count common-lisp:nil :type
    (common-lisp:or uint-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scaling-parameters 'make-scaling-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DesiredInstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-instance-type)))
    (aws-sdk/generator/shape::to-query-params "DesiredReplicationCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-replication-count)))
    (aws-sdk/generator/shape::to-query-params "DesiredPartitionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-partition-count))))))
(common-lisp:progn
 (common-lisp:defstruct (scaling-parameters-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or scaling-parameters common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scaling-parameters-status
                    'make-scaling-parameters-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scaling-parameters-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype search-instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (service-endpoint (:copier common-lisp:nil))
   (endpoint common-lisp:nil :type
    (common-lisp:or service-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-endpoint 'make-service-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape service-endpoint))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Endpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint))))))
(common-lisp:deftype service-url () 'common-lisp:string)
(common-lisp:deftype standard-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype standard-name-list ()
   '(trivial-types:proper-list standard-name))
 (common-lisp:defun |make-standard-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list standard-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (suggester (:copier common-lisp:nil))
   (suggester-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":suggester-name is required"))
    :type (common-lisp:or standard-name common-lisp:null))
   (document-suggester-options
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":document-suggester-options is required"))
    :type (common-lisp:or document-suggester-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'suggester 'make-suggester))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape suggester))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SuggesterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suggester-name)))
    (aws-sdk/generator/shape::to-query-params "DocumentSuggesterOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-suggester-options))))))
(common-lisp:deftype suggester-fuzzy-matching () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (suggester-status (:copier common-lisp:nil))
   (options
    (common-lisp:error #A((20) common-lisp:base-char . ":options is required"))
    :type (common-lisp:or suggester common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or option-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suggester-status 'make-suggester-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape suggester-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype suggester-status-list ()
   '(trivial-types:proper-list suggester-status))
 (common-lisp:defun |make-suggester-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list suggester-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (text-array-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or field-value common-lisp:null))
   (source-fields common-lisp:nil :type
    (common-lisp:or field-name-comma-list common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (highlight-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (analysis-scheme common-lisp:nil :type
    (common-lisp:or word common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'text-array-options 'make-text-array-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape text-array-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-fields)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled)))
    (aws-sdk/generator/shape::to-query-params "HighlightEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'highlight-enabled)))
    (aws-sdk/generator/shape::to-query-params "AnalysisScheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme))))))
(common-lisp:progn
 (common-lisp:defstruct (text-options (:copier common-lisp:nil))
   (default-value common-lisp:nil :type
    (common-lisp:or field-value common-lisp:null))
   (source-field common-lisp:nil :type
    (common-lisp:or field-name common-lisp:null))
   (return-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (sort-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (highlight-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (analysis-scheme common-lisp:nil :type
    (common-lisp:or word common-lisp:null)))
 (common-lisp:export (common-lisp:list 'text-options 'make-text-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape text-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "SourceField"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-field)))
    (aws-sdk/generator/shape::to-query-params "ReturnEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-enabled)))
    (aws-sdk/generator/shape::to-query-params "SortEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-enabled)))
    (aws-sdk/generator/shape::to-query-params "HighlightEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'highlight-enabled)))
    (aws-sdk/generator/shape::to-query-params "AnalysisScheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analysis-scheme))))))
(common-lisp:deftype uint-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (update-availability-options-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (multi-az
    (common-lisp:error
     #A((21) common-lisp:base-char . ":multi-az is required"))
    :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-availability-options-request
                    'make-update-availability-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-availability-options-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "MultiAZ"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'multi-az))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-availability-options-response (:copier common-lisp:nil))
   (availability-options common-lisp:nil :type
    (common-lisp:or availability-options-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-availability-options-response
                    'make-update-availability-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-availability-options-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AvailabilityOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-options))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-scaling-parameters-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (scaling-parameters
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scaling-parameters is required"))
    :type (common-lisp:or scaling-parameters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-scaling-parameters-request
                    'make-update-scaling-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-scaling-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ScalingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-scaling-parameters-response (:copier common-lisp:nil))
   (scaling-parameters
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scaling-parameters is required"))
    :type (common-lisp:or scaling-parameters-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-scaling-parameters-response
                    'make-update-scaling-parameters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-scaling-parameters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScalingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-service-access-policies-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (access-policies
    (common-lisp:error
     #A((28) common-lisp:base-char . ":access-policies is required"))
    :type (common-lisp:or policy-document common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-service-access-policies-request
                    'make-update-service-access-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-service-access-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "AccessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policies))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-service-access-policies-response (:copier common-lisp:nil))
   (access-policies
    (common-lisp:error
     #A((28) common-lisp:base-char . ":access-policies is required"))
    :type (common-lisp:or access-policies-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-service-access-policies-response
                    'make-update-service-access-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-service-access-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policies))))))
(common-lisp:deftype update-timestamp () 'common-lisp:string)
(common-lisp:deftype word () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun build-suggesters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-build-suggesters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BuildSuggesters")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BuildSuggestersResponse" "BuildSuggestersResult")))
 (common-lisp:export 'build-suggesters))
(common-lisp:progn
 (common-lisp:defun create-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDomain")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDomainResponse" "CreateDomainResult")))
 (common-lisp:export 'create-domain))
(common-lisp:progn
 (common-lisp:defun define-analysis-scheme
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name analysis-scheme)
   (common-lisp:declare (common-lisp:ignorable domain-name analysis-scheme))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-define-analysis-scheme-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DefineAnalysisScheme")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DefineAnalysisSchemeResponse" "DefineAnalysisSchemeResult")))
 (common-lisp:export 'define-analysis-scheme))
(common-lisp:progn
 (common-lisp:defun define-expression
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name expression)
   (common-lisp:declare (common-lisp:ignorable domain-name expression))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-define-expression-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DefineExpression")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DefineExpressionResponse" "DefineExpressionResult")))
 (common-lisp:export 'define-expression))
(common-lisp:progn
 (common-lisp:defun define-index-field
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name index-field)
   (common-lisp:declare (common-lisp:ignorable domain-name index-field))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-define-index-field-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DefineIndexField")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DefineIndexFieldResponse" "DefineIndexFieldResult")))
 (common-lisp:export 'define-index-field))
(common-lisp:progn
 (common-lisp:defun define-suggester
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name suggester)
   (common-lisp:declare (common-lisp:ignorable domain-name suggester))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-define-suggester-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DefineSuggester")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DefineSuggesterResponse" "DefineSuggesterResult")))
 (common-lisp:export 'define-suggester))
(common-lisp:progn
 (common-lisp:defun delete-analysis-scheme
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name analysis-scheme-name)
   (common-lisp:declare
    (common-lisp:ignorable domain-name analysis-scheme-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-analysis-scheme-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAnalysisScheme")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteAnalysisSchemeResponse" "DeleteAnalysisSchemeResult")))
 (common-lisp:export 'delete-analysis-scheme))
(common-lisp:progn
 (common-lisp:defun delete-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDomain")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDomainResponse" "DeleteDomainResult")))
 (common-lisp:export 'delete-domain))
(common-lisp:progn
 (common-lisp:defun delete-expression
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name expression-name)
   (common-lisp:declare (common-lisp:ignorable domain-name expression-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-expression-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteExpression")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteExpressionResponse" "DeleteExpressionResult")))
 (common-lisp:export 'delete-expression))
(common-lisp:progn
 (common-lisp:defun delete-index-field
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name index-field-name)
   (common-lisp:declare (common-lisp:ignorable domain-name index-field-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-index-field-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIndexField")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteIndexFieldResponse" "DeleteIndexFieldResult")))
 (common-lisp:export 'delete-index-field))
(common-lisp:progn
 (common-lisp:defun delete-suggester
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name suggester-name)
   (common-lisp:declare (common-lisp:ignorable domain-name suggester-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-suggester-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSuggester")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSuggesterResponse" "DeleteSuggesterResult")))
 (common-lisp:export 'delete-suggester))
(common-lisp:progn
 (common-lisp:defun describe-analysis-schemes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name analysis-scheme-names
                     deployed)
   (common-lisp:declare
    (common-lisp:ignorable domain-name analysis-scheme-names deployed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-analysis-schemes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAnalysisSchemes")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAnalysisSchemesResponse" "DescribeAnalysisSchemesResult")))
 (common-lisp:export 'describe-analysis-schemes))
(common-lisp:progn
 (common-lisp:defun describe-availability-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name deployed)
   (common-lisp:declare (common-lisp:ignorable domain-name deployed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-availability-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAvailabilityOptions")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAvailabilityOptionsResponse"
      "DescribeAvailabilityOptionsResult")))
 (common-lisp:export 'describe-availability-options))
(common-lisp:progn
 (common-lisp:defun describe-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-names)
   (common-lisp:declare (common-lisp:ignorable domain-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-domains-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDomains")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDomainsResponse" "DescribeDomainsResult")))
 (common-lisp:export 'describe-domains))
(common-lisp:progn
 (common-lisp:defun describe-expressions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name expression-names deployed)
   (common-lisp:declare
    (common-lisp:ignorable domain-name expression-names deployed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-expressions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeExpressions")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeExpressionsResponse" "DescribeExpressionsResult")))
 (common-lisp:export 'describe-expressions))
(common-lisp:progn
 (common-lisp:defun describe-index-fields
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name field-names deployed)
   (common-lisp:declare
    (common-lisp:ignorable domain-name field-names deployed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-index-fields-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeIndexFields")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeIndexFieldsResponse" "DescribeIndexFieldsResult")))
 (common-lisp:export 'describe-index-fields))
(common-lisp:progn
 (common-lisp:defun describe-scaling-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-scaling-parameters-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeScalingParameters")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeScalingParametersResponse" "DescribeScalingParametersResult")))
 (common-lisp:export 'describe-scaling-parameters))
(common-lisp:progn
 (common-lisp:defun describe-service-access-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name deployed)
   (common-lisp:declare (common-lisp:ignorable domain-name deployed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-service-access-policies-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeServiceAccessPolicies")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeServiceAccessPoliciesResponse"
      "DescribeServiceAccessPoliciesResult")))
 (common-lisp:export 'describe-service-access-policies))
(common-lisp:progn
 (common-lisp:defun describe-suggesters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name suggester-names deployed)
   (common-lisp:declare
    (common-lisp:ignorable domain-name suggester-names deployed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-suggesters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeSuggesters")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSuggestersResponse" "DescribeSuggestersResult")))
 (common-lisp:export 'describe-suggesters))
(common-lisp:progn
 (common-lisp:defun index-documents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-index-documents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"IndexDocuments")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IndexDocumentsResponse" "IndexDocumentsResult")))
 (common-lisp:export 'index-documents))
(common-lisp:progn
 (common-lisp:defun list-domain-names ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "cloudsearch")
                             :method :post :params
                             (common-lisp:cons "Action" "ListDomainNames"))
    "ListDomainNamesResponse" "ListDomainNamesResult"))
 (common-lisp:export 'list-domain-names))
(common-lisp:progn
 (common-lisp:defun update-availability-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name multi-az)
   (common-lisp:declare (common-lisp:ignorable domain-name multi-az))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-availability-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAvailabilityOptions")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateAvailabilityOptionsResponse" "UpdateAvailabilityOptionsResult")))
 (common-lisp:export 'update-availability-options))
(common-lisp:progn
 (common-lisp:defun update-scaling-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name scaling-parameters)
   (common-lisp:declare (common-lisp:ignorable domain-name scaling-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-scaling-parameters-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateScalingParameters")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateScalingParametersResponse" "UpdateScalingParametersResult")))
 (common-lisp:export 'update-scaling-parameters))
(common-lisp:progn
 (common-lisp:defun update-service-access-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name access-policies)
   (common-lisp:declare (common-lisp:ignorable domain-name access-policies))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-service-access-policies-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cloudsearch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateServiceAccessPolicies")
                                  ("Version" ,@"2013-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateServiceAccessPoliciesResponse"
      "UpdateServiceAccessPoliciesResult")))
 (common-lisp:export 'update-service-access-policies))