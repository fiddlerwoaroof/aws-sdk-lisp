;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/organizations
  (:use)
  (:nicknames #:aws/organizations)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/organizations)

(common-lisp:progn
 (common-lisp:defstruct
     (awsorganizations-not-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'awsorganizations-not-in-use-exception
                    'make-awsorganizations-not-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          awsorganizations-not-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-handshake-request (:copier common-lisp:nil))
   (handshake-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":handshake-id is required"))
    :type (common-lisp:or handshake-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-handshake-request 'make-accept-handshake-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          accept-handshake-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HandshakeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake-id))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-handshake-response (:copier common-lisp:nil))
   (handshake common-lisp:nil :type
    (common-lisp:or handshake common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-handshake-response
                    'make-accept-handshake-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          accept-handshake-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshake"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake))))))
(common-lisp:progn
 (common-lisp:defstruct (access-denied-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'make-access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-denied-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (account (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or account-id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or account-arn common-lisp:null))
   (email common-lisp:nil :type (common-lisp:or email common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or account-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or account-status common-lisp:null))
   (joined-method common-lisp:nil :type
    (common-lisp:or account-joined-method common-lisp:null))
   (joined-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account 'make-account))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape account))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Email"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "JoinedMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'joined-method)))
    (aws-sdk/generator/shape::to-query-params "JoinedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'joined-timestamp))))))
(common-lisp:deftype account-arn () 'common-lisp:string)
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:deftype account-joined-method () 'common-lisp:string)
(common-lisp:deftype account-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (account-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-not-found-exception
                    'make-account-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          account-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype account-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype accounts () '(trivial-types:proper-list account))
 (common-lisp:defun |make-accounts|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account))
   aws-sdk/generator/shape::members))
(common-lisp:deftype action-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (already-in-organization-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'already-in-organization-exception
                    'make-already-in-organization-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          already-in-organization-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-policy-request (:copier common-lisp:nil))
   (policy-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":policy-id is required"))
    :type (common-lisp:or policy-id common-lisp:null))
   (target-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":target-id is required"))
    :type (common-lisp:or policy-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-policy-request 'make-attach-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-id)))
    (aws-sdk/generator/shape::to-query-params "TargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-id))))))
(common-lisp:deftype aws-managed-policy () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (cancel-handshake-request (:copier common-lisp:nil))
   (handshake-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":handshake-id is required"))
    :type (common-lisp:or handshake-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-handshake-request 'make-cancel-handshake-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-handshake-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HandshakeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake-id))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-handshake-response (:copier common-lisp:nil))
   (handshake common-lisp:nil :type
    (common-lisp:or handshake common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-handshake-response
                    'make-cancel-handshake-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-handshake-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshake"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake))))))
(common-lisp:progn
 (common-lisp:defstruct (child (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or child-id common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or child-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'child 'make-child))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape child))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype child-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (child-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'child-not-found-exception
                    'make-child-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          child-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype child-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype children () '(trivial-types:proper-list child))
 (common-lisp:defun |make-children|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list child))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (constraint-violation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or constraint-violation-exception-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'constraint-violation-exception
                    'make-constraint-violation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          constraint-violation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:deftype constraint-violation-exception-reason ()
  'common-lisp:string)
(common-lisp:deftype create-account-failure-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-account-request (:copier common-lisp:nil))
   (email
    (common-lisp:error #A((18) common-lisp:base-char . ":email is required"))
    :type (common-lisp:or email common-lisp:null))
   (account-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":account-name is required"))
    :type (common-lisp:or account-name common-lisp:null))
   (role-name common-lisp:nil :type
    (common-lisp:or role-name common-lisp:null))
   (iam-user-access-to-billing common-lisp:nil :type
    (common-lisp:or iamuser-access-to-billing common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-account-request 'make-create-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-account-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Email"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email)))
    (aws-sdk/generator/shape::to-query-params "AccountName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-name)))
    (aws-sdk/generator/shape::to-query-params "RoleName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-name)))
    (aws-sdk/generator/shape::to-query-params "IamUserAccessToBilling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-access-to-billing))))))
(common-lisp:deftype create-account-request-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-account-response (:copier common-lisp:nil))
   (create-account-status common-lisp:nil :type
    (common-lisp:or create-account-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-account-response 'make-create-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-account-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreateAccountStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-account-status))))))
(common-lisp:deftype create-account-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype create-account-states ()
   '(trivial-types:proper-list create-account-state))
 (common-lisp:defun |make-create-account-states|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list create-account-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-account-status (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or create-account-request-id common-lisp:null))
   (account-name common-lisp:nil :type
    (common-lisp:or account-name common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or create-account-state common-lisp:null))
   (requested-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (completed-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or create-account-failure-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-account-status 'make-create-account-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-account-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "AccountName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-name)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "RequestedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-timestamp)))
    (aws-sdk/generator/shape::to-query-params "CompletedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed-timestamp)))
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "FailureReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-reason))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-account-status-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-account-status-not-found-exception
                    'make-create-account-status-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-account-status-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype create-account-statuses ()
   '(trivial-types:proper-list create-account-status))
 (common-lisp:defun |make-create-account-statuses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list create-account-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-organization-request (:copier common-lisp:nil))
   (feature-set common-lisp:nil :type
    (common-lisp:or organization-feature-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-organization-request
                    'make-create-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-organization-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FeatureSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'feature-set))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-organization-response (:copier common-lisp:nil))
   (organization common-lisp:nil :type
    (common-lisp:or organization common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-organization-response
                    'make-create-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-organization-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Organization"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-organizational-unit-request (:copier common-lisp:nil))
   (parent-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":parent-id is required"))
    :type (common-lisp:or parent-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or organizational-unit-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-organizational-unit-request
                    'make-create-organizational-unit-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-organizational-unit-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-organizational-unit-response (:copier common-lisp:nil))
   (organizational-unit common-lisp:nil :type
    (common-lisp:or organizational-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-organizational-unit-response
                    'make-create-organizational-unit-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-organizational-unit-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationalUnit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organizational-unit))))))
(common-lisp:progn
 (common-lisp:defstruct (create-policy-request (:copier common-lisp:nil))
   (content
    (common-lisp:error #A((20) common-lisp:base-char . ":content is required"))
    :type (common-lisp:or policy-content common-lisp:null))
   (description
    (common-lisp:error
     #A((24) common-lisp:base-char . ":description is required"))
    :type (common-lisp:or policy-description common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or policy-name common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-policy-request 'make-create-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:defstruct (create-policy-response (:copier common-lisp:nil))
   (policy common-lisp:nil :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-policy-response 'make-create-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct (decline-handshake-request (:copier common-lisp:nil))
   (handshake-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":handshake-id is required"))
    :type (common-lisp:or handshake-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decline-handshake-request
                    'make-decline-handshake-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decline-handshake-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HandshakeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake-id))))))
(common-lisp:progn
 (common-lisp:defstruct (decline-handshake-response (:copier common-lisp:nil))
   (handshake common-lisp:nil :type
    (common-lisp:or handshake common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decline-handshake-response
                    'make-decline-handshake-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decline-handshake-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshake"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-organizational-unit-request (:copier common-lisp:nil))
   (organizational-unit-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":organizational-unit-id is required"))
    :type (common-lisp:or organizational-unit-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-organizational-unit-request
                    'make-delete-organizational-unit-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-organizational-unit-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationalUnitId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organizational-unit-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-policy-request (:copier common-lisp:nil))
   (policy-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":policy-id is required"))
    :type (common-lisp:or policy-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-policy-request 'make-delete-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-account-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-request 'make-describe-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-account-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-account-response (:copier common-lisp:nil))
   (account common-lisp:nil :type (common-lisp:or account common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-response
                    'make-describe-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-account-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Account"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-create-account-status-request (:copier common-lisp:nil))
   (create-account-request-id
    (common-lisp:error
     #A((38) common-lisp:base-char . ":create-account-request-id is required"))
    :type (common-lisp:or create-account-request-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-create-account-status-request
                    'make-describe-create-account-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-create-account-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreateAccountRequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-account-request-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-create-account-status-response (:copier common-lisp:nil))
   (create-account-status common-lisp:nil :type
    (common-lisp:or create-account-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-create-account-status-response
                    'make-describe-create-account-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-create-account-status-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreateAccountStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-account-status))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-handshake-request (:copier common-lisp:nil))
   (handshake-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":handshake-id is required"))
    :type (common-lisp:or handshake-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-handshake-request
                    'make-describe-handshake-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-handshake-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HandshakeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-handshake-response (:copier common-lisp:nil))
   (handshake common-lisp:nil :type
    (common-lisp:or handshake common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-handshake-response
                    'make-describe-handshake-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-handshake-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshake"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-organization-response (:copier common-lisp:nil))
   (organization common-lisp:nil :type
    (common-lisp:or organization common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-organization-response
                    'make-describe-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-organization-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Organization"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-organizational-unit-request (:copier common-lisp:nil))
   (organizational-unit-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":organizational-unit-id is required"))
    :type (common-lisp:or organizational-unit-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-organizational-unit-request
                    'make-describe-organizational-unit-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-organizational-unit-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationalUnitId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organizational-unit-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-organizational-unit-response (:copier common-lisp:nil))
   (organizational-unit common-lisp:nil :type
    (common-lisp:or organizational-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-organizational-unit-response
                    'make-describe-organizational-unit-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-organizational-unit-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationalUnit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organizational-unit))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-policy-request (:copier common-lisp:nil))
   (policy-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":policy-id is required"))
    :type (common-lisp:or policy-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-policy-request 'make-describe-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-policy-response (:copier common-lisp:nil))
   (policy common-lisp:nil :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-policy-response 'make-describe-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (destination-parent-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'destination-parent-not-found-exception
                    'make-destination-parent-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          destination-parent-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-policy-request (:copier common-lisp:nil))
   (policy-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":policy-id is required"))
    :type (common-lisp:or policy-id common-lisp:null))
   (target-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":target-id is required"))
    :type (common-lisp:or policy-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-policy-request 'make-detach-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-id)))
    (aws-sdk/generator/shape::to-query-params "TargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-policy-type-request (:copier common-lisp:nil))
   (root-id
    (common-lisp:error #A((20) common-lisp:base-char . ":root-id is required"))
    :type (common-lisp:or root-id common-lisp:null))
   (policy-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-type is required"))
    :type (common-lisp:or policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-policy-type-request
                    'make-disable-policy-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disable-policy-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RootId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-id)))
    (aws-sdk/generator/shape::to-query-params "PolicyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-policy-type-response (:copier common-lisp:nil))
   (root common-lisp:nil :type (common-lisp:or root common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-policy-type-response
                    'make-disable-policy-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disable-policy-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Root"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root))))))
(common-lisp:progn
 (common-lisp:defstruct (duplicate-account-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-account-exception
                    'make-duplicate-account-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-account-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-handshake-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-handshake-exception
                    'make-duplicate-handshake-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-handshake-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-organizational-unit-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-organizational-unit-exception
                    'make-duplicate-organizational-unit-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-organizational-unit-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-policy-attachment-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-policy-attachment-exception
                    'make-duplicate-policy-attachment-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-policy-attachment-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (duplicate-policy-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-policy-exception
                    'make-duplicate-policy-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-policy-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (enable-all-features-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'enable-all-features-request
                    'make-enable-all-features-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-all-features-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-all-features-response (:copier common-lisp:nil))
   (handshake common-lisp:nil :type
    (common-lisp:or handshake common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-all-features-response
                    'make-enable-all-features-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-all-features-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshake"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-policy-type-request (:copier common-lisp:nil))
   (root-id
    (common-lisp:error #A((20) common-lisp:base-char . ":root-id is required"))
    :type (common-lisp:or root-id common-lisp:null))
   (policy-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-type is required"))
    :type (common-lisp:or policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-policy-type-request
                    'make-enable-policy-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-policy-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RootId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-id)))
    (aws-sdk/generator/shape::to-query-params "PolicyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-policy-type-response (:copier common-lisp:nil))
   (root common-lisp:nil :type (common-lisp:or root common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-policy-type-response
                    'make-enable-policy-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-policy-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Root"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root))))))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:deftype exception-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (finalizing-organization-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'finalizing-organization-exception
                    'make-finalizing-organization-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          finalizing-organization-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype generic-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (handshake (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or handshake-id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or handshake-arn common-lisp:null))
   (parties common-lisp:nil :type
    (common-lisp:or handshake-parties common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or handshake-state common-lisp:null))
   (requested-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (expiration-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (action common-lisp:nil :type (common-lisp:or action-type common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or handshake-resources common-lisp:null)))
 (common-lisp:export (common-lisp:list 'handshake 'make-handshake))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape handshake))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Parties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parties)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "RequestedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ExpirationTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-timestamp)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources))))))
(common-lisp:progn
 (common-lisp:defstruct
     (handshake-already-in-state-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'handshake-already-in-state-exception
                    'make-handshake-already-in-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          handshake-already-in-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype handshake-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (handshake-constraint-violation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or handshake-constraint-violation-exception-reason
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'handshake-constraint-violation-exception
                    'make-handshake-constraint-violation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          handshake-constraint-violation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:deftype handshake-constraint-violation-exception-reason ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (handshake-filter (:copier common-lisp:nil))
   (action-type common-lisp:nil :type
    (common-lisp:or action-type common-lisp:null))
   (parent-handshake-id common-lisp:nil :type
    (common-lisp:or handshake-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'handshake-filter 'make-handshake-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape handshake-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-type)))
    (aws-sdk/generator/shape::to-query-params "ParentHandshakeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-handshake-id))))))
(common-lisp:deftype handshake-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (handshake-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'handshake-not-found-exception
                    'make-handshake-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          handshake-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype handshake-notes () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype handshake-parties ()
   '(trivial-types:proper-list handshake-party))
 (common-lisp:defun |make-handshake-parties|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list handshake-party))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (handshake-party (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or handshake-party-id common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or handshake-party-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'handshake-party 'make-handshake-party))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape handshake-party))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype handshake-party-id () 'common-lisp:string)
(common-lisp:deftype handshake-party-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (handshake-resource (:copier common-lisp:nil))
   (value common-lisp:nil :type
    (common-lisp:or handshake-resource-value common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or handshake-resource-type common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or handshake-resources common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'handshake-resource 'make-handshake-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape handshake-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources))))))
(common-lisp:deftype handshake-resource-type () 'common-lisp:string)
(common-lisp:deftype handshake-resource-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype handshake-resources ()
   '(trivial-types:proper-list handshake-resource))
 (common-lisp:defun |make-handshake-resources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list handshake-resource))
   aws-sdk/generator/shape::members))
(common-lisp:deftype handshake-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype handshakes () '(trivial-types:proper-list handshake))
 (common-lisp:defun |make-handshakes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list handshake))
   aws-sdk/generator/shape::members))
(common-lisp:deftype iamuser-access-to-billing () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-handshake-transition-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-handshake-transition-exception
                    'make-invalid-handshake-transition-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-handshake-transition-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-input-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or invalid-input-exception-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'make-invalid-input-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-input-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:deftype invalid-input-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (invite-account-to-organization-request (:copier common-lisp:nil))
   (target
    (common-lisp:error #A((19) common-lisp:base-char . ":target is required"))
    :type (common-lisp:or handshake-party common-lisp:null))
   (notes common-lisp:nil :type
    (common-lisp:or handshake-notes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invite-account-to-organization-request
                    'make-invite-account-to-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invite-account-to-organization-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Target"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target)))
    (aws-sdk/generator/shape::to-query-params "Notes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invite-account-to-organization-response (:copier common-lisp:nil))
   (handshake common-lisp:nil :type
    (common-lisp:or handshake common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invite-account-to-organization-response
                    'make-invite-account-to-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invite-account-to-organization-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshake"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshake))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accounts-for-parent-request (:copier common-lisp:nil))
   (parent-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":parent-id is required"))
    :type (common-lisp:or parent-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-for-parent-request
                    'make-list-accounts-for-parent-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-accounts-for-parent-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accounts-for-parent-response (:copier common-lisp:nil))
   (accounts common-lisp:nil :type (common-lisp:or accounts common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-for-parent-response
                    'make-list-accounts-for-parent-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-accounts-for-parent-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Accounts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accounts)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-accounts-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-request 'make-list-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-accounts-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-accounts-response (:copier common-lisp:nil))
   (accounts common-lisp:nil :type (common-lisp:or accounts common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-response 'make-list-accounts-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-accounts-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Accounts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accounts)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-children-request (:copier common-lisp:nil))
   (parent-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":parent-id is required"))
    :type (common-lisp:or parent-id common-lisp:null))
   (child-type
    (common-lisp:error
     #A((23) common-lisp:base-char . ":child-type is required"))
    :type (common-lisp:or child-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-children-request 'make-list-children-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-children-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "ChildType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-type)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-children-response (:copier common-lisp:nil))
   (children common-lisp:nil :type (common-lisp:or children common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-children-response 'make-list-children-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-children-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Children"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'children)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-create-account-status-request (:copier common-lisp:nil))
   (states common-lisp:nil :type
    (common-lisp:or create-account-states common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-create-account-status-request
                    'make-list-create-account-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-create-account-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "States"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'states)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-create-account-status-response (:copier common-lisp:nil))
   (create-account-statuses common-lisp:nil :type
    (common-lisp:or create-account-statuses common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-create-account-status-response
                    'make-list-create-account-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-create-account-status-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreateAccountStatuses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-account-statuses)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-handshakes-for-account-request (:copier common-lisp:nil))
   (filter common-lisp:nil :type
    (common-lisp:or handshake-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-handshakes-for-account-request
                    'make-list-handshakes-for-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-handshakes-for-account-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-handshakes-for-account-response (:copier common-lisp:nil))
   (handshakes common-lisp:nil :type
    (common-lisp:or handshakes common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-handshakes-for-account-response
                    'make-list-handshakes-for-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-handshakes-for-account-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshakes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshakes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-handshakes-for-organization-request (:copier common-lisp:nil))
   (filter common-lisp:nil :type
    (common-lisp:or handshake-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-handshakes-for-organization-request
                    'make-list-handshakes-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-handshakes-for-organization-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-handshakes-for-organization-response (:copier common-lisp:nil))
   (handshakes common-lisp:nil :type
    (common-lisp:or handshakes common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-handshakes-for-organization-response
                    'make-list-handshakes-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-handshakes-for-organization-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Handshakes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'handshakes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-organizational-units-for-parent-request (:copier common-lisp:nil))
   (parent-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":parent-id is required"))
    :type (common-lisp:or parent-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-organizational-units-for-parent-request
                    'make-list-organizational-units-for-parent-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-organizational-units-for-parent-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-organizational-units-for-parent-response (:copier common-lisp:nil))
   (organizational-units common-lisp:nil :type
    (common-lisp:or organizational-units common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-organizational-units-for-parent-response
                    'make-list-organizational-units-for-parent-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-organizational-units-for-parent-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationalUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organizational-units)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-parents-request (:copier common-lisp:nil))
   (child-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":child-id is required"))
    :type (common-lisp:or child-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parents-request 'make-list-parents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-parents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-parents-response (:copier common-lisp:nil))
   (parents common-lisp:nil :type (common-lisp:or parents common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parents-response 'make-list-parents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-parents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parents)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-policies-for-target-request (:copier common-lisp:nil))
   (target-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":target-id is required"))
    :type (common-lisp:or policy-target-id common-lisp:null))
   (filter
    (common-lisp:error #A((19) common-lisp:base-char . ":filter is required"))
    :type (common-lisp:or policy-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-policies-for-target-request
                    'make-list-policies-for-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-policies-for-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-id)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-policies-for-target-response (:copier common-lisp:nil))
   (policies common-lisp:nil :type (common-lisp:or policies common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-policies-for-target-response
                    'make-list-policies-for-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-policies-for-target-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-policies-request (:copier common-lisp:nil))
   (filter
    (common-lisp:error #A((19) common-lisp:base-char . ":filter is required"))
    :type (common-lisp:or policy-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-policies-request 'make-list-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-policies-response (:copier common-lisp:nil))
   (policies common-lisp:nil :type (common-lisp:or policies common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-policies-response 'make-list-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-roots-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-roots-request 'make-list-roots-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-roots-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-roots-response (:copier common-lisp:nil))
   (roots common-lisp:nil :type (common-lisp:or roots common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-roots-response 'make-list-roots-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-roots-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Roots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'roots)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-targets-for-policy-request (:copier common-lisp:nil))
   (policy-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":policy-id is required"))
    :type (common-lisp:or policy-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-targets-for-policy-request
                    'make-list-targets-for-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-targets-for-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-targets-for-policy-response (:copier common-lisp:nil))
   (targets common-lisp:nil :type
    (common-lisp:or policy-targets common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-targets-for-policy-response
                    'make-list-targets-for-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-targets-for-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (malformed-policy-document-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'malformed-policy-document-exception
                    'make-malformed-policy-document-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          malformed-policy-document-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (master-cannot-leave-organization-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'master-cannot-leave-organization-exception
                    'make-master-cannot-leave-organization-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          master-cannot-leave-organization-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (move-account-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null))
   (source-parent-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":source-parent-id is required"))
    :type (common-lisp:or parent-id common-lisp:null))
   (destination-parent-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":destination-parent-id is required"))
    :type (common-lisp:or parent-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'move-account-request 'make-move-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape move-account-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "SourceParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-parent-id)))
    (aws-sdk/generator/shape::to-query-params "DestinationParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-parent-id))))))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (organization (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or organization-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or organization-arn common-lisp:null))
   (feature-set common-lisp:nil :type
    (common-lisp:or organization-feature-set common-lisp:null))
   (master-account-arn common-lisp:nil :type
    (common-lisp:or account-arn common-lisp:null))
   (master-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (master-account-email common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (available-policy-types common-lisp:nil :type
    (common-lisp:or policy-types common-lisp:null)))
 (common-lisp:export (common-lisp:list 'organization 'make-organization))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape organization))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "FeatureSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'feature-set)))
    (aws-sdk/generator/shape::to-query-params "MasterAccountArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-account-arn)))
    (aws-sdk/generator/shape::to-query-params "MasterAccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-account-id)))
    (aws-sdk/generator/shape::to-query-params "MasterAccountEmail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-account-email)))
    (aws-sdk/generator/shape::to-query-params "AvailablePolicyTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'available-policy-types))))))
(common-lisp:deftype organization-arn () 'common-lisp:string)
(common-lisp:deftype organization-feature-set () 'common-lisp:string)
(common-lisp:deftype organization-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (organization-not-empty-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'organization-not-empty-exception
                    'make-organization-not-empty-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          organization-not-empty-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (organizational-unit (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or organizational-unit-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or organizational-unit-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or organizational-unit-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'organizational-unit 'make-organizational-unit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape organizational-unit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype organizational-unit-arn () 'common-lisp:string)
(common-lisp:deftype organizational-unit-id () 'common-lisp:string)
(common-lisp:deftype organizational-unit-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (organizational-unit-not-empty-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'organizational-unit-not-empty-exception
                    'make-organizational-unit-not-empty-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          organizational-unit-not-empty-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (organizational-unit-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'organizational-unit-not-found-exception
                    'make-organizational-unit-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          organizational-unit-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype organizational-units ()
   '(trivial-types:proper-list organizational-unit))
 (common-lisp:defun |make-organizational-units|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list organizational-unit))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (parent (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or parent-id common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or parent-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'parent 'make-parent))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parent))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype parent-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (parent-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parent-not-found-exception
                    'make-parent-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parent-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype parent-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parents () '(trivial-types:proper-list parent))
 (common-lisp:defun |make-parents|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parent))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype policies () '(trivial-types:proper-list policy-summary))
 (common-lisp:defun |make-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (policy (:copier common-lisp:nil))
   (policy-summary common-lisp:nil :type
    (common-lisp:or policy-summary common-lisp:null))
   (content common-lisp:nil :type
    (common-lisp:or policy-content common-lisp:null)))
 (common-lisp:export (common-lisp:list 'policy 'make-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicySummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-summary)))
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content))))))
(common-lisp:deftype policy-arn () 'common-lisp:string)
(common-lisp:deftype policy-content () 'common-lisp:string)
(common-lisp:deftype policy-description () 'common-lisp:string)
(common-lisp:deftype policy-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (policy-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-in-use-exception 'make-policy-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (policy-not-attached-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-not-attached-exception
                    'make-policy-not-attached-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-not-attached-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (policy-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-not-found-exception
                    'make-policy-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (policy-summary (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or policy-id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or policy-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or policy-type common-lisp:null))
   (aws-managed common-lisp:nil :type
    (common-lisp:or aws-managed-policy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'policy-summary 'make-policy-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "AwsManaged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aws-managed))))))
(common-lisp:deftype policy-target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (policy-target-summary (:copier common-lisp:nil))
   (target-id common-lisp:nil :type
    (common-lisp:or policy-target-id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or generic-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or target-name common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or target-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-target-summary 'make-policy-target-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-target-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype policy-targets ()
   '(trivial-types:proper-list policy-target-summary))
 (common-lisp:defun |make-policy-targets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-target-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (policy-type-already-enabled-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-type-already-enabled-exception
                    'make-policy-type-already-enabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-type-already-enabled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (policy-type-not-available-for-organization-exception
      (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-type-not-available-for-organization-exception
                    'make-policy-type-not-available-for-organization-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-type-not-available-for-organization-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (policy-type-not-enabled-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-type-not-enabled-exception
                    'make-policy-type-not-enabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-type-not-enabled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype policy-type-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (policy-type-summary (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or policy-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or policy-type-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-type-summary 'make-policy-type-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-type-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype policy-types ()
   '(trivial-types:proper-list policy-type-summary))
 (common-lisp:defun |make-policy-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-type-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-account-from-organization-request (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-account-from-organization-request
                    'make-remove-account-from-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-account-from-organization-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id))))))
(common-lisp:deftype role-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (root (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or root-id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or root-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or root-name common-lisp:null))
   (policy-types common-lisp:nil :type
    (common-lisp:or policy-types common-lisp:null)))
 (common-lisp:export (common-lisp:list 'root 'make-root))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape root))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "PolicyTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-types))))))
(common-lisp:deftype root-arn () 'common-lisp:string)
(common-lisp:deftype root-id () 'common-lisp:string)
(common-lisp:deftype root-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (root-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'root-not-found-exception 'make-root-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          root-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype roots () '(trivial-types:proper-list root))
 (common-lisp:defun |make-roots|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list root))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (service-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-exception 'make-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (source-parent-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'source-parent-not-found-exception
                    'make-source-parent-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          source-parent-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype target-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (target-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-not-found-exception
                    'make-target-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype target-type () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or exception-type common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-organizational-unit-request (:copier common-lisp:nil))
   (organizational-unit-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":organizational-unit-id is required"))
    :type (common-lisp:or organizational-unit-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or organizational-unit-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-organizational-unit-request
                    'make-update-organizational-unit-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-organizational-unit-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationalUnitId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organizational-unit-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-organizational-unit-response (:copier common-lisp:nil))
   (organizational-unit common-lisp:nil :type
    (common-lisp:or organizational-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-organizational-unit-response
                    'make-update-organizational-unit-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-organizational-unit-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationalUnit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organizational-unit))))))
(common-lisp:progn
 (common-lisp:defstruct (update-policy-request (:copier common-lisp:nil))
   (policy-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":policy-id is required"))
    :type (common-lisp:or policy-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (content common-lisp:nil :type
    (common-lisp:or policy-content common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-policy-request 'make-update-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content))))))
(common-lisp:progn
 (common-lisp:defstruct (update-policy-response (:copier common-lisp:nil))
   (policy common-lisp:nil :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-policy-response 'make-update-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defun accept-handshake
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key handshake-id)
   (common-lisp:declare (common-lisp:ignorable handshake-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-accept-handshake-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AcceptHandshake")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AcceptHandshakeResponse" common-lisp:nil)))
 (common-lisp:export 'accept-handshake))
(common-lisp:progn
 (common-lisp:defun attach-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-id target-id)
   (common-lisp:declare (common-lisp:ignorable policy-id target-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AttachPolicy")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'attach-policy))
(common-lisp:progn
 (common-lisp:defun cancel-handshake
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key handshake-id)
   (common-lisp:declare (common-lisp:ignorable handshake-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-handshake-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelHandshake")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelHandshakeResponse" common-lisp:nil)))
 (common-lisp:export 'cancel-handshake))
(common-lisp:progn
 (common-lisp:defun create-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email account-name role-name
                     iam-user-access-to-billing)
   (common-lisp:declare
    (common-lisp:ignorable email account-name role-name
     iam-user-access-to-billing))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAccount")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAccountResponse" common-lisp:nil)))
 (common-lisp:export 'create-account))
(common-lisp:progn
 (common-lisp:defun create-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key feature-set)
   (common-lisp:declare (common-lisp:ignorable feature-set))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-organization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateOrganization")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateOrganizationResponse" common-lisp:nil)))
 (common-lisp:export 'create-organization))
(common-lisp:progn
 (common-lisp:defun create-organizational-unit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parent-id name)
   (common-lisp:declare (common-lisp:ignorable parent-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-organizational-unit-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateOrganizationalUnit")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateOrganizationalUnitResponse" common-lisp:nil)))
 (common-lisp:export 'create-organizational-unit))
(common-lisp:progn
 (common-lisp:defun create-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key content description name type)
   (common-lisp:declare (common-lisp:ignorable content description name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePolicy")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePolicyResponse" common-lisp:nil)))
 (common-lisp:export 'create-policy))
(common-lisp:progn
 (common-lisp:defun decline-handshake
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key handshake-id)
   (common-lisp:declare (common-lisp:ignorable handshake-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-decline-handshake-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeclineHandshake")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeclineHandshakeResponse" common-lisp:nil)))
 (common-lisp:export 'decline-handshake))
(common-lisp:progn
 (common-lisp:defun delete-organization ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((13) common-lisp:base-char . "organizations")
                             :method :post :params
                             (common-lisp:cons "Action" "DeleteOrganization"))
    common-lisp:nil common-lisp:nil))
 (common-lisp:export 'delete-organization))
(common-lisp:progn
 (common-lisp:defun delete-organizational-unit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organizational-unit-id)
   (common-lisp:declare (common-lisp:ignorable organizational-unit-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-organizational-unit-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteOrganizationalUnit")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-organizational-unit))
(common-lisp:progn
 (common-lisp:defun delete-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-id)
   (common-lisp:declare (common-lisp:ignorable policy-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePolicy")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-policy))
(common-lisp:progn
 (common-lisp:defun describe-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAccount")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAccountResponse" common-lisp:nil)))
 (common-lisp:export 'describe-account))
(common-lisp:progn
 (common-lisp:defun describe-create-account-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-account-request-id)
   (common-lisp:declare (common-lisp:ignorable create-account-request-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-create-account-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeCreateAccountStatus")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeCreateAccountStatusResponse" common-lisp:nil)))
 (common-lisp:export 'describe-create-account-status))
(common-lisp:progn
 (common-lisp:defun describe-handshake
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key handshake-id)
   (common-lisp:declare (common-lisp:ignorable handshake-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-handshake-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeHandshake")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeHandshakeResponse" common-lisp:nil)))
 (common-lisp:export 'describe-handshake))
(common-lisp:progn
 (common-lisp:defun describe-organization ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((13) common-lisp:base-char . "organizations")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeOrganization"))
    "DescribeOrganizationResponse" common-lisp:nil))
 (common-lisp:export 'describe-organization))
(common-lisp:progn
 (common-lisp:defun describe-organizational-unit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organizational-unit-id)
   (common-lisp:declare (common-lisp:ignorable organizational-unit-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-organizational-unit-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeOrganizationalUnit")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeOrganizationalUnitResponse" common-lisp:nil)))
 (common-lisp:export 'describe-organizational-unit))
(common-lisp:progn
 (common-lisp:defun describe-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-id)
   (common-lisp:declare (common-lisp:ignorable policy-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePolicy")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePolicyResponse" common-lisp:nil)))
 (common-lisp:export 'describe-policy))
(common-lisp:progn
 (common-lisp:defun detach-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-id target-id)
   (common-lisp:declare (common-lisp:ignorable policy-id target-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DetachPolicy")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'detach-policy))
(common-lisp:progn
 (common-lisp:defun disable-policy-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key root-id policy-type)
   (common-lisp:declare (common-lisp:ignorable root-id policy-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-policy-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisablePolicyType")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisablePolicyTypeResponse" common-lisp:nil)))
 (common-lisp:export 'disable-policy-type))
(common-lisp:progn
 (common-lisp:defun enable-all-features ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((13) common-lisp:base-char . "organizations")
                             :method :post :params
                             (common-lisp:cons "Action" "EnableAllFeatures"))
    "EnableAllFeaturesResponse" common-lisp:nil))
 (common-lisp:export 'enable-all-features))
(common-lisp:progn
 (common-lisp:defun enable-policy-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key root-id policy-type)
   (common-lisp:declare (common-lisp:ignorable root-id policy-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-policy-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"EnablePolicyType")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnablePolicyTypeResponse" common-lisp:nil)))
 (common-lisp:export 'enable-policy-type))
(common-lisp:progn
 (common-lisp:defun invite-account-to-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target notes)
   (common-lisp:declare (common-lisp:ignorable target notes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-invite-account-to-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"InviteAccountToOrganization")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InviteAccountToOrganizationResponse" common-lisp:nil)))
 (common-lisp:export 'invite-account-to-organization))
(common-lisp:progn
 (common-lisp:defun leave-organization ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((13) common-lisp:base-char . "organizations")
                             :method :post :params
                             (common-lisp:cons "Action" "LeaveOrganization"))
    common-lisp:nil common-lisp:nil))
 (common-lisp:export 'leave-organization))
(common-lisp:progn
 (common-lisp:defun list-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-accounts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAccounts")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAccountsResponse" common-lisp:nil)))
 (common-lisp:export 'list-accounts))
(common-lisp:progn
 (common-lisp:defun list-accounts-for-parent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parent-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable parent-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-accounts-for-parent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAccountsForParent")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAccountsForParentResponse" common-lisp:nil)))
 (common-lisp:export 'list-accounts-for-parent))
(common-lisp:progn
 (common-lisp:defun list-children
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parent-id child-type next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable parent-id child-type next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-children-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListChildren")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListChildrenResponse" common-lisp:nil)))
 (common-lisp:export 'list-children))
(common-lisp:progn
 (common-lisp:defun list-create-account-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key states next-token max-results)
   (common-lisp:declare (common-lisp:ignorable states next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-create-account-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListCreateAccountStatus")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListCreateAccountStatusResponse" common-lisp:nil)))
 (common-lisp:export 'list-create-account-status))
(common-lisp:progn
 (common-lisp:defun list-handshakes-for-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-handshakes-for-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListHandshakesForAccount")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListHandshakesForAccountResponse" common-lisp:nil)))
 (common-lisp:export 'list-handshakes-for-account))
(common-lisp:progn
 (common-lisp:defun list-handshakes-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-handshakes-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListHandshakesForOrganization")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListHandshakesForOrganizationResponse" common-lisp:nil)))
 (common-lisp:export 'list-handshakes-for-organization))
(common-lisp:progn
 (common-lisp:defun list-organizational-units-for-parent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parent-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable parent-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-organizational-units-for-parent-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ListOrganizationalUnitsForParent")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListOrganizationalUnitsForParentResponse" common-lisp:nil)))
 (common-lisp:export 'list-organizational-units-for-parent))
(common-lisp:progn
 (common-lisp:defun list-parents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key child-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable child-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-parents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListParents")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListParentsResponse" common-lisp:nil)))
 (common-lisp:export 'list-parents))
(common-lisp:progn
 (common-lisp:defun list-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPolicies")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPoliciesResponse" common-lisp:nil)))
 (common-lisp:export 'list-policies))
(common-lisp:progn
 (common-lisp:defun list-policies-for-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-id filter next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable target-id filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-policies-for-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPoliciesForTarget")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPoliciesForTargetResponse" common-lisp:nil)))
 (common-lisp:export 'list-policies-for-target))
(common-lisp:progn
 (common-lisp:defun list-roots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-roots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRoots")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRootsResponse" common-lisp:nil)))
 (common-lisp:export 'list-roots))
(common-lisp:progn
 (common-lisp:defun list-targets-for-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable policy-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-targets-for-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTargetsForPolicy")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTargetsForPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'list-targets-for-policy))
(common-lisp:progn
 (common-lisp:defun move-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id source-parent-id
                     destination-parent-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id source-parent-id destination-parent-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-move-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"MoveAccount")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'move-account))
(common-lisp:progn
 (common-lisp:defun remove-account-from-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-account-from-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveAccountFromOrganization")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-account-from-organization))
(common-lisp:progn
 (common-lisp:defun update-organizational-unit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organizational-unit-id name)
   (common-lisp:declare (common-lisp:ignorable organizational-unit-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-organizational-unit-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateOrganizationalUnit")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateOrganizationalUnitResponse" common-lisp:nil)))
 (common-lisp:export 'update-organizational-unit))
(common-lisp:progn
 (common-lisp:defun update-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-id name description content)
   (common-lisp:declare
    (common-lisp:ignorable policy-id name description content))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((13) common-lisp:base-char . "organizations")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdatePolicy")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdatePolicyResponse" common-lisp:nil)))
 (common-lisp:export 'update-policy))