;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/streams.dynamodb
  (:use)
  (:nicknames #:aws/streams.dynamodb)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/streams.dynamodb)

(common-lisp:defstruct
    (attribute-map
     (:constructor |make-attribute-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attribute-value (:copier common-lisp:nil))
   (s common-lisp:nil :type
    (common-lisp:or string-attribute-value common-lisp:null))
   (n common-lisp:nil :type
    (common-lisp:or number-attribute-value common-lisp:null))
   (b common-lisp:nil :type
    (common-lisp:or binary-attribute-value common-lisp:null))
   (ss common-lisp:nil :type
    (common-lisp:or string-set-attribute-value common-lisp:null))
   (ns common-lisp:nil :type
    (common-lisp:or number-set-attribute-value common-lisp:null))
   (bs common-lisp:nil :type
    (common-lisp:or binary-set-attribute-value common-lisp:null))
   (m common-lisp:nil :type
    (common-lisp:or map-attribute-value common-lisp:null))
   (l common-lisp:nil :type
    (common-lisp:or list-attribute-value common-lisp:null))
   (null common-lisp:nil :type
    (common-lisp:or null-attribute-value common-lisp:null))
   (bool common-lisp:nil :type
    (common-lisp:or boolean-attribute-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-value 'make-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's)))
    (aws-sdk/generator/shape::to-query-params "N"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'n)))
    (aws-sdk/generator/shape::to-query-params "B"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'b)))
    (aws-sdk/generator/shape::to-query-params "SS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ss)))
    (aws-sdk/generator/shape::to-query-params "NS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ns)))
    (aws-sdk/generator/shape::to-query-params "BS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bs)))
    (aws-sdk/generator/shape::to-query-params "M"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'm)))
    (aws-sdk/generator/shape::to-query-params "L"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'l)))
    (aws-sdk/generator/shape::to-query-params "NULL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'null)))
    (aws-sdk/generator/shape::to-query-params "BOOL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bool))))))
(common-lisp:deftype binary-attribute-value ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:deftype binary-set-attribute-value ()
   '(trivial-types:proper-list binary-attribute-value))
 (common-lisp:defun |make-binary-set-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list binary-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean-attribute-value () 'common-lisp:boolean)
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (describe-stream-input (:copier common-lisp:nil))
   (stream-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stream-arn is required"))
    :type (common-lisp:or stream-arn common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer-object common-lisp:null))
   (exclusive-start-shard-id common-lisp:nil :type
    (common-lisp:or shard-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stream-input 'make-describe-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stream-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-arn)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "ExclusiveStartShardId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exclusive-start-shard-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-stream-output (:copier common-lisp:nil))
   (stream-description common-lisp:nil :type
    (common-lisp:or stream-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stream-output 'make-describe-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stream-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-description))))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (expired-iterator-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expired-iterator-exception
                    'make-expired-iterator-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expired-iterator-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (get-records-input (:copier common-lisp:nil))
   (shard-iterator
    (common-lisp:error
     #A((27) common-lisp:base-char . ":shard-iterator is required"))
    :type (common-lisp:or shard-iterator common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-records-input 'make-get-records-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-records-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ShardIterator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shard-iterator)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-records-output (:copier common-lisp:nil))
   (records common-lisp:nil :type
    (common-lisp:or record-list common-lisp:null))
   (next-shard-iterator common-lisp:nil :type
    (common-lisp:or shard-iterator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-records-output 'make-get-records-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-records-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Records"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'records)))
    (aws-sdk/generator/shape::to-query-params "NextShardIterator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-shard-iterator))))))
(common-lisp:progn
 (common-lisp:defstruct (get-shard-iterator-input (:copier common-lisp:nil))
   (stream-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":stream-arn is required"))
    :type (common-lisp:or stream-arn common-lisp:null))
   (shard-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":shard-id is required"))
    :type (common-lisp:or shard-id common-lisp:null))
   (shard-iterator-type
    (common-lisp:error
     #A((32) common-lisp:base-char . ":shard-iterator-type is required"))
    :type (common-lisp:or shard-iterator-type common-lisp:null))
   (sequence-number common-lisp:nil :type
    (common-lisp:or sequence-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-shard-iterator-input 'make-get-shard-iterator-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-shard-iterator-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-arn)))
    (aws-sdk/generator/shape::to-query-params "ShardId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shard-id)))
    (aws-sdk/generator/shape::to-query-params "ShardIteratorType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shard-iterator-type)))
    (aws-sdk/generator/shape::to-query-params "SequenceNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sequence-number))))))
(common-lisp:progn
 (common-lisp:defstruct (get-shard-iterator-output (:copier common-lisp:nil))
   (shard-iterator common-lisp:nil :type
    (common-lisp:or shard-iterator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-shard-iterator-output
                    'make-get-shard-iterator-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-shard-iterator-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ShardIterator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shard-iterator))))))
(common-lisp:progn
 (common-lisp:defstruct (identity (:copier common-lisp:nil))
   (principal-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'identity 'make-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PrincipalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:defstruct (internal-server-error (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'make-internal-server-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype key-schema ()
   '(trivial-types:proper-list key-schema-element))
 (common-lisp:defun |make-key-schema|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-schema-element))
   aws-sdk/generator/shape::members))
(common-lisp:deftype key-schema-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (key-schema-element (:copier common-lisp:nil))
   (attribute-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-name is required"))
    :type (common-lisp:or key-schema-attribute-name common-lisp:null))
   (key-type
    (common-lisp:error
     #A((21) common-lisp:base-char . ":key-type is required"))
    :type (common-lisp:or key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'key-schema-element 'make-key-schema-element))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-schema-element))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "KeyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-type))))))
(common-lisp:deftype key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype list-attribute-value ()
   '(trivial-types:proper-list attribute-value))
 (common-lisp:defun |make-list-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (list-streams-input (:copier common-lisp:nil))
   (table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer-object common-lisp:null))
   (exclusive-start-stream-arn common-lisp:nil :type
    (common-lisp:or stream-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-streams-input 'make-list-streams-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-streams-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "ExclusiveStartStreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exclusive-start-stream-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (list-streams-output (:copier common-lisp:nil))
   (streams common-lisp:nil :type
    (common-lisp:or stream-list common-lisp:null))
   (last-evaluated-stream-arn common-lisp:nil :type
    (common-lisp:or stream-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-streams-output 'make-list-streams-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-streams-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Streams"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streams)))
    (aws-sdk/generator/shape::to-query-params "LastEvaluatedStreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-evaluated-stream-arn))))))
(common-lisp:defstruct
    (map-attribute-value
     (:constructor |make-map-attribute-value|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype null-attribute-value () 'common-lisp:boolean)
(common-lisp:deftype number-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype number-set-attribute-value ()
   '(trivial-types:proper-list number-attribute-value))
 (common-lisp:defun |make-number-set-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list number-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype operation-type () 'common-lisp:string)
(common-lisp:deftype positive-integer-object () 'common-lisp:integer)
(common-lisp:deftype positive-long-object () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (record (:copier common-lisp:nil))
   (event-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-name common-lisp:nil :type
    (common-lisp:or operation-type common-lisp:null))
   (event-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (event-source common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (aws-region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dynamodb common-lisp:nil :type
    (common-lisp:or stream-record common-lisp:null))
   (user-identity common-lisp:nil :type
    (common-lisp:or identity common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record 'make-record))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "eventID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-id)))
    (aws-sdk/generator/shape::to-query-params "eventName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-name)))
    (aws-sdk/generator/shape::to-query-params "eventVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-version)))
    (aws-sdk/generator/shape::to-query-params "eventSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-source)))
    (aws-sdk/generator/shape::to-query-params "awsRegion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aws-region)))
    (aws-sdk/generator/shape::to-query-params "dynamodb"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dynamodb)))
    (aws-sdk/generator/shape::to-query-params "userIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-identity))))))
(common-lisp:progn
 (common-lisp:deftype record-list () '(trivial-types:proper-list record))
 (common-lisp:defun |make-record-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype sequence-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (sequence-number-range (:copier common-lisp:nil))
   (starting-sequence-number common-lisp:nil :type
    (common-lisp:or sequence-number common-lisp:null))
   (ending-sequence-number common-lisp:nil :type
    (common-lisp:or sequence-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sequence-number-range 'make-sequence-number-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sequence-number-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StartingSequenceNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'starting-sequence-number)))
    (aws-sdk/generator/shape::to-query-params "EndingSequenceNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ending-sequence-number))))))
(common-lisp:progn
 (common-lisp:defstruct (shard (:copier common-lisp:nil))
   (shard-id common-lisp:nil :type (common-lisp:or shard-id common-lisp:null))
   (sequence-number-range common-lisp:nil :type
    (common-lisp:or sequence-number-range common-lisp:null))
   (parent-shard-id common-lisp:nil :type
    (common-lisp:or shard-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'shard 'make-shard))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape shard))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ShardId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shard-id)))
    (aws-sdk/generator/shape::to-query-params "SequenceNumberRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sequence-number-range)))
    (aws-sdk/generator/shape::to-query-params "ParentShardId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-shard-id))))))
(common-lisp:progn
 (common-lisp:deftype shard-description-list ()
   '(trivial-types:proper-list shard))
 (common-lisp:defun |make-shard-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list shard))
   aws-sdk/generator/shape::members))
(common-lisp:deftype shard-id () 'common-lisp:string)
(common-lisp:deftype shard-iterator () 'common-lisp:string)
(common-lisp:deftype shard-iterator-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stream (:copier common-lisp:nil))
   (stream-arn common-lisp:nil :type
    (common-lisp:or stream-arn common-lisp:null))
   (table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (stream-label common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stream 'make-stream))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stream))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-arn)))
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "StreamLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-label))))))
(common-lisp:deftype stream-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stream-description (:copier common-lisp:nil))
   (stream-arn common-lisp:nil :type
    (common-lisp:or stream-arn common-lisp:null))
   (stream-label common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stream-status common-lisp:nil :type
    (common-lisp:or stream-status common-lisp:null))
   (stream-view-type common-lisp:nil :type
    (common-lisp:or stream-view-type common-lisp:null))
   (creation-request-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (key-schema common-lisp:nil :type
    (common-lisp:or key-schema common-lisp:null))
   (shards common-lisp:nil :type
    (common-lisp:or shard-description-list common-lisp:null))
   (last-evaluated-shard-id common-lisp:nil :type
    (common-lisp:or shard-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stream-description 'make-stream-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stream-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-arn)))
    (aws-sdk/generator/shape::to-query-params "StreamLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-label)))
    (aws-sdk/generator/shape::to-query-params "StreamStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-status)))
    (aws-sdk/generator/shape::to-query-params "StreamViewType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-view-type)))
    (aws-sdk/generator/shape::to-query-params "CreationRequestDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-request-date-time)))
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "Shards"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shards)))
    (aws-sdk/generator/shape::to-query-params "LastEvaluatedShardId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-evaluated-shard-id))))))
(common-lisp:progn
 (common-lisp:deftype stream-list () '(trivial-types:proper-list stream))
 (common-lisp:defun |make-stream-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (stream-record (:copier common-lisp:nil))
   (approximate-creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (keys common-lisp:nil :type (common-lisp:or attribute-map common-lisp:null))
   (new-image common-lisp:nil :type
    (common-lisp:or attribute-map common-lisp:null))
   (old-image common-lisp:nil :type
    (common-lisp:or attribute-map common-lisp:null))
   (sequence-number common-lisp:nil :type
    (common-lisp:or sequence-number common-lisp:null))
   (size-bytes common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null))
   (stream-view-type common-lisp:nil :type
    (common-lisp:or stream-view-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stream-record 'make-stream-record))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stream-record))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApproximateCreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approximate-creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "Keys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keys)))
    (aws-sdk/generator/shape::to-query-params "NewImage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-image)))
    (aws-sdk/generator/shape::to-query-params "OldImage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'old-image)))
    (aws-sdk/generator/shape::to-query-params "SequenceNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sequence-number)))
    (aws-sdk/generator/shape::to-query-params "SizeBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-bytes)))
    (aws-sdk/generator/shape::to-query-params "StreamViewType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-view-type))))))
(common-lisp:deftype stream-status () 'common-lisp:string)
(common-lisp:deftype stream-view-type () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-set-attribute-value ()
   '(trivial-types:proper-list string-attribute-value))
 (common-lisp:defun |make-string-set-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype table-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (trimmed-data-access-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trimmed-data-access-exception
                    'make-trimmed-data-access-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trimmed-data-access-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defun describe-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-arn limit
                     exclusive-start-shard-id)
   (common-lisp:declare
    (common-lisp:ignorable stream-arn limit exclusive-start-shard-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "streams.dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeStream")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeStreamOutput" common-lisp:nil)))
 (common-lisp:export 'describe-stream))
(common-lisp:progn
 (common-lisp:defun get-records
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key shard-iterator limit)
   (common-lisp:declare (common-lisp:ignorable shard-iterator limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-records-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "streams.dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRecords")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRecordsOutput" common-lisp:nil)))
 (common-lisp:export 'get-records))
(common-lisp:progn
 (common-lisp:defun get-shard-iterator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-arn shard-id shard-iterator-type
                     sequence-number)
   (common-lisp:declare
    (common-lisp:ignorable stream-arn shard-id shard-iterator-type
     sequence-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-shard-iterator-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "streams.dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetShardIterator")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetShardIteratorOutput" common-lisp:nil)))
 (common-lisp:export 'get-shard-iterator))
(common-lisp:progn
 (common-lisp:defun list-streams
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name limit
                     exclusive-start-stream-arn)
   (common-lisp:declare
    (common-lisp:ignorable table-name limit exclusive-start-stream-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-streams-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "streams.dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListStreams")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListStreamsOutput" common-lisp:nil)))
 (common-lisp:export 'list-streams))