;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/swf
  (:use)
  (:nicknames #:aws/swf)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/swf)

(common-lisp:deftype activity-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (activity-task (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (activity-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activityid is required"))
    :type (common-lisp:or activity-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (activity-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activitytype is required"))
    :type (common-lisp:or activity-type common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activity-task 'make-activity-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-task))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "activityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "activityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-type)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-task-cancel-requested-event-attributes
      (:copier common-lisp:nil))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (activity-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activityid is required"))
    :type (common-lisp:or activity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-cancel-requested-event-attributes
                    'make-activity-task-cancel-requested-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-task-cancel-requested-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "activityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-task-canceled-event-attributes (:copier common-lisp:nil))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (latest-cancel-requested-event-id common-lisp:nil :type
    (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-canceled-event-attributes
                    'make-activity-task-canceled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-task-canceled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "latestCancelRequestedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-cancel-requested-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-task-completed-event-attributes (:copier common-lisp:nil))
   (result common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-completed-event-attributes
                    'make-activity-task-completed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-task-completed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-task-failed-event-attributes (:copier common-lisp:nil))
   (reason common-lisp:nil :type
    (common-lisp:or failure-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-failed-event-attributes
                    'make-activity-task-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-task-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-task-scheduled-event-attributes (:copier common-lisp:nil))
   (activity-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activitytype is required"))
    :type (common-lisp:or activity-type common-lisp:null))
   (activity-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activityid is required"))
    :type (common-lisp:or activity-id common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (schedule-to-start-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (schedule-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (heartbeat-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-scheduled-event-attributes
                    'make-activity-task-scheduled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-task-scheduled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-type)))
    (aws-sdk/generator/shape::to-query-params "activityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "scheduleToStartTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-to-start-timeout)))
    (aws-sdk/generator/shape::to-query-params "scheduleToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "startToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "heartbeatTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'heartbeat-timeout))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-task-started-event-attributes (:copier common-lisp:nil))
   (identity common-lisp:nil :type (common-lisp:or identity common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-started-event-attributes
                    'make-activity-task-started-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-task-started-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct (activity-task-status (:copier common-lisp:nil))
   (cancel-requested
    (common-lisp:error
     #A((28) common-lisp:base-char . ":cancelrequested is required"))
    :type (common-lisp:or canceled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-status 'make-activity-task-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-task-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cancelRequested"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cancel-requested))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-task-timed-out-event-attributes (:copier common-lisp:nil))
   (timeout-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":timeouttype is required"))
    :type (common-lisp:or activity-task-timeout-type common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or limited-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-task-timed-out-event-attributes
                    'make-activity-task-timed-out-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-task-timed-out-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timeoutType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-type)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:deftype activity-task-timeout-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (activity-type (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activity-type 'make-activity-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (activity-type-configuration (:copier common-lisp:nil))
   (default-task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-heartbeat-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (default-task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (default-task-schedule-to-start-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-schedule-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-type-configuration
                    'make-activity-type-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-type-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "defaultTaskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskHeartbeatTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-heartbeat-timeout)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-list)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-priority)))
    (aws-sdk/generator/shape::to-query-params
     "defaultTaskScheduleToStartTimeout"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'default-task-schedule-to-start-timeout)))
    (aws-sdk/generator/shape::to-query-params
     "defaultTaskScheduleToCloseTimeout"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'default-task-schedule-to-close-timeout))))))
(common-lisp:progn
 (common-lisp:defstruct (activity-type-detail (:copier common-lisp:nil))
   (type-info
    (common-lisp:error
     #A((21) common-lisp:base-char . ":typeinfo is required"))
    :type (common-lisp:or activity-type-info common-lisp:null))
   (configuration
    (common-lisp:error
     #A((26) common-lisp:base-char . ":configuration is required"))
    :type (common-lisp:or activity-type-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-type-detail 'make-activity-type-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-type-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "typeInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-info)))
    (aws-sdk/generator/shape::to-query-params "configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (activity-type-info (:copier common-lisp:nil))
   (activity-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activitytype is required"))
    :type (common-lisp:or activity-type common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or registration-status common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (deprecation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-type-info 'make-activity-type-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-type-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-type)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "deprecationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deprecation-date))))))
(common-lisp:progn
 (common-lisp:deftype activity-type-info-list ()
   '(trivial-types:proper-list activity-type-info))
 (common-lisp:defun |make-activity-type-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activity-type-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (activity-type-infos (:copier common-lisp:nil))
   (type-infos
    (common-lisp:error
     #A((22) common-lisp:base-char . ":typeinfos is required"))
    :type (common-lisp:or activity-type-info-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-type-infos 'make-activity-type-infos))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-type-infos))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "typeInfos"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-infos)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-timer-decision-attributes (:copier common-lisp:nil))
   (timer-id
    (common-lisp:error #A((20) common-lisp:base-char . ":timerid is required"))
    :type (common-lisp:or timer-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-timer-decision-attributes
                    'make-cancel-timer-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-timer-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-id))))))
(common-lisp:deftype cancel-timer-failed-cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-timer-failed-event-attributes (:copier common-lisp:nil))
   (timer-id
    (common-lisp:error #A((20) common-lisp:base-char . ":timerid is required"))
    :type (common-lisp:or timer-id common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type (common-lisp:or cancel-timer-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-timer-failed-event-attributes
                    'make-cancel-timer-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-timer-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-workflow-execution-decision-attributes (:copier common-lisp:nil))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-workflow-execution-decision-attributes
                    'make-cancel-workflow-execution-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-workflow-execution-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:deftype cancel-workflow-execution-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or cancel-workflow-execution-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-workflow-execution-failed-event-attributes
                    'make-cancel-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:deftype canceled () 'common-lisp:boolean)
(common-lisp:deftype cause-message () 'common-lisp:string)
(common-lisp:deftype child-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (child-workflow-execution-canceled-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'child-workflow-execution-canceled-event-attributes
                    'make-child-workflow-execution-canceled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          child-workflow-execution-canceled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (child-workflow-execution-completed-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (result common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'child-workflow-execution-completed-event-attributes
                    'make-child-workflow-execution-completed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          child-workflow-execution-completed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (child-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or failure-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'child-workflow-execution-failed-event-attributes
                    'make-child-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          child-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (child-workflow-execution-started-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'child-workflow-execution-started-event-attributes
                    'make-child-workflow-execution-started-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          child-workflow-execution-started-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (child-workflow-execution-terminated-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'child-workflow-execution-terminated-event-attributes
                    'make-child-workflow-execution-terminated-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          child-workflow-execution-terminated-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (child-workflow-execution-timed-out-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (timeout-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":timeouttype is required"))
    :type (common-lisp:or workflow-execution-timeout-type common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'child-workflow-execution-timed-out-event-attributes
                    'make-child-workflow-execution-timed-out-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          child-workflow-execution-timed-out-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "timeoutType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-type)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:deftype close-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (close-status-filter (:copier common-lisp:nil))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or close-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'close-status-filter 'make-close-status-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape close-status-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-workflow-execution-decision-attributes
      (:copier common-lisp:nil))
   (result common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-workflow-execution-decision-attributes
                    'make-complete-workflow-execution-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-workflow-execution-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result))))))
(common-lisp:deftype complete-workflow-execution-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (complete-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or complete-workflow-execution-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-workflow-execution-failed-event-attributes
                    'make-complete-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (continue-as-new-workflow-execution-decision-attributes
      (:copier common-lisp:nil))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (child-policy common-lisp:nil :type
    (common-lisp:or child-policy common-lisp:null))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (workflow-type-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (lambda-role common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'continue-as-new-workflow-execution-decision-attributes
                    'make-continue-as-new-workflow-execution-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          continue-as-new-workflow-execution-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "executionStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "taskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "tagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list)))
    (aws-sdk/generator/shape::to-query-params "workflowTypeVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type-version)))
    (aws-sdk/generator/shape::to-query-params "lambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-role))))))
(common-lisp:deftype continue-as-new-workflow-execution-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (continue-as-new-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or continue-as-new-workflow-execution-failed-cause
                    common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'continue-as-new-workflow-execution-failed-event-attributes
                    'make-continue-as-new-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          continue-as-new-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:deftype count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (count-closed-workflow-executions-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (start-time-filter common-lisp:nil :type
    (common-lisp:or execution-time-filter common-lisp:null))
   (close-time-filter common-lisp:nil :type
    (common-lisp:or execution-time-filter common-lisp:null))
   (execution-filter common-lisp:nil :type
    (common-lisp:or workflow-execution-filter common-lisp:null))
   (type-filter common-lisp:nil :type
    (common-lisp:or workflow-type-filter common-lisp:null))
   (tag-filter common-lisp:nil :type
    (common-lisp:or tag-filter common-lisp:null))
   (close-status-filter common-lisp:nil :type
    (common-lisp:or close-status-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'count-closed-workflow-executions-input
                    'make-count-closed-workflow-executions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          count-closed-workflow-executions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "startTimeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time-filter)))
    (aws-sdk/generator/shape::to-query-params "closeTimeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'close-time-filter)))
    (aws-sdk/generator/shape::to-query-params "executionFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-filter)))
    (aws-sdk/generator/shape::to-query-params "typeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-filter)))
    (aws-sdk/generator/shape::to-query-params "tagFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-filter)))
    (aws-sdk/generator/shape::to-query-params "closeStatusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'close-status-filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (count-open-workflow-executions-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (start-time-filter
    (common-lisp:error
     #A((28) common-lisp:base-char . ":starttimefilter is required"))
    :type (common-lisp:or execution-time-filter common-lisp:null))
   (type-filter common-lisp:nil :type
    (common-lisp:or workflow-type-filter common-lisp:null))
   (tag-filter common-lisp:nil :type
    (common-lisp:or tag-filter common-lisp:null))
   (execution-filter common-lisp:nil :type
    (common-lisp:or workflow-execution-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'count-open-workflow-executions-input
                    'make-count-open-workflow-executions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          count-open-workflow-executions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "startTimeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time-filter)))
    (aws-sdk/generator/shape::to-query-params "typeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-filter)))
    (aws-sdk/generator/shape::to-query-params "tagFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-filter)))
    (aws-sdk/generator/shape::to-query-params "executionFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (count-pending-activity-tasks-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'count-pending-activity-tasks-input
                    'make-count-pending-activity-tasks-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          count-pending-activity-tasks-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (count-pending-decision-tasks-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'count-pending-decision-tasks-input
                    'make-count-pending-decision-tasks-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          count-pending-decision-tasks-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list))))))
(common-lisp:deftype data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (decision (:copier common-lisp:nil))
   (decision-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":decisiontype is required"))
    :type (common-lisp:or decision-type common-lisp:null))
   (schedule-activity-task-decision-attributes common-lisp:nil :type
    (common-lisp:or schedule-activity-task-decision-attributes
                    common-lisp:null))
   (request-cancel-activity-task-decision-attributes common-lisp:nil :type
    (common-lisp:or request-cancel-activity-task-decision-attributes
                    common-lisp:null))
   (complete-workflow-execution-decision-attributes common-lisp:nil :type
    (common-lisp:or complete-workflow-execution-decision-attributes
                    common-lisp:null))
   (fail-workflow-execution-decision-attributes common-lisp:nil :type
    (common-lisp:or fail-workflow-execution-decision-attributes
                    common-lisp:null))
   (cancel-workflow-execution-decision-attributes common-lisp:nil :type
    (common-lisp:or cancel-workflow-execution-decision-attributes
                    common-lisp:null))
   (continue-as-new-workflow-execution-decision-attributes common-lisp:nil
    :type
    (common-lisp:or continue-as-new-workflow-execution-decision-attributes
                    common-lisp:null))
   (record-marker-decision-attributes common-lisp:nil :type
    (common-lisp:or record-marker-decision-attributes common-lisp:null))
   (start-timer-decision-attributes common-lisp:nil :type
    (common-lisp:or start-timer-decision-attributes common-lisp:null))
   (cancel-timer-decision-attributes common-lisp:nil :type
    (common-lisp:or cancel-timer-decision-attributes common-lisp:null))
   (signal-external-workflow-execution-decision-attributes common-lisp:nil
    :type
    (common-lisp:or signal-external-workflow-execution-decision-attributes
                    common-lisp:null))
   (request-cancel-external-workflow-execution-decision-attributes
    common-lisp:nil :type
    (common-lisp:or
     request-cancel-external-workflow-execution-decision-attributes
     common-lisp:null))
   (start-child-workflow-execution-decision-attributes common-lisp:nil :type
    (common-lisp:or start-child-workflow-execution-decision-attributes
                    common-lisp:null))
   (schedule-lambda-function-decision-attributes common-lisp:nil :type
    (common-lisp:or schedule-lambda-function-decision-attributes
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'decision 'make-decision))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape decision))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "decisionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-type)))
    (aws-sdk/generator/shape::to-query-params
     "scheduleActivityTaskDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'schedule-activity-task-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "requestCancelActivityTaskDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'request-cancel-activity-task-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "completeWorkflowExecutionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'complete-workflow-execution-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "failWorkflowExecutionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'fail-workflow-execution-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "cancelWorkflowExecutionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cancel-workflow-execution-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "continueAsNewWorkflowExecutionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'continue-as-new-workflow-execution-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params "recordMarkerDecisionAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-marker-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params "startTimerDecisionAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-timer-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params "cancelTimerDecisionAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cancel-timer-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "signalExternalWorkflowExecutionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'signal-external-workflow-execution-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "requestCancelExternalWorkflowExecutionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'request-cancel-external-workflow-execution-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "startChildWorkflowExecutionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'start-child-workflow-execution-decision-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "scheduleLambdaFunctionDecisionAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'schedule-lambda-function-decision-attributes))))))
(common-lisp:progn
 (common-lisp:deftype decision-list () '(trivial-types:proper-list decision))
 (common-lisp:defun |make-decision-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list decision))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (decision-task (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or history-event-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (previous-started-event-id common-lisp:nil :type
    (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'decision-task 'make-decision-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape decision-task))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "previousStartedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'previous-started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decision-task-completed-event-attributes (:copier common-lisp:nil))
   (execution-context common-lisp:nil :type
    (common-lisp:or data common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decision-task-completed-event-attributes
                    'make-decision-task-completed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decision-task-completed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-context)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decision-task-scheduled-event-attributes (:copier common-lisp:nil))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decision-task-scheduled-event-attributes
                    'make-decision-task-scheduled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decision-task-scheduled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "startToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-to-close-timeout))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decision-task-started-event-attributes (:copier common-lisp:nil))
   (identity common-lisp:nil :type (common-lisp:or identity common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decision-task-started-event-attributes
                    'make-decision-task-started-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decision-task-started-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decision-task-timed-out-event-attributes (:copier common-lisp:nil))
   (timeout-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":timeouttype is required"))
    :type (common-lisp:or decision-task-timeout-type common-lisp:null))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decision-task-timed-out-event-attributes
                    'make-decision-task-timed-out-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decision-task-timed-out-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timeoutType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-type)))
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:deftype decision-task-timeout-type () 'common-lisp:string)
(common-lisp:deftype decision-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (default-undefined-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'default-undefined-fault 'make-default-undefined-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          default-undefined-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deprecate-activity-type-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (activity-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activitytype is required"))
    :type (common-lisp:or activity-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deprecate-activity-type-input
                    'make-deprecate-activity-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deprecate-activity-type-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "activityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-type))))))
(common-lisp:progn
 (common-lisp:defstruct (deprecate-domain-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deprecate-domain-input 'make-deprecate-domain-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deprecate-domain-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deprecate-workflow-type-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deprecate-workflow-type-input
                    'make-deprecate-workflow-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deprecate-workflow-type-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-activity-type-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (activity-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activitytype is required"))
    :type (common-lisp:or activity-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activity-type-input
                    'make-describe-activity-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activity-type-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "activityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-type))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-domain-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-domain-input 'make-describe-domain-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-domain-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workflow-execution-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (execution
    (common-lisp:error
     #A((22) common-lisp:base-char . ":execution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workflow-execution-input
                    'make-describe-workflow-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workflow-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "execution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workflow-type-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workflow-type-input
                    'make-describe-workflow-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workflow-type-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (domain-already-exists-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-already-exists-fault
                    'make-domain-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          domain-already-exists-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-configuration (:copier common-lisp:nil))
   (workflow-execution-retention-period-in-days
    (common-lisp:error
     #A((51) common-lisp:base-char
        . ":workflowexecutionretentionperiodindays is required"))
    :type (common-lisp:or duration-in-days common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-configuration 'make-domain-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionRetentionPeriodInDays"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-retention-period-in-days))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-deprecated-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-deprecated-fault 'make-domain-deprecated-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          domain-deprecated-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-detail (:copier common-lisp:nil))
   (domain-info
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domaininfo is required"))
    :type (common-lisp:or domain-info common-lisp:null))
   (configuration
    (common-lisp:error
     #A((26) common-lisp:base-char . ":configuration is required"))
    :type (common-lisp:or domain-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-detail 'make-domain-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-info)))
    (aws-sdk/generator/shape::to-query-params "configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-info (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or registration-status common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-info 'make-domain-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype domain-info-list ()
   '(trivial-types:proper-list domain-info))
 (common-lisp:defun |make-domain-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (domain-infos (:copier common-lisp:nil))
   (domain-infos
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domaininfos is required"))
    :type (common-lisp:or domain-info-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-infos 'make-domain-infos))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-infos))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainInfos"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-infos)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:deftype duration-in-days () 'common-lisp:string)
(common-lisp:deftype duration-in-seconds () 'common-lisp:string)
(common-lisp:deftype duration-in-seconds-optional () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype event-id () 'common-lisp:integer)
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:deftype execution-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (execution-time-filter (:copier common-lisp:nil))
   (oldest-date
    (common-lisp:error
     #A((23) common-lisp:base-char . ":oldestdate is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (latest-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-time-filter 'make-execution-time-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-time-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "oldestDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'oldest-date)))
    (aws-sdk/generator/shape::to-query-params "latestDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-date))))))
(common-lisp:progn
 (common-lisp:defstruct
     (external-workflow-execution-cancel-requested-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'external-workflow-execution-cancel-requested-event-attributes
   'make-external-workflow-execution-cancel-requested-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          external-workflow-execution-cancel-requested-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (external-workflow-execution-signaled-event-attributes
      (:copier common-lisp:nil))
   (workflow-execution
    (common-lisp:error
     #A((30) common-lisp:base-char . ":workflowexecution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'external-workflow-execution-signaled-event-attributes
                    'make-external-workflow-execution-signaled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          external-workflow-execution-signaled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (fail-workflow-execution-decision-attributes (:copier common-lisp:nil))
   (reason common-lisp:nil :type
    (common-lisp:or failure-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fail-workflow-execution-decision-attributes
                    'make-fail-workflow-execution-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          fail-workflow-execution-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:deftype fail-workflow-execution-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (fail-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or fail-workflow-execution-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fail-workflow-execution-failed-event-attributes
                    'make-fail-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          fail-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:deftype failure-reason () 'common-lisp:string)
(common-lisp:deftype function-id () 'common-lisp:string)
(common-lisp:deftype function-input () 'common-lisp:string)
(common-lisp:deftype function-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-workflow-execution-history-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (execution
    (common-lisp:error
     #A((22) common-lisp:base-char . ":execution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (maximum-page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-workflow-execution-history-input
                    'make-get-workflow-execution-history-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-workflow-execution-history-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "execution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "maximumPageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-page-size)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order))))))
(common-lisp:progn
 (common-lisp:defstruct (history (:copier common-lisp:nil))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or history-event-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'history 'make-history))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape history))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (history-event (:copier common-lisp:nil))
   (event-timestamp
    (common-lisp:error
     #A((27) common-lisp:base-char . ":eventtimestamp is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (event-type
    (common-lisp:error
     #A((22) common-lisp:base-char . ":eventtype is required"))
    :type (common-lisp:or event-type common-lisp:null))
   (event-id
    (common-lisp:error #A((20) common-lisp:base-char . ":eventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (workflow-execution-started-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-started-event-attributes
                    common-lisp:null))
   (workflow-execution-completed-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-completed-event-attributes
                    common-lisp:null))
   (complete-workflow-execution-failed-event-attributes common-lisp:nil :type
    (common-lisp:or complete-workflow-execution-failed-event-attributes
                    common-lisp:null))
   (workflow-execution-failed-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-failed-event-attributes
                    common-lisp:null))
   (fail-workflow-execution-failed-event-attributes common-lisp:nil :type
    (common-lisp:or fail-workflow-execution-failed-event-attributes
                    common-lisp:null))
   (workflow-execution-timed-out-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-timed-out-event-attributes
                    common-lisp:null))
   (workflow-execution-canceled-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-canceled-event-attributes
                    common-lisp:null))
   (cancel-workflow-execution-failed-event-attributes common-lisp:nil :type
    (common-lisp:or cancel-workflow-execution-failed-event-attributes
                    common-lisp:null))
   (workflow-execution-continued-as-new-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-continued-as-new-event-attributes
                    common-lisp:null))
   (continue-as-new-workflow-execution-failed-event-attributes common-lisp:nil
    :type
    (common-lisp:or continue-as-new-workflow-execution-failed-event-attributes
                    common-lisp:null))
   (workflow-execution-terminated-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-terminated-event-attributes
                    common-lisp:null))
   (workflow-execution-cancel-requested-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-cancel-requested-event-attributes
                    common-lisp:null))
   (decision-task-scheduled-event-attributes common-lisp:nil :type
    (common-lisp:or decision-task-scheduled-event-attributes common-lisp:null))
   (decision-task-started-event-attributes common-lisp:nil :type
    (common-lisp:or decision-task-started-event-attributes common-lisp:null))
   (decision-task-completed-event-attributes common-lisp:nil :type
    (common-lisp:or decision-task-completed-event-attributes common-lisp:null))
   (decision-task-timed-out-event-attributes common-lisp:nil :type
    (common-lisp:or decision-task-timed-out-event-attributes common-lisp:null))
   (activity-task-scheduled-event-attributes common-lisp:nil :type
    (common-lisp:or activity-task-scheduled-event-attributes common-lisp:null))
   (activity-task-started-event-attributes common-lisp:nil :type
    (common-lisp:or activity-task-started-event-attributes common-lisp:null))
   (activity-task-completed-event-attributes common-lisp:nil :type
    (common-lisp:or activity-task-completed-event-attributes common-lisp:null))
   (activity-task-failed-event-attributes common-lisp:nil :type
    (common-lisp:or activity-task-failed-event-attributes common-lisp:null))
   (activity-task-timed-out-event-attributes common-lisp:nil :type
    (common-lisp:or activity-task-timed-out-event-attributes common-lisp:null))
   (activity-task-canceled-event-attributes common-lisp:nil :type
    (common-lisp:or activity-task-canceled-event-attributes common-lisp:null))
   (activity-task-cancel-requested-event-attributes common-lisp:nil :type
    (common-lisp:or activity-task-cancel-requested-event-attributes
                    common-lisp:null))
   (workflow-execution-signaled-event-attributes common-lisp:nil :type
    (common-lisp:or workflow-execution-signaled-event-attributes
                    common-lisp:null))
   (marker-recorded-event-attributes common-lisp:nil :type
    (common-lisp:or marker-recorded-event-attributes common-lisp:null))
   (record-marker-failed-event-attributes common-lisp:nil :type
    (common-lisp:or record-marker-failed-event-attributes common-lisp:null))
   (timer-started-event-attributes common-lisp:nil :type
    (common-lisp:or timer-started-event-attributes common-lisp:null))
   (timer-fired-event-attributes common-lisp:nil :type
    (common-lisp:or timer-fired-event-attributes common-lisp:null))
   (timer-canceled-event-attributes common-lisp:nil :type
    (common-lisp:or timer-canceled-event-attributes common-lisp:null))
   (start-child-workflow-execution-initiated-event-attributes common-lisp:nil
    :type
    (common-lisp:or start-child-workflow-execution-initiated-event-attributes
                    common-lisp:null))
   (child-workflow-execution-started-event-attributes common-lisp:nil :type
    (common-lisp:or child-workflow-execution-started-event-attributes
                    common-lisp:null))
   (child-workflow-execution-completed-event-attributes common-lisp:nil :type
    (common-lisp:or child-workflow-execution-completed-event-attributes
                    common-lisp:null))
   (child-workflow-execution-failed-event-attributes common-lisp:nil :type
    (common-lisp:or child-workflow-execution-failed-event-attributes
                    common-lisp:null))
   (child-workflow-execution-timed-out-event-attributes common-lisp:nil :type
    (common-lisp:or child-workflow-execution-timed-out-event-attributes
                    common-lisp:null))
   (child-workflow-execution-canceled-event-attributes common-lisp:nil :type
    (common-lisp:or child-workflow-execution-canceled-event-attributes
                    common-lisp:null))
   (child-workflow-execution-terminated-event-attributes common-lisp:nil :type
    (common-lisp:or child-workflow-execution-terminated-event-attributes
                    common-lisp:null))
   (signal-external-workflow-execution-initiated-event-attributes
    common-lisp:nil :type
    (common-lisp:or
     signal-external-workflow-execution-initiated-event-attributes
     common-lisp:null))
   (external-workflow-execution-signaled-event-attributes common-lisp:nil :type
    (common-lisp:or external-workflow-execution-signaled-event-attributes
                    common-lisp:null))
   (signal-external-workflow-execution-failed-event-attributes common-lisp:nil
    :type
    (common-lisp:or signal-external-workflow-execution-failed-event-attributes
                    common-lisp:null))
   (external-workflow-execution-cancel-requested-event-attributes
    common-lisp:nil :type
    (common-lisp:or
     external-workflow-execution-cancel-requested-event-attributes
     common-lisp:null))
   (request-cancel-external-workflow-execution-initiated-event-attributes
    common-lisp:nil :type
    (common-lisp:or
     request-cancel-external-workflow-execution-initiated-event-attributes
     common-lisp:null))
   (request-cancel-external-workflow-execution-failed-event-attributes
    common-lisp:nil :type
    (common-lisp:or
     request-cancel-external-workflow-execution-failed-event-attributes
     common-lisp:null))
   (schedule-activity-task-failed-event-attributes common-lisp:nil :type
    (common-lisp:or schedule-activity-task-failed-event-attributes
                    common-lisp:null))
   (request-cancel-activity-task-failed-event-attributes common-lisp:nil :type
    (common-lisp:or request-cancel-activity-task-failed-event-attributes
                    common-lisp:null))
   (start-timer-failed-event-attributes common-lisp:nil :type
    (common-lisp:or start-timer-failed-event-attributes common-lisp:null))
   (cancel-timer-failed-event-attributes common-lisp:nil :type
    (common-lisp:or cancel-timer-failed-event-attributes common-lisp:null))
   (start-child-workflow-execution-failed-event-attributes common-lisp:nil
    :type
    (common-lisp:or start-child-workflow-execution-failed-event-attributes
                    common-lisp:null))
   (lambda-function-scheduled-event-attributes common-lisp:nil :type
    (common-lisp:or lambda-function-scheduled-event-attributes
                    common-lisp:null))
   (lambda-function-started-event-attributes common-lisp:nil :type
    (common-lisp:or lambda-function-started-event-attributes common-lisp:null))
   (lambda-function-completed-event-attributes common-lisp:nil :type
    (common-lisp:or lambda-function-completed-event-attributes
                    common-lisp:null))
   (lambda-function-failed-event-attributes common-lisp:nil :type
    (common-lisp:or lambda-function-failed-event-attributes common-lisp:null))
   (lambda-function-timed-out-event-attributes common-lisp:nil :type
    (common-lisp:or lambda-function-timed-out-event-attributes
                    common-lisp:null))
   (schedule-lambda-function-failed-event-attributes common-lisp:nil :type
    (common-lisp:or schedule-lambda-function-failed-event-attributes
                    common-lisp:null))
   (start-lambda-function-failed-event-attributes common-lisp:nil :type
    (common-lisp:or start-lambda-function-failed-event-attributes
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'history-event 'make-history-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape history-event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "eventTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-timestamp)))
    (aws-sdk/generator/shape::to-query-params "eventType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-type)))
    (aws-sdk/generator/shape::to-query-params "eventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-id)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionStartedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-started-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionCompletedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-completed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "completeWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'complete-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "failWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'fail-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionTimedOutEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-timed-out-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionCanceledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-canceled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "cancelWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cancel-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionContinuedAsNewEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-continued-as-new-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "continueAsNewWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'continue-as-new-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionTerminatedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-terminated-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionCancelRequestedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-cancel-requested-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "decisionTaskScheduledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'decision-task-scheduled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "decisionTaskStartedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'decision-task-started-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "decisionTaskCompletedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'decision-task-completed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "decisionTaskTimedOutEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'decision-task-timed-out-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "activityTaskScheduledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-task-scheduled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "activityTaskStartedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-task-started-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "activityTaskCompletedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-task-completed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "activityTaskFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-task-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "activityTaskTimedOutEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-task-timed-out-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "activityTaskCanceledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-task-canceled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "activityTaskCancelRequestedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-task-cancel-requested-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionSignaledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-signaled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params "markerRecordedEventAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker-recorded-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "recordMarkerFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'record-marker-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params "timerStartedEventAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-started-event-attributes)))
    (aws-sdk/generator/shape::to-query-params "timerFiredEventAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-fired-event-attributes)))
    (aws-sdk/generator/shape::to-query-params "timerCanceledEventAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-canceled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "startChildWorkflowExecutionInitiatedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'start-child-workflow-execution-initiated-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "childWorkflowExecutionStartedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'child-workflow-execution-started-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "childWorkflowExecutionCompletedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'child-workflow-execution-completed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "childWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'child-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "childWorkflowExecutionTimedOutEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'child-workflow-execution-timed-out-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "childWorkflowExecutionCanceledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'child-workflow-execution-canceled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "childWorkflowExecutionTerminatedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'child-workflow-execution-terminated-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "signalExternalWorkflowExecutionInitiatedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'signal-external-workflow-execution-initiated-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "externalWorkflowExecutionSignaledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'external-workflow-execution-signaled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "signalExternalWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'signal-external-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "externalWorkflowExecutionCancelRequestedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'external-workflow-execution-cancel-requested-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "requestCancelExternalWorkflowExecutionInitiatedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'request-cancel-external-workflow-execution-initiated-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "requestCancelExternalWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'request-cancel-external-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "scheduleActivityTaskFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'schedule-activity-task-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "requestCancelActivityTaskFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'request-cancel-activity-task-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params "startTimerFailedEventAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-timer-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "cancelTimerFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cancel-timer-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "startChildWorkflowExecutionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'start-child-workflow-execution-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionScheduledEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-scheduled-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionStartedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-started-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionCompletedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-completed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionTimedOutEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-timed-out-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "scheduleLambdaFunctionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'schedule-lambda-function-failed-event-attributes)))
    (aws-sdk/generator/shape::to-query-params
     "startLambdaFunctionFailedEventAttributes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'start-lambda-function-failed-event-attributes))))))
(common-lisp:progn
 (common-lisp:deftype history-event-list ()
   '(trivial-types:proper-list history-event))
 (common-lisp:defun |make-history-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list history-event))
   aws-sdk/generator/shape::members))
(common-lisp:deftype identity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-completed-event-attributes (:copier common-lisp:nil))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (result common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-completed-event-attributes
                    'make-lambda-function-completed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-completed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-failed-event-attributes (:copier common-lisp:nil))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or failure-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-failed-event-attributes
                    'make-lambda-function-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-scheduled-event-attributes (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or function-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (input common-lisp:nil :type
    (common-lisp:or function-input common-lisp:null))
   (start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-scheduled-event-attributes
                    'make-lambda-function-scheduled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-scheduled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "startToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-started-event-attributes (:copier common-lisp:nil))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-started-event-attributes
                    'make-lambda-function-started-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-started-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-timed-out-event-attributes (:copier common-lisp:nil))
   (scheduled-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":scheduledeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (timeout-type common-lisp:nil :type
    (common-lisp:or lambda-function-timeout-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-timed-out-event-attributes
                    'make-lambda-function-timed-out-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-timed-out-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "timeoutType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-type))))))
(common-lisp:deftype lambda-function-timeout-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-fault 'make-limit-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape limit-exceeded-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype limited-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (list-activity-types-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (registration-status
    (common-lisp:error
     #A((31) common-lisp:base-char . ":registrationstatus is required"))
    :type (common-lisp:or registration-status common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (maximum-page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-activity-types-input
                    'make-list-activity-types-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-activity-types-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "registrationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-status)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "maximumPageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-page-size)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-closed-workflow-executions-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (start-time-filter common-lisp:nil :type
    (common-lisp:or execution-time-filter common-lisp:null))
   (close-time-filter common-lisp:nil :type
    (common-lisp:or execution-time-filter common-lisp:null))
   (execution-filter common-lisp:nil :type
    (common-lisp:or workflow-execution-filter common-lisp:null))
   (close-status-filter common-lisp:nil :type
    (common-lisp:or close-status-filter common-lisp:null))
   (type-filter common-lisp:nil :type
    (common-lisp:or workflow-type-filter common-lisp:null))
   (tag-filter common-lisp:nil :type
    (common-lisp:or tag-filter common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (maximum-page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-closed-workflow-executions-input
                    'make-list-closed-workflow-executions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-closed-workflow-executions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "startTimeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time-filter)))
    (aws-sdk/generator/shape::to-query-params "closeTimeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'close-time-filter)))
    (aws-sdk/generator/shape::to-query-params "executionFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-filter)))
    (aws-sdk/generator/shape::to-query-params "closeStatusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'close-status-filter)))
    (aws-sdk/generator/shape::to-query-params "typeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-filter)))
    (aws-sdk/generator/shape::to-query-params "tagFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-filter)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "maximumPageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-page-size)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order))))))
(common-lisp:progn
 (common-lisp:defstruct (list-domains-input (:copier common-lisp:nil))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (registration-status
    (common-lisp:error
     #A((31) common-lisp:base-char . ":registrationstatus is required"))
    :type (common-lisp:or registration-status common-lisp:null))
   (maximum-page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domains-input 'make-list-domains-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-domains-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "registrationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-status)))
    (aws-sdk/generator/shape::to-query-params "maximumPageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-page-size)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-open-workflow-executions-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (start-time-filter
    (common-lisp:error
     #A((28) common-lisp:base-char . ":starttimefilter is required"))
    :type (common-lisp:or execution-time-filter common-lisp:null))
   (type-filter common-lisp:nil :type
    (common-lisp:or workflow-type-filter common-lisp:null))
   (tag-filter common-lisp:nil :type
    (common-lisp:or tag-filter common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (maximum-page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null))
   (execution-filter common-lisp:nil :type
    (common-lisp:or workflow-execution-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-open-workflow-executions-input
                    'make-list-open-workflow-executions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-open-workflow-executions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "startTimeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time-filter)))
    (aws-sdk/generator/shape::to-query-params "typeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-filter)))
    (aws-sdk/generator/shape::to-query-params "tagFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-filter)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "maximumPageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-page-size)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order)))
    (aws-sdk/generator/shape::to-query-params "executionFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-filter))))))
(common-lisp:progn
 (common-lisp:defstruct (list-workflow-types-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (registration-status
    (common-lisp:error
     #A((31) common-lisp:base-char . ":registrationstatus is required"))
    :type (common-lisp:or registration-status common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (maximum-page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-workflow-types-input
                    'make-list-workflow-types-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-workflow-types-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "registrationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-status)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "maximumPageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-page-size)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order))))))
(common-lisp:deftype marker-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (marker-recorded-event-attributes (:copier common-lisp:nil))
   (marker-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":markername is required"))
    :type (common-lisp:or marker-name common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'marker-recorded-event-attributes
                    'make-marker-recorded-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          marker-recorded-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "markerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker-name)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype open-decision-tasks-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-not-permitted-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-not-permitted-fault
                    'make-operation-not-permitted-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-not-permitted-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype page-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (pending-task-count (:copier common-lisp:nil))
   (count
    (common-lisp:error #A((18) common-lisp:base-char . ":count is required"))
    :type (common-lisp:or count common-lisp:null))
   (truncated common-lisp:nil :type
    (common-lisp:or truncated common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pending-task-count 'make-pending-task-count))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape pending-task-count))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "truncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'truncated))))))
(common-lisp:progn
 (common-lisp:defstruct
     (poll-for-activity-task-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (identity common-lisp:nil :type (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'poll-for-activity-task-input
                    'make-poll-for-activity-task-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          poll-for-activity-task-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity))))))
(common-lisp:progn
 (common-lisp:defstruct
     (poll-for-decision-task-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (identity common-lisp:nil :type (common-lisp:or identity common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (maximum-page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'poll-for-decision-task-input
                    'make-poll-for-decision-task-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          poll-for-decision-task-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token)))
    (aws-sdk/generator/shape::to-query-params "maximumPageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-page-size)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order))))))
(common-lisp:progn
 (common-lisp:defstruct
     (record-activity-task-heartbeat-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or limited-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'record-activity-task-heartbeat-input
                    'make-record-activity-task-heartbeat-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          record-activity-task-heartbeat-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (record-marker-decision-attributes (:copier common-lisp:nil))
   (marker-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":markername is required"))
    :type (common-lisp:or marker-name common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'record-marker-decision-attributes
                    'make-record-marker-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          record-marker-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "markerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker-name)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:deftype record-marker-failed-cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (record-marker-failed-event-attributes (:copier common-lisp:nil))
   (marker-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":markername is required"))
    :type (common-lisp:or marker-name common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type (common-lisp:or record-marker-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'record-marker-failed-event-attributes
                    'make-record-marker-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          record-marker-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "markerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker-name)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-activity-type-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (default-task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-heartbeat-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (default-task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (default-task-schedule-to-start-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-schedule-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-activity-type-input
                    'make-register-activity-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-activity-type-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskHeartbeatTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-heartbeat-timeout)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-list)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-priority)))
    (aws-sdk/generator/shape::to-query-params
     "defaultTaskScheduleToStartTimeout"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'default-task-schedule-to-start-timeout)))
    (aws-sdk/generator/shape::to-query-params
     "defaultTaskScheduleToCloseTimeout"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'default-task-schedule-to-close-timeout))))))
(common-lisp:progn
 (common-lisp:defstruct (register-domain-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (workflow-execution-retention-period-in-days
    (common-lisp:error
     #A((51) common-lisp:base-char
        . ":workflowexecutionretentionperiodindays is required"))
    :type (common-lisp:or duration-in-days common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-domain-input 'make-register-domain-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-domain-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params
     "workflowExecutionRetentionPeriodInDays"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'workflow-execution-retention-period-in-days))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-workflow-type-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (default-task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (default-task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (default-child-policy common-lisp:nil :type
    (common-lisp:or child-policy common-lisp:null))
   (default-lambda-role common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-workflow-type-input
                    'make-register-workflow-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-workflow-type-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params
     "defaultExecutionStartToCloseTimeout"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'default-execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-list)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-priority)))
    (aws-sdk/generator/shape::to-query-params "defaultChildPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-child-policy)))
    (aws-sdk/generator/shape::to-query-params "defaultLambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-lambda-role))))))
(common-lisp:deftype registration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (request-cancel-activity-task-decision-attributes
      (:copier common-lisp:nil))
   (activity-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activityid is required"))
    :type (common-lisp:or activity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-cancel-activity-task-decision-attributes
                    'make-request-cancel-activity-task-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-cancel-activity-task-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id))))))
(common-lisp:deftype request-cancel-activity-task-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (request-cancel-activity-task-failed-event-attributes
      (:copier common-lisp:nil))
   (activity-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activityid is required"))
    :type (common-lisp:or activity-id common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or request-cancel-activity-task-failed-cause
                    common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-cancel-activity-task-failed-event-attributes
                    'make-request-cancel-activity-task-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-cancel-activity-task-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (request-cancel-external-workflow-execution-decision-attributes
      (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'request-cancel-external-workflow-execution-decision-attributes
   'make-request-cancel-external-workflow-execution-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-cancel-external-workflow-execution-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control))))))
(common-lisp:deftype request-cancel-external-workflow-execution-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (request-cancel-external-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or request-cancel-external-workflow-execution-failed-cause
                    common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'request-cancel-external-workflow-execution-failed-event-attributes
   'make-request-cancel-external-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-cancel-external-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control))))))
(common-lisp:progn
 (common-lisp:defstruct
     (request-cancel-external-workflow-execution-initiated-event-attributes
      (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'request-cancel-external-workflow-execution-initiated-event-attributes
   'make-request-cancel-external-workflow-execution-initiated-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-cancel-external-workflow-execution-initiated-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control))))))
(common-lisp:progn
 (common-lisp:defstruct
     (request-cancel-workflow-execution-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-cancel-workflow-execution-input
                    'make-request-cancel-workflow-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-cancel-workflow-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-activity-task-canceled-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-activity-task-canceled-input
                    'make-respond-activity-task-canceled-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          respond-activity-task-canceled-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-activity-task-completed-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (result common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-activity-task-completed-input
                    'make-respond-activity-task-completed-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          respond-activity-task-completed-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result))))))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-activity-task-failed-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or failure-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-activity-task-failed-input
                    'make-respond-activity-task-failed-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          respond-activity-task-failed-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-decision-task-completed-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (decisions common-lisp:nil :type
    (common-lisp:or decision-list common-lisp:null))
   (execution-context common-lisp:nil :type
    (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-decision-task-completed-input
                    'make-respond-decision-task-completed-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          respond-decision-task-completed-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "decisions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decisions)))
    (aws-sdk/generator/shape::to-query-params "executionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-context))))))
(common-lisp:deftype reverse-order () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (run (:copier common-lisp:nil))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'run 'make-run))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape run))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-activity-task-decision-attributes (:copier common-lisp:nil))
   (activity-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activitytype is required"))
    :type (common-lisp:or activity-type common-lisp:null))
   (activity-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activityid is required"))
    :type (common-lisp:or activity-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (schedule-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (schedule-to-start-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (heartbeat-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-activity-task-decision-attributes
                    'make-schedule-activity-task-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schedule-activity-task-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-type)))
    (aws-sdk/generator/shape::to-query-params "activityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "scheduleToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "scheduleToStartTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-to-start-timeout)))
    (aws-sdk/generator/shape::to-query-params "startToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "heartbeatTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'heartbeat-timeout))))))
(common-lisp:deftype schedule-activity-task-failed-cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-activity-task-failed-event-attributes (:copier common-lisp:nil))
   (activity-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activitytype is required"))
    :type (common-lisp:or activity-type common-lisp:null))
   (activity-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activityid is required"))
    :type (common-lisp:or activity-id common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or schedule-activity-task-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-activity-task-failed-event-attributes
                    'make-schedule-activity-task-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schedule-activity-task-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-type)))
    (aws-sdk/generator/shape::to-query-params "activityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-lambda-function-decision-attributes (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or function-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (input common-lisp:nil :type
    (common-lisp:or function-input common-lisp:null))
   (start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-lambda-function-decision-attributes
                    'make-schedule-lambda-function-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schedule-lambda-function-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "startToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-to-close-timeout))))))
(common-lisp:deftype schedule-lambda-function-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-lambda-function-failed-event-attributes
      (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or function-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or function-name common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or schedule-lambda-function-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-lambda-function-failed-event-attributes
                    'make-schedule-lambda-function-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schedule-lambda-function-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (signal-external-workflow-execution-decision-attributes
      (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (signal-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":signalname is required"))
    :type (common-lisp:or signal-name common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'signal-external-workflow-execution-decision-attributes
                    'make-signal-external-workflow-execution-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          signal-external-workflow-execution-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "signalName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signal-name)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control))))))
(common-lisp:deftype signal-external-workflow-execution-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (signal-external-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or signal-external-workflow-execution-failed-cause
                    common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'signal-external-workflow-execution-failed-event-attributes
                    'make-signal-external-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          signal-external-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control))))))
(common-lisp:progn
 (common-lisp:defstruct
     (signal-external-workflow-execution-initiated-event-attributes
      (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (signal-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":signalname is required"))
    :type (common-lisp:or signal-name common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'signal-external-workflow-execution-initiated-event-attributes
   'make-signal-external-workflow-execution-initiated-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          signal-external-workflow-execution-initiated-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "signalName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signal-name)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control))))))
(common-lisp:deftype signal-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (signal-workflow-execution-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (signal-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":signalname is required"))
    :type (common-lisp:or signal-name common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'signal-workflow-execution-input
                    'make-signal-workflow-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          signal-workflow-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "signalName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signal-name)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-child-workflow-execution-decision-attributes
      (:copier common-lisp:nil))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (child-policy common-lisp:nil :type
    (common-lisp:or child-policy common-lisp:null))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (lambda-role common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-child-workflow-execution-decision-attributes
                    'make-start-child-workflow-execution-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-child-workflow-execution-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "executionStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "taskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "tagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list)))
    (aws-sdk/generator/shape::to-query-params "lambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-role))))))
(common-lisp:deftype start-child-workflow-execution-failed-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-child-workflow-execution-failed-event-attributes
      (:copier common-lisp:nil))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type
    (common-lisp:or start-child-workflow-execution-failed-cause
                    common-lisp:null))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (initiated-event-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":initiatedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-child-workflow-execution-failed-event-attributes
                    'make-start-child-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-child-workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "initiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-child-workflow-execution-initiated-event-attributes
      (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (child-policy
    (common-lisp:error
     #A((24) common-lisp:base-char . ":childpolicy is required"))
    :type (common-lisp:or child-policy common-lisp:null))
   (task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (lambda-role common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-child-workflow-execution-initiated-event-attributes
                    'make-start-child-workflow-execution-initiated-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-child-workflow-execution-initiated-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "executionStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "taskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "tagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list)))
    (aws-sdk/generator/shape::to-query-params "lambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-role))))))
(common-lisp:deftype start-lambda-function-failed-cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-lambda-function-failed-event-attributes (:copier common-lisp:nil))
   (scheduled-event-id common-lisp:nil :type
    (common-lisp:or event-id common-lisp:null))
   (cause common-lisp:nil :type
    (common-lisp:or start-lambda-function-failed-cause common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or cause-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-lambda-function-failed-event-attributes
                    'make-start-lambda-function-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-lambda-function-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "scheduledEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-event-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-timer-decision-attributes (:copier common-lisp:nil))
   (timer-id
    (common-lisp:error #A((20) common-lisp:base-char . ":timerid is required"))
    :type (common-lisp:or timer-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (start-to-fire-timeout
    (common-lisp:error
     #A((31) common-lisp:base-char . ":starttofiretimeout is required"))
    :type (common-lisp:or duration-in-seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-timer-decision-attributes
                    'make-start-timer-decision-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-timer-decision-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "startToFireTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-to-fire-timeout))))))
(common-lisp:deftype start-timer-failed-cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-timer-failed-event-attributes (:copier common-lisp:nil))
   (timer-id
    (common-lisp:error #A((20) common-lisp:base-char . ":timerid is required"))
    :type (common-lisp:or timer-id common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type (common-lisp:or start-timer-failed-cause common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-timer-failed-event-attributes
                    'make-start-timer-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-timer-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-workflow-execution-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (child-policy common-lisp:nil :type
    (common-lisp:or child-policy common-lisp:null))
   (lambda-role common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-workflow-execution-input
                    'make-start-workflow-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-workflow-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "executionStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "tagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list)))
    (aws-sdk/generator/shape::to-query-params "taskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "lambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-role))))))
(common-lisp:deftype tag () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag-filter (:copier common-lisp:nil))
   (tag (common-lisp:error #A((16) common-lisp:base-char . ":tag is required"))
    :type (common-lisp:or tag common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-filter 'make-tag-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag))))))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (task-list (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-list 'make-task-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape task-list))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype task-priority () 'common-lisp:string)
(common-lisp:deftype task-token () 'common-lisp:string)
(common-lisp:deftype terminate-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (terminate-workflow-execution-input (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or terminate-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (child-policy common-lisp:nil :type
    (common-lisp:or child-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-workflow-execution-input
                    'make-terminate-workflow-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-workflow-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (timer-canceled-event-attributes (:copier common-lisp:nil))
   (timer-id
    (common-lisp:error #A((20) common-lisp:base-char . ":timerid is required"))
    :type (common-lisp:or timer-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'timer-canceled-event-attributes
                    'make-timer-canceled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          timer-canceled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (timer-fired-event-attributes (:copier common-lisp:nil))
   (timer-id
    (common-lisp:error #A((20) common-lisp:base-char . ":timerid is required"))
    :type (common-lisp:or timer-id common-lisp:null))
   (started-event-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":startedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'timer-fired-event-attributes
                    'make-timer-fired-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          timer-fired-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-id)))
    (aws-sdk/generator/shape::to-query-params "startedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-event-id))))))
(common-lisp:deftype timer-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (timer-started-event-attributes (:copier common-lisp:nil))
   (timer-id
    (common-lisp:error #A((20) common-lisp:base-char . ":timerid is required"))
    :type (common-lisp:or timer-id common-lisp:null))
   (control common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (start-to-fire-timeout
    (common-lisp:error
     #A((31) common-lisp:base-char . ":starttofiretimeout is required"))
    :type (common-lisp:or duration-in-seconds common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'timer-started-event-attributes
                    'make-timer-started-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          timer-started-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timer-id)))
    (aws-sdk/generator/shape::to-query-params "control"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'control)))
    (aws-sdk/generator/shape::to-query-params "startToFireTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-to-fire-timeout)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype truncated () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (type-already-exists-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'type-already-exists-fault
                    'make-type-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          type-already-exists-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (type-deprecated-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'type-deprecated-fault 'make-type-deprecated-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          type-deprecated-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (unknown-resource-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unknown-resource-fault 'make-unknown-resource-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unknown-resource-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:deftype version-optional () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (workflow-execution (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null))
   (run-id
    (common-lisp:error #A((18) common-lisp:base-char . ":runid is required"))
    :type (common-lisp:or workflow-run-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution 'make-workflow-execution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workflow-execution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id)))
    (aws-sdk/generator/shape::to-query-params "runId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-already-started-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-already-started-fault
                    'make-workflow-execution-already-started-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-already-started-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype workflow-execution-cancel-requested-cause ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-cancel-requested-event-attributes
      (:copier common-lisp:nil))
   (external-workflow-execution common-lisp:nil :type
    (common-lisp:or workflow-execution common-lisp:null))
   (external-initiated-event-id common-lisp:nil :type
    (common-lisp:or event-id common-lisp:null))
   (cause common-lisp:nil :type
    (common-lisp:or workflow-execution-cancel-requested-cause
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-cancel-requested-event-attributes
                    'make-workflow-execution-cancel-requested-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-cancel-requested-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "externalWorkflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "externalInitiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-canceled-event-attributes (:copier common-lisp:nil))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-canceled-event-attributes
                    'make-workflow-execution-canceled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-canceled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-completed-event-attributes (:copier common-lisp:nil))
   (result common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-completed-event-attributes
                    'make-workflow-execution-completed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-completed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-configuration (:copier common-lisp:nil))
   (task-start-to-close-timeout
    (common-lisp:error
     #A((36) common-lisp:base-char . ":taskstarttoclosetimeout is required"))
    :type (common-lisp:or duration-in-seconds common-lisp:null))
   (execution-start-to-close-timeout
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":executionstarttoclosetimeout is required"))
    :type (common-lisp:or duration-in-seconds common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (child-policy
    (common-lisp:error
     #A((24) common-lisp:base-char . ":childpolicy is required"))
    :type (common-lisp:or child-policy common-lisp:null))
   (lambda-role common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-configuration
                    'make-workflow-execution-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "executionStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "lambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-role))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-continued-as-new-event-attributes
      (:copier common-lisp:nil))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (new-execution-run-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":newexecutionrunid is required"))
    :type (common-lisp:or workflow-run-id common-lisp:null))
   (execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (child-policy
    (common-lisp:error
     #A((24) common-lisp:base-char . ":childpolicy is required"))
    :type (common-lisp:or child-policy common-lisp:null))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (lambda-role common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-continued-as-new-event-attributes
                    'make-workflow-execution-continued-as-new-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-continued-as-new-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id)))
    (aws-sdk/generator/shape::to-query-params "newExecutionRunId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-execution-run-id)))
    (aws-sdk/generator/shape::to-query-params "executionStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "taskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "tagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "lambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-role))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-execution-count (:copier common-lisp:nil))
   (count
    (common-lisp:error #A((18) common-lisp:base-char . ":count is required"))
    :type (common-lisp:or count common-lisp:null))
   (truncated common-lisp:nil :type
    (common-lisp:or truncated common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-count 'make-workflow-execution-count))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-count))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "truncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'truncated))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-execution-detail (:copier common-lisp:nil))
   (execution-info
    (common-lisp:error
     #A((26) common-lisp:base-char . ":executioninfo is required"))
    :type (common-lisp:or workflow-execution-info common-lisp:null))
   (execution-configuration
    (common-lisp:error
     #A((35) common-lisp:base-char . ":executionconfiguration is required"))
    :type (common-lisp:or workflow-execution-configuration common-lisp:null))
   (open-counts
    (common-lisp:error
     #A((23) common-lisp:base-char . ":opencounts is required"))
    :type (common-lisp:or workflow-execution-open-counts common-lisp:null))
   (latest-activity-task-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (latest-execution-context common-lisp:nil :type
    (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-detail
                    'make-workflow-execution-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-info)))
    (aws-sdk/generator/shape::to-query-params "executionConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-configuration)))
    (aws-sdk/generator/shape::to-query-params "openCounts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-counts)))
    (aws-sdk/generator/shape::to-query-params "latestActivityTaskTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-activity-task-timestamp)))
    (aws-sdk/generator/shape::to-query-params "latestExecutionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-execution-context))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-failed-event-attributes (:copier common-lisp:nil))
   (reason common-lisp:nil :type
    (common-lisp:or failure-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (decision-task-completed-event-id
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":decisiontaskcompletedeventid is required"))
    :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-failed-event-attributes
                    'make-workflow-execution-failed-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-failed-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "decisionTaskCompletedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decision-task-completed-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-execution-filter (:copier common-lisp:nil))
   (workflow-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workflowid is required"))
    :type (common-lisp:or workflow-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-filter
                    'make-workflow-execution-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-id))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-execution-info (:copier common-lisp:nil))
   (execution
    (common-lisp:error
     #A((22) common-lisp:base-char . ":execution is required"))
    :type (common-lisp:or workflow-execution common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (start-timestamp
    (common-lisp:error
     #A((27) common-lisp:base-char . ":starttimestamp is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (close-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (execution-status
    (common-lisp:error
     #A((28) common-lisp:base-char . ":executionstatus is required"))
    :type (common-lisp:or execution-status common-lisp:null))
   (close-status common-lisp:nil :type
    (common-lisp:or close-status common-lisp:null))
   (parent common-lisp:nil :type
    (common-lisp:or workflow-execution common-lisp:null))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (cancel-requested common-lisp:nil :type
    (common-lisp:or canceled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-info 'make-workflow-execution-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "execution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "startTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-timestamp)))
    (aws-sdk/generator/shape::to-query-params "closeTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'close-timestamp)))
    (aws-sdk/generator/shape::to-query-params "executionStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-status)))
    (aws-sdk/generator/shape::to-query-params "closeStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'close-status)))
    (aws-sdk/generator/shape::to-query-params "parent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent)))
    (aws-sdk/generator/shape::to-query-params "tagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list)))
    (aws-sdk/generator/shape::to-query-params "cancelRequested"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cancel-requested))))))
(common-lisp:progn
 (common-lisp:deftype workflow-execution-info-list ()
   '(trivial-types:proper-list workflow-execution-info))
 (common-lisp:defun |make-workflow-execution-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list workflow-execution-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (workflow-execution-infos (:copier common-lisp:nil))
   (execution-infos
    (common-lisp:error
     #A((27) common-lisp:base-char . ":executioninfos is required"))
    :type (common-lisp:or workflow-execution-info-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-infos 'make-workflow-execution-infos))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-infos))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionInfos"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-infos)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-open-counts (:copier common-lisp:nil))
   (open-activity-tasks
    (common-lisp:error
     #A((30) common-lisp:base-char . ":openactivitytasks is required"))
    :type (common-lisp:or count common-lisp:null))
   (open-decision-tasks
    (common-lisp:error
     #A((30) common-lisp:base-char . ":opendecisiontasks is required"))
    :type (common-lisp:or open-decision-tasks-count common-lisp:null))
   (open-timers
    (common-lisp:error
     #A((23) common-lisp:base-char . ":opentimers is required"))
    :type (common-lisp:or count common-lisp:null))
   (open-child-workflow-executions
    (common-lisp:error
     #A((40) common-lisp:base-char
        . ":openchildworkflowexecutions is required"))
    :type (common-lisp:or count common-lisp:null))
   (open-lambda-functions common-lisp:nil :type
    (common-lisp:or count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-open-counts
                    'make-workflow-execution-open-counts))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-open-counts))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "openActivityTasks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-activity-tasks)))
    (aws-sdk/generator/shape::to-query-params "openDecisionTasks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-decision-tasks)))
    (aws-sdk/generator/shape::to-query-params "openTimers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-timers)))
    (aws-sdk/generator/shape::to-query-params "openChildWorkflowExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-child-workflow-executions)))
    (aws-sdk/generator/shape::to-query-params "openLambdaFunctions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-lambda-functions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-signaled-event-attributes (:copier common-lisp:nil))
   (signal-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":signalname is required"))
    :type (common-lisp:or signal-name common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (external-workflow-execution common-lisp:nil :type
    (common-lisp:or workflow-execution common-lisp:null))
   (external-initiated-event-id common-lisp:nil :type
    (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-signaled-event-attributes
                    'make-workflow-execution-signaled-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-signaled-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "signalName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signal-name)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "externalWorkflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "externalInitiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-initiated-event-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-started-event-attributes (:copier common-lisp:nil))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (child-policy
    (common-lisp:error
     #A((24) common-lisp:base-char . ":childpolicy is required"))
    :type (common-lisp:or child-policy common-lisp:null))
   (task-list
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tasklist is required"))
    :type (common-lisp:or task-list common-lisp:null))
   (task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (continued-execution-run-id common-lisp:nil :type
    (common-lisp:or workflow-run-id-optional common-lisp:null))
   (parent-workflow-execution common-lisp:nil :type
    (common-lisp:or workflow-execution common-lisp:null))
   (parent-initiated-event-id common-lisp:nil :type
    (common-lisp:or event-id common-lisp:null))
   (lambda-role common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-started-event-attributes
                    'make-workflow-execution-started-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-started-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "executionStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "taskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "taskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-list)))
    (aws-sdk/generator/shape::to-query-params "taskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-priority)))
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "tagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list)))
    (aws-sdk/generator/shape::to-query-params "continuedExecutionRunId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continued-execution-run-id)))
    (aws-sdk/generator/shape::to-query-params "parentWorkflowExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-workflow-execution)))
    (aws-sdk/generator/shape::to-query-params "parentInitiatedEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-initiated-event-id)))
    (aws-sdk/generator/shape::to-query-params "lambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-role))))))
(common-lisp:deftype workflow-execution-terminated-cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-terminated-event-attributes (:copier common-lisp:nil))
   (reason common-lisp:nil :type
    (common-lisp:or terminate-reason common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (child-policy
    (common-lisp:error
     #A((24) common-lisp:base-char . ":childpolicy is required"))
    :type (common-lisp:or child-policy common-lisp:null))
   (cause common-lisp:nil :type
    (common-lisp:or workflow-execution-terminated-cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-terminated-event-attributes
                    'make-workflow-execution-terminated-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-terminated-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct
     (workflow-execution-timed-out-event-attributes (:copier common-lisp:nil))
   (timeout-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":timeouttype is required"))
    :type (common-lisp:or workflow-execution-timeout-type common-lisp:null))
   (child-policy
    (common-lisp:error
     #A((24) common-lisp:base-char . ":childpolicy is required"))
    :type (common-lisp:or child-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-execution-timed-out-event-attributes
                    'make-workflow-execution-timed-out-event-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-execution-timed-out-event-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timeoutType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-type)))
    (aws-sdk/generator/shape::to-query-params "childPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-policy))))))
(common-lisp:deftype workflow-execution-timeout-type () 'common-lisp:string)
(common-lisp:deftype workflow-id () 'common-lisp:string)
(common-lisp:deftype workflow-run-id () 'common-lisp:string)
(common-lisp:deftype workflow-run-id-optional () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (workflow-type (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'workflow-type 'make-workflow-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workflow-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-type-configuration (:copier common-lisp:nil))
   (default-task-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-execution-start-to-close-timeout common-lisp:nil :type
    (common-lisp:or duration-in-seconds-optional common-lisp:null))
   (default-task-list common-lisp:nil :type
    (common-lisp:or task-list common-lisp:null))
   (default-task-priority common-lisp:nil :type
    (common-lisp:or task-priority common-lisp:null))
   (default-child-policy common-lisp:nil :type
    (common-lisp:or child-policy common-lisp:null))
   (default-lambda-role common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-type-configuration
                    'make-workflow-type-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workflow-type-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "defaultTaskStartToCloseTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params
     "defaultExecutionStartToCloseTimeout"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'default-execution-start-to-close-timeout)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-list)))
    (aws-sdk/generator/shape::to-query-params "defaultTaskPriority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-task-priority)))
    (aws-sdk/generator/shape::to-query-params "defaultChildPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-child-policy)))
    (aws-sdk/generator/shape::to-query-params "defaultLambdaRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-lambda-role))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-type-detail (:copier common-lisp:nil))
   (type-info
    (common-lisp:error
     #A((21) common-lisp:base-char . ":typeinfo is required"))
    :type (common-lisp:or workflow-type-info common-lisp:null))
   (configuration
    (common-lisp:error
     #A((26) common-lisp:base-char . ":configuration is required"))
    :type (common-lisp:or workflow-type-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-type-detail 'make-workflow-type-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workflow-type-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "typeInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-info)))
    (aws-sdk/generator/shape::to-query-params "configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-type-filter (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or version-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-type-filter 'make-workflow-type-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workflow-type-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (workflow-type-info (:copier common-lisp:nil))
   (workflow-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workflowtype is required"))
    :type (common-lisp:or workflow-type common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or registration-status common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (deprecation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-type-info 'make-workflow-type-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workflow-type-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workflowType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workflow-type)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "deprecationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deprecation-date))))))
(common-lisp:progn
 (common-lisp:deftype workflow-type-info-list ()
   '(trivial-types:proper-list workflow-type-info))
 (common-lisp:defun |make-workflow-type-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list workflow-type-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (workflow-type-infos (:copier common-lisp:nil))
   (type-infos
    (common-lisp:error
     #A((22) common-lisp:base-char . ":typeinfos is required"))
    :type (common-lisp:or workflow-type-info-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workflow-type-infos 'make-workflow-type-infos))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workflow-type-infos))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "typeInfos"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type-infos)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defun count-closed-workflow-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain start-time-filter
                     close-time-filter execution-filter type-filter tag-filter
                     close-status-filter)
   (common-lisp:declare
    (common-lisp:ignorable domain start-time-filter close-time-filter
     execution-filter type-filter tag-filter close-status-filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-count-closed-workflow-executions-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CountClosedWorkflowExecutions")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "WorkflowExecutionCount" common-lisp:nil)))
 (common-lisp:export 'count-closed-workflow-executions))
(common-lisp:progn
 (common-lisp:defun count-open-workflow-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain start-time-filter type-filter
                     tag-filter execution-filter)
   (common-lisp:declare
    (common-lisp:ignorable domain start-time-filter type-filter tag-filter
     execution-filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-count-open-workflow-executions-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CountOpenWorkflowExecutions")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "WorkflowExecutionCount" common-lisp:nil)))
 (common-lisp:export 'count-open-workflow-executions))
(common-lisp:progn
 (common-lisp:defun count-pending-activity-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain task-list)
   (common-lisp:declare (common-lisp:ignorable domain task-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-count-pending-activity-tasks-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CountPendingActivityTasks")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PendingTaskCount" common-lisp:nil)))
 (common-lisp:export 'count-pending-activity-tasks))
(common-lisp:progn
 (common-lisp:defun count-pending-decision-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain task-list)
   (common-lisp:declare (common-lisp:ignorable domain task-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-count-pending-decision-tasks-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CountPendingDecisionTasks")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PendingTaskCount" common-lisp:nil)))
 (common-lisp:export 'count-pending-decision-tasks))
(common-lisp:progn
 (common-lisp:defun deprecate-activity-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain activity-type)
   (common-lisp:declare (common-lisp:ignorable domain activity-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deprecate-activity-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeprecateActivityType")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deprecate-activity-type))
(common-lisp:progn
 (common-lisp:defun deprecate-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deprecate-domain-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeprecateDomain")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deprecate-domain))
(common-lisp:progn
 (common-lisp:defun deprecate-workflow-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain workflow-type)
   (common-lisp:declare (common-lisp:ignorable domain workflow-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deprecate-workflow-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeprecateWorkflowType")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deprecate-workflow-type))
(common-lisp:progn
 (common-lisp:defun describe-activity-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain activity-type)
   (common-lisp:declare (common-lisp:ignorable domain activity-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-activity-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeActivityType")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ActivityTypeDetail" common-lisp:nil)))
 (common-lisp:export 'describe-activity-type))
(common-lisp:progn
 (common-lisp:defun describe-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-domain-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDomain")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DomainDetail" common-lisp:nil)))
 (common-lisp:export 'describe-domain))
(common-lisp:progn
 (common-lisp:defun describe-workflow-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain execution)
   (common-lisp:declare (common-lisp:ignorable domain execution))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-workflow-execution-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeWorkflowExecution")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "WorkflowExecutionDetail" common-lisp:nil)))
 (common-lisp:export 'describe-workflow-execution))
(common-lisp:progn
 (common-lisp:defun describe-workflow-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain workflow-type)
   (common-lisp:declare (common-lisp:ignorable domain workflow-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-workflow-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeWorkflowType")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "WorkflowTypeDetail" common-lisp:nil)))
 (common-lisp:export 'describe-workflow-type))
(common-lisp:progn
 (common-lisp:defun get-workflow-execution-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain execution next-page-token
                     maximum-page-size reverse-order)
   (common-lisp:declare
    (common-lisp:ignorable domain execution next-page-token maximum-page-size
     reverse-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-workflow-execution-history-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetWorkflowExecutionHistory")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "History" common-lisp:nil)))
 (common-lisp:export 'get-workflow-execution-history))
(common-lisp:progn
 (common-lisp:defun list-activity-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain name registration-status
                     next-page-token maximum-page-size reverse-order)
   (common-lisp:declare
    (common-lisp:ignorable domain name registration-status next-page-token
     maximum-page-size reverse-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-activity-types-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListActivityTypes")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ActivityTypeInfos" common-lisp:nil)))
 (common-lisp:export 'list-activity-types))
(common-lisp:progn
 (common-lisp:defun list-closed-workflow-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain start-time-filter
                     close-time-filter execution-filter close-status-filter
                     type-filter tag-filter next-page-token maximum-page-size
                     reverse-order)
   (common-lisp:declare
    (common-lisp:ignorable domain start-time-filter close-time-filter
     execution-filter close-status-filter type-filter tag-filter
     next-page-token maximum-page-size reverse-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-closed-workflow-executions-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListClosedWorkflowExecutions")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "WorkflowExecutionInfos" common-lisp:nil)))
 (common-lisp:export 'list-closed-workflow-executions))
(common-lisp:progn
 (common-lisp:defun list-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-page-token registration-status
                     maximum-page-size reverse-order)
   (common-lisp:declare
    (common-lisp:ignorable next-page-token registration-status
     maximum-page-size reverse-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-domains-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDomains")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DomainInfos" common-lisp:nil)))
 (common-lisp:export 'list-domains))
(common-lisp:progn
 (common-lisp:defun list-open-workflow-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain start-time-filter type-filter
                     tag-filter next-page-token maximum-page-size reverse-order
                     execution-filter)
   (common-lisp:declare
    (common-lisp:ignorable domain start-time-filter type-filter tag-filter
     next-page-token maximum-page-size reverse-order execution-filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-open-workflow-executions-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListOpenWorkflowExecutions")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "WorkflowExecutionInfos" common-lisp:nil)))
 (common-lisp:export 'list-open-workflow-executions))
(common-lisp:progn
 (common-lisp:defun list-workflow-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain name registration-status
                     next-page-token maximum-page-size reverse-order)
   (common-lisp:declare
    (common-lisp:ignorable domain name registration-status next-page-token
     maximum-page-size reverse-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-workflow-types-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListWorkflowTypes")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "WorkflowTypeInfos" common-lisp:nil)))
 (common-lisp:export 'list-workflow-types))
(common-lisp:progn
 (common-lisp:defun poll-for-activity-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain task-list identity)
   (common-lisp:declare (common-lisp:ignorable domain task-list identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-poll-for-activity-task-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PollForActivityTask")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ActivityTask" common-lisp:nil)))
 (common-lisp:export 'poll-for-activity-task))
(common-lisp:progn
 (common-lisp:defun poll-for-decision-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain task-list identity next-page-token
                     maximum-page-size reverse-order)
   (common-lisp:declare
    (common-lisp:ignorable domain task-list identity next-page-token
     maximum-page-size reverse-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-poll-for-decision-task-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PollForDecisionTask")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DecisionTask" common-lisp:nil)))
 (common-lisp:export 'poll-for-decision-task))
(common-lisp:progn
 (common-lisp:defun record-activity-task-heartbeat
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token details)
   (common-lisp:declare (common-lisp:ignorable task-token details))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-record-activity-task-heartbeat-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RecordActivityTaskHeartbeat")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ActivityTaskStatus" common-lisp:nil)))
 (common-lisp:export 'record-activity-task-heartbeat))
(common-lisp:progn
 (common-lisp:defun register-activity-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain name version description
                     default-task-start-to-close-timeout
                     default-task-heartbeat-timeout default-task-list
                     default-task-priority
                     default-task-schedule-to-start-timeout
                     default-task-schedule-to-close-timeout)
   (common-lisp:declare
    (common-lisp:ignorable domain name version description
     default-task-start-to-close-timeout default-task-heartbeat-timeout
     default-task-list default-task-priority
     default-task-schedule-to-start-timeout
     default-task-schedule-to-close-timeout))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-activity-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterActivityType")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-activity-type))
(common-lisp:progn
 (common-lisp:defun register-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description
                     workflow-execution-retention-period-in-days)
   (common-lisp:declare
    (common-lisp:ignorable name description
     workflow-execution-retention-period-in-days))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-domain-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterDomain")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-domain))
(common-lisp:progn
 (common-lisp:defun register-workflow-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain name version description
                     default-task-start-to-close-timeout
                     default-execution-start-to-close-timeout default-task-list
                     default-task-priority default-child-policy
                     default-lambda-role)
   (common-lisp:declare
    (common-lisp:ignorable domain name version description
     default-task-start-to-close-timeout
     default-execution-start-to-close-timeout default-task-list
     default-task-priority default-child-policy default-lambda-role))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-workflow-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterWorkflowType")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-workflow-type))
(common-lisp:progn
 (common-lisp:defun request-cancel-workflow-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain workflow-id run-id)
   (common-lisp:declare (common-lisp:ignorable domain workflow-id run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-request-cancel-workflow-execution-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RequestCancelWorkflowExecution")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'request-cancel-workflow-execution))
(common-lisp:progn
 (common-lisp:defun respond-activity-task-canceled
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token details)
   (common-lisp:declare (common-lisp:ignorable task-token details))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-respond-activity-task-canceled-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RespondActivityTaskCanceled")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'respond-activity-task-canceled))
(common-lisp:progn
 (common-lisp:defun respond-activity-task-completed
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token result)
   (common-lisp:declare (common-lisp:ignorable task-token result))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-respond-activity-task-completed-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RespondActivityTaskCompleted")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'respond-activity-task-completed))
(common-lisp:progn
 (common-lisp:defun respond-activity-task-failed
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token reason details)
   (common-lisp:declare (common-lisp:ignorable task-token reason details))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-respond-activity-task-failed-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RespondActivityTaskFailed")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'respond-activity-task-failed))
(common-lisp:progn
 (common-lisp:defun respond-decision-task-completed
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token decisions execution-context)
   (common-lisp:declare
    (common-lisp:ignorable task-token decisions execution-context))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-respond-decision-task-completed-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RespondDecisionTaskCompleted")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'respond-decision-task-completed))
(common-lisp:progn
 (common-lisp:defun signal-workflow-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain workflow-id run-id signal-name
                     input)
   (common-lisp:declare
    (common-lisp:ignorable domain workflow-id run-id signal-name input))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-signal-workflow-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SignalWorkflowExecution")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'signal-workflow-execution))
(common-lisp:progn
 (common-lisp:defun start-workflow-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain workflow-id workflow-type
                     task-list task-priority input
                     execution-start-to-close-timeout tag-list
                     task-start-to-close-timeout child-policy lambda-role)
   (common-lisp:declare
    (common-lisp:ignorable domain workflow-id workflow-type task-list
     task-priority input execution-start-to-close-timeout tag-list
     task-start-to-close-timeout child-policy lambda-role))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-workflow-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartWorkflowExecution")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Run" common-lisp:nil)))
 (common-lisp:export 'start-workflow-execution))
(common-lisp:progn
 (common-lisp:defun terminate-workflow-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain workflow-id run-id reason details
                     child-policy)
   (common-lisp:declare
    (common-lisp:ignorable domain workflow-id run-id reason details
     child-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-terminate-workflow-execution-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "swf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TerminateWorkflowExecution")
                                  ("Version" ,@"2012-01-25"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'terminate-workflow-execution))