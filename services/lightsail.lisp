;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/lightsail
  (:use)
  (:nicknames #:aws/lightsail)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/lightsail)

(common-lisp:progn
 (common-lisp:defstruct (access-denied-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (docs common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tip common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'make-access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-denied-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "docs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'docs)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "tip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tip))))))
(common-lisp:deftype access-direction () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (account-setup-in-progress-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (docs common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tip common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-setup-in-progress-exception
                    'make-account-setup-in-progress-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          account-setup-in-progress-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "docs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'docs)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "tip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tip))))))
(common-lisp:progn
 (common-lisp:defstruct (allocate-static-ip-request (:copier common-lisp:nil))
   (static-ip-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":staticipname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'allocate-static-ip-request
                    'make-allocate-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          allocate-static-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "staticIpName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'static-ip-name))))))
(common-lisp:progn
 (common-lisp:defstruct (allocate-static-ip-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'allocate-static-ip-result
                    'make-allocate-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          allocate-static-ip-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-static-ip-request (:copier common-lisp:nil))
   (static-ip-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":staticipname is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-static-ip-request 'make-attach-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-static-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "staticIpName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'static-ip-name)))
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-static-ip-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-static-ip-result 'make-attach-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-static-ip-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (availability-zone (:copier common-lisp:nil))
   (zone-name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'availability-zone 'make-availability-zone))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape availability-zone))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "zoneName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'zone-name)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state))))))
(common-lisp:progn
 (common-lisp:deftype availability-zone-list ()
   '(trivial-types:proper-list availability-zone))
 (common-lisp:defun |make-availability-zone-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:deftype base64 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (blueprint (:copier common-lisp:nil))
   (blueprint-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (group common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or blueprint-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-active common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (min-power common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (version-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (product-url common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (license-url common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'blueprint 'make-blueprint))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape blueprint))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "blueprintId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'blueprint-id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "group"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "isActive"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-active)))
    (aws-sdk/generator/shape::to-query-params "minPower"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-power)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "versionCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-code)))
    (aws-sdk/generator/shape::to-query-params "productUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-url)))
    (aws-sdk/generator/shape::to-query-params "licenseUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'license-url))))))
(common-lisp:progn
 (common-lisp:deftype blueprint-list () '(trivial-types:proper-list blueprint))
 (common-lisp:defun |make-blueprint-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blueprint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype blueprint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (bundle (:copier common-lisp:nil))
   (price common-lisp:nil :type
    (common-lisp:or common-lisp:single-float common-lisp:null))
   (cpu-count common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (disk-size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (bundle-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-active common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (power common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (ram-size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:single-float common-lisp:null))
   (transfer-per-month-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bundle 'make-bundle))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape bundle))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "price"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'price)))
    (aws-sdk/generator/shape::to-query-params "cpuCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cpu-count)))
    (aws-sdk/generator/shape::to-query-params "diskSizeInGb"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'disk-size-in-gb)))
    (aws-sdk/generator/shape::to-query-params "bundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "instanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "isActive"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-active)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "power"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'power)))
    (aws-sdk/generator/shape::to-query-params "ramSizeInGb"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ram-size-in-gb)))
    (aws-sdk/generator/shape::to-query-params "transferPerMonthInGb"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'transfer-per-month-in-gb))))))
(common-lisp:progn
 (common-lisp:deftype bundle-list () '(trivial-types:proper-list bundle))
 (common-lisp:defun |make-bundle-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bundle))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (close-instance-public-ports-request (:copier common-lisp:nil))
   (port-info
    (common-lisp:error
     #A((21) common-lisp:base-char . ":portinfo is required"))
    :type (common-lisp:or port-info common-lisp:null))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'close-instance-public-ports-request
                    'make-close-instance-public-ports-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          close-instance-public-ports-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "portInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port-info)))
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (close-instance-public-ports-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'close-instance-public-ports-result
                    'make-close-instance-public-ports-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          close-instance-public-ports-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (create-domain-entry-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (domain-entry
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domainentry is required"))
    :type (common-lisp:or domain-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-entry-request
                    'make-create-domain-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-domain-entry-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "domainEntry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-entry))))))
(common-lisp:progn
 (common-lisp:defstruct (create-domain-entry-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-entry-result
                    'make-create-domain-entry-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-domain-entry-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (create-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-request 'make-create-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-domain-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-result 'make-create-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-domain-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-snapshot-request (:copier common-lisp:nil))
   (instance-snapshot-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":instancesnapshotname is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-snapshot-request
                    'make-create-instance-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instance-snapshot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceSnapshotName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-snapshot-name)))
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-snapshot-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-snapshot-result
                    'make-create-instance-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instance-snapshot-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instances-from-snapshot-request (:copier common-lisp:nil))
   (instance-names
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instancenames is required"))
    :type (common-lisp:or string-list common-lisp:null))
   (availability-zone
    (common-lisp:error
     #A((29) common-lisp:base-char . ":availabilityzone is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (instance-snapshot-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":instancesnapshotname is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (bundle-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":bundleid is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (user-data common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (key-pair-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-from-snapshot-request
                    'make-create-instances-from-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instances-from-snapshot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-names)))
    (aws-sdk/generator/shape::to-query-params "availabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "instanceSnapshotName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-snapshot-name)))
    (aws-sdk/generator/shape::to-query-params "bundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "userData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-data)))
    (aws-sdk/generator/shape::to-query-params "keyPairName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instances-from-snapshot-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-from-snapshot-result
                    'make-create-instances-from-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instances-from-snapshot-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (create-instances-request (:copier common-lisp:nil))
   (instance-names
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instancenames is required"))
    :type (common-lisp:or string-list common-lisp:null))
   (availability-zone
    (common-lisp:error
     #A((29) common-lisp:base-char . ":availabilityzone is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (custom-image-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (blueprint-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":blueprintid is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (bundle-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":bundleid is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (user-data common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (key-pair-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-request 'make-create-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instances-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-names)))
    (aws-sdk/generator/shape::to-query-params "availabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "customImageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-image-name)))
    (aws-sdk/generator/shape::to-query-params "blueprintId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'blueprint-id)))
    (aws-sdk/generator/shape::to-query-params "bundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "userData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-data)))
    (aws-sdk/generator/shape::to-query-params "keyPairName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-instances-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-result 'make-create-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instances-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (create-key-pair-request (:copier common-lisp:nil))
   (key-pair-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":keypairname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-key-pair-request 'make-create-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-key-pair-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "keyPairName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-key-pair-result (:copier common-lisp:nil))
   (key-pair common-lisp:nil :type (common-lisp:or key-pair common-lisp:null))
   (public-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null))
   (private-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-key-pair-result 'make-create-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-key-pair-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "keyPair"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair)))
    (aws-sdk/generator/shape::to-query-params "publicKeyBase64"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-key-base64)))
    (aws-sdk/generator/shape::to-query-params "privateKeyBase64"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-key-base64)))
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-entry-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (domain-entry
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domainentry is required"))
    :type (common-lisp:or domain-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-entry-request
                    'make-delete-domain-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-domain-entry-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "domainEntry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-entry))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-entry-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-entry-result
                    'make-delete-domain-entry-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-domain-entry-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-request 'make-delete-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-result 'make-delete-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-domain-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-instance-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-request 'make-delete-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-instance-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-result 'make-delete-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-snapshot-request (:copier common-lisp:nil))
   (instance-snapshot-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":instancesnapshotname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-snapshot-request
                    'make-delete-instance-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-instance-snapshot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceSnapshotName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-snapshot-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-snapshot-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-snapshot-result
                    'make-delete-instance-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-instance-snapshot-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-key-pair-request (:copier common-lisp:nil))
   (key-pair-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":keypairname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-key-pair-request 'make-delete-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-key-pair-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "keyPairName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-key-pair-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-key-pair-result 'make-delete-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-key-pair-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-static-ip-request (:copier common-lisp:nil))
   (static-ip-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":staticipname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-static-ip-request 'make-detach-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-static-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "staticIpName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'static-ip-name))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-static-ip-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-static-ip-result 'make-detach-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-static-ip-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (disk (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (gb-in-use common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (is-system-disk common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (iops common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (path common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (attached-to common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-attached common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (attachment-state common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk 'make-disk))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape disk))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "supportCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-code)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "resourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "sizeInGb"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-in-gb)))
    (aws-sdk/generator/shape::to-query-params "gbInUse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gb-in-use)))
    (aws-sdk/generator/shape::to-query-params "isSystemDisk"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-system-disk)))
    (aws-sdk/generator/shape::to-query-params "iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops)))
    (aws-sdk/generator/shape::to-query-params "path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "attachedTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-to)))
    (aws-sdk/generator/shape::to-query-params "isAttached"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-attached)))
    (aws-sdk/generator/shape::to-query-params "attachmentState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-state))))))
(common-lisp:progn
 (common-lisp:deftype disk-list () '(trivial-types:proper-list disk))
 (common-lisp:defun |make-disk-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list disk))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (domain (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (domain-entries common-lisp:nil :type
    (common-lisp:or domain-entry-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain 'make-domain))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "supportCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-code)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "resourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "domainEntries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-entries))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-entry (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or domain-name common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or domain-entry-type common-lisp:null))
   (options common-lisp:nil :type
    (common-lisp:or domain-entry-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-entry 'make-domain-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "target"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options))))))
(common-lisp:progn
 (common-lisp:deftype domain-entry-list ()
   '(trivial-types:proper-list domain-entry))
 (common-lisp:defun |make-domain-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-entry))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (domain-entry-options
     (:constructor |make-domain-entry-options|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype domain-entry-options-keys () 'common-lisp:string)
(common-lisp:deftype domain-entry-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype domain-list () '(trivial-types:proper-list domain))
 (common-lisp:defun |make-domain-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (download-default-key-pair-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'download-default-key-pair-request
                    'make-download-default-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          download-default-key-pair-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (download-default-key-pair-result (:copier common-lisp:nil))
   (public-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null))
   (private-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'download-default-key-pair-result
                    'make-download-default-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          download-default-key-pair-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "publicKeyBase64"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-key-base64)))
    (aws-sdk/generator/shape::to-query-params "privateKeyBase64"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-key-base64))))))
(common-lisp:progn
 (common-lisp:defstruct (get-active-names-request (:copier common-lisp:nil))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-active-names-request 'make-get-active-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-active-names-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-active-names-result (:copier common-lisp:nil))
   (active-names common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-active-names-result 'make-get-active-names-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-active-names-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-names)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-blueprints-request (:copier common-lisp:nil))
   (include-inactive common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blueprints-request 'make-get-blueprints-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-blueprints-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "includeInactive"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-inactive)))
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-blueprints-result (:copier common-lisp:nil))
   (blueprints common-lisp:nil :type
    (common-lisp:or blueprint-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blueprints-result 'make-get-blueprints-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-blueprints-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "blueprints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'blueprints)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bundles-request (:copier common-lisp:nil))
   (include-inactive common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bundles-request 'make-get-bundles-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-bundles-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "includeInactive"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-inactive)))
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bundles-result (:copier common-lisp:nil))
   (bundles common-lisp:nil :type
    (common-lisp:or bundle-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bundles-result 'make-get-bundles-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-bundles-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "bundles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundles)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-request 'make-get-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-domain-result (:copier common-lisp:nil))
   (domain common-lisp:nil :type (common-lisp:or domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-result 'make-get-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-domain-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain))))))
(common-lisp:progn
 (common-lisp:defstruct (get-domains-request (:copier common-lisp:nil))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domains-request 'make-get-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-domains-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-domains-result (:copier common-lisp:nil))
   (domains common-lisp:nil :type
    (common-lisp:or domain-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domains-result 'make-get-domains-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-domains-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domains)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-access-details-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or instance-access-protocol common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-access-details-request
                    'make-get-instance-access-details-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-access-details-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name)))
    (aws-sdk/generator/shape::to-query-params "protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-access-details-result (:copier common-lisp:nil))
   (access-details common-lisp:nil :type
    (common-lisp:or instance-access-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-access-details-result
                    'make-get-instance-access-details-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-access-details-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accessDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-metric-data-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (metric-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":metricname is required"))
    :type (common-lisp:or instance-metric-name common-lisp:null))
   (period
    (common-lisp:error #A((19) common-lisp:base-char . ":period is required"))
    :type (common-lisp:or metric-period common-lisp:null))
   (start-time
    (common-lisp:error
     #A((22) common-lisp:base-char . ":starttime is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (end-time
    (common-lisp:error #A((20) common-lisp:base-char . ":endtime is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (unit
    (common-lisp:error #A((17) common-lisp:base-char . ":unit is required"))
    :type (common-lisp:or metric-unit common-lisp:null))
   (statistics
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statistics is required"))
    :type (common-lisp:or metric-statistic-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-metric-data-request
                    'make-get-instance-metric-data-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-metric-data-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name)))
    (aws-sdk/generator/shape::to-query-params "metricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "period"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'period)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "unit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unit)))
    (aws-sdk/generator/shape::to-query-params "statistics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statistics))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-metric-data-result (:copier common-lisp:nil))
   (metric-name common-lisp:nil :type
    (common-lisp:or instance-metric-name common-lisp:null))
   (metric-data common-lisp:nil :type
    (common-lisp:or metric-datapoint-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-metric-data-result
                    'make-get-instance-metric-data-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-metric-data-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "metricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "metricData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-data))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-port-states-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-port-states-request
                    'make-get-instance-port-states-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-port-states-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-port-states-result (:copier common-lisp:nil))
   (port-states common-lisp:nil :type
    (common-lisp:or instance-port-state-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-port-states-result
                    'make-get-instance-port-states-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-port-states-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "portStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port-states))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instance-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-request 'make-get-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instance-result (:copier common-lisp:nil))
   (instance common-lisp:nil :type (common-lisp:or instance common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-result 'make-get-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instance"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshot-request (:copier common-lisp:nil))
   (instance-snapshot-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":instancesnapshotname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshot-request
                    'make-get-instance-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-snapshot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceSnapshotName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-snapshot-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshot-result (:copier common-lisp:nil))
   (instance-snapshot common-lisp:nil :type
    (common-lisp:or instance-snapshot common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshot-result
                    'make-get-instance-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-snapshot-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceSnapshot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-snapshot))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshots-request (:copier common-lisp:nil))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshots-request
                    'make-get-instance-snapshots-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-snapshots-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshots-result (:copier common-lisp:nil))
   (instance-snapshots common-lisp:nil :type
    (common-lisp:or instance-snapshot-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshots-result
                    'make-get-instance-snapshots-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-snapshots-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceSnapshots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-snapshots)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instance-state-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-state-request
                    'make-get-instance-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-state-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instance-state-result (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or instance-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-state-result
                    'make-get-instance-state-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-state-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instances-request (:copier common-lisp:nil))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instances-request 'make-get-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instances-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instances-result (:copier common-lisp:nil))
   (instances common-lisp:nil :type
    (common-lisp:or instance-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instances-result 'make-get-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-instances-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-key-pair-request (:copier common-lisp:nil))
   (key-pair-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":keypairname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pair-request 'make-get-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-key-pair-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "keyPairName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-key-pair-result (:copier common-lisp:nil))
   (key-pair common-lisp:nil :type (common-lisp:or key-pair common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pair-result 'make-get-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-key-pair-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "keyPair"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair))))))
(common-lisp:progn
 (common-lisp:defstruct (get-key-pairs-request (:copier common-lisp:nil))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pairs-request 'make-get-key-pairs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-key-pairs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-key-pairs-result (:copier common-lisp:nil))
   (key-pairs common-lisp:nil :type
    (common-lisp:or key-pair-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pairs-result 'make-get-key-pairs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-key-pairs-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "keyPairs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pairs)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-operation-request (:copier common-lisp:nil))
   (operation-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":operationid is required"))
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operation-request 'make-get-operation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-operation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-operation-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operation-result 'make-get-operation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-operation-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operations-for-resource-request (:copier common-lisp:nil))
   (resource-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resourcename is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-for-resource-request
                    'make-get-operations-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-operations-for-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-name)))
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operations-for-resource-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null))
   (next-page-count common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-for-resource-result
                    'make-get-operations-for-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-operations-for-resource-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations)))
    (aws-sdk/generator/shape::to-query-params "nextPageCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-count)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-operations-request (:copier common-lisp:nil))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-request 'make-get-operations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-operations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-operations-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-result 'make-get-operations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-operations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-regions-request (:copier common-lisp:nil))
   (include-availability-zones common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-regions-request 'make-get-regions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-regions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "includeAvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct (get-regions-result (:copier common-lisp:nil))
   (regions common-lisp:nil :type
    (common-lisp:or region-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-regions-result 'make-get-regions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-regions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "regions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'regions))))))
(common-lisp:progn
 (common-lisp:defstruct (get-static-ip-request (:copier common-lisp:nil))
   (static-ip-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":staticipname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ip-request 'make-get-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-static-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "staticIpName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'static-ip-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-static-ip-result (:copier common-lisp:nil))
   (static-ip common-lisp:nil :type
    (common-lisp:or static-ip common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ip-result 'make-get-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-static-ip-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "staticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'static-ip))))))
(common-lisp:progn
 (common-lisp:defstruct (get-static-ips-request (:copier common-lisp:nil))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ips-request 'make-get-static-ips-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-static-ips-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "pageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-static-ips-result (:copier common-lisp:nil))
   (static-ips common-lisp:nil :type
    (common-lisp:or static-ip-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ips-result 'make-get-static-ips-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-static-ips-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "staticIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'static-ips)))
    (aws-sdk/generator/shape::to-query-params "nextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (import-key-pair-request (:copier common-lisp:nil))
   (key-pair-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":keypairname is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (public-key-base64
    (common-lisp:error
     #A((28) common-lisp:base-char . ":publickeybase64 is required"))
    :type (common-lisp:or base64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-key-pair-request 'make-import-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          import-key-pair-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "keyPairName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-pair-name)))
    (aws-sdk/generator/shape::to-query-params "publicKeyBase64"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-key-base64))))))
(common-lisp:progn
 (common-lisp:defstruct (import-key-pair-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-key-pair-result 'make-import-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          import-key-pair-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (blueprint-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (blueprint-name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (bundle-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (is-static-ip common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (private-ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (public-ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (ipv6address common-lisp:nil :type
    (common-lisp:or ip-v6address common-lisp:null))
   (hardware common-lisp:nil :type
    (common-lisp:or instance-hardware common-lisp:null))
   (networking common-lisp:nil :type
    (common-lisp:or instance-networking common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or instance-state common-lisp:null))
   (username common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (ssh-key-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "supportCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-code)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "resourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "blueprintId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'blueprint-id)))
    (aws-sdk/generator/shape::to-query-params "blueprintName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'blueprint-name)))
    (aws-sdk/generator/shape::to-query-params "bundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "isStaticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-static-ip)))
    (aws-sdk/generator/shape::to-query-params "privateIpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-ip-address)))
    (aws-sdk/generator/shape::to-query-params "publicIpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-ip-address)))
    (aws-sdk/generator/shape::to-query-params "ipv6Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipv6address)))
    (aws-sdk/generator/shape::to-query-params "hardware"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hardware)))
    (aws-sdk/generator/shape::to-query-params "networking"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'networking)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "sshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-key-name))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-access-details (:copier common-lisp:nil))
   (cert-key common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (expires-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (password common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (private-key common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or instance-access-protocol common-lisp:null))
   (instance-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (username common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-access-details 'make-instance-access-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-access-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "certKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cert-key)))
    (aws-sdk/generator/shape::to-query-params "expiresAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires-at)))
    (aws-sdk/generator/shape::to-query-params "ipAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password)))
    (aws-sdk/generator/shape::to-query-params "privateKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-key)))
    (aws-sdk/generator/shape::to-query-params "protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name)))
    (aws-sdk/generator/shape::to-query-params "username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:deftype instance-access-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-hardware (:copier common-lisp:nil))
   (cpu-count common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (disks common-lisp:nil :type (common-lisp:or disk-list common-lisp:null))
   (ram-size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:single-float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-hardware 'make-instance-hardware))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-hardware))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cpuCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cpu-count)))
    (aws-sdk/generator/shape::to-query-params "disks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'disks)))
    (aws-sdk/generator/shape::to-query-params "ramSizeInGb"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ram-size-in-gb))))))
(common-lisp:progn
 (common-lisp:deftype instance-list () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-metric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-networking (:copier common-lisp:nil))
   (monthly-transfer common-lisp:nil :type
    (common-lisp:or monthly-transfer common-lisp:null))
   (ports common-lisp:nil :type
    (common-lisp:or instance-port-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-networking 'make-instance-networking))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-networking))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "monthlyTransfer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'monthly-transfer)))
    (aws-sdk/generator/shape::to-query-params "ports"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ports))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-port-info (:copier common-lisp:nil))
   (from-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or network-protocol common-lisp:null))
   (access-from common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (access-type common-lisp:nil :type
    (common-lisp:or port-access-type common-lisp:null))
   (common-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (access-direction common-lisp:nil :type
    (common-lisp:or access-direction common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-port-info 'make-instance-port-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-port-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "fromPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-port)))
    (aws-sdk/generator/shape::to-query-params "toPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'to-port)))
    (aws-sdk/generator/shape::to-query-params "protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "accessFrom"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-from)))
    (aws-sdk/generator/shape::to-query-params "accessType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-type)))
    (aws-sdk/generator/shape::to-query-params "commonName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'common-name)))
    (aws-sdk/generator/shape::to-query-params "accessDirection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-direction))))))
(common-lisp:progn
 (common-lisp:deftype instance-port-info-list ()
   '(trivial-types:proper-list instance-port-info))
 (common-lisp:defun |make-instance-port-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-port-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-port-state (:copier common-lisp:nil))
   (from-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or network-protocol common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or port-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-port-state 'make-instance-port-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-port-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "fromPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-port)))
    (aws-sdk/generator/shape::to-query-params "toPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'to-port)))
    (aws-sdk/generator/shape::to-query-params "protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state))))))
(common-lisp:progn
 (common-lisp:deftype instance-port-state-list ()
   '(trivial-types:proper-list instance-port-state))
 (common-lisp:defun |make-instance-port-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-port-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-snapshot (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or instance-snapshot-state common-lisp:null))
   (progress common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (from-instance-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (from-instance-arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (from-blueprint-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (from-bundle-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-snapshot 'make-instance-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-snapshot))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "supportCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-code)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "resourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "progress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'progress)))
    (aws-sdk/generator/shape::to-query-params "fromInstanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-instance-name)))
    (aws-sdk/generator/shape::to-query-params "fromInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-instance-arn)))
    (aws-sdk/generator/shape::to-query-params "fromBlueprintId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-blueprint-id)))
    (aws-sdk/generator/shape::to-query-params "fromBundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-bundle-id)))
    (aws-sdk/generator/shape::to-query-params "sizeInGb"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-in-gb))))))
(common-lisp:progn
 (common-lisp:deftype instance-snapshot-list ()
   '(trivial-types:proper-list instance-snapshot))
 (common-lisp:defun |make-instance-snapshot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-snapshot))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-snapshot-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-state (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-state 'make-instance-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-input-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (docs common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tip common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'make-invalid-input-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-input-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "docs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'docs)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "tip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tip))))))
(common-lisp:deftype ip-address () 'common-lisp:string)
(common-lisp:deftype ip-v6address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (is-vpc-peered-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'is-vpc-peered-request 'make-is-vpc-peered-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          is-vpc-peered-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (is-vpc-peered-result (:copier common-lisp:nil))
   (is-peered common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'is-vpc-peered-result 'make-is-vpc-peered-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape is-vpc-peered-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "isPeered"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-peered))))))
(common-lisp:deftype iso-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (key-pair (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (fingerprint common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-pair 'make-key-pair))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-pair))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "supportCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-code)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "resourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "fingerprint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fingerprint))))))
(common-lisp:progn
 (common-lisp:deftype key-pair-list () '(trivial-types:proper-list key-pair))
 (common-lisp:defun |make-key-pair-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (metric-datapoint (:copier common-lisp:nil))
   (average common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (maximum common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (minimum common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (sample-count common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (sum common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or metric-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-datapoint 'make-metric-datapoint))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape metric-datapoint))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "average"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'average)))
    (aws-sdk/generator/shape::to-query-params "maximum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum)))
    (aws-sdk/generator/shape::to-query-params "minimum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minimum)))
    (aws-sdk/generator/shape::to-query-params "sampleCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-count)))
    (aws-sdk/generator/shape::to-query-params "sum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sum)))
    (aws-sdk/generator/shape::to-query-params "timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "unit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unit))))))
(common-lisp:progn
 (common-lisp:deftype metric-datapoint-list ()
   '(trivial-types:proper-list metric-datapoint))
 (common-lisp:defun |make-metric-datapoint-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-datapoint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-period () 'common-lisp:integer)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-statistic-list ()
   '(trivial-types:proper-list metric-statistic))
 (common-lisp:defun |make-metric-statistic-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-statistic))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (monthly-transfer (:copier common-lisp:nil))
   (gb-per-month-allocated common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'monthly-transfer 'make-monthly-transfer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape monthly-transfer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "gbPerMonthAllocated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gb-per-month-allocated))))))
(common-lisp:deftype network-protocol () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (docs common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tip common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "docs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'docs)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "tip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tip))))))
(common-lisp:progn
 (common-lisp:defstruct
     (open-instance-public-ports-request (:copier common-lisp:nil))
   (port-info
    (common-lisp:error
     #A((21) common-lisp:base-char . ":portinfo is required"))
    :type (common-lisp:or port-info common-lisp:null))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'open-instance-public-ports-request
                    'make-open-instance-public-ports-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          open-instance-public-ports-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "portInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port-info)))
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (open-instance-public-ports-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'open-instance-public-ports-result
                    'make-open-instance-public-ports-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          open-instance-public-ports-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (operation (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (is-terminal common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (operation-details common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (operation-type common-lisp:nil :type
    (common-lisp:or operation-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or operation-status common-lisp:null))
   (status-changed-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (error-details common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'operation 'make-operation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape operation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "resourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-name)))
    (aws-sdk/generator/shape::to-query-params "resourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "isTerminal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-terminal)))
    (aws-sdk/generator/shape::to-query-params "operationDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-details)))
    (aws-sdk/generator/shape::to-query-params "operationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-type)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "statusChangedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-changed-at)))
    (aws-sdk/generator/shape::to-query-params "errorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "errorDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-details))))))
(common-lisp:progn
 (common-lisp:defstruct (operation-failure-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (docs common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tip common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-failure-exception
                    'make-operation-failure-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-failure-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "docs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'docs)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "tip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tip))))))
(common-lisp:progn
 (common-lisp:deftype operation-list () '(trivial-types:proper-list operation))
 (common-lisp:defun |make-operation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list operation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype operation-status () 'common-lisp:string)
(common-lisp:deftype operation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (peer-vpc-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'peer-vpc-request 'make-peer-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape peer-vpc-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (peer-vpc-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'peer-vpc-result 'make-peer-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape peer-vpc-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:deftype port () 'common-lisp:integer)
(common-lisp:deftype port-access-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (port-info (:copier common-lisp:nil))
   (from-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or network-protocol common-lisp:null)))
 (common-lisp:export (common-lisp:list 'port-info 'make-port-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape port-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "fromPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-port)))
    (aws-sdk/generator/shape::to-query-params "toPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'to-port)))
    (aws-sdk/generator/shape::to-query-params "protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol))))))
(common-lisp:progn
 (common-lisp:deftype port-info-list () '(trivial-types:proper-list port-info))
 (common-lisp:defun |make-port-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list port-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype port-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-instance-public-ports-request (:copier common-lisp:nil))
   (port-infos
    (common-lisp:error
     #A((22) common-lisp:base-char . ":portinfos is required"))
    :type (common-lisp:or port-info-list common-lisp:null))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-instance-public-ports-request
                    'make-put-instance-public-ports-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-instance-public-ports-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "portInfos"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port-infos)))
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-instance-public-ports-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-instance-public-ports-result
                    'make-put-instance-public-ports-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-instance-public-ports-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (reboot-instance-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-instance-request 'make-reboot-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reboot-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct (reboot-instance-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-instance-result 'make-reboot-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reboot-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (region (:copier common-lisp:nil))
   (continent-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or region-name common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zone-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'region 'make-region))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape region))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "continentCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continent-code)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "displayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "availabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:deftype region-list () '(trivial-types:proper-list region))
 (common-lisp:defun |make-region-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list region))
   aws-sdk/generator/shape::members))
(common-lisp:deftype region-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (release-static-ip-request (:copier common-lisp:nil))
   (static-ip-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":staticipname is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'release-static-ip-request
                    'make-release-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          release-static-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "staticIpName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'static-ip-name))))))
(common-lisp:progn
 (common-lisp:defstruct (release-static-ip-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'release-static-ip-result 'make-release-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          release-static-ip-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-location (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (region-name common-lisp:nil :type
    (common-lisp:or region-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-location 'make-resource-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "availabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "regionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region-name))))))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (service-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (docs common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tip common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-exception 'make-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "docs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'docs)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "tip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tip))))))
(common-lisp:progn
 (common-lisp:defstruct (start-instance-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-instance-request 'make-start-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct (start-instance-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-instance-result 'make-start-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (static-ip (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (attached-to common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (is-attached common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'static-ip 'make-static-ip))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape static-ip))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "supportCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-code)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "resourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ipAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "attachedTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-to)))
    (aws-sdk/generator/shape::to-query-params "isAttached"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-attached))))))
(common-lisp:progn
 (common-lisp:deftype static-ip-list () '(trivial-types:proper-list static-ip))
 (common-lisp:defun |make-static-ip-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list static-ip))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (stop-instance-request (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-instance-request 'make-stop-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-instance-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-instance-result 'make-stop-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:deftype string-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (unauthenticated-exception (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (docs common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tip common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unauthenticated-exception
                    'make-unauthenticated-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unauthenticated-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "docs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'docs)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "tip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tip))))))
(common-lisp:progn
 (common-lisp:defstruct (unpeer-vpc-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'unpeer-vpc-request 'make-unpeer-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape unpeer-vpc-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (unpeer-vpc-result (:copier common-lisp:nil))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unpeer-vpc-result 'make-unpeer-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape unpeer-vpc-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation))))))
(common-lisp:progn
 (common-lisp:defstruct (update-domain-entry-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or domain-name common-lisp:null))
   (domain-entry
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domainentry is required"))
    :type (common-lisp:or domain-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-entry-request
                    'make-update-domain-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-domain-entry-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "domainEntry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-entry))))))
(common-lisp:progn
 (common-lisp:defstruct (update-domain-entry-result (:copier common-lisp:nil))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-entry-result
                    'make-update-domain-entry-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-domain-entry-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun allocate-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-allocate-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AllocateStaticIp")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AllocateStaticIpResult" common-lisp:nil)))
 (common-lisp:export 'allocate-static-ip))
(common-lisp:progn
 (common-lisp:defun attach-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name instance-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AttachStaticIp")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachStaticIpResult" common-lisp:nil)))
 (common-lisp:export 'attach-static-ip))
(common-lisp:progn
 (common-lisp:defun close-instance-public-ports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key port-info instance-name)
   (common-lisp:declare (common-lisp:ignorable port-info instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-close-instance-public-ports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CloseInstancePublicPorts")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CloseInstancePublicPortsResult" common-lisp:nil)))
 (common-lisp:export 'close-instance-public-ports))
(common-lisp:progn
 (common-lisp:defun create-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDomain")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDomainResult" common-lisp:nil)))
 (common-lisp:export 'create-domain))
(common-lisp:progn
 (common-lisp:defun create-domain-entry
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-entry)
   (common-lisp:declare (common-lisp:ignorable domain-name domain-entry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-entry-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDomainEntry")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDomainEntryResult" common-lisp:nil)))
 (common-lisp:export 'create-domain-entry))
(common-lisp:progn
 (common-lisp:defun create-instance-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-snapshot-name instance-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-snapshot-name instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-instance-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateInstanceSnapshot")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateInstanceSnapshotResult" common-lisp:nil)))
 (common-lisp:export 'create-instance-snapshot))
(common-lisp:progn
 (common-lisp:defun create-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-names availability-zone
                     custom-image-name blueprint-id bundle-id user-data
                     key-pair-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-names availability-zone custom-image-name
     blueprint-id bundle-id user-data key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateInstances")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateInstancesResult" common-lisp:nil)))
 (common-lisp:export 'create-instances))
(common-lisp:progn
 (common-lisp:defun create-instances-from-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-names availability-zone
                     instance-snapshot-name bundle-id user-data key-pair-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-names availability-zone
     instance-snapshot-name bundle-id user-data key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-instances-from-snapshot-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateInstancesFromSnapshot")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateInstancesFromSnapshotResult" common-lisp:nil)))
 (common-lisp:export 'create-instances-from-snapshot))
(common-lisp:progn
 (common-lisp:defun create-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name)
   (common-lisp:declare (common-lisp:ignorable key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateKeyPair")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateKeyPairResult" common-lisp:nil)))
 (common-lisp:export 'create-key-pair))
(common-lisp:progn
 (common-lisp:defun delete-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDomain")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDomainResult" common-lisp:nil)))
 (common-lisp:export 'delete-domain))
(common-lisp:progn
 (common-lisp:defun delete-domain-entry
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-entry)
   (common-lisp:declare (common-lisp:ignorable domain-name domain-entry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-entry-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDomainEntry")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDomainEntryResult" common-lisp:nil)))
 (common-lisp:export 'delete-domain-entry))
(common-lisp:progn
 (common-lisp:defun delete-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteInstance")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteInstanceResult" common-lisp:nil)))
 (common-lisp:export 'delete-instance))
(common-lisp:progn
 (common-lisp:defun delete-instance-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-snapshot-name)
   (common-lisp:declare (common-lisp:ignorable instance-snapshot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-instance-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteInstanceSnapshot")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteInstanceSnapshotResult" common-lisp:nil)))
 (common-lisp:export 'delete-instance-snapshot))
(common-lisp:progn
 (common-lisp:defun delete-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name)
   (common-lisp:declare (common-lisp:ignorable key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteKeyPair")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteKeyPairResult" common-lisp:nil)))
 (common-lisp:export 'delete-key-pair))
(common-lisp:progn
 (common-lisp:defun detach-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DetachStaticIp")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachStaticIpResult" common-lisp:nil)))
 (common-lisp:export 'detach-static-ip))
(common-lisp:progn
 (common-lisp:defun download-default-key-pair ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "lightsail")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DownloadDefaultKeyPair"))
    "DownloadDefaultKeyPairResult" common-lisp:nil))
 (common-lisp:export 'download-default-key-pair))
(common-lisp:progn
 (common-lisp:defun get-active-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-active-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetActiveNames")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetActiveNamesResult" common-lisp:nil)))
 (common-lisp:export 'get-active-names))
(common-lisp:progn
 (common-lisp:defun get-blueprints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-inactive page-token)
   (common-lisp:declare (common-lisp:ignorable include-inactive page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-blueprints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetBlueprints")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBlueprintsResult" common-lisp:nil)))
 (common-lisp:export 'get-blueprints))
(common-lisp:progn
 (common-lisp:defun get-bundles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-inactive page-token)
   (common-lisp:declare (common-lisp:ignorable include-inactive page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bundles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetBundles")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBundlesResult" common-lisp:nil)))
 (common-lisp:export 'get-bundles))
(common-lisp:progn
 (common-lisp:defun get-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDomain")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDomainResult" common-lisp:nil)))
 (common-lisp:export 'get-domain))
(common-lisp:progn
 (common-lisp:defun get-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domains-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDomains")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDomainsResult" common-lisp:nil)))
 (common-lisp:export 'get-domains))
(common-lisp:progn
 (common-lisp:defun get-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstance")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstanceResult" common-lisp:nil)))
 (common-lisp:export 'get-instance))
(common-lisp:progn
 (common-lisp:defun get-instance-access-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name protocol)
   (common-lisp:declare (common-lisp:ignorable instance-name protocol))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-instance-access-details-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstanceAccessDetails")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstanceAccessDetailsResult" common-lisp:nil)))
 (common-lisp:export 'get-instance-access-details))
(common-lisp:progn
 (common-lisp:defun get-instance-metric-data
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name metric-name period
                     start-time end-time unit statistics)
   (common-lisp:declare
    (common-lisp:ignorable instance-name metric-name period start-time end-time
     unit statistics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-metric-data-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstanceMetricData")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstanceMetricDataResult" common-lisp:nil)))
 (common-lisp:export 'get-instance-metric-data))
(common-lisp:progn
 (common-lisp:defun get-instance-port-states
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-port-states-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstancePortStates")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstancePortStatesResult" common-lisp:nil)))
 (common-lisp:export 'get-instance-port-states))
(common-lisp:progn
 (common-lisp:defun get-instance-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-snapshot-name)
   (common-lisp:declare (common-lisp:ignorable instance-snapshot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstanceSnapshot")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstanceSnapshotResult" common-lisp:nil)))
 (common-lisp:export 'get-instance-snapshot))
(common-lisp:progn
 (common-lisp:defun get-instance-snapshots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-snapshots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstanceSnapshots")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstanceSnapshotsResult" common-lisp:nil)))
 (common-lisp:export 'get-instance-snapshots))
(common-lisp:progn
 (common-lisp:defun get-instance-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-state-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstanceState")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstanceStateResult" common-lisp:nil)))
 (common-lisp:export 'get-instance-state))
(common-lisp:progn
 (common-lisp:defun get-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstances")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstancesResult" common-lisp:nil)))
 (common-lisp:export 'get-instances))
(common-lisp:progn
 (common-lisp:defun get-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name)
   (common-lisp:declare (common-lisp:ignorable key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetKeyPair")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetKeyPairResult" common-lisp:nil)))
 (common-lisp:export 'get-key-pair))
(common-lisp:progn
 (common-lisp:defun get-key-pairs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-key-pairs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetKeyPairs")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetKeyPairsResult" common-lisp:nil)))
 (common-lisp:export 'get-key-pairs))
(common-lisp:progn
 (common-lisp:defun get-operation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key operation-id)
   (common-lisp:declare (common-lisp:ignorable operation-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-operation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetOperation")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetOperationResult" common-lisp:nil)))
 (common-lisp:export 'get-operation))
(common-lisp:progn
 (common-lisp:defun get-operations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-operations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetOperations")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetOperationsResult" common-lisp:nil)))
 (common-lisp:export 'get-operations))
(common-lisp:progn
 (common-lisp:defun get-operations-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name page-token)
   (common-lisp:declare (common-lisp:ignorable resource-name page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-operations-for-resource-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetOperationsForResource")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetOperationsForResourceResult" common-lisp:nil)))
 (common-lisp:export 'get-operations-for-resource))
(common-lisp:progn
 (common-lisp:defun get-regions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-availability-zones)
   (common-lisp:declare (common-lisp:ignorable include-availability-zones))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-regions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRegions")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRegionsResult" common-lisp:nil)))
 (common-lisp:export 'get-regions))
(common-lisp:progn
 (common-lisp:defun get-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetStaticIp")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetStaticIpResult" common-lisp:nil)))
 (common-lisp:export 'get-static-ip))
(common-lisp:progn
 (common-lisp:defun get-static-ips
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-static-ips-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetStaticIps")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetStaticIpsResult" common-lisp:nil)))
 (common-lisp:export 'get-static-ips))
(common-lisp:progn
 (common-lisp:defun import-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name public-key-base64)
   (common-lisp:declare
    (common-lisp:ignorable key-pair-name public-key-base64))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ImportKeyPair")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ImportKeyPairResult" common-lisp:nil)))
 (common-lisp:export 'import-key-pair))
(common-lisp:progn
 (common-lisp:defun is-vpc-peered ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "lightsail")
                             :method :post :params
                             (common-lisp:cons "Action" "IsVpcPeered"))
    "IsVpcPeeredResult" common-lisp:nil))
 (common-lisp:export 'is-vpc-peered))
(common-lisp:progn
 (common-lisp:defun open-instance-public-ports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key port-info instance-name)
   (common-lisp:declare (common-lisp:ignorable port-info instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-open-instance-public-ports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"OpenInstancePublicPorts")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "OpenInstancePublicPortsResult" common-lisp:nil)))
 (common-lisp:export 'open-instance-public-ports))
(common-lisp:progn
 (common-lisp:defun peer-vpc ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "lightsail")
                             :method :post :params
                             (common-lisp:cons "Action" "PeerVpc"))
    "PeerVpcResult" common-lisp:nil))
 (common-lisp:export 'peer-vpc))
(common-lisp:progn
 (common-lisp:defun put-instance-public-ports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key port-infos instance-name)
   (common-lisp:declare (common-lisp:ignorable port-infos instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-instance-public-ports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutInstancePublicPorts")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutInstancePublicPortsResult" common-lisp:nil)))
 (common-lisp:export 'put-instance-public-ports))
(common-lisp:progn
 (common-lisp:defun reboot-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RebootInstance")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RebootInstanceResult" common-lisp:nil)))
 (common-lisp:export 'reboot-instance))
(common-lisp:progn
 (common-lisp:defun release-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-release-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ReleaseStaticIp")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ReleaseStaticIpResult" common-lisp:nil)))
 (common-lisp:export 'release-static-ip))
(common-lisp:progn
 (common-lisp:defun start-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartInstance")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartInstanceResult" common-lisp:nil)))
 (common-lisp:export 'start-instance))
(common-lisp:progn
 (common-lisp:defun stop-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopInstance")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopInstanceResult" common-lisp:nil)))
 (common-lisp:export 'stop-instance))
(common-lisp:progn
 (common-lisp:defun unpeer-vpc ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "lightsail")
                             :method :post :params
                             (common-lisp:cons "Action" "UnpeerVpc"))
    "UnpeerVpcResult" common-lisp:nil))
 (common-lisp:export 'unpeer-vpc))
(common-lisp:progn
 (common-lisp:defun update-domain-entry
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-entry)
   (common-lisp:declare (common-lisp:ignorable domain-name domain-entry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-entry-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "lightsail")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDomainEntry")
                                  ("Version" ,@"2016-11-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDomainEntryResult" common-lisp:nil)))
 (common-lisp:export 'update-domain-entry))