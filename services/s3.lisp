;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/s3
  (:use)
  (:nicknames #:aws/s3)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/s3)

(common-lisp:deftype abort-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (abort-incomplete-multipart-upload (:copier common-lisp:nil))
   (days-after-initiation common-lisp:nil :type
    (common-lisp:or days-after-initiation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-incomplete-multipart-upload
                    'make-abort-incomplete-multipart-upload))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          abort-incomplete-multipart-upload))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DaysAfterInitiation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'days-after-initiation))))))
(common-lisp:progn
 (common-lisp:defstruct
     (abort-multipart-upload-output (:copier common-lisp:nil))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-multipart-upload-output
                    'make-abort-multipart-upload-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          abort-multipart-upload-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct
     (abort-multipart-upload-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":upload-id is required"))
    :type (common-lisp:or multipart-upload-id common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-multipart-upload-request
                    'make-abort-multipart-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          abort-multipart-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:deftype abort-rule-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (accelerate-configuration (:copier common-lisp:nil))
   (status common-lisp:nil :type
    (common-lisp:or bucket-accelerate-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accelerate-configuration 'make-accelerate-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          accelerate-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype accept-ranges () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (access-control-policy (:copier common-lisp:nil))
   (grants common-lisp:nil :type (common-lisp:or grants common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-control-policy 'make-access-control-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-control-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Grants"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grants)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner))))))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:deftype allowed-header () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype allowed-headers ()
   '(trivial-types:proper-list allowed-header))
 (common-lisp:defun |make-allowed-headers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list allowed-header))
   aws-sdk/generator/shape::members))
(common-lisp:deftype allowed-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype allowed-methods ()
   '(trivial-types:proper-list allowed-method))
 (common-lisp:defun |make-allowed-methods|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list allowed-method))
   aws-sdk/generator/shape::members))
(common-lisp:deftype allowed-origin () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype allowed-origins ()
   '(trivial-types:proper-list allowed-origin))
 (common-lisp:defun |make-allowed-origins|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list allowed-origin))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (analytics-and-operator (:copier common-lisp:nil))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analytics-and-operator 'make-analytics-and-operator))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          analytics-and-operator))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (analytics-configuration (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or analytics-id common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or analytics-filter common-lisp:null))
   (storage-class-analysis
    (common-lisp:error
     #A((35) common-lisp:base-char . ":storage-class-analysis is required"))
    :type (common-lisp:or storage-class-analysis common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analytics-configuration 'make-analytics-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          analytics-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "StorageClassAnalysis"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class-analysis))))))
(common-lisp:progn
 (common-lisp:deftype analytics-configuration-list ()
   '(trivial-types:proper-list analytics-configuration))
 (common-lisp:defun |make-analytics-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list analytics-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (analytics-export-destination (:copier common-lisp:nil))
   (s3bucket-destination
    (common-lisp:error
     #A((33) common-lisp:base-char . ":s3bucket-destination is required"))
    :type (common-lisp:or analytics-s3bucket-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analytics-export-destination
                    'make-analytics-export-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          analytics-export-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3BucketDestination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket-destination))))))
(common-lisp:progn
 (common-lisp:defstruct (analytics-filter (:copier common-lisp:nil))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (tag common-lisp:nil :type (common-lisp:or tag common-lisp:null))
   (and common-lisp:nil :type
    (common-lisp:or analytics-and-operator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analytics-filter 'make-analytics-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape analytics-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Tag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag)))
    (aws-sdk/generator/shape::to-query-params "And"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'and))))))
(common-lisp:deftype analytics-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (analytics-s3bucket-destination (:copier common-lisp:nil))
   (format
    (common-lisp:error #A((19) common-lisp:base-char . ":format is required"))
    :type (common-lisp:or analytics-s3export-file-format common-lisp:null))
   (bucket-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analytics-s3bucket-destination
                    'make-analytics-s3bucket-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          analytics-s3bucket-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "BucketAccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-account-id)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix))))))
(common-lisp:deftype analytics-s3export-file-format () 'common-lisp:string)
(common-lisp:deftype body ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct (bucket (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bucket 'make-bucket))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape bucket))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:deftype bucket-accelerate-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (bucket-already-exists (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'bucket-already-exists 'make-bucket-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bucket-already-exists))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (bucket-already-owned-by-you (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'bucket-already-owned-by-you
                    'make-bucket-already-owned-by-you))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bucket-already-owned-by-you))
   (common-lisp:append)))
(common-lisp:deftype bucket-canned-acl () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (bucket-lifecycle-configuration (:copier common-lisp:nil))
   (rules
    (common-lisp:error #A((18) common-lisp:base-char . ":rules is required"))
    :type (common-lisp:or lifecycle-rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bucket-lifecycle-configuration
                    'make-bucket-lifecycle-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bucket-lifecycle-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:deftype bucket-location-constraint () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (bucket-logging-status (:copier common-lisp:nil))
   (logging-enabled common-lisp:nil :type
    (common-lisp:or logging-enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bucket-logging-status 'make-bucket-logging-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bucket-logging-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoggingEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-enabled))))))
(common-lisp:deftype bucket-logs-permission () 'common-lisp:string)
(common-lisp:deftype bucket-name () 'common-lisp:string)
(common-lisp:deftype bucket-versioning-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype buckets () '(trivial-types:proper-list bucket))
 (common-lisp:defun |make-buckets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bucket))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (corsconfiguration (:copier common-lisp:nil))
   (corsrules
    (common-lisp:error
     #A((22) common-lisp:base-char . ":corsrules is required"))
    :type (common-lisp:or corsrules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'corsconfiguration 'make-corsconfiguration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape corsconfiguration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CORSRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'corsrules))))))
(common-lisp:progn
 (common-lisp:defstruct (corsrule (:copier common-lisp:nil))
   (allowed-headers common-lisp:nil :type
    (common-lisp:or allowed-headers common-lisp:null))
   (allowed-methods
    (common-lisp:error
     #A((28) common-lisp:base-char . ":allowed-methods is required"))
    :type (common-lisp:or allowed-methods common-lisp:null))
   (allowed-origins
    (common-lisp:error
     #A((28) common-lisp:base-char . ":allowed-origins is required"))
    :type (common-lisp:or allowed-origins common-lisp:null))
   (expose-headers common-lisp:nil :type
    (common-lisp:or expose-headers common-lisp:null))
   (max-age-seconds common-lisp:nil :type
    (common-lisp:or max-age-seconds common-lisp:null)))
 (common-lisp:export (common-lisp:list 'corsrule 'make-corsrule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape corsrule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AllowedHeaders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-headers)))
    (aws-sdk/generator/shape::to-query-params "AllowedMethods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-methods)))
    (aws-sdk/generator/shape::to-query-params "AllowedOrigins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-origins)))
    (aws-sdk/generator/shape::to-query-params "ExposeHeaders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expose-headers)))
    (aws-sdk/generator/shape::to-query-params "MaxAgeSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-age-seconds))))))
(common-lisp:progn
 (common-lisp:deftype corsrules () '(trivial-types:proper-list corsrule))
 (common-lisp:defun |make-corsrules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list corsrule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cache-control () 'common-lisp:string)
(common-lisp:deftype cloud-function () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-function-configuration (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or notification-id common-lisp:null))
   (event common-lisp:nil :type (common-lisp:or event common-lisp:null))
   (events common-lisp:nil :type (common-lisp:or event-list common-lisp:null))
   (cloud-function common-lisp:nil :type
    (common-lisp:or cloud-function common-lisp:null))
   (invocation-role common-lisp:nil :type
    (common-lisp:or cloud-function-invocation-role common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-function-configuration
                    'make-cloud-function-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-function-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "CloudFunction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-function)))
    (aws-sdk/generator/shape::to-query-params "InvocationRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invocation-role))))))
(common-lisp:deftype cloud-function-invocation-role () 'common-lisp:string)
(common-lisp:deftype code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (common-prefix (:copier common-lisp:nil))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null)))
 (common-lisp:export (common-lisp:list 'common-prefix 'make-common-prefix))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape common-prefix))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix))))))
(common-lisp:progn
 (common-lisp:deftype common-prefix-list ()
   '(trivial-types:proper-list common-prefix))
 (common-lisp:defun |make-common-prefix-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-prefix))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-multipart-upload-output (:copier common-lisp:nil))
   (location common-lisp:nil :type (common-lisp:or location common-lisp:null))
   (bucket common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or expiration common-lisp:null))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-multipart-upload-output
                    'make-complete-multipart-upload-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-multipart-upload-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-multipart-upload-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (multipart-upload common-lisp:nil :type
    (common-lisp:or completed-multipart-upload common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":upload-id is required"))
    :type (common-lisp:or multipart-upload-id common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-multipart-upload-request
                    'make-complete-multipart-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-multipart-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "MultipartUpload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'multipart-upload)))
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (completed-multipart-upload (:copier common-lisp:nil))
   (parts common-lisp:nil :type
    (common-lisp:or completed-part-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'completed-multipart-upload
                    'make-completed-multipart-upload))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          completed-multipart-upload))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parts))))))
(common-lisp:progn
 (common-lisp:defstruct (completed-part (:copier common-lisp:nil))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (part-number common-lisp:nil :type
    (common-lisp:or part-number common-lisp:null)))
 (common-lisp:export (common-lisp:list 'completed-part 'make-completed-part))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape completed-part))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "PartNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number))))))
(common-lisp:progn
 (common-lisp:deftype completed-part-list ()
   '(trivial-types:proper-list completed-part))
 (common-lisp:defun |make-completed-part-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list completed-part))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (condition (:copier common-lisp:nil))
   (http-error-code-returned-equals common-lisp:nil :type
    (common-lisp:or http-error-code-returned-equals common-lisp:null))
   (key-prefix-equals common-lisp:nil :type
    (common-lisp:or key-prefix-equals common-lisp:null)))
 (common-lisp:export (common-lisp:list 'condition 'make-condition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape condition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HttpErrorCodeReturnedEquals"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-error-code-returned-equals)))
    (aws-sdk/generator/shape::to-query-params "KeyPrefixEquals"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-prefix-equals))))))
(common-lisp:deftype content-disposition () 'common-lisp:string)
(common-lisp:deftype content-encoding () 'common-lisp:string)
(common-lisp:deftype content-language () 'common-lisp:string)
(common-lisp:deftype content-length () 'common-lisp:integer)
(common-lisp:deftype content-md5 () 'common-lisp:string)
(common-lisp:deftype content-range () 'common-lisp:string)
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (copy-object-output (:copier common-lisp:nil))
   (copy-object-result common-lisp:nil :type
    (common-lisp:or copy-object-result common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or expiration common-lisp:null))
   (copy-source-version-id common-lisp:nil :type
    (common-lisp:or copy-source-version-id common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'copy-object-output 'make-copy-object-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape copy-object-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CopyObjectResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-object-result)))
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "CopySourceVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-version-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-object-request (:copier common-lisp:nil))
   (acl common-lisp:nil :type
    (common-lisp:or object-canned-acl common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (cache-control common-lisp:nil :type
    (common-lisp:or cache-control common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or content-disposition common-lisp:null))
   (content-encoding common-lisp:nil :type
    (common-lisp:or content-encoding common-lisp:null))
   (content-language common-lisp:nil :type
    (common-lisp:or content-language common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or content-type common-lisp:null))
   (copy-source
    (common-lisp:error
     #A((24) common-lisp:base-char . ":copy-source is required"))
    :type (common-lisp:or copy-source common-lisp:null))
   (copy-source-if-match common-lisp:nil :type
    (common-lisp:or copy-source-if-match common-lisp:null))
   (copy-source-if-modified-since common-lisp:nil :type
    (common-lisp:or copy-source-if-modified-since common-lisp:null))
   (copy-source-if-none-match common-lisp:nil :type
    (common-lisp:or copy-source-if-none-match common-lisp:null))
   (copy-source-if-unmodified-since common-lisp:nil :type
    (common-lisp:or copy-source-if-unmodified-since common-lisp:null))
   (expires common-lisp:nil :type (common-lisp:or expires common-lisp:null))
   (grant-full-control common-lisp:nil :type
    (common-lisp:or grant-full-control common-lisp:null))
   (grant-read common-lisp:nil :type
    (common-lisp:or grant-read common-lisp:null))
   (grant-read-acp common-lisp:nil :type
    (common-lisp:or grant-read-acp common-lisp:null))
   (grant-write-acp common-lisp:nil :type
    (common-lisp:or grant-write-acp common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (metadata common-lisp:nil :type (common-lisp:or metadata common-lisp:null))
   (metadata-directive common-lisp:nil :type
    (common-lisp:or metadata-directive common-lisp:null))
   (tagging-directive common-lisp:nil :type
    (common-lisp:or tagging-directive common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (website-redirect-location common-lisp:nil :type
    (common-lisp:or website-redirect-location common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key common-lisp:nil :type
    (common-lisp:or ssecustomer-key common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (copy-source-ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or copy-source-ssecustomer-algorithm common-lisp:null))
   (copy-source-ssecustomer-key common-lisp:nil :type
    (common-lisp:or copy-source-ssecustomer-key common-lisp:null))
   (copy-source-ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or copy-source-ssecustomer-key-md5 common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null))
   (tagging common-lisp:nil :type
    (common-lisp:or tagging-header common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'copy-object-request 'make-copy-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape copy-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acl)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "CacheControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-control)))
    (aws-sdk/generator/shape::to-query-params "ContentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-disposition)))
    (aws-sdk/generator/shape::to-query-params "ContentEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-encoding)))
    (aws-sdk/generator/shape::to-query-params "ContentLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-language)))
    (aws-sdk/generator/shape::to-query-params "ContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "CopySource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-match)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfModifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-modified-since)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfNoneMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-none-match)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfUnmodifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-unmodified-since)))
    (aws-sdk/generator/shape::to-query-params "Expires"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires)))
    (aws-sdk/generator/shape::to-query-params "GrantFullControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-full-control)))
    (aws-sdk/generator/shape::to-query-params "GrantRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read)))
    (aws-sdk/generator/shape::to-query-params "GrantReadACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read-acp)))
    (aws-sdk/generator/shape::to-query-params "GrantWriteACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write-acp)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "MetadataDirective"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata-directive)))
    (aws-sdk/generator/shape::to-query-params "TaggingDirective"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tagging-directive)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "WebsiteRedirectLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'website-redirect-location)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "CopySourceSSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "CopySourceSSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "CopySourceSSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer)))
    (aws-sdk/generator/shape::to-query-params "Tagging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tagging))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-object-result (:copier common-lisp:nil))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'copy-object-result 'make-copy-object-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape copy-object-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-part-result (:copier common-lisp:nil))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'copy-part-result 'make-copy-part-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape copy-part-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified))))))
(common-lisp:deftype copy-source () 'common-lisp:string)
(common-lisp:deftype copy-source-if-match () 'common-lisp:string)
(common-lisp:deftype copy-source-if-modified-since () 'common-lisp:string)
(common-lisp:deftype copy-source-if-none-match () 'common-lisp:string)
(common-lisp:deftype copy-source-if-unmodified-since () 'common-lisp:string)
(common-lisp:deftype copy-source-range () 'common-lisp:string)
(common-lisp:deftype copy-source-ssecustomer-algorithm () 'common-lisp:string)
(common-lisp:deftype copy-source-ssecustomer-key () 'common-lisp:string)
(common-lisp:deftype copy-source-ssecustomer-key-md5 () 'common-lisp:string)
(common-lisp:deftype copy-source-version-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-bucket-configuration (:copier common-lisp:nil))
   (location-constraint common-lisp:nil :type
    (common-lisp:or bucket-location-constraint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-bucket-configuration
                    'make-create-bucket-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-bucket-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocationConstraint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location-constraint))))))
(common-lisp:progn
 (common-lisp:defstruct (create-bucket-output (:copier common-lisp:nil))
   (location common-lisp:nil :type (common-lisp:or location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-bucket-output 'make-create-bucket-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-bucket-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location))))))
(common-lisp:progn
 (common-lisp:defstruct (create-bucket-request (:copier common-lisp:nil))
   (acl common-lisp:nil :type
    (common-lisp:or bucket-canned-acl common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (create-bucket-configuration common-lisp:nil :type
    (common-lisp:or create-bucket-configuration common-lisp:null))
   (grant-full-control common-lisp:nil :type
    (common-lisp:or grant-full-control common-lisp:null))
   (grant-read common-lisp:nil :type
    (common-lisp:or grant-read common-lisp:null))
   (grant-read-acp common-lisp:nil :type
    (common-lisp:or grant-read-acp common-lisp:null))
   (grant-write common-lisp:nil :type
    (common-lisp:or grant-write common-lisp:null))
   (grant-write-acp common-lisp:nil :type
    (common-lisp:or grant-write-acp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-bucket-request 'make-create-bucket-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-bucket-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acl)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "CreateBucketConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-bucket-configuration)))
    (aws-sdk/generator/shape::to-query-params "GrantFullControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-full-control)))
    (aws-sdk/generator/shape::to-query-params "GrantRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read)))
    (aws-sdk/generator/shape::to-query-params "GrantReadACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read-acp)))
    (aws-sdk/generator/shape::to-query-params "GrantWrite"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write)))
    (aws-sdk/generator/shape::to-query-params "GrantWriteACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write-acp))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-multipart-upload-output (:copier common-lisp:nil))
   (abort-date common-lisp:nil :type
    (common-lisp:or abort-date common-lisp:null))
   (abort-rule-id common-lisp:nil :type
    (common-lisp:or abort-rule-id common-lisp:null))
   (bucket common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (upload-id common-lisp:nil :type
    (common-lisp:or multipart-upload-id common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-multipart-upload-output
                    'make-create-multipart-upload-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-multipart-upload-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AbortDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-date)))
    (aws-sdk/generator/shape::to-query-params "AbortRuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-rule-id)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-multipart-upload-request (:copier common-lisp:nil))
   (acl common-lisp:nil :type
    (common-lisp:or object-canned-acl common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (cache-control common-lisp:nil :type
    (common-lisp:or cache-control common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or content-disposition common-lisp:null))
   (content-encoding common-lisp:nil :type
    (common-lisp:or content-encoding common-lisp:null))
   (content-language common-lisp:nil :type
    (common-lisp:or content-language common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or content-type common-lisp:null))
   (expires common-lisp:nil :type (common-lisp:or expires common-lisp:null))
   (grant-full-control common-lisp:nil :type
    (common-lisp:or grant-full-control common-lisp:null))
   (grant-read common-lisp:nil :type
    (common-lisp:or grant-read common-lisp:null))
   (grant-read-acp common-lisp:nil :type
    (common-lisp:or grant-read-acp common-lisp:null))
   (grant-write-acp common-lisp:nil :type
    (common-lisp:or grant-write-acp common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (metadata common-lisp:nil :type (common-lisp:or metadata common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (website-redirect-location common-lisp:nil :type
    (common-lisp:or website-redirect-location common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key common-lisp:nil :type
    (common-lisp:or ssecustomer-key common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null))
   (tagging common-lisp:nil :type
    (common-lisp:or tagging-header common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-multipart-upload-request
                    'make-create-multipart-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-multipart-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acl)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "CacheControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-control)))
    (aws-sdk/generator/shape::to-query-params "ContentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-disposition)))
    (aws-sdk/generator/shape::to-query-params "ContentEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-encoding)))
    (aws-sdk/generator/shape::to-query-params "ContentLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-language)))
    (aws-sdk/generator/shape::to-query-params "ContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "Expires"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires)))
    (aws-sdk/generator/shape::to-query-params "GrantFullControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-full-control)))
    (aws-sdk/generator/shape::to-query-params "GrantRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read)))
    (aws-sdk/generator/shape::to-query-params "GrantReadACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read-acp)))
    (aws-sdk/generator/shape::to-query-params "GrantWriteACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write-acp)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "WebsiteRedirectLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'website-redirect-location)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer)))
    (aws-sdk/generator/shape::to-query-params "Tagging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tagging))))))
(common-lisp:deftype creation-date () 'common-lisp:string)
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:deftype days () 'common-lisp:integer)
(common-lisp:deftype days-after-initiation () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (delete (:copier common-lisp:nil))
   (objects
    (common-lisp:error #A((20) common-lisp:base-char . ":objects is required"))
    :type (common-lisp:or object-identifier-list common-lisp:null))
   (quiet common-lisp:nil :type (common-lisp:or quiet common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete 'make-delete))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Objects"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'objects)))
    (aws-sdk/generator/shape::to-query-params "Quiet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quiet))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-analytics-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or analytics-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-analytics-configuration-request
                    'make-delete-bucket-analytics-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-analytics-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-bucket-cors-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-cors-request
                    'make-delete-bucket-cors-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-cors-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-inventory-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or inventory-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-inventory-configuration-request
                    'make-delete-bucket-inventory-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-inventory-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-lifecycle-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-lifecycle-request
                    'make-delete-bucket-lifecycle-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-lifecycle-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-metrics-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or metrics-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-metrics-configuration-request
                    'make-delete-bucket-metrics-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-metrics-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-policy-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-policy-request
                    'make-delete-bucket-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-replication-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-replication-request
                    'make-delete-bucket-replication-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-replication-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-bucket-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-request 'make-delete-bucket-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-tagging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-tagging-request
                    'make-delete-bucket-tagging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-tagging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bucket-website-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bucket-website-request
                    'make-delete-bucket-website-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bucket-website-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:deftype delete-marker () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (delete-marker-entry (:copier common-lisp:nil))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (is-latest common-lisp:nil :type
    (common-lisp:or is-latest common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-marker-entry 'make-delete-marker-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-marker-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "IsLatest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-latest)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified))))))
(common-lisp:deftype delete-marker-version-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype delete-markers ()
   '(trivial-types:proper-list delete-marker-entry))
 (common-lisp:defun |make-delete-markers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list delete-marker-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-object-output (:copier common-lisp:nil))
   (delete-marker common-lisp:nil :type
    (common-lisp:or delete-marker common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-object-output 'make-delete-object-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-object-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeleteMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-marker)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-object-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (mfa common-lisp:nil :type (common-lisp:or mfa common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-object-request 'make-delete-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "MFA"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfa)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-object-tagging-output (:copier common-lisp:nil))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-object-tagging-output
                    'make-delete-object-tagging-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-object-tagging-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-object-tagging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-object-tagging-request
                    'make-delete-object-tagging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-object-tagging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-objects-output (:copier common-lisp:nil))
   (deleted common-lisp:nil :type
    (common-lisp:or deleted-objects common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null))
   (errors common-lisp:nil :type (common-lisp:or errors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-objects-output 'make-delete-objects-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-objects-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Deleted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deleted)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged)))
    (aws-sdk/generator/shape::to-query-params "Errors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'errors))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-objects-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (delete
    (common-lisp:error #A((19) common-lisp:base-char . ":delete is required"))
    :type (common-lisp:or delete common-lisp:null))
   (mfa common-lisp:nil :type (common-lisp:or mfa common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-objects-request 'make-delete-objects-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-objects-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Delete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete)))
    (aws-sdk/generator/shape::to-query-params "MFA"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfa)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (deleted-object (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (delete-marker common-lisp:nil :type
    (common-lisp:or delete-marker common-lisp:null))
   (delete-marker-version-id common-lisp:nil :type
    (common-lisp:or delete-marker-version-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deleted-object 'make-deleted-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deleted-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "DeleteMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-marker)))
    (aws-sdk/generator/shape::to-query-params "DeleteMarkerVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-marker-version-id))))))
(common-lisp:progn
 (common-lisp:deftype deleted-objects ()
   '(trivial-types:proper-list deleted-object))
 (common-lisp:defun |make-deleted-objects|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deleted-object))
   aws-sdk/generator/shape::members))
(common-lisp:deftype delimiter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (destination (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null)))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class))))))
(common-lisp:deftype display-name () 'common-lisp:string)
(common-lisp:deftype etag () 'common-lisp:string)
(common-lisp:deftype email-address () 'common-lisp:string)
(common-lisp:deftype encoding-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (error (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'error 'make-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (error-document (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'error-document 'make-error-document))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape error-document))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key))))))
(common-lisp:progn
 (common-lisp:deftype errors () '(trivial-types:proper-list error))
 (common-lisp:defun |make-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list error))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-list () '(trivial-types:proper-list event))
 (common-lisp:defun |make-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:deftype expiration () 'common-lisp:string)
(common-lisp:deftype expiration-status () 'common-lisp:string)
(common-lisp:deftype expired-object-delete-marker () 'common-lisp:boolean)
(common-lisp:deftype expires () 'common-lisp:string)
(common-lisp:deftype expose-header () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype expose-headers ()
   '(trivial-types:proper-list expose-header))
 (common-lisp:defun |make-expose-headers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list expose-header))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fetch-owner () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (filter-rule (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or filter-rule-name common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or filter-rule-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'filter-rule 'make-filter-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape filter-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype filter-rule-list ()
   '(trivial-types:proper-list filter-rule))
 (common-lisp:defun |make-filter-rule-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype filter-rule-name () 'common-lisp:string)
(common-lisp:deftype filter-rule-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-accelerate-configuration-output (:copier common-lisp:nil))
   (status common-lisp:nil :type
    (common-lisp:or bucket-accelerate-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-accelerate-configuration-output
                    'make-get-bucket-accelerate-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-accelerate-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-accelerate-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-accelerate-configuration-request
                    'make-get-bucket-accelerate-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-accelerate-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-acl-output (:copier common-lisp:nil))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null))
   (grants common-lisp:nil :type (common-lisp:or grants common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-acl-output 'make-get-bucket-acl-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-acl-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "Grants"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grants))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-acl-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-acl-request 'make-get-bucket-acl-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-acl-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-analytics-configuration-output (:copier common-lisp:nil))
   (analytics-configuration common-lisp:nil :type
    (common-lisp:or analytics-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-analytics-configuration-output
                    'make-get-bucket-analytics-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-analytics-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AnalyticsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analytics-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-analytics-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or analytics-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-analytics-configuration-request
                    'make-get-bucket-analytics-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-analytics-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-cors-output (:copier common-lisp:nil))
   (corsrules common-lisp:nil :type
    (common-lisp:or corsrules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-cors-output 'make-get-bucket-cors-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-cors-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CORSRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'corsrules))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-cors-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-cors-request 'make-get-bucket-cors-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-cors-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-inventory-configuration-output (:copier common-lisp:nil))
   (inventory-configuration common-lisp:nil :type
    (common-lisp:or inventory-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-inventory-configuration-output
                    'make-get-bucket-inventory-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-inventory-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InventoryConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inventory-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-inventory-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or inventory-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-inventory-configuration-request
                    'make-get-bucket-inventory-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-inventory-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-lifecycle-configuration-output (:copier common-lisp:nil))
   (rules common-lisp:nil :type
    (common-lisp:or lifecycle-rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-lifecycle-configuration-output
                    'make-get-bucket-lifecycle-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-lifecycle-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-lifecycle-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-lifecycle-configuration-request
                    'make-get-bucket-lifecycle-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-lifecycle-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-lifecycle-output (:copier common-lisp:nil))
   (rules common-lisp:nil :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-lifecycle-output
                    'make-get-bucket-lifecycle-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-lifecycle-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-lifecycle-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-lifecycle-request
                    'make-get-bucket-lifecycle-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-lifecycle-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-location-output (:copier common-lisp:nil))
   (location-constraint common-lisp:nil :type
    (common-lisp:or bucket-location-constraint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-location-output
                    'make-get-bucket-location-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-location-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocationConstraint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location-constraint))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-location-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-location-request
                    'make-get-bucket-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-location-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-logging-output (:copier common-lisp:nil))
   (logging-enabled common-lisp:nil :type
    (common-lisp:or logging-enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-logging-output
                    'make-get-bucket-logging-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-logging-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoggingEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-logging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-logging-request
                    'make-get-bucket-logging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-logging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-metrics-configuration-output (:copier common-lisp:nil))
   (metrics-configuration common-lisp:nil :type
    (common-lisp:or metrics-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-metrics-configuration-output
                    'make-get-bucket-metrics-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-metrics-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MetricsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-metrics-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or metrics-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-metrics-configuration-request
                    'make-get-bucket-metrics-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-metrics-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-notification-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-notification-configuration-request
                    'make-get-bucket-notification-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-notification-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-policy-output (:copier common-lisp:nil))
   (policy common-lisp:nil :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-policy-output 'make-get-bucket-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-policy-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-policy-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-policy-request
                    'make-get-bucket-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-replication-output (:copier common-lisp:nil))
   (replication-configuration common-lisp:nil :type
    (common-lisp:or replication-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-replication-output
                    'make-get-bucket-replication-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-replication-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReplicationConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replication-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-replication-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-replication-request
                    'make-get-bucket-replication-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-replication-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-request-payment-output (:copier common-lisp:nil))
   (payer common-lisp:nil :type (common-lisp:or payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-request-payment-output
                    'make-get-bucket-request-payment-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-request-payment-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Payer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'payer))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-request-payment-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-request-payment-request
                    'make-get-bucket-request-payment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-request-payment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-tagging-output (:copier common-lisp:nil))
   (tag-set
    (common-lisp:error #A((20) common-lisp:base-char . ":tag-set is required"))
    :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-tagging-output
                    'make-get-bucket-tagging-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-tagging-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-set))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-tagging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-tagging-request
                    'make-get-bucket-tagging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-tagging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-versioning-output (:copier common-lisp:nil))
   (status common-lisp:nil :type
    (common-lisp:or bucket-versioning-status common-lisp:null))
   (mfadelete common-lisp:nil :type
    (common-lisp:or mfadelete-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-versioning-output
                    'make-get-bucket-versioning-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-versioning-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "MFADelete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfadelete))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bucket-versioning-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-versioning-request
                    'make-get-bucket-versioning-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-versioning-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-website-output (:copier common-lisp:nil))
   (redirect-all-requests-to common-lisp:nil :type
    (common-lisp:or redirect-all-requests-to common-lisp:null))
   (index-document common-lisp:nil :type
    (common-lisp:or index-document common-lisp:null))
   (error-document common-lisp:nil :type
    (common-lisp:or error-document common-lisp:null))
   (routing-rules common-lisp:nil :type
    (common-lisp:or routing-rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-website-output
                    'make-get-bucket-website-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-website-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RedirectAllRequestsTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'redirect-all-requests-to)))
    (aws-sdk/generator/shape::to-query-params "IndexDocument"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-document)))
    (aws-sdk/generator/shape::to-query-params "ErrorDocument"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-document)))
    (aws-sdk/generator/shape::to-query-params "RoutingRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'routing-rules))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bucket-website-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bucket-website-request
                    'make-get-bucket-website-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bucket-website-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-acl-output (:copier common-lisp:nil))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null))
   (grants common-lisp:nil :type (common-lisp:or grants common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-acl-output 'make-get-object-acl-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-acl-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "Grants"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grants)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-acl-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-acl-request 'make-get-object-acl-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-acl-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-output (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or body common-lisp:null))
   (delete-marker common-lisp:nil :type
    (common-lisp:or delete-marker common-lisp:null))
   (accept-ranges common-lisp:nil :type
    (common-lisp:or accept-ranges common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or expiration common-lisp:null))
   (restore common-lisp:nil :type (common-lisp:or restore common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null))
   (content-length common-lisp:nil :type
    (common-lisp:or content-length common-lisp:null))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (missing-meta common-lisp:nil :type
    (common-lisp:or missing-meta common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (cache-control common-lisp:nil :type
    (common-lisp:or cache-control common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or content-disposition common-lisp:null))
   (content-encoding common-lisp:nil :type
    (common-lisp:or content-encoding common-lisp:null))
   (content-language common-lisp:nil :type
    (common-lisp:or content-language common-lisp:null))
   (content-range common-lisp:nil :type
    (common-lisp:or content-range common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or content-type common-lisp:null))
   (expires common-lisp:nil :type (common-lisp:or expires common-lisp:null))
   (website-redirect-location common-lisp:nil :type
    (common-lisp:or website-redirect-location common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (metadata common-lisp:nil :type (common-lisp:or metadata common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null))
   (replication-status common-lisp:nil :type
    (common-lisp:or replication-status common-lisp:null))
   (parts-count common-lisp:nil :type
    (common-lisp:or parts-count common-lisp:null))
   (tag-count common-lisp:nil :type
    (common-lisp:or tag-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-output 'make-get-object-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-object-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "DeleteMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-marker)))
    (aws-sdk/generator/shape::to-query-params "AcceptRanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-ranges)))
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "Restore"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'restore)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified)))
    (aws-sdk/generator/shape::to-query-params "ContentLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-length)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "MissingMeta"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'missing-meta)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "CacheControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-control)))
    (aws-sdk/generator/shape::to-query-params "ContentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-disposition)))
    (aws-sdk/generator/shape::to-query-params "ContentEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-encoding)))
    (aws-sdk/generator/shape::to-query-params "ContentLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-language)))
    (aws-sdk/generator/shape::to-query-params "ContentRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-range)))
    (aws-sdk/generator/shape::to-query-params "ContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "Expires"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires)))
    (aws-sdk/generator/shape::to-query-params "WebsiteRedirectLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'website-redirect-location)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged)))
    (aws-sdk/generator/shape::to-query-params "ReplicationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replication-status)))
    (aws-sdk/generator/shape::to-query-params "PartsCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parts-count)))
    (aws-sdk/generator/shape::to-query-params "TagCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-count))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (if-match common-lisp:nil :type (common-lisp:or if-match common-lisp:null))
   (if-modified-since common-lisp:nil :type
    (common-lisp:or if-modified-since common-lisp:null))
   (if-none-match common-lisp:nil :type
    (common-lisp:or if-none-match common-lisp:null))
   (if-unmodified-since common-lisp:nil :type
    (common-lisp:or if-unmodified-since common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (range common-lisp:nil :type (common-lisp:or range common-lisp:null))
   (response-cache-control common-lisp:nil :type
    (common-lisp:or response-cache-control common-lisp:null))
   (response-content-disposition common-lisp:nil :type
    (common-lisp:or response-content-disposition common-lisp:null))
   (response-content-encoding common-lisp:nil :type
    (common-lisp:or response-content-encoding common-lisp:null))
   (response-content-language common-lisp:nil :type
    (common-lisp:or response-content-language common-lisp:null))
   (response-content-type common-lisp:nil :type
    (common-lisp:or response-content-type common-lisp:null))
   (response-expires common-lisp:nil :type
    (common-lisp:or response-expires common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key common-lisp:nil :type
    (common-lisp:or ssecustomer-key common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null))
   (part-number common-lisp:nil :type
    (common-lisp:or part-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-request 'make-get-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match)))
    (aws-sdk/generator/shape::to-query-params "IfModifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-modified-since)))
    (aws-sdk/generator/shape::to-query-params "IfNoneMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-none-match)))
    (aws-sdk/generator/shape::to-query-params "IfUnmodifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-unmodified-since)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Range"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'range)))
    (aws-sdk/generator/shape::to-query-params "ResponseCacheControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-cache-control)))
    (aws-sdk/generator/shape::to-query-params "ResponseContentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-content-disposition)))
    (aws-sdk/generator/shape::to-query-params "ResponseContentEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-content-encoding)))
    (aws-sdk/generator/shape::to-query-params "ResponseContentLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-content-language)))
    (aws-sdk/generator/shape::to-query-params "ResponseContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-content-type)))
    (aws-sdk/generator/shape::to-query-params "ResponseExpires"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-expires)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer)))
    (aws-sdk/generator/shape::to-query-params "PartNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-tagging-output (:copier common-lisp:nil))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (tag-set
    (common-lisp:error #A((20) common-lisp:base-char . ":tag-set is required"))
    :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-tagging-output
                    'make-get-object-tagging-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-tagging-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "TagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-set))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-tagging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-tagging-request
                    'make-get-object-tagging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-tagging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-torrent-output (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or body common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-torrent-output
                    'make-get-object-torrent-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-torrent-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (get-object-torrent-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-torrent-request
                    'make-get-object-torrent-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-torrent-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (glacier-job-parameters (:copier common-lisp:nil))
   (tier
    (common-lisp:error #A((17) common-lisp:base-char . ":tier is required"))
    :type (common-lisp:or tier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'glacier-job-parameters 'make-glacier-job-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          glacier-job-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tier))))))
(common-lisp:progn
 (common-lisp:defstruct (grant (:copier common-lisp:nil))
   (grantee common-lisp:nil :type (common-lisp:or grantee common-lisp:null))
   (permission common-lisp:nil :type
    (common-lisp:or permission common-lisp:null)))
 (common-lisp:export (common-lisp:list 'grant 'make-grant))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape grant))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Grantee"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grantee)))
    (aws-sdk/generator/shape::to-query-params "Permission"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'permission))))))
(common-lisp:deftype grant-full-control () 'common-lisp:string)
(common-lisp:deftype grant-read () 'common-lisp:string)
(common-lisp:deftype grant-read-acp () 'common-lisp:string)
(common-lisp:deftype grant-write () 'common-lisp:string)
(common-lisp:deftype grant-write-acp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (grantee (:copier common-lisp:nil))
   (display-name common-lisp:nil :type
    (common-lisp:or display-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or type common-lisp:null))
   (uri common-lisp:nil :type (common-lisp:or uri common-lisp:null)))
 (common-lisp:export (common-lisp:list 'grantee 'make-grantee))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape grantee))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "EmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "ID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "URI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uri))))))
(common-lisp:progn
 (common-lisp:deftype grants () '(trivial-types:proper-list grant))
 (common-lisp:defun |make-grants|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list grant))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (head-bucket-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'head-bucket-request 'make-head-bucket-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape head-bucket-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct (head-object-output (:copier common-lisp:nil))
   (delete-marker common-lisp:nil :type
    (common-lisp:or delete-marker common-lisp:null))
   (accept-ranges common-lisp:nil :type
    (common-lisp:or accept-ranges common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or expiration common-lisp:null))
   (restore common-lisp:nil :type (common-lisp:or restore common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null))
   (content-length common-lisp:nil :type
    (common-lisp:or content-length common-lisp:null))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (missing-meta common-lisp:nil :type
    (common-lisp:or missing-meta common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (cache-control common-lisp:nil :type
    (common-lisp:or cache-control common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or content-disposition common-lisp:null))
   (content-encoding common-lisp:nil :type
    (common-lisp:or content-encoding common-lisp:null))
   (content-language common-lisp:nil :type
    (common-lisp:or content-language common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or content-type common-lisp:null))
   (expires common-lisp:nil :type (common-lisp:or expires common-lisp:null))
   (website-redirect-location common-lisp:nil :type
    (common-lisp:or website-redirect-location common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (metadata common-lisp:nil :type (common-lisp:or metadata common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null))
   (replication-status common-lisp:nil :type
    (common-lisp:or replication-status common-lisp:null))
   (parts-count common-lisp:nil :type
    (common-lisp:or parts-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'head-object-output 'make-head-object-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape head-object-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeleteMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-marker)))
    (aws-sdk/generator/shape::to-query-params "AcceptRanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-ranges)))
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "Restore"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'restore)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified)))
    (aws-sdk/generator/shape::to-query-params "ContentLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-length)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "MissingMeta"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'missing-meta)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "CacheControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-control)))
    (aws-sdk/generator/shape::to-query-params "ContentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-disposition)))
    (aws-sdk/generator/shape::to-query-params "ContentEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-encoding)))
    (aws-sdk/generator/shape::to-query-params "ContentLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-language)))
    (aws-sdk/generator/shape::to-query-params "ContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "Expires"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires)))
    (aws-sdk/generator/shape::to-query-params "WebsiteRedirectLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'website-redirect-location)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged)))
    (aws-sdk/generator/shape::to-query-params "ReplicationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replication-status)))
    (aws-sdk/generator/shape::to-query-params "PartsCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parts-count))))))
(common-lisp:progn
 (common-lisp:defstruct (head-object-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (if-match common-lisp:nil :type (common-lisp:or if-match common-lisp:null))
   (if-modified-since common-lisp:nil :type
    (common-lisp:or if-modified-since common-lisp:null))
   (if-none-match common-lisp:nil :type
    (common-lisp:or if-none-match common-lisp:null))
   (if-unmodified-since common-lisp:nil :type
    (common-lisp:or if-unmodified-since common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (range common-lisp:nil :type (common-lisp:or range common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key common-lisp:nil :type
    (common-lisp:or ssecustomer-key common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null))
   (part-number common-lisp:nil :type
    (common-lisp:or part-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'head-object-request 'make-head-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape head-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "IfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-match)))
    (aws-sdk/generator/shape::to-query-params "IfModifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-modified-since)))
    (aws-sdk/generator/shape::to-query-params "IfNoneMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-none-match)))
    (aws-sdk/generator/shape::to-query-params "IfUnmodifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'if-unmodified-since)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Range"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'range)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer)))
    (aws-sdk/generator/shape::to-query-params "PartNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number))))))
(common-lisp:deftype host-name () 'common-lisp:string)
(common-lisp:deftype http-error-code-returned-equals () 'common-lisp:string)
(common-lisp:deftype http-redirect-code () 'common-lisp:string)
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:deftype if-match () 'common-lisp:string)
(common-lisp:deftype if-modified-since () 'common-lisp:string)
(common-lisp:deftype if-none-match () 'common-lisp:string)
(common-lisp:deftype if-unmodified-since () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (index-document (:copier common-lisp:nil))
   (suffix
    (common-lisp:error #A((19) common-lisp:base-char . ":suffix is required"))
    :type (common-lisp:or suffix common-lisp:null)))
 (common-lisp:export (common-lisp:list 'index-document 'make-index-document))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape index-document))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Suffix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suffix))))))
(common-lisp:deftype initiated () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (initiator (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or display-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'initiator 'make-initiator))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape initiator))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name))))))
(common-lisp:progn
 (common-lisp:defstruct (inventory-configuration (:copier common-lisp:nil))
   (destination
    (common-lisp:error
     #A((24) common-lisp:base-char . ":destination is required"))
    :type (common-lisp:or inventory-destination common-lisp:null))
   (is-enabled
    (common-lisp:error
     #A((23) common-lisp:base-char . ":is-enabled is required"))
    :type (common-lisp:or is-enabled common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or inventory-filter common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or inventory-id common-lisp:null))
   (included-object-versions
    (common-lisp:error
     #A((37) common-lisp:base-char . ":included-object-versions is required"))
    :type (common-lisp:or inventory-included-object-versions common-lisp:null))
   (optional-fields common-lisp:nil :type
    (common-lisp:or inventory-optional-fields common-lisp:null))
   (schedule
    (common-lisp:error
     #A((21) common-lisp:base-char . ":schedule is required"))
    :type (common-lisp:or inventory-schedule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-configuration 'make-inventory-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination)))
    (aws-sdk/generator/shape::to-query-params "IsEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-enabled)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IncludedObjectVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'included-object-versions)))
    (aws-sdk/generator/shape::to-query-params "OptionalFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'optional-fields)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule))))))
(common-lisp:progn
 (common-lisp:deftype inventory-configuration-list ()
   '(trivial-types:proper-list inventory-configuration))
 (common-lisp:defun |make-inventory-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inventory-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (inventory-destination (:copier common-lisp:nil))
   (s3bucket-destination
    (common-lisp:error
     #A((33) common-lisp:base-char . ":s3bucket-destination is required"))
    :type (common-lisp:or inventory-s3bucket-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-destination 'make-inventory-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3BucketDestination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket-destination))))))
(common-lisp:progn
 (common-lisp:defstruct (inventory-filter (:copier common-lisp:nil))
   (prefix
    (common-lisp:error #A((19) common-lisp:base-char . ":prefix is required"))
    :type (common-lisp:or prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-filter 'make-inventory-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape inventory-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix))))))
(common-lisp:deftype inventory-format () 'common-lisp:string)
(common-lisp:deftype inventory-frequency () 'common-lisp:string)
(common-lisp:deftype inventory-id () 'common-lisp:string)
(common-lisp:deftype inventory-included-object-versions () 'common-lisp:string)
(common-lisp:deftype inventory-optional-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inventory-optional-fields ()
   '(trivial-types:proper-list inventory-optional-field))
 (common-lisp:defun |make-inventory-optional-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            inventory-optional-field))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (inventory-s3bucket-destination (:copier common-lisp:nil))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (format
    (common-lisp:error #A((19) common-lisp:base-char . ":format is required"))
    :type (common-lisp:or inventory-format common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-s3bucket-destination
                    'make-inventory-s3bucket-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-s3bucket-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix))))))
(common-lisp:progn
 (common-lisp:defstruct (inventory-schedule (:copier common-lisp:nil))
   (frequency
    (common-lisp:error
     #A((22) common-lisp:base-char . ":frequency is required"))
    :type (common-lisp:or inventory-frequency common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-schedule 'make-inventory-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape inventory-schedule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Frequency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frequency))))))
(common-lisp:deftype is-enabled () 'common-lisp:boolean)
(common-lisp:deftype is-latest () 'common-lisp:boolean)
(common-lisp:deftype is-truncated () 'common-lisp:boolean)
(common-lisp:deftype key-count () 'common-lisp:integer)
(common-lisp:deftype key-marker () 'common-lisp:string)
(common-lisp:deftype key-prefix-equals () 'common-lisp:string)
(common-lisp:deftype lambda-function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-configuration (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or notification-id common-lisp:null))
   (lambda-function-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":lambda-function-arn is required"))
    :type (common-lisp:or lambda-function-arn common-lisp:null))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or event-list common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or notification-configuration-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-configuration
                    'make-lambda-function-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "LambdaFunctionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-function-arn)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:deftype lambda-function-configuration-list ()
   '(trivial-types:proper-list lambda-function-configuration))
 (common-lisp:defun |make-lambda-function-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype last-modified () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (lifecycle-configuration (:copier common-lisp:nil))
   (rules
    (common-lisp:error #A((18) common-lisp:base-char . ":rules is required"))
    :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-configuration 'make-lifecycle-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lifecycle-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (lifecycle-expiration (:copier common-lisp:nil))
   (date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (days common-lisp:nil :type (common-lisp:or days common-lisp:null))
   (expired-object-delete-marker common-lisp:nil :type
    (common-lisp:or expired-object-delete-marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-expiration 'make-lifecycle-expiration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lifecycle-expiration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Date"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date)))
    (aws-sdk/generator/shape::to-query-params "Days"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'days)))
    (aws-sdk/generator/shape::to-query-params "ExpiredObjectDeleteMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expired-object-delete-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (lifecycle-rule (:copier common-lisp:nil))
   (expiration common-lisp:nil :type
    (common-lisp:or lifecycle-expiration common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or lifecycle-rule-filter common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or expiration-status common-lisp:null))
   (transitions common-lisp:nil :type
    (common-lisp:or transition-list common-lisp:null))
   (noncurrent-version-transitions common-lisp:nil :type
    (common-lisp:or noncurrent-version-transition-list common-lisp:null))
   (noncurrent-version-expiration common-lisp:nil :type
    (common-lisp:or noncurrent-version-expiration common-lisp:null))
   (abort-incomplete-multipart-upload common-lisp:nil :type
    (common-lisp:or abort-incomplete-multipart-upload common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lifecycle-rule 'make-lifecycle-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lifecycle-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "ID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Transitions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'transitions)))
    (aws-sdk/generator/shape::to-query-params "NoncurrentVersionTransitions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'noncurrent-version-transitions)))
    (aws-sdk/generator/shape::to-query-params "NoncurrentVersionExpiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'noncurrent-version-expiration)))
    (aws-sdk/generator/shape::to-query-params "AbortIncompleteMultipartUpload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-incomplete-multipart-upload))))))
(common-lisp:progn
 (common-lisp:defstruct (lifecycle-rule-and-operator (:copier common-lisp:nil))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-rule-and-operator
                    'make-lifecycle-rule-and-operator))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lifecycle-rule-and-operator))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (lifecycle-rule-filter (:copier common-lisp:nil))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (tag common-lisp:nil :type (common-lisp:or tag common-lisp:null))
   (and common-lisp:nil :type
    (common-lisp:or lifecycle-rule-and-operator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-rule-filter 'make-lifecycle-rule-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lifecycle-rule-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Tag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag)))
    (aws-sdk/generator/shape::to-query-params "And"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'and))))))
(common-lisp:progn
 (common-lisp:deftype lifecycle-rules ()
   '(trivial-types:proper-list lifecycle-rule))
 (common-lisp:defun |make-lifecycle-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lifecycle-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bucket-analytics-configurations-output (:copier common-lisp:nil))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null))
   (next-continuation-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (analytics-configuration-list common-lisp:nil :type
    (common-lisp:or analytics-configuration-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bucket-analytics-configurations-output
                    'make-list-bucket-analytics-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bucket-analytics-configurations-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token)))
    (aws-sdk/generator/shape::to-query-params "NextContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-continuation-token)))
    (aws-sdk/generator/shape::to-query-params "AnalyticsConfigurationList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analytics-configuration-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bucket-analytics-configurations-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bucket-analytics-configurations-request
                    'make-list-bucket-analytics-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bucket-analytics-configurations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bucket-inventory-configurations-output (:copier common-lisp:nil))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null))
   (inventory-configuration-list common-lisp:nil :type
    (common-lisp:or inventory-configuration-list common-lisp:null))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (next-continuation-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bucket-inventory-configurations-output
                    'make-list-bucket-inventory-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bucket-inventory-configurations-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token)))
    (aws-sdk/generator/shape::to-query-params "InventoryConfigurationList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inventory-configuration-list)))
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "NextContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-continuation-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bucket-inventory-configurations-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bucket-inventory-configurations-request
                    'make-list-bucket-inventory-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bucket-inventory-configurations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bucket-metrics-configurations-output (:copier common-lisp:nil))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null))
   (next-continuation-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (metrics-configuration-list common-lisp:nil :type
    (common-lisp:or metrics-configuration-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bucket-metrics-configurations-output
                    'make-list-bucket-metrics-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bucket-metrics-configurations-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token)))
    (aws-sdk/generator/shape::to-query-params "NextContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-continuation-token)))
    (aws-sdk/generator/shape::to-query-params "MetricsConfigurationList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics-configuration-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bucket-metrics-configurations-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bucket-metrics-configurations-request
                    'make-list-bucket-metrics-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bucket-metrics-configurations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-buckets-output (:copier common-lisp:nil))
   (buckets common-lisp:nil :type (common-lisp:or buckets common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-buckets-output 'make-list-buckets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-buckets-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Buckets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'buckets)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multipart-uploads-output (:copier common-lisp:nil))
   (bucket common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (key-marker common-lisp:nil :type
    (common-lisp:or key-marker common-lisp:null))
   (upload-id-marker common-lisp:nil :type
    (common-lisp:or upload-id-marker common-lisp:null))
   (next-key-marker common-lisp:nil :type
    (common-lisp:or next-key-marker common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (next-upload-id-marker common-lisp:nil :type
    (common-lisp:or next-upload-id-marker common-lisp:null))
   (max-uploads common-lisp:nil :type
    (common-lisp:or max-uploads common-lisp:null))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (uploads common-lisp:nil :type
    (common-lisp:or multipart-upload-list common-lisp:null))
   (common-prefixes common-lisp:nil :type
    (common-lisp:or common-prefix-list common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multipart-uploads-output
                    'make-list-multipart-uploads-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-multipart-uploads-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "KeyMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-marker)))
    (aws-sdk/generator/shape::to-query-params "UploadIdMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id-marker)))
    (aws-sdk/generator/shape::to-query-params "NextKeyMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-key-marker)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "NextUploadIdMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-upload-id-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxUploads"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-uploads)))
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Uploads"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uploads)))
    (aws-sdk/generator/shape::to-query-params "CommonPrefixes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'common-prefixes)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multipart-uploads-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null))
   (key-marker common-lisp:nil :type
    (common-lisp:or key-marker common-lisp:null))
   (max-uploads common-lisp:nil :type
    (common-lisp:or max-uploads common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (upload-id-marker common-lisp:nil :type
    (common-lisp:or upload-id-marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multipart-uploads-request
                    'make-list-multipart-uploads-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-multipart-uploads-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type)))
    (aws-sdk/generator/shape::to-query-params "KeyMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxUploads"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-uploads)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "UploadIdMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-object-versions-output (:copier common-lisp:nil))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (key-marker common-lisp:nil :type
    (common-lisp:or key-marker common-lisp:null))
   (version-id-marker common-lisp:nil :type
    (common-lisp:or version-id-marker common-lisp:null))
   (next-key-marker common-lisp:nil :type
    (common-lisp:or next-key-marker common-lisp:null))
   (next-version-id-marker common-lisp:nil :type
    (common-lisp:or next-version-id-marker common-lisp:null))
   (versions common-lisp:nil :type
    (common-lisp:or object-version-list common-lisp:null))
   (delete-markers common-lisp:nil :type
    (common-lisp:or delete-markers common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (max-keys common-lisp:nil :type (common-lisp:or max-keys common-lisp:null))
   (common-prefixes common-lisp:nil :type
    (common-lisp:or common-prefix-list common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-versions-output
                    'make-list-object-versions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-versions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "KeyMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-marker)))
    (aws-sdk/generator/shape::to-query-params "VersionIdMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id-marker)))
    (aws-sdk/generator/shape::to-query-params "NextKeyMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-key-marker)))
    (aws-sdk/generator/shape::to-query-params "NextVersionIdMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-version-id-marker)))
    (aws-sdk/generator/shape::to-query-params "Versions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'versions)))
    (aws-sdk/generator/shape::to-query-params "DeleteMarkers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-markers)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "MaxKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-keys)))
    (aws-sdk/generator/shape::to-query-params "CommonPrefixes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'common-prefixes)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-versions-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null))
   (key-marker common-lisp:nil :type
    (common-lisp:or key-marker common-lisp:null))
   (max-keys common-lisp:nil :type (common-lisp:or max-keys common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (version-id-marker common-lisp:nil :type
    (common-lisp:or version-id-marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-versions-request
                    'make-list-object-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type)))
    (aws-sdk/generator/shape::to-query-params "KeyMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-keys)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "VersionIdMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-objects-output (:copier common-lisp:nil))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (contents common-lisp:nil :type
    (common-lisp:or object-list common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (max-keys common-lisp:nil :type (common-lisp:or max-keys common-lisp:null))
   (common-prefixes common-lisp:nil :type
    (common-lisp:or common-prefix-list common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-objects-output 'make-list-objects-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-objects-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Contents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'contents)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "MaxKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-keys)))
    (aws-sdk/generator/shape::to-query-params "CommonPrefixes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'common-prefixes)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type))))))
(common-lisp:progn
 (common-lisp:defstruct (list-objects-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (max-keys common-lisp:nil :type (common-lisp:or max-keys common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-objects-request 'make-list-objects-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-objects-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "MaxKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-keys)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (list-objects-v2output (:copier common-lisp:nil))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (contents common-lisp:nil :type
    (common-lisp:or object-list common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (max-keys common-lisp:nil :type (common-lisp:or max-keys common-lisp:null))
   (common-prefixes common-lisp:nil :type
    (common-lisp:or common-prefix-list common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null))
   (key-count common-lisp:nil :type
    (common-lisp:or key-count common-lisp:null))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null))
   (next-continuation-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (start-after common-lisp:nil :type
    (common-lisp:or start-after common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-objects-v2output 'make-list-objects-v2output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-objects-v2output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Contents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'contents)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "MaxKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-keys)))
    (aws-sdk/generator/shape::to-query-params "CommonPrefixes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'common-prefixes)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type)))
    (aws-sdk/generator/shape::to-query-params "KeyCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-count)))
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token)))
    (aws-sdk/generator/shape::to-query-params "NextContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-continuation-token)))
    (aws-sdk/generator/shape::to-query-params "StartAfter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-after))))))
(common-lisp:progn
 (common-lisp:defstruct (list-objects-v2request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (encoding-type common-lisp:nil :type
    (common-lisp:or encoding-type common-lisp:null))
   (max-keys common-lisp:nil :type (common-lisp:or max-keys common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (continuation-token common-lisp:nil :type
    (common-lisp:or token common-lisp:null))
   (fetch-owner common-lisp:nil :type
    (common-lisp:or fetch-owner common-lisp:null))
   (start-after common-lisp:nil :type
    (common-lisp:or start-after common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-objects-v2request 'make-list-objects-v2request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-objects-v2request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Delimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delimiter)))
    (aws-sdk/generator/shape::to-query-params "EncodingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding-type)))
    (aws-sdk/generator/shape::to-query-params "MaxKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-keys)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "ContinuationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'continuation-token)))
    (aws-sdk/generator/shape::to-query-params "FetchOwner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fetch-owner)))
    (aws-sdk/generator/shape::to-query-params "StartAfter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-after)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (list-parts-output (:copier common-lisp:nil))
   (abort-date common-lisp:nil :type
    (common-lisp:or abort-date common-lisp:null))
   (abort-rule-id common-lisp:nil :type
    (common-lisp:or abort-rule-id common-lisp:null))
   (bucket common-lisp:nil :type (common-lisp:or bucket-name common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (upload-id common-lisp:nil :type
    (common-lisp:or multipart-upload-id common-lisp:null))
   (part-number-marker common-lisp:nil :type
    (common-lisp:or part-number-marker common-lisp:null))
   (next-part-number-marker common-lisp:nil :type
    (common-lisp:or next-part-number-marker common-lisp:null))
   (max-parts common-lisp:nil :type
    (common-lisp:or max-parts common-lisp:null))
   (is-truncated common-lisp:nil :type
    (common-lisp:or is-truncated common-lisp:null))
   (parts common-lisp:nil :type (common-lisp:or parts common-lisp:null))
   (initiator common-lisp:nil :type
    (common-lisp:or initiator common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parts-output 'make-list-parts-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-parts-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AbortDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-date)))
    (aws-sdk/generator/shape::to-query-params "AbortRuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-rule-id)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "PartNumberMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number-marker)))
    (aws-sdk/generator/shape::to-query-params "NextPartNumberMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-part-number-marker)))
    (aws-sdk/generator/shape::to-query-params "MaxParts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-parts)))
    (aws-sdk/generator/shape::to-query-params "IsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "Parts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parts)))
    (aws-sdk/generator/shape::to-query-params "Initiator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiator)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (list-parts-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (max-parts common-lisp:nil :type
    (common-lisp:or max-parts common-lisp:null))
   (part-number-marker common-lisp:nil :type
    (common-lisp:or part-number-marker common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":upload-id is required"))
    :type (common-lisp:or multipart-upload-id common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parts-request 'make-list-parts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-parts-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "MaxParts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-parts)))
    (aws-sdk/generator/shape::to-query-params "PartNumberMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number-marker)))
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:deftype location () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (logging-enabled (:copier common-lisp:nil))
   (target-bucket common-lisp:nil :type
    (common-lisp:or target-bucket common-lisp:null))
   (target-grants common-lisp:nil :type
    (common-lisp:or target-grants common-lisp:null))
   (target-prefix common-lisp:nil :type
    (common-lisp:or target-prefix common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logging-enabled 'make-logging-enabled))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape logging-enabled))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetBucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-bucket)))
    (aws-sdk/generator/shape::to-query-params "TargetGrants"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-grants)))
    (aws-sdk/generator/shape::to-query-params "TargetPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-prefix))))))
(common-lisp:deftype mfa () 'common-lisp:string)
(common-lisp:deftype mfadelete () 'common-lisp:string)
(common-lisp:deftype mfadelete-status () 'common-lisp:string)
(common-lisp:deftype marker () 'common-lisp:string)
(common-lisp:deftype max-age-seconds () 'common-lisp:integer)
(common-lisp:deftype max-keys () 'common-lisp:integer)
(common-lisp:deftype max-parts () 'common-lisp:integer)
(common-lisp:deftype max-uploads () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:defstruct
    (metadata
     (:constructor |make-metadata|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype metadata-directive () 'common-lisp:string)
(common-lisp:deftype metadata-key () 'common-lisp:string)
(common-lisp:deftype metadata-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (metrics-and-operator (:copier common-lisp:nil))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metrics-and-operator 'make-metrics-and-operator))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape metrics-and-operator))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (metrics-configuration (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or metrics-id common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or metrics-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metrics-configuration 'make-metrics-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          metrics-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:deftype metrics-configuration-list ()
   '(trivial-types:proper-list metrics-configuration))
 (common-lisp:defun |make-metrics-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metrics-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (metrics-filter (:copier common-lisp:nil))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (tag common-lisp:nil :type (common-lisp:or tag common-lisp:null))
   (and common-lisp:nil :type
    (common-lisp:or metrics-and-operator common-lisp:null)))
 (common-lisp:export (common-lisp:list 'metrics-filter 'make-metrics-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape metrics-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Tag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag)))
    (aws-sdk/generator/shape::to-query-params "And"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'and))))))
(common-lisp:deftype metrics-id () 'common-lisp:string)
(common-lisp:deftype missing-meta () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (multipart-upload (:copier common-lisp:nil))
   (upload-id common-lisp:nil :type
    (common-lisp:or multipart-upload-id common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (initiated common-lisp:nil :type
    (common-lisp:or initiated common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null))
   (initiator common-lisp:nil :type
    (common-lisp:or initiator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'multipart-upload 'make-multipart-upload))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape multipart-upload))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Initiated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiated)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "Initiator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiator))))))
(common-lisp:deftype multipart-upload-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype multipart-upload-list ()
   '(trivial-types:proper-list multipart-upload))
 (common-lisp:defun |make-multipart-upload-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list multipart-upload))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-key-marker () 'common-lisp:string)
(common-lisp:deftype next-marker () 'common-lisp:string)
(common-lisp:deftype next-part-number-marker () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype next-upload-id-marker () 'common-lisp:string)
(common-lisp:deftype next-version-id-marker () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (no-such-bucket (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'no-such-bucket 'make-no-such-bucket))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-bucket))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (no-such-key (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'no-such-key 'make-no-such-key))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-key))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (no-such-upload (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'no-such-upload 'make-no-such-upload))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-upload))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (noncurrent-version-expiration (:copier common-lisp:nil))
   (noncurrent-days common-lisp:nil :type
    (common-lisp:or days common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'noncurrent-version-expiration
                    'make-noncurrent-version-expiration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          noncurrent-version-expiration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NoncurrentDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'noncurrent-days))))))
(common-lisp:progn
 (common-lisp:defstruct
     (noncurrent-version-transition (:copier common-lisp:nil))
   (noncurrent-days common-lisp:nil :type
    (common-lisp:or days common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or transition-storage-class common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'noncurrent-version-transition
                    'make-noncurrent-version-transition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          noncurrent-version-transition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NoncurrentDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'noncurrent-days)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class))))))
(common-lisp:progn
 (common-lisp:deftype noncurrent-version-transition-list ()
   '(trivial-types:proper-list noncurrent-version-transition))
 (common-lisp:defun |make-noncurrent-version-transition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            noncurrent-version-transition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (notification-configuration (:copier common-lisp:nil))
   (topic-configurations common-lisp:nil :type
    (common-lisp:or topic-configuration-list common-lisp:null))
   (queue-configurations common-lisp:nil :type
    (common-lisp:or queue-configuration-list common-lisp:null))
   (lambda-function-configurations common-lisp:nil :type
    (common-lisp:or lambda-function-configuration-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-configuration
                    'make-notification-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notification-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-configurations)))
    (aws-sdk/generator/shape::to-query-params "QueueConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'queue-configurations)))
    (aws-sdk/generator/shape::to-query-params "LambdaFunctionConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-function-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (notification-configuration-deprecated (:copier common-lisp:nil))
   (topic-configuration common-lisp:nil :type
    (common-lisp:or topic-configuration-deprecated common-lisp:null))
   (queue-configuration common-lisp:nil :type
    (common-lisp:or queue-configuration-deprecated common-lisp:null))
   (cloud-function-configuration common-lisp:nil :type
    (common-lisp:or cloud-function-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-configuration-deprecated
                    'make-notification-configuration-deprecated))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notification-configuration-deprecated))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-configuration)))
    (aws-sdk/generator/shape::to-query-params "QueueConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'queue-configuration)))
    (aws-sdk/generator/shape::to-query-params "CloudFunctionConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-function-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (notification-configuration-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or s3key-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-configuration-filter
                    'make-notification-configuration-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notification-configuration-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key))))))
(common-lisp:deftype notification-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (object (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or size common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or object-storage-class common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null)))
 (common-lisp:export (common-lisp:list 'object 'make-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner))))))
(common-lisp:progn
 (common-lisp:defstruct
     (object-already-in-active-tier-error (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'object-already-in-active-tier-error
                    'make-object-already-in-active-tier-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-already-in-active-tier-error))
   (common-lisp:append)))
(common-lisp:deftype object-canned-acl () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (object-identifier (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-identifier 'make-object-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape object-identifier))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id))))))
(common-lisp:progn
 (common-lisp:deftype object-identifier-list ()
   '(trivial-types:proper-list object-identifier))
 (common-lisp:defun |make-object-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list object-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:deftype object-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype object-list () '(trivial-types:proper-list object))
 (common-lisp:defun |make-object-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list object))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (object-not-in-active-tier-error (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'object-not-in-active-tier-error
                    'make-object-not-in-active-tier-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-not-in-active-tier-error))
   (common-lisp:append)))
(common-lisp:deftype object-storage-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (object-version (:copier common-lisp:nil))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or size common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or object-version-storage-class common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (is-latest common-lisp:nil :type
    (common-lisp:or is-latest common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or owner common-lisp:null)))
 (common-lisp:export (common-lisp:list 'object-version 'make-object-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape object-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "IsLatest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-latest)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner))))))
(common-lisp:deftype object-version-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype object-version-list ()
   '(trivial-types:proper-list object-version))
 (common-lisp:defun |make-object-version-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list object-version))
   aws-sdk/generator/shape::members))
(common-lisp:deftype object-version-storage-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (owner (:copier common-lisp:nil))
   (display-name common-lisp:nil :type
    (common-lisp:or display-name common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'owner 'make-owner))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape owner))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "ID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (part (:copier common-lisp:nil))
   (part-number common-lisp:nil :type
    (common-lisp:or part-number common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or size common-lisp:null)))
 (common-lisp:export (common-lisp:list 'part 'make-part))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape part))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PartNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number)))
    (aws-sdk/generator/shape::to-query-params "LastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size))))))
(common-lisp:deftype part-number () 'common-lisp:integer)
(common-lisp:deftype part-number-marker () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype parts () '(trivial-types:proper-list part))
 (common-lisp:defun |make-parts|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list part))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parts-count () 'common-lisp:integer)
(common-lisp:deftype payer () 'common-lisp:string)
(common-lisp:deftype permission () 'common-lisp:string)
(common-lisp:deftype policy () 'common-lisp:string)
(common-lisp:deftype prefix () 'common-lisp:string)
(common-lisp:deftype protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-accelerate-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (accelerate-configuration
    (common-lisp:error
     #A((37) common-lisp:base-char . ":accelerate-configuration is required"))
    :type (common-lisp:or accelerate-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-accelerate-configuration-request
                    'make-put-bucket-accelerate-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-accelerate-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "AccelerateConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accelerate-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bucket-acl-request (:copier common-lisp:nil))
   (acl common-lisp:nil :type
    (common-lisp:or bucket-canned-acl common-lisp:null))
   (access-control-policy common-lisp:nil :type
    (common-lisp:or access-control-policy common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (grant-full-control common-lisp:nil :type
    (common-lisp:or grant-full-control common-lisp:null))
   (grant-read common-lisp:nil :type
    (common-lisp:or grant-read common-lisp:null))
   (grant-read-acp common-lisp:nil :type
    (common-lisp:or grant-read-acp common-lisp:null))
   (grant-write common-lisp:nil :type
    (common-lisp:or grant-write common-lisp:null))
   (grant-write-acp common-lisp:nil :type
    (common-lisp:or grant-write-acp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-acl-request 'make-put-bucket-acl-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-acl-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acl)))
    (aws-sdk/generator/shape::to-query-params "AccessControlPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-control-policy)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "GrantFullControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-full-control)))
    (aws-sdk/generator/shape::to-query-params "GrantRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read)))
    (aws-sdk/generator/shape::to-query-params "GrantReadACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read-acp)))
    (aws-sdk/generator/shape::to-query-params "GrantWrite"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write)))
    (aws-sdk/generator/shape::to-query-params "GrantWriteACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write-acp))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-analytics-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or analytics-id common-lisp:null))
   (analytics-configuration
    (common-lisp:error
     #A((36) common-lisp:base-char . ":analytics-configuration is required"))
    :type (common-lisp:or analytics-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-analytics-configuration-request
                    'make-put-bucket-analytics-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-analytics-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "AnalyticsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'analytics-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bucket-cors-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (corsconfiguration
    (common-lisp:error
     #A((30) common-lisp:base-char . ":corsconfiguration is required"))
    :type (common-lisp:or corsconfiguration common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-cors-request 'make-put-bucket-cors-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-cors-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "CORSConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'corsconfiguration)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-inventory-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or inventory-id common-lisp:null))
   (inventory-configuration
    (common-lisp:error
     #A((36) common-lisp:base-char . ":inventory-configuration is required"))
    :type (common-lisp:or inventory-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-inventory-configuration-request
                    'make-put-bucket-inventory-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-inventory-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "InventoryConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inventory-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-lifecycle-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (lifecycle-configuration common-lisp:nil :type
    (common-lisp:or bucket-lifecycle-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-lifecycle-configuration-request
                    'make-put-bucket-lifecycle-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-lifecycle-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "LifecycleConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-lifecycle-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (lifecycle-configuration common-lisp:nil :type
    (common-lisp:or lifecycle-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-lifecycle-request
                    'make-put-bucket-lifecycle-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-lifecycle-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "LifecycleConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bucket-logging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (bucket-logging-status
    (common-lisp:error
     #A((34) common-lisp:base-char . ":bucket-logging-status is required"))
    :type (common-lisp:or bucket-logging-status common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-logging-request
                    'make-put-bucket-logging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-logging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "BucketLoggingStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-logging-status)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-metrics-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or metrics-id common-lisp:null))
   (metrics-configuration
    (common-lisp:error
     #A((34) common-lisp:base-char . ":metrics-configuration is required"))
    :type (common-lisp:or metrics-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-metrics-configuration-request
                    'make-put-bucket-metrics-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-metrics-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "MetricsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-notification-configuration-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (notification-configuration
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":notification-configuration is required"))
    :type (common-lisp:or notification-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-notification-configuration-request
                    'make-put-bucket-notification-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-notification-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "NotificationConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-notification-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (notification-configuration
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":notification-configuration is required"))
    :type
    (common-lisp:or notification-configuration-deprecated common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-notification-request
                    'make-put-bucket-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-notification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "NotificationConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bucket-policy-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (policy
    (common-lisp:error #A((19) common-lisp:base-char . ":policy is required"))
    :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-policy-request
                    'make-put-bucket-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-replication-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (replication-configuration
    (common-lisp:error
     #A((38) common-lisp:base-char . ":replication-configuration is required"))
    :type (common-lisp:or replication-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-replication-request
                    'make-put-bucket-replication-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-replication-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "ReplicationConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replication-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-request-payment-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (request-payment-configuration
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":request-payment-configuration is required"))
    :type (common-lisp:or request-payment-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-request-payment-request
                    'make-put-bucket-request-payment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-request-payment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "RequestPaymentConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payment-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bucket-tagging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (tagging
    (common-lisp:error #A((20) common-lisp:base-char . ":tagging is required"))
    :type (common-lisp:or tagging common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-tagging-request
                    'make-put-bucket-tagging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-tagging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "Tagging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tagging))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bucket-versioning-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (mfa common-lisp:nil :type (common-lisp:or mfa common-lisp:null))
   (versioning-configuration
    (common-lisp:error
     #A((37) common-lisp:base-char . ":versioning-configuration is required"))
    :type (common-lisp:or versioning-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-versioning-request
                    'make-put-bucket-versioning-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-versioning-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "MFA"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfa)))
    (aws-sdk/generator/shape::to-query-params "VersioningConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'versioning-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bucket-website-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (website-configuration
    (common-lisp:error
     #A((34) common-lisp:base-char . ":website-configuration is required"))
    :type (common-lisp:or website-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bucket-website-request
                    'make-put-bucket-website-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bucket-website-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "WebsiteConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'website-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-object-acl-output (:copier common-lisp:nil))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-object-acl-output 'make-put-object-acl-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-object-acl-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (put-object-acl-request (:copier common-lisp:nil))
   (acl common-lisp:nil :type
    (common-lisp:or object-canned-acl common-lisp:null))
   (access-control-policy common-lisp:nil :type
    (common-lisp:or access-control-policy common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (grant-full-control common-lisp:nil :type
    (common-lisp:or grant-full-control common-lisp:null))
   (grant-read common-lisp:nil :type
    (common-lisp:or grant-read common-lisp:null))
   (grant-read-acp common-lisp:nil :type
    (common-lisp:or grant-read-acp common-lisp:null))
   (grant-write common-lisp:nil :type
    (common-lisp:or grant-write common-lisp:null))
   (grant-write-acp common-lisp:nil :type
    (common-lisp:or grant-write-acp common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-object-acl-request 'make-put-object-acl-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-object-acl-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acl)))
    (aws-sdk/generator/shape::to-query-params "AccessControlPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-control-policy)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "GrantFullControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-full-control)))
    (aws-sdk/generator/shape::to-query-params "GrantRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read)))
    (aws-sdk/generator/shape::to-query-params "GrantReadACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read-acp)))
    (aws-sdk/generator/shape::to-query-params "GrantWrite"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write)))
    (aws-sdk/generator/shape::to-query-params "GrantWriteACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write-acp)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id))))))
(common-lisp:progn
 (common-lisp:defstruct (put-object-output (:copier common-lisp:nil))
   (expiration common-lisp:nil :type
    (common-lisp:or expiration common-lisp:null))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-object-output 'make-put-object-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-object-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (put-object-request (:copier common-lisp:nil))
   (acl common-lisp:nil :type
    (common-lisp:or object-canned-acl common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or body common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (cache-control common-lisp:nil :type
    (common-lisp:or cache-control common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or content-disposition common-lisp:null))
   (content-encoding common-lisp:nil :type
    (common-lisp:or content-encoding common-lisp:null))
   (content-language common-lisp:nil :type
    (common-lisp:or content-language common-lisp:null))
   (content-length common-lisp:nil :type
    (common-lisp:or content-length common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or content-type common-lisp:null))
   (expires common-lisp:nil :type (common-lisp:or expires common-lisp:null))
   (grant-full-control common-lisp:nil :type
    (common-lisp:or grant-full-control common-lisp:null))
   (grant-read common-lisp:nil :type
    (common-lisp:or grant-read common-lisp:null))
   (grant-read-acp common-lisp:nil :type
    (common-lisp:or grant-read-acp common-lisp:null))
   (grant-write-acp common-lisp:nil :type
    (common-lisp:or grant-write-acp common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (metadata common-lisp:nil :type (common-lisp:or metadata common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (website-redirect-location common-lisp:nil :type
    (common-lisp:or website-redirect-location common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key common-lisp:nil :type
    (common-lisp:or ssecustomer-key common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null))
   (tagging common-lisp:nil :type
    (common-lisp:or tagging-header common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-object-request 'make-put-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acl)))
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "CacheControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-control)))
    (aws-sdk/generator/shape::to-query-params "ContentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-disposition)))
    (aws-sdk/generator/shape::to-query-params "ContentEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-encoding)))
    (aws-sdk/generator/shape::to-query-params "ContentLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-language)))
    (aws-sdk/generator/shape::to-query-params "ContentLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-length)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "ContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "Expires"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires)))
    (aws-sdk/generator/shape::to-query-params "GrantFullControl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-full-control)))
    (aws-sdk/generator/shape::to-query-params "GrantRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read)))
    (aws-sdk/generator/shape::to-query-params "GrantReadACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-read-acp)))
    (aws-sdk/generator/shape::to-query-params "GrantWriteACP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-write-acp)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class)))
    (aws-sdk/generator/shape::to-query-params "WebsiteRedirectLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'website-redirect-location)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer)))
    (aws-sdk/generator/shape::to-query-params "Tagging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tagging))))))
(common-lisp:progn
 (common-lisp:defstruct (put-object-tagging-output (:copier common-lisp:nil))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-object-tagging-output
                    'make-put-object-tagging-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-object-tagging-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id))))))
(common-lisp:progn
 (common-lisp:defstruct (put-object-tagging-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (tagging
    (common-lisp:error #A((20) common-lisp:base-char . ":tagging is required"))
    :type (common-lisp:or tagging common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-object-tagging-request
                    'make-put-object-tagging-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-object-tagging-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "Tagging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tagging))))))
(common-lisp:deftype queue-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (queue-configuration (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or notification-id common-lisp:null))
   (queue-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":queue-arn is required"))
    :type (common-lisp:or queue-arn common-lisp:null))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or event-list common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or notification-configuration-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'queue-configuration 'make-queue-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape queue-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "QueueArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'queue-arn)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (queue-configuration-deprecated (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or notification-id common-lisp:null))
   (event common-lisp:nil :type (common-lisp:or event common-lisp:null))
   (events common-lisp:nil :type (common-lisp:or event-list common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or queue-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'queue-configuration-deprecated
                    'make-queue-configuration-deprecated))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          queue-configuration-deprecated))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "Queue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'queue))))))
(common-lisp:progn
 (common-lisp:deftype queue-configuration-list ()
   '(trivial-types:proper-list queue-configuration))
 (common-lisp:defun |make-queue-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list queue-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype quiet () 'common-lisp:boolean)
(common-lisp:deftype range () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (redirect (:copier common-lisp:nil))
   (host-name common-lisp:nil :type
    (common-lisp:or host-name common-lisp:null))
   (http-redirect-code common-lisp:nil :type
    (common-lisp:or http-redirect-code common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or protocol common-lisp:null))
   (replace-key-prefix-with common-lisp:nil :type
    (common-lisp:or replace-key-prefix-with common-lisp:null))
   (replace-key-with common-lisp:nil :type
    (common-lisp:or replace-key-with common-lisp:null)))
 (common-lisp:export (common-lisp:list 'redirect 'make-redirect))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape redirect))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HostName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'host-name)))
    (aws-sdk/generator/shape::to-query-params "HttpRedirectCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-redirect-code)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "ReplaceKeyPrefixWith"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replace-key-prefix-with)))
    (aws-sdk/generator/shape::to-query-params "ReplaceKeyWith"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replace-key-with))))))
(common-lisp:progn
 (common-lisp:defstruct (redirect-all-requests-to (:copier common-lisp:nil))
   (host-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":host-name is required"))
    :type (common-lisp:or host-name common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or protocol common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redirect-all-requests-to 'make-redirect-all-requests-to))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          redirect-all-requests-to))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HostName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'host-name)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol))))))
(common-lisp:deftype replace-key-prefix-with () 'common-lisp:string)
(common-lisp:deftype replace-key-with () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (replication-configuration (:copier common-lisp:nil))
   (role
    (common-lisp:error #A((17) common-lisp:base-char . ":role is required"))
    :type (common-lisp:or role common-lisp:null))
   (rules
    (common-lisp:error #A((18) common-lisp:base-char . ":rules is required"))
    :type (common-lisp:or replication-rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replication-configuration
                    'make-replication-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          replication-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (replication-rule (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (prefix
    (common-lisp:error #A((19) common-lisp:base-char . ":prefix is required"))
    :type (common-lisp:or prefix common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or replication-rule-status common-lisp:null))
   (destination
    (common-lisp:error
     #A((24) common-lisp:base-char . ":destination is required"))
    :type (common-lisp:or destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replication-rule 'make-replication-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape replication-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination))))))
(common-lisp:deftype replication-rule-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype replication-rules ()
   '(trivial-types:proper-list replication-rule))
 (common-lisp:defun |make-replication-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list replication-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype replication-status () 'common-lisp:string)
(common-lisp:deftype request-charged () 'common-lisp:string)
(common-lisp:deftype request-payer () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (request-payment-configuration (:copier common-lisp:nil))
   (payer
    (common-lisp:error #A((18) common-lisp:base-char . ":payer is required"))
    :type (common-lisp:or payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-payment-configuration
                    'make-request-payment-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-payment-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Payer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'payer))))))
(common-lisp:deftype response-cache-control () 'common-lisp:string)
(common-lisp:deftype response-content-disposition () 'common-lisp:string)
(common-lisp:deftype response-content-encoding () 'common-lisp:string)
(common-lisp:deftype response-content-language () 'common-lisp:string)
(common-lisp:deftype response-content-type () 'common-lisp:string)
(common-lisp:deftype response-expires () 'common-lisp:string)
(common-lisp:deftype restore () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (restore-object-output (:copier common-lisp:nil))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'restore-object-output 'make-restore-object-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          restore-object-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (restore-object-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or object-version-id common-lisp:null))
   (restore-request common-lisp:nil :type
    (common-lisp:or restore-request common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'restore-object-request 'make-restore-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          restore-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "RestoreRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'restore-request)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (restore-request (:copier common-lisp:nil))
   (days
    (common-lisp:error #A((17) common-lisp:base-char . ":days is required"))
    :type (common-lisp:or days common-lisp:null))
   (glacier-job-parameters common-lisp:nil :type
    (common-lisp:or glacier-job-parameters common-lisp:null)))
 (common-lisp:export (common-lisp:list 'restore-request 'make-restore-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape restore-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Days"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'days)))
    (aws-sdk/generator/shape::to-query-params "GlacierJobParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'glacier-job-parameters))))))
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (routing-rule (:copier common-lisp:nil))
   (condition common-lisp:nil :type
    (common-lisp:or condition common-lisp:null))
   (redirect
    (common-lisp:error
     #A((21) common-lisp:base-char . ":redirect is required"))
    :type (common-lisp:or redirect common-lisp:null)))
 (common-lisp:export (common-lisp:list 'routing-rule 'make-routing-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape routing-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Condition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'condition)))
    (aws-sdk/generator/shape::to-query-params "Redirect"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'redirect))))))
(common-lisp:progn
 (common-lisp:deftype routing-rules ()
   '(trivial-types:proper-list routing-rule))
 (common-lisp:defun |make-routing-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list routing-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rule (:copier common-lisp:nil))
   (expiration common-lisp:nil :type
    (common-lisp:or lifecycle-expiration common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (prefix
    (common-lisp:error #A((19) common-lisp:base-char . ":prefix is required"))
    :type (common-lisp:or prefix common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or expiration-status common-lisp:null))
   (transition common-lisp:nil :type
    (common-lisp:or transition common-lisp:null))
   (noncurrent-version-transition common-lisp:nil :type
    (common-lisp:or noncurrent-version-transition common-lisp:null))
   (noncurrent-version-expiration common-lisp:nil :type
    (common-lisp:or noncurrent-version-expiration common-lisp:null))
   (abort-incomplete-multipart-upload common-lisp:nil :type
    (common-lisp:or abort-incomplete-multipart-upload common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "ID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Transition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'transition)))
    (aws-sdk/generator/shape::to-query-params "NoncurrentVersionTransition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'noncurrent-version-transition)))
    (aws-sdk/generator/shape::to-query-params "NoncurrentVersionExpiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'noncurrent-version-expiration)))
    (aws-sdk/generator/shape::to-query-params "AbortIncompleteMultipartUpload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-incomplete-multipart-upload))))))
(common-lisp:progn
 (common-lisp:deftype rules () '(trivial-types:proper-list rule))
 (common-lisp:defun |make-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (s3key-filter (:copier common-lisp:nil))
   (filter-rules common-lisp:nil :type
    (common-lisp:or filter-rule-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3key-filter 'make-s3key-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3key-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FilterRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-rules))))))
(common-lisp:deftype ssecustomer-algorithm () 'common-lisp:string)
(common-lisp:deftype ssecustomer-key () 'common-lisp:string)
(common-lisp:deftype ssecustomer-key-md5 () 'common-lisp:string)
(common-lisp:deftype ssekmskey-id () 'common-lisp:string)
(common-lisp:deftype server-side-encryption () 'common-lisp:string)
(common-lisp:deftype size () 'common-lisp:integer)
(common-lisp:deftype start-after () 'common-lisp:string)
(common-lisp:deftype storage-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (storage-class-analysis (:copier common-lisp:nil))
   (data-export common-lisp:nil :type
    (common-lisp:or storage-class-analysis-data-export common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-class-analysis 'make-storage-class-analysis))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          storage-class-analysis))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataExport"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-export))))))
(common-lisp:progn
 (common-lisp:defstruct
     (storage-class-analysis-data-export (:copier common-lisp:nil))
   (output-schema-version
    (common-lisp:error
     #A((34) common-lisp:base-char . ":output-schema-version is required"))
    :type
    (common-lisp:or storage-class-analysis-schema-version common-lisp:null))
   (destination
    (common-lisp:error
     #A((24) common-lisp:base-char . ":destination is required"))
    :type (common-lisp:or analytics-export-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-class-analysis-data-export
                    'make-storage-class-analysis-data-export))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          storage-class-analysis-data-export))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OutputSchemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-schema-version)))
    (aws-sdk/generator/shape::to-query-params "Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination))))))
(common-lisp:deftype storage-class-analysis-schema-version ()
  'common-lisp:string)
(common-lisp:deftype suffix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype tag-set () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tagging (:copier common-lisp:nil))
   (tag-set
    (common-lisp:error #A((20) common-lisp:base-char . ":tag-set is required"))
    :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tagging 'make-tagging))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tagging))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-set))))))
(common-lisp:deftype tagging-directive () 'common-lisp:string)
(common-lisp:deftype tagging-header () 'common-lisp:string)
(common-lisp:deftype target-bucket () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (target-grant (:copier common-lisp:nil))
   (grantee common-lisp:nil :type (common-lisp:or grantee common-lisp:null))
   (permission common-lisp:nil :type
    (common-lisp:or bucket-logs-permission common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-grant 'make-target-grant))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target-grant))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Grantee"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grantee)))
    (aws-sdk/generator/shape::to-query-params "Permission"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'permission))))))
(common-lisp:progn
 (common-lisp:deftype target-grants ()
   '(trivial-types:proper-list target-grant))
 (common-lisp:defun |make-target-grants|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-grant))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-prefix () 'common-lisp:string)
(common-lisp:deftype tier () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:deftype topic-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (topic-configuration (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or notification-id common-lisp:null))
   (topic-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":topic-arn is required"))
    :type (common-lisp:or topic-arn common-lisp:null))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or event-list common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or notification-configuration-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'topic-configuration 'make-topic-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape topic-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (topic-configuration-deprecated (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or notification-id common-lisp:null))
   (events common-lisp:nil :type (common-lisp:or event-list common-lisp:null))
   (event common-lisp:nil :type (common-lisp:or event common-lisp:null))
   (topic common-lisp:nil :type (common-lisp:or topic-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'topic-configuration-deprecated
                    'make-topic-configuration-deprecated))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          topic-configuration-deprecated))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "Event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event)))
    (aws-sdk/generator/shape::to-query-params "Topic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic))))))
(common-lisp:progn
 (common-lisp:deftype topic-configuration-list ()
   '(trivial-types:proper-list topic-configuration))
 (common-lisp:defun |make-topic-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list topic-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transition (:copier common-lisp:nil))
   (date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (days common-lisp:nil :type (common-lisp:or days common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or transition-storage-class common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transition 'make-transition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape transition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Date"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date)))
    (aws-sdk/generator/shape::to-query-params "Days"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'days)))
    (aws-sdk/generator/shape::to-query-params "StorageClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-class))))))
(common-lisp:progn
 (common-lisp:deftype transition-list ()
   '(trivial-types:proper-list transition))
 (common-lisp:defun |make-transition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list transition))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transition-storage-class () 'common-lisp:string)
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:deftype uri () 'common-lisp:string)
(common-lisp:deftype upload-id-marker () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (upload-part-copy-output (:copier common-lisp:nil))
   (copy-source-version-id common-lisp:nil :type
    (common-lisp:or copy-source-version-id common-lisp:null))
   (copy-part-result common-lisp:nil :type
    (common-lisp:or copy-part-result common-lisp:null))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-part-copy-output 'make-upload-part-copy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          upload-part-copy-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CopySourceVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-version-id)))
    (aws-sdk/generator/shape::to-query-params "CopyPartResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-part-result)))
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-part-copy-request (:copier common-lisp:nil))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (copy-source
    (common-lisp:error
     #A((24) common-lisp:base-char . ":copy-source is required"))
    :type (common-lisp:or copy-source common-lisp:null))
   (copy-source-if-match common-lisp:nil :type
    (common-lisp:or copy-source-if-match common-lisp:null))
   (copy-source-if-modified-since common-lisp:nil :type
    (common-lisp:or copy-source-if-modified-since common-lisp:null))
   (copy-source-if-none-match common-lisp:nil :type
    (common-lisp:or copy-source-if-none-match common-lisp:null))
   (copy-source-if-unmodified-since common-lisp:nil :type
    (common-lisp:or copy-source-if-unmodified-since common-lisp:null))
   (copy-source-range common-lisp:nil :type
    (common-lisp:or copy-source-range common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (part-number
    (common-lisp:error
     #A((24) common-lisp:base-char . ":part-number is required"))
    :type (common-lisp:or part-number common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":upload-id is required"))
    :type (common-lisp:or multipart-upload-id common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key common-lisp:nil :type
    (common-lisp:or ssecustomer-key common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (copy-source-ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or copy-source-ssecustomer-algorithm common-lisp:null))
   (copy-source-ssecustomer-key common-lisp:nil :type
    (common-lisp:or copy-source-ssecustomer-key common-lisp:null))
   (copy-source-ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or copy-source-ssecustomer-key-md5 common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-part-copy-request 'make-upload-part-copy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          upload-part-copy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "CopySource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-match)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfModifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-modified-since)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfNoneMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-none-match)))
    (aws-sdk/generator/shape::to-query-params "CopySourceIfUnmodifiedSince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-if-unmodified-since)))
    (aws-sdk/generator/shape::to-query-params "CopySourceRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-range)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "PartNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number)))
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "CopySourceSSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "CopySourceSSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "CopySourceSSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'copy-source-ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-part-output (:copier common-lisp:nil))
   (server-side-encryption common-lisp:nil :type
    (common-lisp:or server-side-encryption common-lisp:null))
   (etag common-lisp:nil :type (common-lisp:or etag common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (ssekmskey-id common-lisp:nil :type
    (common-lisp:or ssekmskey-id common-lisp:null))
   (request-charged common-lisp:nil :type
    (common-lisp:or request-charged common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-part-output 'make-upload-part-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape upload-part-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServerSideEncryption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-encryption)))
    (aws-sdk/generator/shape::to-query-params "ETag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'etag)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "SSEKMSKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssekmskey-id)))
    (aws-sdk/generator/shape::to-query-params "RequestCharged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-charged))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-part-request (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or body common-lisp:null))
   (bucket
    (common-lisp:error #A((19) common-lisp:base-char . ":bucket is required"))
    :type (common-lisp:or bucket-name common-lisp:null))
   (content-length common-lisp:nil :type
    (common-lisp:or content-length common-lisp:null))
   (content-md5 common-lisp:nil :type
    (common-lisp:or content-md5 common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or object-key common-lisp:null))
   (part-number
    (common-lisp:error
     #A((24) common-lisp:base-char . ":part-number is required"))
    :type (common-lisp:or part-number common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":upload-id is required"))
    :type (common-lisp:or multipart-upload-id common-lisp:null))
   (ssecustomer-algorithm common-lisp:nil :type
    (common-lisp:or ssecustomer-algorithm common-lisp:null))
   (ssecustomer-key common-lisp:nil :type
    (common-lisp:or ssecustomer-key common-lisp:null))
   (ssecustomer-key-md5 common-lisp:nil :type
    (common-lisp:or ssecustomer-key-md5 common-lisp:null))
   (request-payer common-lisp:nil :type
    (common-lisp:or request-payer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-part-request 'make-upload-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape upload-part-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "ContentLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-length)))
    (aws-sdk/generator/shape::to-query-params "ContentMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-md5)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "PartNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-number)))
    (aws-sdk/generator/shape::to-query-params "UploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerAlgorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-algorithm)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key)))
    (aws-sdk/generator/shape::to-query-params "SSECustomerKeyMD5"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssecustomer-key-md5)))
    (aws-sdk/generator/shape::to-query-params "RequestPayer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-payer))))))
(common-lisp:deftype value () 'common-lisp:string)
(common-lisp:deftype version-id-marker () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (versioning-configuration (:copier common-lisp:nil))
   (mfadelete common-lisp:nil :type
    (common-lisp:or mfadelete common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or bucket-versioning-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'versioning-configuration 'make-versioning-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          versioning-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MFADelete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfadelete)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (website-configuration (:copier common-lisp:nil))
   (error-document common-lisp:nil :type
    (common-lisp:or error-document common-lisp:null))
   (index-document common-lisp:nil :type
    (common-lisp:or index-document common-lisp:null))
   (redirect-all-requests-to common-lisp:nil :type
    (common-lisp:or redirect-all-requests-to common-lisp:null))
   (routing-rules common-lisp:nil :type
    (common-lisp:or routing-rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'website-configuration 'make-website-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          website-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ErrorDocument"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-document)))
    (aws-sdk/generator/shape::to-query-params "IndexDocument"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-document)))
    (aws-sdk/generator/shape::to-query-params "RedirectAllRequestsTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'redirect-all-requests-to)))
    (aws-sdk/generator/shape::to-query-params "RoutingRules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'routing-rules))))))
(common-lisp:deftype website-redirect-location () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun abort-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key upload-id request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket key upload-id request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-abort-multipart-upload-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"AbortMultipartUpload")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AbortMultipartUploadOutput" common-lisp:nil)))
 (common-lisp:export 'abort-multipart-upload))
(common-lisp:progn
 (common-lisp:defun complete-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key multipart-upload upload-id
                     request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket key multipart-upload upload-id
     request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-complete-multipart-upload-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :post :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CompleteMultipartUpload")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CompleteMultipartUploadOutput" common-lisp:nil)))
 (common-lisp:export 'complete-multipart-upload))
(common-lisp:progn
 (common-lisp:defun copy-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acl bucket cache-control
                     content-disposition content-encoding content-language
                     content-type copy-source copy-source-if-match
                     copy-source-if-modified-since copy-source-if-none-match
                     copy-source-if-unmodified-since expires grant-full-control
                     grant-read grant-read-acp grant-write-acp key metadata
                     metadata-directive tagging-directive
                     server-side-encryption storage-class
                     website-redirect-location ssecustomer-algorithm
                     ssecustomer-key ssecustomer-key-md5 ssekmskey-id
                     copy-source-ssecustomer-algorithm
                     copy-source-ssecustomer-key
                     copy-source-ssecustomer-key-md5 request-payer tagging)
   (common-lisp:declare
    (common-lisp:ignorable acl bucket cache-control content-disposition
     content-encoding content-language content-type copy-source
     copy-source-if-match copy-source-if-modified-since
     copy-source-if-none-match copy-source-if-unmodified-since expires
     grant-full-control grant-read grant-read-acp grant-write-acp key metadata
     metadata-directive tagging-directive server-side-encryption storage-class
     website-redirect-location ssecustomer-algorithm ssecustomer-key
     ssecustomer-key-md5 ssekmskey-id copy-source-ssecustomer-algorithm
     copy-source-ssecustomer-key copy-source-ssecustomer-key-md5 request-payer
     tagging))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-copy-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CopyObject")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CopyObjectOutput" common-lisp:nil)))
 (common-lisp:export 'copy-object))
(common-lisp:progn
 (common-lisp:defun create-bucket
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acl bucket create-bucket-configuration
                     grant-full-control grant-read grant-read-acp grant-write
                     grant-write-acp)
   (common-lisp:declare
    (common-lisp:ignorable acl bucket create-bucket-configuration
     grant-full-control grant-read grant-read-acp grant-write grant-write-acp))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-bucket-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateBucket")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateBucketOutput" common-lisp:nil)))
 (common-lisp:export 'create-bucket))
(common-lisp:progn
 (common-lisp:defun create-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acl bucket cache-control
                     content-disposition content-encoding content-language
                     content-type expires grant-full-control grant-read
                     grant-read-acp grant-write-acp key metadata
                     server-side-encryption storage-class
                     website-redirect-location ssecustomer-algorithm
                     ssecustomer-key ssecustomer-key-md5 ssekmskey-id
                     request-payer tagging)
   (common-lisp:declare
    (common-lisp:ignorable acl bucket cache-control content-disposition
     content-encoding content-language content-type expires grant-full-control
     grant-read grant-read-acp grant-write-acp key metadata
     server-side-encryption storage-class website-redirect-location
     ssecustomer-algorithm ssecustomer-key ssecustomer-key-md5 ssekmskey-id
     request-payer tagging))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-multipart-upload-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/~a?uploads" bucket
                                                   key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateMultipartUpload")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateMultipartUploadOutput" common-lisp:nil)))
 (common-lisp:export 'create-multipart-upload))
(common-lisp:progn
 (common-lisp:defun delete-bucket
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bucket-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil "/~a"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBucket")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket))
(common-lisp:progn
 (common-lisp:defun delete-bucket-analytics-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id)
   (common-lisp:declare (common-lisp:ignorable bucket id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bucket-analytics-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?analytics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteBucketAnalyticsConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-analytics-configuration))
(common-lisp:progn
 (common-lisp:defun delete-bucket-cors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bucket-cors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil "/~a?cors"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBucketCors")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-cors))
(common-lisp:progn
 (common-lisp:defun delete-bucket-inventory-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id)
   (common-lisp:declare (common-lisp:ignorable bucket id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bucket-inventory-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?inventory" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteBucketInventoryConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-inventory-configuration))
(common-lisp:progn
 (common-lisp:defun delete-bucket-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bucket-lifecycle-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?lifecycle" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBucketLifecycle")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-lifecycle))
(common-lisp:progn
 (common-lisp:defun delete-bucket-metrics-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id)
   (common-lisp:declare (common-lisp:ignorable bucket id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bucket-metrics-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?metrics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteBucketMetricsConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-metrics-configuration))
(common-lisp:progn
 (common-lisp:defun delete-bucket-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bucket-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil "/~a?policy"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBucketPolicy")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-policy))
(common-lisp:progn
 (common-lisp:defun delete-bucket-replication
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bucket-replication-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?replication" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBucketReplication")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-replication))
(common-lisp:progn
 (common-lisp:defun delete-bucket-tagging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bucket-tagging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?tagging" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBucketTagging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-tagging))
(common-lisp:progn
 (common-lisp:defun delete-bucket-website
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bucket-website-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?website" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBucketWebsite")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bucket-website))
(common-lisp:progn
 (common-lisp:defun delete-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key mfa version-id request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket key mfa version-id request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteObject")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteObjectOutput" common-lisp:nil)))
 (common-lisp:export 'delete-object))
(common-lisp:progn
 (common-lisp:defun delete-object-tagging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key version-id)
   (common-lisp:declare (common-lisp:ignorable bucket key version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-object-tagging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/~a?tagging" bucket
                                                   key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteObjectTagging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteObjectTaggingOutput" common-lisp:nil)))
 (common-lisp:export 'delete-object-tagging))
(common-lisp:progn
 (common-lisp:defun delete-objects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket delete mfa request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket delete mfa request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-objects-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :post :path
                               (common-lisp:format common-lisp:nil "/~a?delete"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteObjects")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteObjectsOutput" common-lisp:nil)))
 (common-lisp:export 'delete-objects))
(common-lisp:progn
 (common-lisp:defun get-bucket-accelerate-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-accelerate-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?accelerate" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetBucketAccelerateConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketAccelerateConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-accelerate-configuration))
(common-lisp:progn
 (common-lisp:defun get-bucket-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-acl-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a?acl"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketAcl")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketAclOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-acl))
(common-lisp:progn
 (common-lisp:defun get-bucket-analytics-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id)
   (common-lisp:declare (common-lisp:ignorable bucket id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-analytics-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?analytics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetBucketAnalyticsConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketAnalyticsConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-analytics-configuration))
(common-lisp:progn
 (common-lisp:defun get-bucket-cors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-cors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a?cors"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketCors")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketCorsOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-cors))
(common-lisp:progn
 (common-lisp:defun get-bucket-inventory-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id)
   (common-lisp:declare (common-lisp:ignorable bucket id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-inventory-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?inventory" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetBucketInventoryConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketInventoryConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-inventory-configuration))
(common-lisp:progn
 (common-lisp:defun get-bucket-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-lifecycle-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?lifecycle" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketLifecycle")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketLifecycleOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-lifecycle))
(common-lisp:progn
 (common-lisp:defun get-bucket-lifecycle-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-lifecycle-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?lifecycle" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetBucketLifecycleConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketLifecycleConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-lifecycle-configuration))
(common-lisp:progn
 (common-lisp:defun get-bucket-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?location" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketLocation")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketLocationOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-location))
(common-lisp:progn
 (common-lisp:defun get-bucket-logging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-logging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?logging" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketLogging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketLoggingOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-logging))
(common-lisp:progn
 (common-lisp:defun get-bucket-metrics-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id)
   (common-lisp:declare (common-lisp:ignorable bucket id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-metrics-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?metrics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketMetricsConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketMetricsConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-metrics-configuration))
(common-lisp:progn
 (common-lisp:defun get-bucket-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-notification-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?notification" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketNotification")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "NotificationConfigurationDeprecated" common-lisp:nil)))
 (common-lisp:export 'get-bucket-notification))
(common-lisp:progn
 (common-lisp:defun get-bucket-notification-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-notification-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?notification" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetBucketNotificationConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "NotificationConfiguration" common-lisp:nil)))
 (common-lisp:export 'get-bucket-notification-configuration))
(common-lisp:progn
 (common-lisp:defun get-bucket-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a?policy"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketPolicy")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketPolicyOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-policy))
(common-lisp:progn
 (common-lisp:defun get-bucket-replication
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-replication-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?replication" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketReplication")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketReplicationOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-replication))
(common-lisp:progn
 (common-lisp:defun get-bucket-request-payment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bucket-request-payment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?requestPayment" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketRequestPayment")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketRequestPaymentOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-request-payment))
(common-lisp:progn
 (common-lisp:defun get-bucket-tagging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-tagging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?tagging" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketTagging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketTaggingOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-tagging))
(common-lisp:progn
 (common-lisp:defun get-bucket-versioning
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-versioning-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?versioning" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketVersioning")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketVersioningOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-versioning))
(common-lisp:progn
 (common-lisp:defun get-bucket-website
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-website-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?website" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBucketWebsite")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBucketWebsiteOutput" common-lisp:nil)))
 (common-lisp:export 'get-bucket-website))
(common-lisp:progn
 (common-lisp:defun get-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket if-match if-modified-since
                     if-none-match if-unmodified-since key range
                     response-cache-control response-content-disposition
                     response-content-encoding response-content-language
                     response-content-type response-expires version-id
                     ssecustomer-algorithm ssecustomer-key ssecustomer-key-md5
                     request-payer part-number)
   (common-lisp:declare
    (common-lisp:ignorable bucket if-match if-modified-since if-none-match
     if-unmodified-since key range response-cache-control
     response-content-disposition response-content-encoding
     response-content-language response-content-type response-expires
     version-id ssecustomer-algorithm ssecustomer-key ssecustomer-key-md5
     request-payer part-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetObject")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetObjectOutput" common-lisp:nil)))
 (common-lisp:export 'get-object))
(common-lisp:progn
 (common-lisp:defun get-object-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key version-id request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket key version-id request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-object-acl-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a/~a?acl"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetObjectAcl")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetObjectAclOutput" common-lisp:nil)))
 (common-lisp:export 'get-object-acl))
(common-lisp:progn
 (common-lisp:defun get-object-tagging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key version-id)
   (common-lisp:declare (common-lisp:ignorable bucket key version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-object-tagging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/~a?tagging" bucket
                                                   key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetObjectTagging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetObjectTaggingOutput" common-lisp:nil)))
 (common-lisp:export 'get-object-tagging))
(common-lisp:progn
 (common-lisp:defun get-object-torrent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key request-payer)
   (common-lisp:declare (common-lisp:ignorable bucket key request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-object-torrent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/~a?torrent" bucket
                                                   key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetObjectTorrent")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetObjectTorrentOutput" common-lisp:nil)))
 (common-lisp:export 'get-object-torrent))
(common-lisp:progn
 (common-lisp:defun head-bucket
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket)
   (common-lisp:declare (common-lisp:ignorable bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-head-bucket-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :head :path
                               (common-lisp:format common-lisp:nil "/~a"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"HeadBucket")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'head-bucket))
(common-lisp:progn
 (common-lisp:defun head-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket if-match if-modified-since
                     if-none-match if-unmodified-since key range version-id
                     ssecustomer-algorithm ssecustomer-key ssecustomer-key-md5
                     request-payer part-number)
   (common-lisp:declare
    (common-lisp:ignorable bucket if-match if-modified-since if-none-match
     if-unmodified-since key range version-id ssecustomer-algorithm
     ssecustomer-key ssecustomer-key-md5 request-payer part-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-head-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :head :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"HeadObject")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "HeadObjectOutput" common-lisp:nil)))
 (common-lisp:export 'head-object))
(common-lisp:progn
 (common-lisp:defun list-bucket-analytics-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket continuation-token)
   (common-lisp:declare (common-lisp:ignorable bucket continuation-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-bucket-analytics-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?analytics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ListBucketAnalyticsConfigurations")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBucketAnalyticsConfigurationsOutput" common-lisp:nil)))
 (common-lisp:export 'list-bucket-analytics-configurations))
(common-lisp:progn
 (common-lisp:defun list-bucket-inventory-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket continuation-token)
   (common-lisp:declare (common-lisp:ignorable bucket continuation-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-bucket-inventory-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?inventory" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ListBucketInventoryConfigurations")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBucketInventoryConfigurationsOutput" common-lisp:nil)))
 (common-lisp:export 'list-bucket-inventory-configurations))
(common-lisp:progn
 (common-lisp:defun list-bucket-metrics-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket continuation-token)
   (common-lisp:declare (common-lisp:ignorable bucket continuation-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-bucket-metrics-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?metrics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ListBucketMetricsConfigurations")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBucketMetricsConfigurationsOutput" common-lisp:nil)))
 (common-lisp:export 'list-bucket-metrics-configurations))
(common-lisp:progn
 (common-lisp:defun list-buckets ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                             :method :get :params
                             (common-lisp:cons "Action" "ListBuckets"))
    "ListBucketsOutput" common-lisp:nil))
 (common-lisp:export 'list-buckets))
(common-lisp:progn
 (common-lisp:defun list-multipart-uploads
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket delimiter encoding-type key-marker
                     max-uploads prefix upload-id-marker)
   (common-lisp:declare
    (common-lisp:ignorable bucket delimiter encoding-type key-marker
     max-uploads prefix upload-id-marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-multipart-uploads-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?uploads" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListMultipartUploads")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListMultipartUploadsOutput" common-lisp:nil)))
 (common-lisp:export 'list-multipart-uploads))
(common-lisp:progn
 (common-lisp:defun list-object-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket delimiter encoding-type key-marker
                     max-keys prefix version-id-marker)
   (common-lisp:declare
    (common-lisp:ignorable bucket delimiter encoding-type key-marker max-keys
     prefix version-id-marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-object-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?versions" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjectVersions")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectVersionsOutput" common-lisp:nil)))
 (common-lisp:export 'list-object-versions))
(common-lisp:progn
 (common-lisp:defun list-objects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket delimiter encoding-type marker
                     max-keys prefix request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket delimiter encoding-type marker max-keys
     prefix request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-objects-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjects")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectsOutput" common-lisp:nil)))
 (common-lisp:export 'list-objects))
(common-lisp:progn
 (common-lisp:defun list-objects-v2
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket delimiter encoding-type max-keys
                     prefix continuation-token fetch-owner start-after
                     request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket delimiter encoding-type max-keys prefix
     continuation-token fetch-owner start-after request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-objects-v2request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?list-type=2" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjectsV2")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectsV2Output" common-lisp:nil)))
 (common-lisp:export 'list-objects-v2))
(common-lisp:progn
 (common-lisp:defun list-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key max-parts part-number-marker
                     upload-id request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket key max-parts part-number-marker upload-id
     request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-parts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListParts")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPartsOutput" common-lisp:nil)))
 (common-lisp:export 'list-parts))
(common-lisp:progn
 (common-lisp:defun put-bucket-accelerate-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket accelerate-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket accelerate-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bucket-accelerate-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?accelerate" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"PutBucketAccelerateConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-accelerate-configuration))
(common-lisp:progn
 (common-lisp:defun put-bucket-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acl access-control-policy bucket
                     content-md5 grant-full-control grant-read grant-read-acp
                     grant-write grant-write-acp)
   (common-lisp:declare
    (common-lisp:ignorable acl access-control-policy bucket content-md5
     grant-full-control grant-read grant-read-acp grant-write grant-write-acp))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-acl-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a?acl"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketAcl")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-acl))
(common-lisp:progn
 (common-lisp:defun put-bucket-analytics-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id analytics-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket id analytics-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bucket-analytics-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?analytics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"PutBucketAnalyticsConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-analytics-configuration))
(common-lisp:progn
 (common-lisp:defun put-bucket-cors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket corsconfiguration content-md5)
   (common-lisp:declare
    (common-lisp:ignorable bucket corsconfiguration content-md5))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-cors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a?cors"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketCors")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-cors))
(common-lisp:progn
 (common-lisp:defun put-bucket-inventory-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id inventory-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket id inventory-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bucket-inventory-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?inventory" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"PutBucketInventoryConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-inventory-configuration))
(common-lisp:progn
 (common-lisp:defun put-bucket-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5
                     lifecycle-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket content-md5 lifecycle-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-lifecycle-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?lifecycle" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketLifecycle")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-lifecycle))
(common-lisp:progn
 (common-lisp:defun put-bucket-lifecycle-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket lifecycle-configuration)
   (common-lisp:declare (common-lisp:ignorable bucket lifecycle-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bucket-lifecycle-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?lifecycle" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"PutBucketLifecycleConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-lifecycle-configuration))
(common-lisp:progn
 (common-lisp:defun put-bucket-logging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket bucket-logging-status content-md5)
   (common-lisp:declare
    (common-lisp:ignorable bucket bucket-logging-status content-md5))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-logging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?logging" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketLogging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-logging))
(common-lisp:progn
 (common-lisp:defun put-bucket-metrics-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket id metrics-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket id metrics-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bucket-metrics-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?metrics" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketMetricsConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-metrics-configuration))
(common-lisp:progn
 (common-lisp:defun put-bucket-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5
                     notification-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket content-md5 notification-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-notification-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?notification" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketNotification")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-notification))
(common-lisp:progn
 (common-lisp:defun put-bucket-notification-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket notification-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket notification-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bucket-notification-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?notification" bucket)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"PutBucketNotificationConfiguration")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-notification-configuration))
(common-lisp:progn
 (common-lisp:defun put-bucket-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5 policy)
   (common-lisp:declare (common-lisp:ignorable bucket content-md5 policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a?policy"
                                                   bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketPolicy")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-policy))
(common-lisp:progn
 (common-lisp:defun put-bucket-replication
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5
                     replication-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket content-md5 replication-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-replication-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?replication" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketReplication")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-replication))
(common-lisp:progn
 (common-lisp:defun put-bucket-request-payment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5
                     request-payment-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket content-md5 request-payment-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bucket-request-payment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?requestPayment" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketRequestPayment")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-request-payment))
(common-lisp:progn
 (common-lisp:defun put-bucket-tagging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5 tagging)
   (common-lisp:declare (common-lisp:ignorable bucket content-md5 tagging))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-tagging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?tagging" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketTagging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-tagging))
(common-lisp:progn
 (common-lisp:defun put-bucket-versioning
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5 mfa
                     versioning-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket content-md5 mfa versioning-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-versioning-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?versioning" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketVersioning")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-versioning))
(common-lisp:progn
 (common-lisp:defun put-bucket-website
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket content-md5 website-configuration)
   (common-lisp:declare
    (common-lisp:ignorable bucket content-md5 website-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bucket-website-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a?website" bucket)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBucketWebsite")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-bucket-website))
(common-lisp:progn
 (common-lisp:defun put-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acl body bucket cache-control
                     content-disposition content-encoding content-language
                     content-length content-md5 content-type expires
                     grant-full-control grant-read grant-read-acp
                     grant-write-acp key metadata server-side-encryption
                     storage-class website-redirect-location
                     ssecustomer-algorithm ssecustomer-key ssecustomer-key-md5
                     ssekmskey-id request-payer tagging)
   (common-lisp:declare
    (common-lisp:ignorable acl body bucket cache-control content-disposition
     content-encoding content-language content-length content-md5 content-type
     expires grant-full-control grant-read grant-read-acp grant-write-acp key
     metadata server-side-encryption storage-class website-redirect-location
     ssecustomer-algorithm ssecustomer-key ssecustomer-key-md5 ssekmskey-id
     request-payer tagging))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutObject")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutObjectOutput" common-lisp:nil)))
 (common-lisp:export 'put-object))
(common-lisp:progn
 (common-lisp:defun put-object-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acl access-control-policy bucket
                     content-md5 grant-full-control grant-read grant-read-acp
                     grant-write grant-write-acp key request-payer version-id)
   (common-lisp:declare
    (common-lisp:ignorable acl access-control-policy bucket content-md5
     grant-full-control grant-read grant-read-acp grant-write grant-write-acp
     key request-payer version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-object-acl-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a/~a?acl"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutObjectAcl")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutObjectAclOutput" common-lisp:nil)))
 (common-lisp:export 'put-object-acl))
(common-lisp:progn
 (common-lisp:defun put-object-tagging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key version-id content-md5
                     tagging)
   (common-lisp:declare
    (common-lisp:ignorable bucket key version-id content-md5 tagging))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-object-tagging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/~a?tagging" bucket
                                                   key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutObjectTagging")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutObjectTaggingOutput" common-lisp:nil)))
 (common-lisp:export 'put-object-tagging))
(common-lisp:progn
 (common-lisp:defun restore-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket key version-id restore-request
                     request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket key version-id restore-request
     request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-restore-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/~a?restore" bucket
                                                   key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"RestoreObject")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RestoreObjectOutput" common-lisp:nil)))
 (common-lisp:export 'restore-object))
(common-lisp:progn
 (common-lisp:defun upload-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key body bucket content-length content-md5
                     key part-number upload-id ssecustomer-algorithm
                     ssecustomer-key ssecustomer-key-md5 request-payer)
   (common-lisp:declare
    (common-lisp:ignorable body bucket content-length content-md5 key
     part-number upload-id ssecustomer-algorithm ssecustomer-key
     ssecustomer-key-md5 request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-upload-part-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UploadPart")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UploadPartOutput" common-lisp:nil)))
 (common-lisp:export 'upload-part))
(common-lisp:progn
 (common-lisp:defun upload-part-copy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket copy-source copy-source-if-match
                     copy-source-if-modified-since copy-source-if-none-match
                     copy-source-if-unmodified-since copy-source-range key
                     part-number upload-id ssecustomer-algorithm
                     ssecustomer-key ssecustomer-key-md5
                     copy-source-ssecustomer-algorithm
                     copy-source-ssecustomer-key
                     copy-source-ssecustomer-key-md5 request-payer)
   (common-lisp:declare
    (common-lisp:ignorable bucket copy-source copy-source-if-match
     copy-source-if-modified-since copy-source-if-none-match
     copy-source-if-unmodified-since copy-source-range key part-number
     upload-id ssecustomer-algorithm ssecustomer-key ssecustomer-key-md5
     copy-source-ssecustomer-algorithm copy-source-ssecustomer-key
     copy-source-ssecustomer-key-md5 request-payer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-upload-part-copy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((2) common-lisp:base-char . "s3")
                               :method :put :path
                               (common-lisp:format common-lisp:nil "/~a/~a"
                                                   bucket key+)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UploadPartCopy")
                                  ("Version" ,@"2006-03-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UploadPartCopyOutput" common-lisp:nil)))
 (common-lisp:export 'upload-part-copy))