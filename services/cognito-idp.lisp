;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cognito-idp
  (:use)
  (:nicknames #:aws/cognito-idp)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/cognito-idp)

(common-lisp:deftype awsaccount-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (add-custom-attributes-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (custom-attributes
    (common-lisp:error
     #A((30) common-lisp:base-char . ":custom-attributes is required"))
    :type (common-lisp:or custom-attributes-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-custom-attributes-request
                    'make-add-custom-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-custom-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "CustomAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-custom-attributes-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-custom-attributes-response
                    'make-add-custom-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-custom-attributes-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-add-user-to-group-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (group-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":group-name is required"))
    :type (common-lisp:or group-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-add-user-to-group-request
                    'make-admin-add-user-to-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-add-user-to-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-confirm-sign-up-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-confirm-sign-up-request
                    'make-admin-confirm-sign-up-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-confirm-sign-up-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-confirm-sign-up-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-confirm-sign-up-response
                    'make-admin-confirm-sign-up-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-confirm-sign-up-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-create-user-config-type (:copier common-lisp:nil))
   (allow-admin-create-user-only common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (unused-account-validity-days common-lisp:nil :type
    (common-lisp:or admin-create-user-unused-account-validity-days-type
                    common-lisp:null))
   (invite-message-template common-lisp:nil :type
    (common-lisp:or message-template-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-create-user-config-type
                    'make-admin-create-user-config-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-create-user-config-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AllowAdminCreateUserOnly"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-admin-create-user-only)))
    (aws-sdk/generator/shape::to-query-params "UnusedAccountValidityDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unused-account-validity-days)))
    (aws-sdk/generator/shape::to-query-params "InviteMessageTemplate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invite-message-template))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-create-user-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (validation-data common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (temporary-password common-lisp:nil :type
    (common-lisp:or password-type common-lisp:null))
   (force-alias-creation common-lisp:nil :type
    (common-lisp:or force-alias-creation common-lisp:null))
   (message-action common-lisp:nil :type
    (common-lisp:or message-action-type common-lisp:null))
   (desired-delivery-mediums common-lisp:nil :type
    (common-lisp:or delivery-medium-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-create-user-request
                    'make-admin-create-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-create-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "ValidationData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'validation-data)))
    (aws-sdk/generator/shape::to-query-params "TemporaryPassword"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'temporary-password)))
    (aws-sdk/generator/shape::to-query-params "ForceAliasCreation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'force-alias-creation)))
    (aws-sdk/generator/shape::to-query-params "MessageAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-action)))
    (aws-sdk/generator/shape::to-query-params "DesiredDeliveryMediums"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-delivery-mediums))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-create-user-response (:copier common-lisp:nil))
   (user common-lisp:nil :type (common-lisp:or user-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-create-user-response
                    'make-admin-create-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-create-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:deftype admin-create-user-unused-account-validity-days-type ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (admin-delete-user-attributes-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (user-attribute-names
    (common-lisp:error
     #A((33) common-lisp:base-char . ":user-attribute-names is required"))
    :type (common-lisp:or attribute-name-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-delete-user-attributes-request
                    'make-admin-delete-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-delete-user-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "UserAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attribute-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-delete-user-attributes-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-delete-user-attributes-response
                    'make-admin-delete-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-delete-user-attributes-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (admin-delete-user-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-delete-user-request
                    'make-admin-delete-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-delete-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-disable-provider-for-user-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or string-type common-lisp:null))
   (user
    (common-lisp:error #A((17) common-lisp:base-char . ":user is required"))
    :type (common-lisp:or provider-user-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-disable-provider-for-user-request
                    'make-admin-disable-provider-for-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-disable-provider-for-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-disable-provider-for-user-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-disable-provider-for-user-response
                    'make-admin-disable-provider-for-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-disable-provider-for-user-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (admin-disable-user-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-disable-user-request
                    'make-admin-disable-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-disable-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-disable-user-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-disable-user-response
                    'make-admin-disable-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-disable-user-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (admin-enable-user-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-enable-user-request
                    'make-admin-enable-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-enable-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-enable-user-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-enable-user-response
                    'make-admin-enable-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-enable-user-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (admin-forget-device-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (device-key
    (common-lisp:error
     #A((23) common-lisp:base-char . ":device-key is required"))
    :type (common-lisp:or device-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-forget-device-request
                    'make-admin-forget-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-forget-device-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-get-device-request (:copier common-lisp:nil))
   (device-key
    (common-lisp:error
     #A((23) common-lisp:base-char . ":device-key is required"))
    :type (common-lisp:or device-key-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-device-request 'make-admin-get-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-get-device-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-get-device-response (:copier common-lisp:nil))
   (device
    (common-lisp:error #A((19) common-lisp:base-char . ":device is required"))
    :type (common-lisp:or device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-device-response
                    'make-admin-get-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-get-device-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-get-user-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-user-request 'make-admin-get-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-get-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-get-user-response (:copier common-lisp:nil))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (user-create-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (user-last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (user-status common-lisp:nil :type
    (common-lisp:or user-status-type common-lisp:null))
   (mfaoptions common-lisp:nil :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-user-response 'make-admin-get-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-get-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "UserCreateDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-create-date)))
    (aws-sdk/generator/shape::to-query-params "UserLastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "UserStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-status)))
    (aws-sdk/generator/shape::to-query-params "MFAOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfaoptions))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-initiate-auth-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (auth-flow
    (common-lisp:error
     #A((22) common-lisp:base-char . ":auth-flow is required"))
    :type (common-lisp:or auth-flow-type common-lisp:null))
   (auth-parameters common-lisp:nil :type
    (common-lisp:or auth-parameters-type common-lisp:null))
   (client-metadata common-lisp:nil :type
    (common-lisp:or client-metadata-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-initiate-auth-request
                    'make-admin-initiate-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-initiate-auth-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "AuthFlow"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auth-flow)))
    (aws-sdk/generator/shape::to-query-params "AuthParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auth-parameters)))
    (aws-sdk/generator/shape::to-query-params "ClientMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-initiate-auth-response (:copier common-lisp:nil))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-initiate-auth-response
                    'make-admin-initiate-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-initiate-auth-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChallengeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-name)))
    (aws-sdk/generator/shape::to-query-params "Session"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session)))
    (aws-sdk/generator/shape::to-query-params "ChallengeParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-parameters)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-result))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-link-provider-for-user-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or string-type common-lisp:null))
   (destination-user
    (common-lisp:error
     #A((29) common-lisp:base-char . ":destination-user is required"))
    :type (common-lisp:or provider-user-identifier-type common-lisp:null))
   (source-user
    (common-lisp:error
     #A((24) common-lisp:base-char . ":source-user is required"))
    :type (common-lisp:or provider-user-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-link-provider-for-user-request
                    'make-admin-link-provider-for-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-link-provider-for-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "DestinationUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-user)))
    (aws-sdk/generator/shape::to-query-params "SourceUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-user))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-link-provider-for-user-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-link-provider-for-user-response
                    'make-admin-link-provider-for-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-link-provider-for-user-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (admin-list-devices-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-devices-request
                    'make-admin-list-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-list-devices-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token))))))
(common-lisp:progn
 (common-lisp:defstruct (admin-list-devices-response (:copier common-lisp:nil))
   (devices common-lisp:nil :type
    (common-lisp:or device-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-devices-response
                    'make-admin-list-devices-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-list-devices-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Devices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'devices)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-list-groups-for-user-request (:copier common-lisp:nil))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-groups-for-user-request
                    'make-admin-list-groups-for-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-list-groups-for-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-list-groups-for-user-response (:copier common-lisp:nil))
   (groups common-lisp:nil :type
    (common-lisp:or group-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-groups-for-user-response
                    'make-admin-list-groups-for-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-list-groups-for-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Groups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'groups)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-remove-user-from-group-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (group-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":group-name is required"))
    :type (common-lisp:or group-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-remove-user-from-group-request
                    'make-admin-remove-user-from-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-remove-user-from-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-reset-user-password-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-reset-user-password-request
                    'make-admin-reset-user-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-reset-user-password-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-reset-user-password-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-reset-user-password-response
                    'make-admin-reset-user-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-reset-user-password-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-respond-to-auth-challenge-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (challenge-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":challenge-name is required"))
    :type (common-lisp:or challenge-name-type common-lisp:null))
   (challenge-responses common-lisp:nil :type
    (common-lisp:or challenge-responses-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-respond-to-auth-challenge-request
                    'make-admin-respond-to-auth-challenge-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-respond-to-auth-challenge-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "ChallengeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-name)))
    (aws-sdk/generator/shape::to-query-params "ChallengeResponses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-responses)))
    (aws-sdk/generator/shape::to-query-params "Session"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-respond-to-auth-challenge-response (:copier common-lisp:nil))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-respond-to-auth-challenge-response
                    'make-admin-respond-to-auth-challenge-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-respond-to-auth-challenge-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChallengeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-name)))
    (aws-sdk/generator/shape::to-query-params "Session"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session)))
    (aws-sdk/generator/shape::to-query-params "ChallengeParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-parameters)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-result))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-set-user-settings-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (mfaoptions
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mfaoptions is required"))
    :type (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-set-user-settings-request
                    'make-admin-set-user-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-set-user-settings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "MFAOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfaoptions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-set-user-settings-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-set-user-settings-response
                    'make-admin-set-user-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-set-user-settings-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-device-status-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (device-key
    (common-lisp:error
     #A((23) common-lisp:base-char . ":device-key is required"))
    :type (common-lisp:or device-key-type common-lisp:null))
   (device-remembered-status common-lisp:nil :type
    (common-lisp:or device-remembered-status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-update-device-status-request
                    'make-admin-update-device-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-update-device-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key)))
    (aws-sdk/generator/shape::to-query-params "DeviceRememberedStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-remembered-status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-device-status-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-update-device-status-response
                    'make-admin-update-device-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-update-device-status-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-user-attributes-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (user-attributes
    (common-lisp:error
     #A((28) common-lisp:base-char . ":user-attributes is required"))
    :type (common-lisp:or attribute-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-update-user-attributes-request
                    'make-admin-update-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-update-user-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-user-attributes-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-update-user-attributes-response
                    'make-admin-update-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-update-user-attributes-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-user-global-sign-out-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-user-global-sign-out-request
                    'make-admin-user-global-sign-out-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-user-global-sign-out-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-user-global-sign-out-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'admin-user-global-sign-out-response
                    'make-admin-user-global-sign-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          admin-user-global-sign-out-response))
   (common-lisp:append)))
(common-lisp:deftype alias-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alias-attributes-list-type ()
   '(trivial-types:proper-list alias-attribute-type))
 (common-lisp:defun |make-alias-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alias-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (alias-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alias-exists-exception 'make-alias-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          alias-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype arn-type () 'common-lisp:string)
(common-lisp:deftype attribute-data-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-list-type ()
   '(trivial-types:proper-list attribute-type))
 (common-lisp:defun |make-attribute-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-mapping-key-type () 'common-lisp:string)
(common-lisp:defstruct
    (attribute-mapping-type
     (:constructor |make-attribute-mapping-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype attribute-name-list-type ()
   '(trivial-types:proper-list attribute-name-type))
 (common-lisp:defun |make-attribute-name-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-name-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attribute-type (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or attribute-name-type common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or attribute-value-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-type 'make-attribute-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype attribute-value-type () 'common-lisp:string)
(common-lisp:deftype auth-flow-type () 'common-lisp:string)
(common-lisp:defstruct
    (auth-parameters-type
     (:constructor |make-auth-parameters-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (authentication-result-type (:copier common-lisp:nil))
   (access-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (expires-in common-lisp:nil :type
    (common-lisp:or integer-type common-lisp:null))
   (token-type common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (refresh-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (id-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (new-device-metadata common-lisp:nil :type
    (common-lisp:or new-device-metadata-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authentication-result-type
                    'make-authentication-result-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          authentication-result-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "ExpiresIn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires-in)))
    (aws-sdk/generator/shape::to-query-params "TokenType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token-type)))
    (aws-sdk/generator/shape::to-query-params "RefreshToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'refresh-token)))
    (aws-sdk/generator/shape::to-query-params "IdToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id-token)))
    (aws-sdk/generator/shape::to-query-params "NewDeviceMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-device-metadata))))))
(common-lisp:deftype boolean-type () 'common-lisp:boolean)
(common-lisp:deftype csstype () 'common-lisp:string)
(common-lisp:deftype cssversion-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype callback-urls-list-type ()
   '(trivial-types:proper-list redirect-url-type))
 (common-lisp:defun |make-callback-urls-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list redirect-url-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype challenge-name-type () 'common-lisp:string)
(common-lisp:defstruct
    (challenge-parameters-type
     (:constructor |make-challenge-parameters-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (challenge-responses-type
     (:constructor |make-challenge-responses-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (change-password-request (:copier common-lisp:nil))
   (previous-password
    (common-lisp:error
     #A((30) common-lisp:base-char . ":previous-password is required"))
    :type (common-lisp:or password-type common-lisp:null))
   (proposed-password
    (common-lisp:error
     #A((30) common-lisp:base-char . ":proposed-password is required"))
    :type (common-lisp:or password-type common-lisp:null))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'change-password-request 'make-change-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          change-password-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PreviousPassword"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'previous-password)))
    (aws-sdk/generator/shape::to-query-params "ProposedPassword"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'proposed-password)))
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token))))))
(common-lisp:progn
 (common-lisp:defstruct (change-password-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'change-password-response 'make-change-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          change-password-response))
   (common-lisp:append)))
(common-lisp:deftype client-id-type () 'common-lisp:string)
(common-lisp:defstruct
    (client-metadata-type
     (:constructor |make-client-metadata-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype client-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-permission-list-type ()
   '(trivial-types:proper-list client-permission-type))
 (common-lisp:defun |make-client-permission-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-permission-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-permission-type () 'common-lisp:string)
(common-lisp:deftype client-secret-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype code-delivery-details-list-type ()
   '(trivial-types:proper-list code-delivery-details-type))
 (common-lisp:defun |make-code-delivery-details-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            code-delivery-details-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (code-delivery-details-type (:copier common-lisp:nil))
   (destination common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (delivery-medium common-lisp:nil :type
    (common-lisp:or delivery-medium-type common-lisp:null))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'code-delivery-details-type
                    'make-code-delivery-details-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          code-delivery-details-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination)))
    (aws-sdk/generator/shape::to-query-params "DeliveryMedium"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delivery-medium)))
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (code-delivery-failure-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'code-delivery-failure-exception
                    'make-code-delivery-failure-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          code-delivery-failure-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (code-mismatch-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'code-mismatch-exception 'make-code-mismatch-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          code-mismatch-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype completion-message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (confirm-device-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null))
   (device-key
    (common-lisp:error
     #A((23) common-lisp:base-char . ":device-key is required"))
    :type (common-lisp:or device-key-type common-lisp:null))
   (device-secret-verifier-config common-lisp:nil :type
    (common-lisp:or device-secret-verifier-config-type common-lisp:null))
   (device-name common-lisp:nil :type
    (common-lisp:or device-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-device-request 'make-confirm-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          confirm-device-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key)))
    (aws-sdk/generator/shape::to-query-params "DeviceSecretVerifierConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-secret-verifier-config)))
    (aws-sdk/generator/shape::to-query-params "DeviceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-name))))))
(common-lisp:progn
 (common-lisp:defstruct (confirm-device-response (:copier common-lisp:nil))
   (user-confirmation-necessary common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-device-response 'make-confirm-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          confirm-device-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserConfirmationNecessary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-confirmation-necessary))))))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-forgot-password-request (:copier common-lisp:nil))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (confirmation-code
    (common-lisp:error
     #A((30) common-lisp:base-char . ":confirmation-code is required"))
    :type (common-lisp:or confirmation-code-type common-lisp:null))
   (password
    (common-lisp:error
     #A((21) common-lisp:base-char . ":password is required"))
    :type (common-lisp:or password-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-forgot-password-request
                    'make-confirm-forgot-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          confirm-forgot-password-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "SecretHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-hash)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "ConfirmationCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'confirmation-code)))
    (aws-sdk/generator/shape::to-query-params "Password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password))))))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-forgot-password-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'confirm-forgot-password-response
                    'make-confirm-forgot-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          confirm-forgot-password-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (confirm-sign-up-request (:copier common-lisp:nil))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (confirmation-code
    (common-lisp:error
     #A((30) common-lisp:base-char . ":confirmation-code is required"))
    :type (common-lisp:or confirmation-code-type common-lisp:null))
   (force-alias-creation common-lisp:nil :type
    (common-lisp:or force-alias-creation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-sign-up-request 'make-confirm-sign-up-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          confirm-sign-up-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "SecretHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-hash)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "ConfirmationCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'confirmation-code)))
    (aws-sdk/generator/shape::to-query-params "ForceAliasCreation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'force-alias-creation))))))
(common-lisp:progn
 (common-lisp:defstruct (confirm-sign-up-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'confirm-sign-up-response 'make-confirm-sign-up-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          confirm-sign-up-response))
   (common-lisp:append)))
(common-lisp:deftype confirmation-code-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-group-request (:copier common-lisp:nil))
   (group-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":group-name is required"))
    :type (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (precedence common-lisp:nil :type
    (common-lisp:or precedence-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-group-request 'make-create-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "Precedence"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'precedence))))))
(common-lisp:progn
 (common-lisp:defstruct (create-group-response (:copier common-lisp:nil))
   (group common-lisp:nil :type (common-lisp:or group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-group-response 'make-create-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Group"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-identity-provider-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":provider-name is required"))
    :type (common-lisp:or provider-name-type-v1 common-lisp:null))
   (provider-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":provider-type is required"))
    :type (common-lisp:or identity-provider-type-type common-lisp:null))
   (provider-details
    (common-lisp:error
     #A((29) common-lisp:base-char . ":provider-details is required"))
    :type (common-lisp:or provider-details-type common-lisp:null))
   (attribute-mapping common-lisp:nil :type
    (common-lisp:or attribute-mapping-type common-lisp:null))
   (idp-identifiers common-lisp:nil :type
    (common-lisp:or idp-identifiers-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-identity-provider-request
                    'make-create-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-identity-provider-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "ProviderType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-type)))
    (aws-sdk/generator/shape::to-query-params "ProviderDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-details)))
    (aws-sdk/generator/shape::to-query-params "AttributeMapping"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-mapping)))
    (aws-sdk/generator/shape::to-query-params "IdpIdentifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idp-identifiers))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-identity-provider-response (:copier common-lisp:nil))
   (identity-provider
    (common-lisp:error
     #A((30) common-lisp:base-char . ":identity-provider is required"))
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-identity-provider-response
                    'make-create-identity-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-identity-provider-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityProvider"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-provider))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-server-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identifier is required"))
    :type (common-lisp:or resource-server-identifier-type common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-server-name-type common-lisp:null))
   (scopes common-lisp:nil :type
    (common-lisp:or resource-server-scope-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-server-request
                    'make-create-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-resource-server-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Identifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identifier)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Scopes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scopes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-server-response (:copier common-lisp:nil))
   (resource-server
    (common-lisp:error
     #A((28) common-lisp:base-char . ":resource-server is required"))
    :type (common-lisp:or resource-server-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-server-response
                    'make-create-resource-server-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-resource-server-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceServer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-server))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-import-job-request (:copier common-lisp:nil))
   (job-name
    (common-lisp:error
     #A((21) common-lisp:base-char . ":job-name is required"))
    :type (common-lisp:or user-import-job-name-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (cloud-watch-logs-role-arn
    (common-lisp:error
     #A((38) common-lisp:base-char . ":cloud-watch-logs-role-arn is required"))
    :type (common-lisp:or arn-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-import-job-request
                    'make-create-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-import-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-name)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLogsRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logs-role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-import-job-response (:copier common-lisp:nil))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-import-job-response
                    'make-create-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-import-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserImportJob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-import-job))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-client-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":client-name is required"))
    :type (common-lisp:or client-name-type common-lisp:null))
   (generate-secret common-lisp:nil :type
    (common-lisp:or generate-secret common-lisp:null))
   (refresh-token-validity common-lisp:nil :type
    (common-lisp:or refresh-token-validity-type common-lisp:null))
   (read-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (write-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (explicit-auth-flows common-lisp:nil :type
    (common-lisp:or explicit-auth-flows-list-type common-lisp:null))
   (supported-identity-providers common-lisp:nil :type
    (common-lisp:or supported-identity-providers-list-type common-lisp:null))
   (callback-urls common-lisp:nil :type
    (common-lisp:or callback-urls-list-type common-lisp:null))
   (logout-urls common-lisp:nil :type
    (common-lisp:or logout-urls-list-type common-lisp:null))
   (default-redirect-uri common-lisp:nil :type
    (common-lisp:or redirect-url-type common-lisp:null))
   (allowed-oauth-flows common-lisp:nil :type
    (common-lisp:or oauth-flows-type common-lisp:null))
   (allowed-oauth-scopes common-lisp:nil :type
    (common-lisp:or scope-list-type common-lisp:null))
   (allowed-oauth-flows-user-pool-client common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-client-request
                    'make-create-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-pool-client-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-name)))
    (aws-sdk/generator/shape::to-query-params "GenerateSecret"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'generate-secret)))
    (aws-sdk/generator/shape::to-query-params "RefreshTokenValidity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'refresh-token-validity)))
    (aws-sdk/generator/shape::to-query-params "ReadAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'read-attributes)))
    (aws-sdk/generator/shape::to-query-params "WriteAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-attributes)))
    (aws-sdk/generator/shape::to-query-params "ExplicitAuthFlows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'explicit-auth-flows)))
    (aws-sdk/generator/shape::to-query-params "SupportedIdentityProviders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-identity-providers)))
    (aws-sdk/generator/shape::to-query-params "CallbackURLs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'callback-urls)))
    (aws-sdk/generator/shape::to-query-params "LogoutURLs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logout-urls)))
    (aws-sdk/generator/shape::to-query-params "DefaultRedirectURI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-redirect-uri)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthFlows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-flows)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthScopes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-scopes)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthFlowsUserPoolClient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-flows-user-pool-client))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-client-response (:copier common-lisp:nil))
   (user-pool-client common-lisp:nil :type
    (common-lisp:or user-pool-client-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-client-response
                    'make-create-user-pool-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-pool-client-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolClient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-client))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-domain-request (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-domain-request
                    'make-create-user-pool-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-pool-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-domain-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-domain-response
                    'make-create-user-pool-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-pool-domain-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-user-pool-request (:copier common-lisp:nil))
   (pool-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":pool-name is required"))
    :type (common-lisp:or user-pool-name-type common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or user-pool-policy-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (auto-verified-attributes common-lisp:nil :type
    (common-lisp:or verified-attributes-list-type common-lisp:null))
   (alias-attributes common-lisp:nil :type
    (common-lisp:or alias-attributes-list-type common-lisp:null))
   (username-attributes common-lisp:nil :type
    (common-lisp:or username-attributes-list-type common-lisp:null))
   (sms-verification-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-verification-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-verification-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (verification-message-template common-lisp:nil :type
    (common-lisp:or verification-message-template-type common-lisp:null))
   (sms-authentication-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (mfa-configuration common-lisp:nil :type
    (common-lisp:or user-pool-mfa-type common-lisp:null))
   (device-configuration common-lisp:nil :type
    (common-lisp:or device-configuration-type common-lisp:null))
   (email-configuration common-lisp:nil :type
    (common-lisp:or email-configuration-type common-lisp:null))
   (sms-configuration common-lisp:nil :type
    (common-lisp:or sms-configuration-type common-lisp:null))
   (user-pool-tags common-lisp:nil :type
    (common-lisp:or user-pool-tags-type common-lisp:null))
   (admin-create-user-config common-lisp:nil :type
    (common-lisp:or admin-create-user-config-type common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or schema-attributes-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-request 'make-create-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PoolName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pool-name)))
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies)))
    (aws-sdk/generator/shape::to-query-params "LambdaConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-config)))
    (aws-sdk/generator/shape::to-query-params "AutoVerifiedAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-verified-attributes)))
    (aws-sdk/generator/shape::to-query-params "AliasAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-attributes)))
    (aws-sdk/generator/shape::to-query-params "UsernameAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username-attributes)))
    (aws-sdk/generator/shape::to-query-params "SmsVerificationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-verification-message)))
    (aws-sdk/generator/shape::to-query-params "EmailVerificationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-verification-message)))
    (aws-sdk/generator/shape::to-query-params "EmailVerificationSubject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-verification-subject)))
    (aws-sdk/generator/shape::to-query-params "VerificationMessageTemplate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verification-message-template)))
    (aws-sdk/generator/shape::to-query-params "SmsAuthenticationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-authentication-message)))
    (aws-sdk/generator/shape::to-query-params "MfaConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfa-configuration)))
    (aws-sdk/generator/shape::to-query-params "DeviceConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-configuration)))
    (aws-sdk/generator/shape::to-query-params "EmailConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-configuration)))
    (aws-sdk/generator/shape::to-query-params "SmsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-configuration)))
    (aws-sdk/generator/shape::to-query-params "UserPoolTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-tags)))
    (aws-sdk/generator/shape::to-query-params "AdminCreateUserConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'admin-create-user-config)))
    (aws-sdk/generator/shape::to-query-params "Schema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema))))))
(common-lisp:progn
 (common-lisp:defstruct (create-user-pool-response (:copier common-lisp:nil))
   (user-pool common-lisp:nil :type
    (common-lisp:or user-pool-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-response
                    'make-create-user-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-pool-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPool"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool))))))
(common-lisp:deftype custom-attribute-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-attributes-list-type ()
   '(trivial-types:proper-list schema-attribute-type))
 (common-lisp:defun |make-custom-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schema-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date-type () 'common-lisp:string)
(common-lisp:deftype default-email-option-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-group-request (:copier common-lisp:nil))
   (group-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":group-name is required"))
    :type (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-group-request 'make-delete-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-identity-provider-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":provider-name is required"))
    :type (common-lisp:or provider-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-identity-provider-request
                    'make-delete-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identity-provider-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-server-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identifier is required"))
    :type (common-lisp:or resource-server-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-server-request
                    'make-delete-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-resource-server-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Identifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identifier))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-attributes-request (:copier common-lisp:nil))
   (user-attribute-names
    (common-lisp:error
     #A((33) common-lisp:base-char . ":user-attribute-names is required"))
    :type (common-lisp:or attribute-name-list-type common-lisp:null))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-attributes-request
                    'make-delete-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attribute-names)))
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-attributes-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-user-attributes-response
                    'make-delete-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-attributes-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-pool-client-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-client-request
                    'make-delete-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-pool-client-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-pool-domain-request (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-domain-request
                    'make-delete-user-pool-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-pool-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-pool-domain-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-domain-response
                    'make-delete-user-pool-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-pool-domain-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-user-pool-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-request 'make-delete-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-user-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-request 'make-delete-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token))))))
(common-lisp:progn
 (common-lisp:deftype delivery-medium-list-type ()
   '(trivial-types:proper-list delivery-medium-type))
 (common-lisp:defun |make-delivery-medium-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list delivery-medium-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype delivery-medium-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-provider-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":provider-name is required"))
    :type (common-lisp:or provider-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-provider-request
                    'make-describe-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-provider-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-provider-response (:copier common-lisp:nil))
   (identity-provider
    (common-lisp:error
     #A((30) common-lisp:base-char . ":identity-provider is required"))
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-provider-response
                    'make-describe-identity-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-provider-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityProvider"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-provider))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-server-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identifier is required"))
    :type (common-lisp:or resource-server-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-server-request
                    'make-describe-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-resource-server-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Identifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identifier))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-server-response (:copier common-lisp:nil))
   (resource-server
    (common-lisp:error
     #A((28) common-lisp:base-char . ":resource-server is required"))
    :type (common-lisp:or resource-server-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-server-response
                    'make-describe-resource-server-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-resource-server-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceServer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-server))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-import-job-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or user-import-job-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-import-job-request
                    'make-describe-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-import-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-import-job-response (:copier common-lisp:nil))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-import-job-response
                    'make-describe-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-import-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserImportJob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-import-job))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-client-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-client-request
                    'make-describe-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-pool-client-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-client-response (:copier common-lisp:nil))
   (user-pool-client common-lisp:nil :type
    (common-lisp:or user-pool-client-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-client-response
                    'make-describe-user-pool-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-pool-client-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolClient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-client))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-domain-request (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-domain-request
                    'make-describe-user-pool-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-pool-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-domain-response (:copier common-lisp:nil))
   (domain-description common-lisp:nil :type
    (common-lisp:or domain-description-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-domain-response
                    'make-describe-user-pool-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-pool-domain-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-description))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-user-pool-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-request
                    'make-describe-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-user-pool-response (:copier common-lisp:nil))
   (user-pool common-lisp:nil :type
    (common-lisp:or user-pool-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-response
                    'make-describe-user-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-pool-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPool"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool))))))
(common-lisp:deftype description-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (device-configuration-type (:copier common-lisp:nil))
   (challenge-required-on-new-device common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (device-only-remembered-on-user-prompt common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'device-configuration-type
                    'make-device-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          device-configuration-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChallengeRequiredOnNewDevice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-required-on-new-device)))
    (aws-sdk/generator/shape::to-query-params
     "DeviceOnlyRememberedOnUserPrompt"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'device-only-remembered-on-user-prompt))))))
(common-lisp:deftype device-key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype device-list-type ()
   '(trivial-types:proper-list device-type))
 (common-lisp:defun |make-device-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype device-name-type () 'common-lisp:string)
(common-lisp:deftype device-remembered-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (device-secret-verifier-config-type (:copier common-lisp:nil))
   (password-verifier common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (salt common-lisp:nil :type (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'device-secret-verifier-config-type
                    'make-device-secret-verifier-config-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          device-secret-verifier-config-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PasswordVerifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password-verifier)))
    (aws-sdk/generator/shape::to-query-params "Salt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'salt))))))
(common-lisp:progn
 (common-lisp:defstruct (device-type (:copier common-lisp:nil))
   (device-key common-lisp:nil :type
    (common-lisp:or device-key-type common-lisp:null))
   (device-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (device-create-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (device-last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (device-last-authenticated-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'device-type 'make-device-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape device-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key)))
    (aws-sdk/generator/shape::to-query-params "DeviceAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-attributes)))
    (aws-sdk/generator/shape::to-query-params "DeviceCreateDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-create-date)))
    (aws-sdk/generator/shape::to-query-params "DeviceLastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "DeviceLastAuthenticatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-last-authenticated-date))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-description-type (:copier common-lisp:nil))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (awsaccount-id common-lisp:nil :type
    (common-lisp:or awsaccount-id-type common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or domain-type common-lisp:null))
   (s3bucket common-lisp:nil :type
    (common-lisp:or s3bucket-type common-lisp:null))
   (cloud-front-distribution common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or domain-version-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or domain-status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-description-type 'make-domain-description-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          domain-description-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "AWSAccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'awsaccount-id)))
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "S3Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket)))
    (aws-sdk/generator/shape::to-query-params "CloudFrontDistribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-front-distribution)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype domain-status-type () 'common-lisp:string)
(common-lisp:deftype domain-type () 'common-lisp:string)
(common-lisp:deftype domain-version-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-provider-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-provider-exception
                    'make-duplicate-provider-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-provider-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype email-address-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (email-configuration-type (:copier common-lisp:nil))
   (source-arn common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (reply-to-email-address common-lisp:nil :type
    (common-lisp:or email-address-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-configuration-type 'make-email-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          email-configuration-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-arn)))
    (aws-sdk/generator/shape::to-query-params "ReplyToEmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reply-to-email-address))))))
(common-lisp:deftype email-verification-message-by-link-type ()
  'common-lisp:string)
(common-lisp:deftype email-verification-message-type () 'common-lisp:string)
(common-lisp:deftype email-verification-subject-by-link-type ()
  'common-lisp:string)
(common-lisp:deftype email-verification-subject-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (expired-code-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expired-code-exception 'make-expired-code-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expired-code-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype explicit-auth-flows-list-type ()
   '(trivial-types:proper-list explicit-auth-flows-type))
 (common-lisp:defun |make-explicit-auth-flows-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            explicit-auth-flows-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype explicit-auth-flows-type () 'common-lisp:string)
(common-lisp:deftype force-alias-creation () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (forget-device-request (:copier common-lisp:nil))
   (access-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (device-key
    (common-lisp:error
     #A((23) common-lisp:base-char . ":device-key is required"))
    :type (common-lisp:or device-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forget-device-request 'make-forget-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          forget-device-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key))))))
(common-lisp:progn
 (common-lisp:defstruct (forgot-password-request (:copier common-lisp:nil))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forgot-password-request 'make-forgot-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          forgot-password-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "SecretHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-hash)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct (forgot-password-response (:copier common-lisp:nil))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forgot-password-response 'make-forgot-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          forgot-password-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CodeDeliveryDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-delivery-details))))))
(common-lisp:deftype generate-secret () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (get-csvheader-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-csvheader-request 'make-get-csvheader-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-csvheader-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-csvheader-response (:copier common-lisp:nil))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (csvheader common-lisp:nil :type
    (common-lisp:or list-of-string-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-csvheader-response 'make-get-csvheader-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-csvheader-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "CSVHeader"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'csvheader))))))
(common-lisp:progn
 (common-lisp:defstruct (get-device-request (:copier common-lisp:nil))
   (device-key
    (common-lisp:error
     #A((23) common-lisp:base-char . ":device-key is required"))
    :type (common-lisp:or device-key-type common-lisp:null))
   (access-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-request 'make-get-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-device-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key)))
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-device-response (:copier common-lisp:nil))
   (device
    (common-lisp:error #A((19) common-lisp:base-char . ":device is required"))
    :type (common-lisp:or device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-response 'make-get-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-device-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device))))))
(common-lisp:progn
 (common-lisp:defstruct (get-group-request (:copier common-lisp:nil))
   (group-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":group-name is required"))
    :type (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-group-request 'make-get-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-group-response (:copier common-lisp:nil))
   (group common-lisp:nil :type (common-lisp:or group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-group-response 'make-get-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Group"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-provider-by-identifier-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (idp-identifier
    (common-lisp:error
     #A((27) common-lisp:base-char . ":idp-identifier is required"))
    :type (common-lisp:or idp-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-provider-by-identifier-request
                    'make-get-identity-provider-by-identifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-provider-by-identifier-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdpIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idp-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-provider-by-identifier-response (:copier common-lisp:nil))
   (identity-provider
    (common-lisp:error
     #A((30) common-lisp:base-char . ":identity-provider is required"))
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-provider-by-identifier-response
                    'make-get-identity-provider-by-identifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-provider-by-identifier-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityProvider"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-provider))))))
(common-lisp:progn
 (common-lisp:defstruct (get-uicustomization-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-uicustomization-request
                    'make-get-uicustomization-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-uicustomization-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-uicustomization-response (:copier common-lisp:nil))
   (uicustomization
    (common-lisp:error
     #A((28) common-lisp:base-char . ":uicustomization is required"))
    :type (common-lisp:or uicustomization-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-uicustomization-response
                    'make-get-uicustomization-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-uicustomization-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UICustomization"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uicustomization))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-user-attribute-verification-code-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null))
   (attribute-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-name is required"))
    :type (common-lisp:or attribute-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-attribute-verification-code-request
                    'make-get-user-attribute-verification-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-user-attribute-verification-code-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-user-attribute-verification-code-response (:copier common-lisp:nil))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-attribute-verification-code-response
                    'make-get-user-attribute-verification-code-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-user-attribute-verification-code-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CodeDeliveryDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-delivery-details))))))
(common-lisp:progn
 (common-lisp:defstruct (get-user-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-request 'make-get-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-user-response (:copier common-lisp:nil))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (user-attributes
    (common-lisp:error
     #A((28) common-lisp:base-char . ":user-attributes is required"))
    :type (common-lisp:or attribute-list-type common-lisp:null))
   (mfaoptions common-lisp:nil :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-response 'make-get-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "MFAOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfaoptions))))))
(common-lisp:progn
 (common-lisp:defstruct (global-sign-out-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'global-sign-out-request 'make-global-sign-out-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          global-sign-out-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token))))))
(common-lisp:progn
 (common-lisp:defstruct (global-sign-out-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'global-sign-out-response 'make-global-sign-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          global-sign-out-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (group-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'group-exists-exception 'make-group-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          group-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype group-list-type ()
   '(trivial-types:proper-list group-type))
 (common-lisp:defun |make-group-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype group-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (group-type (:copier common-lisp:nil))
   (group-name common-lisp:nil :type
    (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (precedence common-lisp:nil :type
    (common-lisp:or precedence-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'group-type 'make-group-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape group-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "Precedence"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'precedence)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:progn
 (common-lisp:defstruct (identity-provider-type (:copier common-lisp:nil))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name-type common-lisp:null))
   (provider-type common-lisp:nil :type
    (common-lisp:or identity-provider-type-type common-lisp:null))
   (provider-details common-lisp:nil :type
    (common-lisp:or provider-details-type common-lisp:null))
   (attribute-mapping common-lisp:nil :type
    (common-lisp:or attribute-mapping-type common-lisp:null))
   (idp-identifiers common-lisp:nil :type
    (common-lisp:or idp-identifiers-list-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-provider-type 'make-identity-provider-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          identity-provider-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "ProviderType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-type)))
    (aws-sdk/generator/shape::to-query-params "ProviderDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-details)))
    (aws-sdk/generator/shape::to-query-params "AttributeMapping"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-mapping)))
    (aws-sdk/generator/shape::to-query-params "IdpIdentifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idp-identifiers)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:deftype identity-provider-type-type () 'common-lisp:string)
(common-lisp:deftype idp-identifier-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype idp-identifiers-list-type ()
   '(trivial-types:proper-list idp-identifier-type))
 (common-lisp:defun |make-idp-identifiers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list idp-identifier-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-file-type ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype image-url-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (initiate-auth-request (:copier common-lisp:nil))
   (auth-flow
    (common-lisp:error
     #A((22) common-lisp:base-char . ":auth-flow is required"))
    :type (common-lisp:or auth-flow-type common-lisp:null))
   (auth-parameters common-lisp:nil :type
    (common-lisp:or auth-parameters-type common-lisp:null))
   (client-metadata common-lisp:nil :type
    (common-lisp:or client-metadata-type common-lisp:null))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-auth-request 'make-initiate-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-auth-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthFlow"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auth-flow)))
    (aws-sdk/generator/shape::to-query-params "AuthParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auth-parameters)))
    (aws-sdk/generator/shape::to-query-params "ClientMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-metadata)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id))))))
(common-lisp:progn
 (common-lisp:defstruct (initiate-auth-response (:copier common-lisp:nil))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-auth-response 'make-initiate-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-auth-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChallengeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-name)))
    (aws-sdk/generator/shape::to-query-params "Session"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session)))
    (aws-sdk/generator/shape::to-query-params "ChallengeParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-parameters)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-result))))))
(common-lisp:deftype integer-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception 'make-internal-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-email-role-access-policy-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-email-role-access-policy-exception
                    'make-invalid-email-role-access-policy-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-email-role-access-policy-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-lambda-response-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-lambda-response-exception
                    'make-invalid-lambda-response-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-lambda-response-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-oauth-flow-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-oauth-flow-exception
                    'make-invalid-oauth-flow-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-oauth-flow-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameter-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-password-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-password-exception
                    'make-invalid-password-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-password-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-sms-role-access-policy-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-sms-role-access-policy-exception
                    'make-invalid-sms-role-access-policy-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-sms-role-access-policy-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-sms-role-trust-relationship-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-sms-role-trust-relationship-exception
                    'make-invalid-sms-role-trust-relationship-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-sms-role-trust-relationship-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-user-pool-configuration-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-user-pool-configuration-exception
                    'make-invalid-user-pool-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-user-pool-configuration-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (lambda-config-type (:copier common-lisp:nil))
   (pre-sign-up common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (custom-message common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (post-confirmation common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (pre-authentication common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (post-authentication common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (define-auth-challenge common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (create-auth-challenge common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (verify-auth-challenge-response common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-config-type 'make-lambda-config-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lambda-config-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PreSignUp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pre-sign-up)))
    (aws-sdk/generator/shape::to-query-params "CustomMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-message)))
    (aws-sdk/generator/shape::to-query-params "PostConfirmation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'post-confirmation)))
    (aws-sdk/generator/shape::to-query-params "PreAuthentication"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pre-authentication)))
    (aws-sdk/generator/shape::to-query-params "PostAuthentication"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'post-authentication)))
    (aws-sdk/generator/shape::to-query-params "DefineAuthChallenge"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'define-auth-challenge)))
    (aws-sdk/generator/shape::to-query-params "CreateAuthChallenge"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-auth-challenge)))
    (aws-sdk/generator/shape::to-query-params "VerifyAuthChallengeResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verify-auth-challenge-response))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-devices-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-request 'make-list-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-devices-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-devices-response (:copier common-lisp:nil))
   (devices common-lisp:nil :type
    (common-lisp:or device-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-response 'make-list-devices-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-devices-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Devices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'devices)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-groups-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-groups-request 'make-list-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-groups-response (:copier common-lisp:nil))
   (groups common-lisp:nil :type
    (common-lisp:or group-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-groups-response 'make-list-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-groups-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Groups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'groups)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-providers-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-providers-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-providers-request
                    'make-list-identity-providers-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-providers-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-providers-response (:copier common-lisp:nil))
   (providers
    (common-lisp:error
     #A((22) common-lisp:base-char . ":providers is required"))
    :type (common-lisp:or providers-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-providers-response
                    'make-list-identity-providers-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-providers-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Providers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'providers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:deftype list-of-string-types ()
   '(trivial-types:proper-list string-type))
 (common-lisp:defun |make-list-of-string-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype list-providers-limit-type () 'common-lisp:integer)
(common-lisp:deftype list-resource-servers-limit-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-servers-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-resource-servers-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-servers-request
                    'make-list-resource-servers-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-servers-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-servers-response (:copier common-lisp:nil))
   (resource-servers
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resource-servers is required"))
    :type (common-lisp:or resource-servers-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-servers-response
                    'make-list-resource-servers-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resource-servers-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceServers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-servers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-import-jobs-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results
    (common-lisp:error
     #A((24) common-lisp:base-char . ":max-results is required"))
    :type (common-lisp:or pool-query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-import-jobs-request
                    'make-list-user-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-import-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-import-jobs-response (:copier common-lisp:nil))
   (user-import-jobs common-lisp:nil :type
    (common-lisp:or user-import-jobs-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-import-jobs-response
                    'make-list-user-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-import-jobs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserImportJobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-import-jobs)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-pool-clients-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or query-limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pool-clients-request
                    'make-list-user-pool-clients-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-pool-clients-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-pool-clients-response (:copier common-lisp:nil))
   (user-pool-clients common-lisp:nil :type
    (common-lisp:or user-pool-client-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pool-clients-response
                    'make-list-user-pool-clients-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-pool-clients-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolClients"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-clients)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-user-pools-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null))
   (max-results
    (common-lisp:error
     #A((24) common-lisp:base-char . ":max-results is required"))
    :type (common-lisp:or pool-query-limit-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pools-request 'make-list-user-pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-pools-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-user-pools-response (:copier common-lisp:nil))
   (user-pools common-lisp:nil :type
    (common-lisp:or user-pool-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pools-response 'make-list-user-pools-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-pools-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPools"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pools)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-users-in-group-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (group-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":group-name is required"))
    :type (common-lisp:or group-name-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-in-group-request
                    'make-list-users-in-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-users-in-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-in-group-response (:copier common-lisp:nil))
   (users common-lisp:nil :type
    (common-lisp:or users-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-in-group-response
                    'make-list-users-in-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-users-in-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Users"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'users)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-users-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (attributes-to-get common-lisp:nil :type
    (common-lisp:or searched-attribute-names-list-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or user-filter-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-request 'make-list-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-users-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "AttributesToGet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes-to-get)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token)))
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:defstruct (list-users-response (:copier common-lisp:nil))
   (users common-lisp:nil :type
    (common-lisp:or users-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-response 'make-list-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-users-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Users"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'users)))
    (aws-sdk/generator/shape::to-query-params "PaginationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pagination-token))))))
(common-lisp:progn
 (common-lisp:deftype logout-urls-list-type ()
   '(trivial-types:proper-list redirect-url-type))
 (common-lisp:defun |make-logout-urls-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list redirect-url-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (mfamethod-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mfamethod-not-found-exception
                    'make-mfamethod-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          mfamethod-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype mfaoption-list-type ()
   '(trivial-types:proper-list mfaoption-type))
 (common-lisp:defun |make-mfaoption-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mfaoption-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (mfaoption-type (:copier common-lisp:nil))
   (delivery-medium common-lisp:nil :type
    (common-lisp:or delivery-medium-type common-lisp:null))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mfaoption-type 'make-mfaoption-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape mfaoption-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeliveryMedium"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delivery-medium)))
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name))))))
(common-lisp:deftype message-action-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (message-template-type (:copier common-lisp:nil))
   (smsmessage common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-template-type 'make-message-template-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          message-template-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SMSMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smsmessage)))
    (aws-sdk/generator/shape::to-query-params "EmailMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-message)))
    (aws-sdk/generator/shape::to-query-params "EmailSubject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-subject))))))
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (new-device-metadata-type (:copier common-lisp:nil))
   (device-key common-lisp:nil :type
    (common-lisp:or device-key-type common-lisp:null))
   (device-group-key common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'new-device-metadata-type 'make-new-device-metadata-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          new-device-metadata-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key)))
    (aws-sdk/generator/shape::to-query-params "DeviceGroupKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-group-key))))))
(common-lisp:progn
 (common-lisp:defstruct (not-authorized-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-authorized-exception 'make-not-authorized-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          not-authorized-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (number-attribute-constraints-type (:copier common-lisp:nil))
   (min-value common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (max-value common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-attribute-constraints-type
                    'make-number-attribute-constraints-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          number-attribute-constraints-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MinValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-value)))
    (aws-sdk/generator/shape::to-query-params "MaxValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-value))))))
(common-lisp:deftype oauth-flow-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype oauth-flows-type ()
   '(trivial-types:proper-list oauth-flow-type))
 (common-lisp:defun |make-oauth-flows-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list oauth-flow-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pagination-key () 'common-lisp:string)
(common-lisp:deftype pagination-key-type () 'common-lisp:string)
(common-lisp:deftype password-policy-min-length-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (password-policy-type (:copier common-lisp:nil))
   (minimum-length common-lisp:nil :type
    (common-lisp:or password-policy-min-length-type common-lisp:null))
   (require-uppercase common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (require-lowercase common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (require-numbers common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (require-symbols common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'password-policy-type 'make-password-policy-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape password-policy-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MinimumLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minimum-length)))
    (aws-sdk/generator/shape::to-query-params "RequireUppercase"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'require-uppercase)))
    (aws-sdk/generator/shape::to-query-params "RequireLowercase"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'require-lowercase)))
    (aws-sdk/generator/shape::to-query-params "RequireNumbers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'require-numbers)))
    (aws-sdk/generator/shape::to-query-params "RequireSymbols"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'require-symbols))))))
(common-lisp:progn
 (common-lisp:defstruct
     (password-reset-required-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'password-reset-required-exception
                    'make-password-reset-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          password-reset-required-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype password-type () 'common-lisp:string)
(common-lisp:deftype pool-query-limit-type () 'common-lisp:integer)
(common-lisp:deftype pre-signed-url-type () 'common-lisp:string)
(common-lisp:deftype precedence-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (precondition-not-met-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'precondition-not-met-exception
                    'make-precondition-not-met-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          precondition-not-met-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (provider-description (:copier common-lisp:nil))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name-type common-lisp:null))
   (provider-type common-lisp:nil :type
    (common-lisp:or identity-provider-type-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provider-description 'make-provider-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape provider-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "ProviderType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-type)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:defstruct
    (provider-details-type
     (:constructor |make-provider-details-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype provider-name-type () 'common-lisp:string)
(common-lisp:deftype provider-name-type-v1 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (provider-user-identifier-type (:copier common-lisp:nil))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name-type common-lisp:null))
   (provider-attribute-name common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (provider-attribute-value common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provider-user-identifier-type
                    'make-provider-user-identifier-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provider-user-identifier-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "ProviderAttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-attribute-name)))
    (aws-sdk/generator/shape::to-query-params "ProviderAttributeValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-attribute-value))))))
(common-lisp:progn
 (common-lisp:deftype providers-list-type ()
   '(trivial-types:proper-list provider-description))
 (common-lisp:defun |make-providers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype query-limit () 'common-lisp:integer)
(common-lisp:deftype query-limit-type () 'common-lisp:integer)
(common-lisp:deftype redirect-url-type () 'common-lisp:string)
(common-lisp:deftype refresh-token-validity-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (resend-confirmation-code-request (:copier common-lisp:nil))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resend-confirmation-code-request
                    'make-resend-confirmation-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resend-confirmation-code-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "SecretHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-hash)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resend-confirmation-code-response (:copier common-lisp:nil))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resend-confirmation-code-response
                    'make-resend-confirmation-code-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resend-confirmation-code-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CodeDeliveryDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-delivery-details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype resource-server-identifier-type () 'common-lisp:string)
(common-lisp:deftype resource-server-name-type () 'common-lisp:string)
(common-lisp:deftype resource-server-scope-description-type ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-server-scope-list-type ()
   '(trivial-types:proper-list resource-server-scope-type))
 (common-lisp:defun |make-resource-server-scope-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-server-scope-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-server-scope-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-server-scope-type (:copier common-lisp:nil))
   (scope-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":scope-name is required"))
    :type (common-lisp:or resource-server-scope-name-type common-lisp:null))
   (scope-description
    (common-lisp:error
     #A((30) common-lisp:base-char . ":scope-description is required"))
    :type
    (common-lisp:or resource-server-scope-description-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-server-scope-type
                    'make-resource-server-scope-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-server-scope-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScopeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scope-name)))
    (aws-sdk/generator/shape::to-query-params "ScopeDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scope-description))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-server-type (:copier common-lisp:nil))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier common-lisp:nil :type
    (common-lisp:or resource-server-identifier-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-server-name-type common-lisp:null))
   (scopes common-lisp:nil :type
    (common-lisp:or resource-server-scope-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-server-type 'make-resource-server-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-server-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Identifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identifier)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Scopes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scopes))))))
(common-lisp:progn
 (common-lisp:deftype resource-servers-list-type ()
   '(trivial-types:proper-list resource-server-type))
 (common-lisp:defun |make-resource-servers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-server-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-to-auth-challenge-request (:copier common-lisp:nil))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (challenge-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":challenge-name is required"))
    :type (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-responses common-lisp:nil :type
    (common-lisp:or challenge-responses-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-to-auth-challenge-request
                    'make-respond-to-auth-challenge-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          respond-to-auth-challenge-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "ChallengeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-name)))
    (aws-sdk/generator/shape::to-query-params "Session"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session)))
    (aws-sdk/generator/shape::to-query-params "ChallengeResponses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-responses))))))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-to-auth-challenge-response (:copier common-lisp:nil))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-to-auth-challenge-response
                    'make-respond-to-auth-challenge-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          respond-to-auth-challenge-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChallengeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-name)))
    (aws-sdk/generator/shape::to-query-params "Session"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session)))
    (aws-sdk/generator/shape::to-query-params "ChallengeParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'challenge-parameters)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-result))))))
(common-lisp:deftype s3bucket-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (schema-attribute-type (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or custom-attribute-name-type common-lisp:null))
   (attribute-data-type common-lisp:nil :type
    (common-lisp:or attribute-data-type common-lisp:null))
   (developer-only-attribute common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (mutable common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (required common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (number-attribute-constraints common-lisp:nil :type
    (common-lisp:or number-attribute-constraints-type common-lisp:null))
   (string-attribute-constraints common-lisp:nil :type
    (common-lisp:or string-attribute-constraints-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schema-attribute-type 'make-schema-attribute-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schema-attribute-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "AttributeDataType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-data-type)))
    (aws-sdk/generator/shape::to-query-params "DeveloperOnlyAttribute"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-only-attribute)))
    (aws-sdk/generator/shape::to-query-params "Mutable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mutable)))
    (aws-sdk/generator/shape::to-query-params "Required"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'required)))
    (aws-sdk/generator/shape::to-query-params "NumberAttributeConstraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-attribute-constraints)))
    (aws-sdk/generator/shape::to-query-params "StringAttributeConstraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'string-attribute-constraints))))))
(common-lisp:progn
 (common-lisp:deftype schema-attributes-list-type ()
   '(trivial-types:proper-list schema-attribute-type))
 (common-lisp:defun |make-schema-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schema-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (scope-does-not-exist-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scope-does-not-exist-exception
                    'make-scope-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scope-does-not-exist-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype scope-list-type ()
   '(trivial-types:proper-list scope-type))
 (common-lisp:defun |make-scope-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scope-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype scope-type () 'common-lisp:string)
(common-lisp:deftype search-pagination-token-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype searched-attribute-names-list-type ()
   '(trivial-types:proper-list attribute-name-type))
 (common-lisp:defun |make-searched-attribute-names-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-name-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype secret-hash-type () 'common-lisp:string)
(common-lisp:deftype session-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (set-uicustomization-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (css common-lisp:nil :type (common-lisp:or csstype common-lisp:null))
   (image-file common-lisp:nil :type
    (common-lisp:or image-file-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-uicustomization-request
                    'make-set-uicustomization-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-uicustomization-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "CSS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'css)))
    (aws-sdk/generator/shape::to-query-params "ImageFile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-file))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-uicustomization-response (:copier common-lisp:nil))
   (uicustomization
    (common-lisp:error
     #A((28) common-lisp:base-char . ":uicustomization is required"))
    :type (common-lisp:or uicustomization-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-uicustomization-response
                    'make-set-uicustomization-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-uicustomization-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UICustomization"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uicustomization))))))
(common-lisp:progn
 (common-lisp:defstruct (set-user-settings-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null))
   (mfaoptions
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mfaoptions is required"))
    :type (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-user-settings-request
                    'make-set-user-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-user-settings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "MFAOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfaoptions))))))
(common-lisp:progn
 (common-lisp:defstruct (set-user-settings-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-user-settings-response
                    'make-set-user-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-user-settings-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (sign-up-request (:copier common-lisp:nil))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (password
    (common-lisp:error
     #A((21) common-lisp:base-char . ":password is required"))
    :type (common-lisp:or password-type common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (validation-data common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sign-up-request 'make-sign-up-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape sign-up-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "SecretHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-hash)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "Password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password)))
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "ValidationData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'validation-data))))))
(common-lisp:progn
 (common-lisp:defstruct (sign-up-response (:copier common-lisp:nil))
   (user-confirmed
    (common-lisp:error
     #A((27) common-lisp:base-char . ":user-confirmed is required"))
    :type (common-lisp:or boolean-type common-lisp:null))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null))
   (user-sub
    (common-lisp:error
     #A((21) common-lisp:base-char . ":user-sub is required"))
    :type (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sign-up-response 'make-sign-up-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape sign-up-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserConfirmed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-confirmed)))
    (aws-sdk/generator/shape::to-query-params "CodeDeliveryDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-delivery-details)))
    (aws-sdk/generator/shape::to-query-params "UserSub"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-sub))))))
(common-lisp:progn
 (common-lisp:defstruct (sms-configuration-type (:copier common-lisp:nil))
   (sns-caller-arn
    (common-lisp:error
     #A((27) common-lisp:base-char . ":sns-caller-arn is required"))
    :type (common-lisp:or arn-type common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sms-configuration-type 'make-sms-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sms-configuration-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SnsCallerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sns-caller-arn)))
    (aws-sdk/generator/shape::to-query-params "ExternalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-id))))))
(common-lisp:deftype sms-verification-message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-user-import-job-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or user-import-job-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-user-import-job-request
                    'make-start-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-user-import-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-user-import-job-response (:copier common-lisp:nil))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-user-import-job-response
                    'make-start-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-user-import-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserImportJob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-import-job))))))
(common-lisp:deftype status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stop-user-import-job-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or user-import-job-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-user-import-job-request
                    'make-stop-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-user-import-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-user-import-job-response (:copier common-lisp:nil))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-user-import-job-response
                    'make-stop-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-user-import-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserImportJob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-import-job))))))
(common-lisp:progn
 (common-lisp:defstruct
     (string-attribute-constraints-type (:copier common-lisp:nil))
   (min-length common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (max-length common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'string-attribute-constraints-type
                    'make-string-attribute-constraints-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          string-attribute-constraints-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MinLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-length)))
    (aws-sdk/generator/shape::to-query-params "MaxLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-length))))))
(common-lisp:deftype string-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype supported-identity-providers-list-type ()
   '(trivial-types:proper-list provider-name-type))
 (common-lisp:defun |make-supported-identity-providers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-name-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype token-model-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-failed-attempts-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-failed-attempts-exception
                    'make-too-many-failed-attempts-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-failed-attempts-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (uicustomization-type (:copier common-lisp:nil))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or image-url-type common-lisp:null))
   (css common-lisp:nil :type (common-lisp:or csstype common-lisp:null))
   (cssversion common-lisp:nil :type
    (common-lisp:or cssversion-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'uicustomization-type 'make-uicustomization-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape uicustomization-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "ImageUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-url)))
    (aws-sdk/generator/shape::to-query-params "CSS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'css)))
    (aws-sdk/generator/shape::to-query-params "CSSVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cssversion)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:progn
 (common-lisp:defstruct (unexpected-lambda-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unexpected-lambda-exception
                    'make-unexpected-lambda-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unexpected-lambda-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-identity-provider-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-identity-provider-exception
                    'make-unsupported-identity-provider-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-identity-provider-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-user-state-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-user-state-exception
                    'make-unsupported-user-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-user-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-device-status-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null))
   (device-key
    (common-lisp:error
     #A((23) common-lisp:base-char . ":device-key is required"))
    :type (common-lisp:or device-key-type common-lisp:null))
   (device-remembered-status common-lisp:nil :type
    (common-lisp:or device-remembered-status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-device-status-request
                    'make-update-device-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-device-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "DeviceKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-key)))
    (aws-sdk/generator/shape::to-query-params "DeviceRememberedStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-remembered-status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-device-status-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-device-status-response
                    'make-update-device-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-device-status-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-group-request (:copier common-lisp:nil))
   (group-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":group-name is required"))
    :type (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (precedence common-lisp:nil :type
    (common-lisp:or precedence-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-group-request 'make-update-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "Precedence"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'precedence))))))
(common-lisp:progn
 (common-lisp:defstruct (update-group-response (:copier common-lisp:nil))
   (group common-lisp:nil :type (common-lisp:or group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-group-response 'make-update-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Group"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-identity-provider-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":provider-name is required"))
    :type (common-lisp:or provider-name-type common-lisp:null))
   (provider-details common-lisp:nil :type
    (common-lisp:or provider-details-type common-lisp:null))
   (attribute-mapping common-lisp:nil :type
    (common-lisp:or attribute-mapping-type common-lisp:null))
   (idp-identifiers common-lisp:nil :type
    (common-lisp:or idp-identifiers-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-identity-provider-request
                    'make-update-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-identity-provider-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "ProviderDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-details)))
    (aws-sdk/generator/shape::to-query-params "AttributeMapping"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-mapping)))
    (aws-sdk/generator/shape::to-query-params "IdpIdentifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idp-identifiers))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-identity-provider-response (:copier common-lisp:nil))
   (identity-provider
    (common-lisp:error
     #A((30) common-lisp:base-char . ":identity-provider is required"))
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-identity-provider-response
                    'make-update-identity-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-identity-provider-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityProvider"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-provider))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-server-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identifier is required"))
    :type (common-lisp:or resource-server-identifier-type common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-server-name-type common-lisp:null))
   (scopes common-lisp:nil :type
    (common-lisp:or resource-server-scope-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-server-request
                    'make-update-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-resource-server-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Identifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identifier)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Scopes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scopes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-server-response (:copier common-lisp:nil))
   (resource-server
    (common-lisp:error
     #A((28) common-lisp:base-char . ":resource-server is required"))
    :type (common-lisp:or resource-server-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-server-response
                    'make-update-resource-server-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-resource-server-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceServer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-server))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-attributes-request (:copier common-lisp:nil))
   (user-attributes
    (common-lisp:error
     #A((28) common-lisp:base-char . ":user-attributes is required"))
    :type (common-lisp:or attribute-list-type common-lisp:null))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-attributes-request
                    'make-update-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-attributes-response (:copier common-lisp:nil))
   (code-delivery-details-list common-lisp:nil :type
    (common-lisp:or code-delivery-details-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-attributes-response
                    'make-update-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CodeDeliveryDetailsList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-delivery-details-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-pool-client-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":client-id is required"))
    :type (common-lisp:or client-id-type common-lisp:null))
   (client-name common-lisp:nil :type
    (common-lisp:or client-name-type common-lisp:null))
   (refresh-token-validity common-lisp:nil :type
    (common-lisp:or refresh-token-validity-type common-lisp:null))
   (read-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (write-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (explicit-auth-flows common-lisp:nil :type
    (common-lisp:or explicit-auth-flows-list-type common-lisp:null))
   (supported-identity-providers common-lisp:nil :type
    (common-lisp:or supported-identity-providers-list-type common-lisp:null))
   (callback-urls common-lisp:nil :type
    (common-lisp:or callback-urls-list-type common-lisp:null))
   (logout-urls common-lisp:nil :type
    (common-lisp:or logout-urls-list-type common-lisp:null))
   (default-redirect-uri common-lisp:nil :type
    (common-lisp:or redirect-url-type common-lisp:null))
   (allowed-oauth-flows common-lisp:nil :type
    (common-lisp:or oauth-flows-type common-lisp:null))
   (allowed-oauth-scopes common-lisp:nil :type
    (common-lisp:or scope-list-type common-lisp:null))
   (allowed-oauth-flows-user-pool-client common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-client-request
                    'make-update-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-pool-client-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "ClientName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-name)))
    (aws-sdk/generator/shape::to-query-params "RefreshTokenValidity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'refresh-token-validity)))
    (aws-sdk/generator/shape::to-query-params "ReadAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'read-attributes)))
    (aws-sdk/generator/shape::to-query-params "WriteAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-attributes)))
    (aws-sdk/generator/shape::to-query-params "ExplicitAuthFlows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'explicit-auth-flows)))
    (aws-sdk/generator/shape::to-query-params "SupportedIdentityProviders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-identity-providers)))
    (aws-sdk/generator/shape::to-query-params "CallbackURLs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'callback-urls)))
    (aws-sdk/generator/shape::to-query-params "LogoutURLs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logout-urls)))
    (aws-sdk/generator/shape::to-query-params "DefaultRedirectURI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-redirect-uri)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthFlows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-flows)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthScopes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-scopes)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthFlowsUserPoolClient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-flows-user-pool-client))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-pool-client-response (:copier common-lisp:nil))
   (user-pool-client common-lisp:nil :type
    (common-lisp:or user-pool-client-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-client-response
                    'make-update-user-pool-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-pool-client-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolClient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-client))))))
(common-lisp:progn
 (common-lisp:defstruct (update-user-pool-request (:copier common-lisp:nil))
   (user-pool-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":user-pool-id is required"))
    :type (common-lisp:or user-pool-id-type common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or user-pool-policy-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (auto-verified-attributes common-lisp:nil :type
    (common-lisp:or verified-attributes-list-type common-lisp:null))
   (sms-verification-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-verification-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-verification-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (verification-message-template common-lisp:nil :type
    (common-lisp:or verification-message-template-type common-lisp:null))
   (sms-authentication-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (mfa-configuration common-lisp:nil :type
    (common-lisp:or user-pool-mfa-type common-lisp:null))
   (device-configuration common-lisp:nil :type
    (common-lisp:or device-configuration-type common-lisp:null))
   (email-configuration common-lisp:nil :type
    (common-lisp:or email-configuration-type common-lisp:null))
   (sms-configuration common-lisp:nil :type
    (common-lisp:or sms-configuration-type common-lisp:null))
   (user-pool-tags common-lisp:nil :type
    (common-lisp:or user-pool-tags-type common-lisp:null))
   (admin-create-user-config common-lisp:nil :type
    (common-lisp:or admin-create-user-config-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-request 'make-update-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies)))
    (aws-sdk/generator/shape::to-query-params "LambdaConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-config)))
    (aws-sdk/generator/shape::to-query-params "AutoVerifiedAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-verified-attributes)))
    (aws-sdk/generator/shape::to-query-params "SmsVerificationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-verification-message)))
    (aws-sdk/generator/shape::to-query-params "EmailVerificationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-verification-message)))
    (aws-sdk/generator/shape::to-query-params "EmailVerificationSubject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-verification-subject)))
    (aws-sdk/generator/shape::to-query-params "VerificationMessageTemplate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verification-message-template)))
    (aws-sdk/generator/shape::to-query-params "SmsAuthenticationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-authentication-message)))
    (aws-sdk/generator/shape::to-query-params "MfaConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfa-configuration)))
    (aws-sdk/generator/shape::to-query-params "DeviceConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-configuration)))
    (aws-sdk/generator/shape::to-query-params "EmailConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-configuration)))
    (aws-sdk/generator/shape::to-query-params "SmsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-configuration)))
    (aws-sdk/generator/shape::to-query-params "UserPoolTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-tags)))
    (aws-sdk/generator/shape::to-query-params "AdminCreateUserConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'admin-create-user-config))))))
(common-lisp:progn
 (common-lisp:defstruct (update-user-pool-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-response
                    'make-update-user-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-pool-response))
   (common-lisp:append)))
(common-lisp:deftype user-filter-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (user-import-in-progress-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-import-in-progress-exception
                    'make-user-import-in-progress-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-import-in-progress-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype user-import-job-id-type () 'common-lisp:string)
(common-lisp:deftype user-import-job-name-type () 'common-lisp:string)
(common-lisp:deftype user-import-job-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (user-import-job-type (:copier common-lisp:nil))
   (job-name common-lisp:nil :type
    (common-lisp:or user-import-job-name-type common-lisp:null))
   (job-id common-lisp:nil :type
    (common-lisp:or user-import-job-id-type common-lisp:null))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (pre-signed-url common-lisp:nil :type
    (common-lisp:or pre-signed-url-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or user-import-job-status-type common-lisp:null))
   (cloud-watch-logs-role-arn common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (imported-users common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (skipped-users common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (failed-users common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (completion-message common-lisp:nil :type
    (common-lisp:or completion-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-import-job-type 'make-user-import-job-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-import-job-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-name)))
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "PreSignedUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pre-signed-url)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "StartDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "CompletionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completion-date)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLogsRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logs-role-arn)))
    (aws-sdk/generator/shape::to-query-params "ImportedUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'imported-users)))
    (aws-sdk/generator/shape::to-query-params "SkippedUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'skipped-users)))
    (aws-sdk/generator/shape::to-query-params "FailedUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-users)))
    (aws-sdk/generator/shape::to-query-params "CompletionMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completion-message))))))
(common-lisp:progn
 (common-lisp:deftype user-import-jobs-list-type ()
   '(trivial-types:proper-list user-import-job-type))
 (common-lisp:defun |make-user-import-jobs-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-import-job-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (user-lambda-validation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-lambda-validation-exception
                    'make-user-lambda-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-lambda-validation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (user-not-confirmed-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-not-confirmed-exception
                    'make-user-not-confirmed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-not-confirmed-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (user-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-not-found-exception 'make-user-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (user-pool-client-description (:copier common-lisp:nil))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-name common-lisp:nil :type
    (common-lisp:or client-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-client-description
                    'make-user-pool-client-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-pool-client-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-name))))))
(common-lisp:progn
 (common-lisp:deftype user-pool-client-list-type ()
   '(trivial-types:proper-list user-pool-client-description))
 (common-lisp:defun |make-user-pool-client-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            user-pool-client-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (user-pool-client-type (:copier common-lisp:nil))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-name common-lisp:nil :type
    (common-lisp:or client-name-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (client-secret common-lisp:nil :type
    (common-lisp:or client-secret-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (refresh-token-validity common-lisp:nil :type
    (common-lisp:or refresh-token-validity-type common-lisp:null))
   (read-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (write-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (explicit-auth-flows common-lisp:nil :type
    (common-lisp:or explicit-auth-flows-list-type common-lisp:null))
   (supported-identity-providers common-lisp:nil :type
    (common-lisp:or supported-identity-providers-list-type common-lisp:null))
   (callback-urls common-lisp:nil :type
    (common-lisp:or callback-urls-list-type common-lisp:null))
   (logout-urls common-lisp:nil :type
    (common-lisp:or logout-urls-list-type common-lisp:null))
   (default-redirect-uri common-lisp:nil :type
    (common-lisp:or redirect-url-type common-lisp:null))
   (allowed-oauth-flows common-lisp:nil :type
    (common-lisp:or oauth-flows-type common-lisp:null))
   (allowed-oauth-scopes common-lisp:nil :type
    (common-lisp:or scope-list-type common-lisp:null))
   (allowed-oauth-flows-user-pool-client common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-client-type 'make-user-pool-client-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-pool-client-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-id)))
    (aws-sdk/generator/shape::to-query-params "ClientName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-name)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "ClientSecret"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-secret)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "RefreshTokenValidity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'refresh-token-validity)))
    (aws-sdk/generator/shape::to-query-params "ReadAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'read-attributes)))
    (aws-sdk/generator/shape::to-query-params "WriteAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-attributes)))
    (aws-sdk/generator/shape::to-query-params "ExplicitAuthFlows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'explicit-auth-flows)))
    (aws-sdk/generator/shape::to-query-params "SupportedIdentityProviders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-identity-providers)))
    (aws-sdk/generator/shape::to-query-params "CallbackURLs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'callback-urls)))
    (aws-sdk/generator/shape::to-query-params "LogoutURLs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logout-urls)))
    (aws-sdk/generator/shape::to-query-params "DefaultRedirectURI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-redirect-uri)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthFlows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-flows)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthScopes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-scopes)))
    (aws-sdk/generator/shape::to-query-params "AllowedOAuthFlowsUserPoolClient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-oauth-flows-user-pool-client))))))
(common-lisp:progn
 (common-lisp:defstruct (user-pool-description-type (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or user-pool-name-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-description-type
                    'make-user-pool-description-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-pool-description-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "LambdaConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-config)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:deftype user-pool-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype user-pool-list-type ()
   '(trivial-types:proper-list user-pool-description-type))
 (common-lisp:defun |make-user-pool-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            user-pool-description-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-pool-mfa-type () 'common-lisp:string)
(common-lisp:deftype user-pool-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (user-pool-policy-type (:copier common-lisp:nil))
   (password-policy common-lisp:nil :type
    (common-lisp:or password-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-policy-type 'make-user-pool-policy-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-pool-policy-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PasswordPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password-policy))))))
(common-lisp:progn
 (common-lisp:defstruct (user-pool-tagging-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-tagging-exception
                    'make-user-pool-tagging-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-pool-tagging-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:defstruct
    (user-pool-tags-type
     (:constructor |make-user-pool-tags-type|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (user-pool-type (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or user-pool-name-type common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or user-pool-policy-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (schema-attributes common-lisp:nil :type
    (common-lisp:or schema-attributes-list-type common-lisp:null))
   (auto-verified-attributes common-lisp:nil :type
    (common-lisp:or verified-attributes-list-type common-lisp:null))
   (alias-attributes common-lisp:nil :type
    (common-lisp:or alias-attributes-list-type common-lisp:null))
   (username-attributes common-lisp:nil :type
    (common-lisp:or username-attributes-list-type common-lisp:null))
   (sms-verification-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-verification-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-verification-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (verification-message-template common-lisp:nil :type
    (common-lisp:or verification-message-template-type common-lisp:null))
   (sms-authentication-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (mfa-configuration common-lisp:nil :type
    (common-lisp:or user-pool-mfa-type common-lisp:null))
   (device-configuration common-lisp:nil :type
    (common-lisp:or device-configuration-type common-lisp:null))
   (estimated-number-of-users common-lisp:nil :type
    (common-lisp:or integer-type common-lisp:null))
   (email-configuration common-lisp:nil :type
    (common-lisp:or email-configuration-type common-lisp:null))
   (sms-configuration common-lisp:nil :type
    (common-lisp:or sms-configuration-type common-lisp:null))
   (user-pool-tags common-lisp:nil :type
    (common-lisp:or user-pool-tags-type common-lisp:null))
   (sms-configuration-failure common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (email-configuration-failure common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (admin-create-user-config common-lisp:nil :type
    (common-lisp:or admin-create-user-config-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-pool-type 'make-user-pool-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-pool-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies)))
    (aws-sdk/generator/shape::to-query-params "LambdaConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-config)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "SchemaAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-attributes)))
    (aws-sdk/generator/shape::to-query-params "AutoVerifiedAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-verified-attributes)))
    (aws-sdk/generator/shape::to-query-params "AliasAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-attributes)))
    (aws-sdk/generator/shape::to-query-params "UsernameAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username-attributes)))
    (aws-sdk/generator/shape::to-query-params "SmsVerificationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-verification-message)))
    (aws-sdk/generator/shape::to-query-params "EmailVerificationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-verification-message)))
    (aws-sdk/generator/shape::to-query-params "EmailVerificationSubject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-verification-subject)))
    (aws-sdk/generator/shape::to-query-params "VerificationMessageTemplate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verification-message-template)))
    (aws-sdk/generator/shape::to-query-params "SmsAuthenticationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-authentication-message)))
    (aws-sdk/generator/shape::to-query-params "MfaConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfa-configuration)))
    (aws-sdk/generator/shape::to-query-params "DeviceConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-configuration)))
    (aws-sdk/generator/shape::to-query-params "EstimatedNumberOfUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'estimated-number-of-users)))
    (aws-sdk/generator/shape::to-query-params "EmailConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-configuration)))
    (aws-sdk/generator/shape::to-query-params "SmsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-configuration)))
    (aws-sdk/generator/shape::to-query-params "UserPoolTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-pool-tags)))
    (aws-sdk/generator/shape::to-query-params "SmsConfigurationFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-configuration-failure)))
    (aws-sdk/generator/shape::to-query-params "EmailConfigurationFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-configuration-failure)))
    (aws-sdk/generator/shape::to-query-params "AdminCreateUserConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'admin-create-user-config))))))
(common-lisp:deftype user-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (user-type (:copier common-lisp:nil))
   (username common-lisp:nil :type
    (common-lisp:or username-type common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (user-create-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (user-last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (user-status common-lisp:nil :type
    (common-lisp:or user-status-type common-lisp:null))
   (mfaoptions common-lisp:nil :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-type 'make-user-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "UserCreateDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-create-date)))
    (aws-sdk/generator/shape::to-query-params "UserLastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "UserStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-status)))
    (aws-sdk/generator/shape::to-query-params "MFAOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mfaoptions))))))
(common-lisp:deftype username-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype username-attributes-list-type ()
   '(trivial-types:proper-list username-attribute-type))
 (common-lisp:defun |make-username-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list username-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (username-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'username-exists-exception
                    'make-username-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          username-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype username-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype users-list-type ()
   '(trivial-types:proper-list user-type))
 (common-lisp:defun |make-users-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (verification-message-template-type (:copier common-lisp:nil))
   (sms-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (email-message-by-link common-lisp:nil :type
    (common-lisp:or email-verification-message-by-link-type common-lisp:null))
   (email-subject-by-link common-lisp:nil :type
    (common-lisp:or email-verification-subject-by-link-type common-lisp:null))
   (default-email-option common-lisp:nil :type
    (common-lisp:or default-email-option-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verification-message-template-type
                    'make-verification-message-template-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verification-message-template-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SmsMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sms-message)))
    (aws-sdk/generator/shape::to-query-params "EmailMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-message)))
    (aws-sdk/generator/shape::to-query-params "EmailSubject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-subject)))
    (aws-sdk/generator/shape::to-query-params "EmailMessageByLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-message-by-link)))
    (aws-sdk/generator/shape::to-query-params "EmailSubjectByLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-subject-by-link)))
    (aws-sdk/generator/shape::to-query-params "DefaultEmailOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-email-option))))))
(common-lisp:deftype verified-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype verified-attributes-list-type ()
   '(trivial-types:proper-list verified-attribute-type))
 (common-lisp:defun |make-verified-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list verified-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-user-attribute-request (:copier common-lisp:nil))
   (access-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":access-token is required"))
    :type (common-lisp:or token-model-type common-lisp:null))
   (attribute-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-name is required"))
    :type (common-lisp:or attribute-name-type common-lisp:null))
   (code
    (common-lisp:error #A((17) common-lisp:base-char . ":code is required"))
    :type (common-lisp:or confirmation-code-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-user-attribute-request
                    'make-verify-user-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-user-attribute-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-token)))
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code))))))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-user-attribute-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'verify-user-attribute-response
                    'make-verify-user-attribute-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-user-attribute-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defun add-custom-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id custom-attributes)
   (common-lisp:declare (common-lisp:ignorable user-pool-id custom-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-custom-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddCustomAttributes")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddCustomAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'add-custom-attributes))
(common-lisp:progn
 (common-lisp:defun admin-add-user-to-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username group-name)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-add-user-to-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminAddUserToGroup")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'admin-add-user-to-group))
(common-lisp:progn
 (common-lisp:defun admin-confirm-sign-up
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-confirm-sign-up-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminConfirmSignUp")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminConfirmSignUpResponse" common-lisp:nil)))
 (common-lisp:export 'admin-confirm-sign-up))
(common-lisp:progn
 (common-lisp:defun admin-create-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username user-attributes
                     validation-data temporary-password force-alias-creation
                     message-action desired-delivery-mediums)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username user-attributes
     validation-data temporary-password force-alias-creation message-action
     desired-delivery-mediums))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-create-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminCreateUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminCreateUserResponse" common-lisp:nil)))
 (common-lisp:export 'admin-create-user))
(common-lisp:progn
 (common-lisp:defun admin-delete-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-delete-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminDeleteUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'admin-delete-user))
(common-lisp:progn
 (common-lisp:defun admin-delete-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username
                     user-attribute-names)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username user-attribute-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-delete-user-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminDeleteUserAttributes")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminDeleteUserAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'admin-delete-user-attributes))
(common-lisp:progn
 (common-lisp:defun admin-disable-provider-for-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id user)
   (common-lisp:declare (common-lisp:ignorable user-pool-id user))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-disable-provider-for-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminDisableProviderForUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminDisableProviderForUserResponse" common-lisp:nil)))
 (common-lisp:export 'admin-disable-provider-for-user))
(common-lisp:progn
 (common-lisp:defun admin-disable-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-disable-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminDisableUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminDisableUserResponse" common-lisp:nil)))
 (common-lisp:export 'admin-disable-user))
(common-lisp:progn
 (common-lisp:defun admin-enable-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-enable-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminEnableUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminEnableUserResponse" common-lisp:nil)))
 (common-lisp:export 'admin-enable-user))
(common-lisp:progn
 (common-lisp:defun admin-forget-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username device-key)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username device-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-forget-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminForgetDevice")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'admin-forget-device))
(common-lisp:progn
 (common-lisp:defun admin-get-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-key user-pool-id username)
   (common-lisp:declare
    (common-lisp:ignorable device-key user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-get-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminGetDevice")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminGetDeviceResponse" common-lisp:nil)))
 (common-lisp:export 'admin-get-device))
(common-lisp:progn
 (common-lisp:defun admin-get-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-get-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminGetUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminGetUserResponse" common-lisp:nil)))
 (common-lisp:export 'admin-get-user))
(common-lisp:progn
 (common-lisp:defun admin-initiate-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id auth-flow
                     auth-parameters client-metadata)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id auth-flow auth-parameters
     client-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-initiate-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminInitiateAuth")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminInitiateAuthResponse" common-lisp:nil)))
 (common-lisp:export 'admin-initiate-auth))
(common-lisp:progn
 (common-lisp:defun admin-link-provider-for-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id destination-user
                     source-user)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id destination-user source-user))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-link-provider-for-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminLinkProviderForUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminLinkProviderForUserResponse" common-lisp:nil)))
 (common-lisp:export 'admin-link-provider-for-user))
(common-lisp:progn
 (common-lisp:defun admin-list-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username limit
                     pagination-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username limit pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-list-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminListDevices")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminListDevicesResponse" common-lisp:nil)))
 (common-lisp:export 'admin-list-devices))
(common-lisp:progn
 (common-lisp:defun admin-list-groups-for-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key username user-pool-id limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable username user-pool-id limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-list-groups-for-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminListGroupsForUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminListGroupsForUserResponse" common-lisp:nil)))
 (common-lisp:export 'admin-list-groups-for-user))
(common-lisp:progn
 (common-lisp:defun admin-remove-user-from-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username group-name)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-remove-user-from-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminRemoveUserFromGroup")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'admin-remove-user-from-group))
(common-lisp:progn
 (common-lisp:defun admin-reset-user-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-reset-user-password-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminResetUserPassword")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminResetUserPasswordResponse" common-lisp:nil)))
 (common-lisp:export 'admin-reset-user-password))
(common-lisp:progn
 (common-lisp:defun admin-respond-to-auth-challenge
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id challenge-name
                     challenge-responses session)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id challenge-name
     challenge-responses session))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-respond-to-auth-challenge-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminRespondToAuthChallenge")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminRespondToAuthChallengeResponse" common-lisp:nil)))
 (common-lisp:export 'admin-respond-to-auth-challenge))
(common-lisp:progn
 (common-lisp:defun admin-set-user-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username mfaoptions)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username mfaoptions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-set-user-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminSetUserSettings")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminSetUserSettingsResponse" common-lisp:nil)))
 (common-lisp:export 'admin-set-user-settings))
(common-lisp:progn
 (common-lisp:defun admin-update-device-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username device-key
                     device-remembered-status)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username device-key
     device-remembered-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-update-device-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminUpdateDeviceStatus")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminUpdateDeviceStatusResponse" common-lisp:nil)))
 (common-lisp:export 'admin-update-device-status))
(common-lisp:progn
 (common-lisp:defun admin-update-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username user-attributes)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username user-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-update-user-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminUpdateUserAttributes")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminUpdateUserAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'admin-update-user-attributes))
(common-lisp:progn
 (common-lisp:defun admin-user-global-sign-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-user-global-sign-out-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AdminUserGlobalSignOut")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AdminUserGlobalSignOutResponse" common-lisp:nil)))
 (common-lisp:export 'admin-user-global-sign-out))
(common-lisp:progn
 (common-lisp:defun change-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key previous-password proposed-password
                     access-token)
   (common-lisp:declare
    (common-lisp:ignorable previous-password proposed-password access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-change-password-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ChangePassword")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ChangePasswordResponse" common-lisp:nil)))
 (common-lisp:export 'change-password))
(common-lisp:progn
 (common-lisp:defun confirm-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token device-key
                     device-secret-verifier-config device-name)
   (common-lisp:declare
    (common-lisp:ignorable access-token device-key
     device-secret-verifier-config device-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ConfirmDevice")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfirmDeviceResponse" common-lisp:nil)))
 (common-lisp:export 'confirm-device))
(common-lisp:progn
 (common-lisp:defun confirm-forgot-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username
                     confirmation-code password)
   (common-lisp:declare
    (common-lisp:ignorable client-id secret-hash username confirmation-code
     password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-forgot-password-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ConfirmForgotPassword")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfirmForgotPasswordResponse" common-lisp:nil)))
 (common-lisp:export 'confirm-forgot-password))
(common-lisp:progn
 (common-lisp:defun confirm-sign-up
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username
                     confirmation-code force-alias-creation)
   (common-lisp:declare
    (common-lisp:ignorable client-id secret-hash username confirmation-code
     force-alias-creation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-sign-up-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ConfirmSignUp")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfirmSignUpResponse" common-lisp:nil)))
 (common-lisp:export 'confirm-sign-up))
(common-lisp:progn
 (common-lisp:defun create-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id description
                     role-arn precedence)
   (common-lisp:declare
    (common-lisp:ignorable group-name user-pool-id description role-arn
     precedence))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateGroup")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateGroupResponse" common-lisp:nil)))
 (common-lisp:export 'create-group))
(common-lisp:progn
 (common-lisp:defun create-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name provider-type
                     provider-details attribute-mapping idp-identifiers)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id provider-name provider-type
     provider-details attribute-mapping idp-identifiers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-identity-provider-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateIdentityProvider")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateIdentityProviderResponse" common-lisp:nil)))
 (common-lisp:export 'create-identity-provider))
(common-lisp:progn
 (common-lisp:defun create-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier name scopes)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id identifier name scopes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateResourceServer")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateResourceServerResponse" common-lisp:nil)))
 (common-lisp:export 'create-resource-server))
(common-lisp:progn
 (common-lisp:defun create-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-name user-pool-id
                     cloud-watch-logs-role-arn)
   (common-lisp:declare
    (common-lisp:ignorable job-name user-pool-id cloud-watch-logs-role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUserImportJob")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUserImportJobResponse" common-lisp:nil)))
 (common-lisp:export 'create-user-import-job))
(common-lisp:progn
 (common-lisp:defun create-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name policies lambda-config
                     auto-verified-attributes alias-attributes
                     username-attributes sms-verification-message
                     email-verification-message email-verification-subject
                     verification-message-template sms-authentication-message
                     mfa-configuration device-configuration email-configuration
                     sms-configuration user-pool-tags admin-create-user-config
                     schema)
   (common-lisp:declare
    (common-lisp:ignorable pool-name policies lambda-config
     auto-verified-attributes alias-attributes username-attributes
     sms-verification-message email-verification-message
     email-verification-subject verification-message-template
     sms-authentication-message mfa-configuration device-configuration
     email-configuration sms-configuration user-pool-tags
     admin-create-user-config schema))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUserPool")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUserPoolResponse" common-lisp:nil)))
 (common-lisp:export 'create-user-pool))
(common-lisp:progn
 (common-lisp:defun create-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-name generate-secret
                     refresh-token-validity read-attributes write-attributes
                     explicit-auth-flows supported-identity-providers
                     callback-urls logout-urls default-redirect-uri
                     allowed-oauth-flows allowed-oauth-scopes
                     allowed-oauth-flows-user-pool-client)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-name generate-secret
     refresh-token-validity read-attributes write-attributes
     explicit-auth-flows supported-identity-providers callback-urls logout-urls
     default-redirect-uri allowed-oauth-flows allowed-oauth-scopes
     allowed-oauth-flows-user-pool-client))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-pool-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUserPoolClient")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUserPoolClientResponse" common-lisp:nil)))
 (common-lisp:export 'create-user-pool-client))
(common-lisp:progn
 (common-lisp:defun create-user-pool-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain user-pool-id)
   (common-lisp:declare (common-lisp:ignorable domain user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-pool-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUserPoolDomain")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUserPoolDomainResponse" common-lisp:nil)))
 (common-lisp:export 'create-user-pool-domain))
(common-lisp:progn
 (common-lisp:defun delete-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id)
   (common-lisp:declare (common-lisp:ignorable group-name user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteGroup")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-group))
(common-lisp:progn
 (common-lisp:defun delete-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name)
   (common-lisp:declare (common-lisp:ignorable user-pool-id provider-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-identity-provider-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIdentityProvider")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-identity-provider))
(common-lisp:progn
 (common-lisp:defun delete-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier)
   (common-lisp:declare (common-lisp:ignorable user-pool-id identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteResourceServer")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-resource-server))
(common-lisp:progn
 (common-lisp:defun delete-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-user))
(common-lisp:progn
 (common-lisp:defun delete-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-attribute-names access-token)
   (common-lisp:declare
    (common-lisp:ignorable user-attribute-names access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUserAttributes")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteUserAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'delete-user-attributes))
(common-lisp:progn
 (common-lisp:defun delete-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUserPool")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-user-pool))
(common-lisp:progn
 (common-lisp:defun delete-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-pool-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUserPoolClient")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-user-pool-client))
(common-lisp:progn
 (common-lisp:defun delete-user-pool-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain user-pool-id)
   (common-lisp:declare (common-lisp:ignorable domain user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-pool-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUserPoolDomain")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteUserPoolDomainResponse" common-lisp:nil)))
 (common-lisp:export 'delete-user-pool-domain))
(common-lisp:progn
 (common-lisp:defun describe-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name)
   (common-lisp:declare (common-lisp:ignorable user-pool-id provider-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-identity-provider-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeIdentityProvider")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeIdentityProviderResponse" common-lisp:nil)))
 (common-lisp:export 'describe-identity-provider))
(common-lisp:progn
 (common-lisp:defun describe-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier)
   (common-lisp:declare (common-lisp:ignorable user-pool-id identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeResourceServer")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeResourceServerResponse" common-lisp:nil)))
 (common-lisp:export 'describe-resource-server))
(common-lisp:progn
 (common-lisp:defun describe-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id job-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeUserImportJob")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeUserImportJobResponse" common-lisp:nil)))
 (common-lisp:export 'describe-user-import-job))
(common-lisp:progn
 (common-lisp:defun describe-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeUserPool")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeUserPoolResponse" common-lisp:nil)))
 (common-lisp:export 'describe-user-pool))
(common-lisp:progn
 (common-lisp:defun describe-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-user-pool-client-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeUserPoolClient")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeUserPoolClientResponse" common-lisp:nil)))
 (common-lisp:export 'describe-user-pool-client))
(common-lisp:progn
 (common-lisp:defun describe-user-pool-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain)
   (common-lisp:declare (common-lisp:ignorable domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-user-pool-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeUserPoolDomain")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeUserPoolDomainResponse" common-lisp:nil)))
 (common-lisp:export 'describe-user-pool-domain))
(common-lisp:progn
 (common-lisp:defun forget-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token device-key)
   (common-lisp:declare (common-lisp:ignorable access-token device-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-forget-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ForgetDevice")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'forget-device))
(common-lisp:progn
 (common-lisp:defun forgot-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username)
   (common-lisp:declare (common-lisp:ignorable client-id secret-hash username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-forgot-password-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ForgotPassword")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ForgotPasswordResponse" common-lisp:nil)))
 (common-lisp:export 'forgot-password))
(common-lisp:progn
 (common-lisp:defun get-csvheader
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-csvheader-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetCSVHeader")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCSVHeaderResponse" common-lisp:nil)))
 (common-lisp:export 'get-csvheader))
(common-lisp:progn
 (common-lisp:defun get-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-key access-token)
   (common-lisp:declare (common-lisp:ignorable device-key access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDevice")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDeviceResponse" common-lisp:nil)))
 (common-lisp:export 'get-device))
(common-lisp:progn
 (common-lisp:defun get-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id)
   (common-lisp:declare (common-lisp:ignorable group-name user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetGroup")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetGroupResponse" common-lisp:nil)))
 (common-lisp:export 'get-group))
(common-lisp:progn
 (common-lisp:defun get-identity-provider-by-identifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id idp-identifier)
   (common-lisp:declare (common-lisp:ignorable user-pool-id idp-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-identity-provider-by-identifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetIdentityProviderByIdentifier")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityProviderByIdentifierResponse" common-lisp:nil)))
 (common-lisp:export 'get-identity-provider-by-identifier))
(common-lisp:progn
 (common-lisp:defun get-uicustomization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-uicustomization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetUICustomization")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetUICustomizationResponse" common-lisp:nil)))
 (common-lisp:export 'get-uicustomization))
(common-lisp:progn
 (common-lisp:defun get-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetUser")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetUserResponse" common-lisp:nil)))
 (common-lisp:export 'get-user))
(common-lisp:progn
 (common-lisp:defun get-user-attribute-verification-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token attribute-name)
   (common-lisp:declare (common-lisp:ignorable access-token attribute-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-user-attribute-verification-code-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetUserAttributeVerificationCode")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetUserAttributeVerificationCodeResponse" common-lisp:nil)))
 (common-lisp:export 'get-user-attribute-verification-code))
(common-lisp:progn
 (common-lisp:defun global-sign-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-global-sign-out-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GlobalSignOut")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GlobalSignOutResponse" common-lisp:nil)))
 (common-lisp:export 'global-sign-out))
(common-lisp:progn
 (common-lisp:defun initiate-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auth-flow auth-parameters client-metadata
                     client-id)
   (common-lisp:declare
    (common-lisp:ignorable auth-flow auth-parameters client-metadata
     client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"InitiateAuth")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InitiateAuthResponse" common-lisp:nil)))
 (common-lisp:export 'initiate-auth))
(common-lisp:progn
 (common-lisp:defun list-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token limit pagination-token)
   (common-lisp:declare
    (common-lisp:ignorable access-token limit pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDevices")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDevicesResponse" common-lisp:nil)))
 (common-lisp:export 'list-devices))
(common-lisp:progn
 (common-lisp:defun list-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id limit next-token)
   (common-lisp:declare (common-lisp:ignorable user-pool-id limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListGroups")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListGroupsResponse" common-lisp:nil)))
 (common-lisp:export 'list-groups))
(common-lisp:progn
 (common-lisp:defun list-identity-providers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-identity-providers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIdentityProviders")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIdentityProvidersResponse" common-lisp:nil)))
 (common-lisp:export 'list-identity-providers))
(common-lisp:progn
 (common-lisp:defun list-resource-servers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-servers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListResourceServers")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListResourceServersResponse" common-lisp:nil)))
 (common-lisp:export 'list-resource-servers))
(common-lisp:progn
 (common-lisp:defun list-user-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results
                     pagination-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-user-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUserImportJobs")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUserImportJobsResponse" common-lisp:nil)))
 (common-lisp:export 'list-user-import-jobs))
(common-lisp:progn
 (common-lisp:defun list-user-pool-clients
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-user-pool-clients-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUserPoolClients")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUserPoolClientsResponse" common-lisp:nil)))
 (common-lisp:export 'list-user-pool-clients))
(common-lisp:progn
 (common-lisp:defun list-user-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-user-pools-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUserPools")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUserPoolsResponse" common-lisp:nil)))
 (common-lisp:export 'list-user-pools))
(common-lisp:progn
 (common-lisp:defun list-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id attributes-to-get limit
                     pagination-token filter)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id attributes-to-get limit
     pagination-token filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUsers")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUsersResponse" common-lisp:nil)))
 (common-lisp:export 'list-users))
(common-lisp:progn
 (common-lisp:defun list-users-in-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id group-name limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id group-name limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-users-in-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUsersInGroup")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUsersInGroupResponse" common-lisp:nil)))
 (common-lisp:export 'list-users-in-group))
(common-lisp:progn
 (common-lisp:defun resend-confirmation-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username)
   (common-lisp:declare (common-lisp:ignorable client-id secret-hash username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-resend-confirmation-code-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ResendConfirmationCode")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ResendConfirmationCodeResponse" common-lisp:nil)))
 (common-lisp:export 'resend-confirmation-code))
(common-lisp:progn
 (common-lisp:defun respond-to-auth-challenge
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id challenge-name session
                     challenge-responses)
   (common-lisp:declare
    (common-lisp:ignorable client-id challenge-name session
     challenge-responses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-respond-to-auth-challenge-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RespondToAuthChallenge")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RespondToAuthChallengeResponse" common-lisp:nil)))
 (common-lisp:export 'respond-to-auth-challenge))
(common-lisp:progn
 (common-lisp:defun set-uicustomization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id css image-file)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id css image-file))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-uicustomization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetUICustomization")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetUICustomizationResponse" common-lisp:nil)))
 (common-lisp:export 'set-uicustomization))
(common-lisp:progn
 (common-lisp:defun set-user-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token mfaoptions)
   (common-lisp:declare (common-lisp:ignorable access-token mfaoptions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-user-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetUserSettings")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetUserSettingsResponse" common-lisp:nil)))
 (common-lisp:export 'set-user-settings))
(common-lisp:progn
 (common-lisp:defun sign-up
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username password
                     user-attributes validation-data)
   (common-lisp:declare
    (common-lisp:ignorable client-id secret-hash username password
     user-attributes validation-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-sign-up-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SignUp")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SignUpResponse" common-lisp:nil)))
 (common-lisp:export 'sign-up))
(common-lisp:progn
 (common-lisp:defun start-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id job-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartUserImportJob")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartUserImportJobResponse" common-lisp:nil)))
 (common-lisp:export 'start-user-import-job))
(common-lisp:progn
 (common-lisp:defun stop-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id job-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopUserImportJob")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopUserImportJobResponse" common-lisp:nil)))
 (common-lisp:export 'stop-user-import-job))
(common-lisp:progn
 (common-lisp:defun update-device-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token device-key
                     device-remembered-status)
   (common-lisp:declare
    (common-lisp:ignorable access-token device-key device-remembered-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-device-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDeviceStatus")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDeviceStatusResponse" common-lisp:nil)))
 (common-lisp:export 'update-device-status))
(common-lisp:progn
 (common-lisp:defun update-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id description
                     role-arn precedence)
   (common-lisp:declare
    (common-lisp:ignorable group-name user-pool-id description role-arn
     precedence))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateGroup")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateGroupResponse" common-lisp:nil)))
 (common-lisp:export 'update-group))
(common-lisp:progn
 (common-lisp:defun update-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name
                     provider-details attribute-mapping idp-identifiers)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id provider-name provider-details
     attribute-mapping idp-identifiers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-identity-provider-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateIdentityProvider")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateIdentityProviderResponse" common-lisp:nil)))
 (common-lisp:export 'update-identity-provider))
(common-lisp:progn
 (common-lisp:defun update-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier name scopes)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id identifier name scopes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateResourceServer")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateResourceServerResponse" common-lisp:nil)))
 (common-lisp:export 'update-resource-server))
(common-lisp:progn
 (common-lisp:defun update-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-attributes access-token)
   (common-lisp:declare (common-lisp:ignorable user-attributes access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUserAttributes")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateUserAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'update-user-attributes))
(common-lisp:progn
 (common-lisp:defun update-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id policies lambda-config
                     auto-verified-attributes sms-verification-message
                     email-verification-message email-verification-subject
                     verification-message-template sms-authentication-message
                     mfa-configuration device-configuration email-configuration
                     sms-configuration user-pool-tags admin-create-user-config)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id policies lambda-config
     auto-verified-attributes sms-verification-message
     email-verification-message email-verification-subject
     verification-message-template sms-authentication-message mfa-configuration
     device-configuration email-configuration sms-configuration user-pool-tags
     admin-create-user-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUserPool")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateUserPoolResponse" common-lisp:nil)))
 (common-lisp:export 'update-user-pool))
(common-lisp:progn
 (common-lisp:defun update-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id client-name
                     refresh-token-validity read-attributes write-attributes
                     explicit-auth-flows supported-identity-providers
                     callback-urls logout-urls default-redirect-uri
                     allowed-oauth-flows allowed-oauth-scopes
                     allowed-oauth-flows-user-pool-client)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id client-name
     refresh-token-validity read-attributes write-attributes
     explicit-auth-flows supported-identity-providers callback-urls logout-urls
     default-redirect-uri allowed-oauth-flows allowed-oauth-scopes
     allowed-oauth-flows-user-pool-client))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-pool-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUserPoolClient")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateUserPoolClientResponse" common-lisp:nil)))
 (common-lisp:export 'update-user-pool-client))
(common-lisp:progn
 (common-lisp:defun verify-user-attribute
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token attribute-name code)
   (common-lisp:declare
    (common-lisp:ignorable access-token attribute-name code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-verify-user-attribute-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "cognito-idp")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"VerifyUserAttribute")
                                  ("Version" ,@"2016-04-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "VerifyUserAttributeResponse" common-lisp:nil)))
 (common-lisp:export 'verify-user-attribute))