;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/discovery
  (:use)
  (:nicknames #:aws/discovery)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/discovery)

(common-lisp:progn
 (common-lisp:defstruct (agent-configuration-status (:copier common-lisp:nil))
   (agent-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (operation-succeeded common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'agent-configuration-status
                    'make-agent-configuration-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          agent-configuration-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-id)))
    (aws-sdk/generator/shape::to-query-params "operationSucceeded"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-succeeded)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype agent-configuration-status-list ()
   '(trivial-types:proper-list agent-configuration-status))
 (common-lisp:defun |make-agent-configuration-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            agent-configuration-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype agent-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype agent-ids () '(trivial-types:proper-list agent-id))
 (common-lisp:defun |make-agent-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (agent-info (:copier common-lisp:nil))
   (agent-id common-lisp:nil :type (common-lisp:or agent-id common-lisp:null))
   (host-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (agent-network-info-list common-lisp:nil :type
    (common-lisp:or agent-network-info-list common-lisp:null))
   (connector-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (health common-lisp:nil :type
    (common-lisp:or agent-status common-lisp:null))
   (last-health-ping-time common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (collection-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (agent-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (registered-time common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'agent-info 'make-agent-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape agent-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-id)))
    (aws-sdk/generator/shape::to-query-params "hostName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'host-name)))
    (aws-sdk/generator/shape::to-query-params "agentNetworkInfoList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-network-info-list)))
    (aws-sdk/generator/shape::to-query-params "connectorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connector-id)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "health"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health)))
    (aws-sdk/generator/shape::to-query-params "lastHealthPingTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-health-ping-time)))
    (aws-sdk/generator/shape::to-query-params "collectionStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'collection-status)))
    (aws-sdk/generator/shape::to-query-params "agentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-type)))
    (aws-sdk/generator/shape::to-query-params "registeredTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registered-time))))))
(common-lisp:progn
 (common-lisp:defstruct (agent-network-info (:copier common-lisp:nil))
   (ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (mac-address common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'agent-network-info 'make-agent-network-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape agent-network-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ipAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "macAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mac-address))))))
(common-lisp:progn
 (common-lisp:deftype agent-network-info-list ()
   '(trivial-types:proper-list agent-network-info))
 (common-lisp:defun |make-agent-network-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-network-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype agent-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype agents-info () '(trivial-types:proper-list agent-info))
 (common-lisp:defun |make-agents-info|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype application-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-ids-list ()
   '(trivial-types:proper-list application-id))
 (common-lisp:defun |make-application-ids-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-configuration-items-to-application-request
      (:copier common-lisp:nil))
   (application-configuration-id
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":applicationconfigurationid is required"))
    :type (common-lisp:or application-id common-lisp:null))
   (configuration-ids
    (common-lisp:error
     #A((29) common-lisp:base-char . ":configurationids is required"))
    :type (common-lisp:or configuration-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-configuration-items-to-application-request
                    'make-associate-configuration-items-to-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-configuration-items-to-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationConfigurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-configuration-id)))
    (aws-sdk/generator/shape::to-query-params "configurationIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-configuration-items-to-application-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-configuration-items-to-application-response
                    'make-associate-configuration-items-to-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-configuration-items-to-application-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (authorization-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authorization-error-exception
                    'make-authorization-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          authorization-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype boxed-integer () 'common-lisp:integer)
(common-lisp:deftype condition () 'common-lisp:string)
(common-lisp:defstruct
    (configuration
     (:constructor |make-configuration|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype configuration-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-id-list ()
   '(trivial-types:proper-list configuration-id))
 (common-lisp:defun |make-configuration-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype configuration-item-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (configuration-tag (:copier common-lisp:nil))
   (configuration-type common-lisp:nil :type
    (common-lisp:or configuration-item-type common-lisp:null))
   (configuration-id common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (time-of-creation common-lisp:nil :type
    (common-lisp:or time-stamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-tag 'make-configuration-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape configuration-tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-type)))
    (aws-sdk/generator/shape::to-query-params "configurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-id)))
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "timeOfCreation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-of-creation))))))
(common-lisp:progn
 (common-lisp:deftype configuration-tag-set ()
   '(trivial-types:proper-list configuration-tag))
 (common-lisp:defun |make-configuration-tag-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype configurations ()
   '(trivial-types:proper-list configuration))
 (common-lisp:defun |make-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype configurations-download-url () 'common-lisp:string)
(common-lisp:deftype configurations-export-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-application-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (create-application-response (:copier common-lisp:nil))
   (configuration-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-response
                    'make-create-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-tags-request (:copier common-lisp:nil))
   (configuration-ids
    (common-lisp:error
     #A((29) common-lisp:base-char . ":configurationids is required"))
    :type (common-lisp:or configuration-id-list common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tags-request 'make-create-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-ids)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-tags-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-tags-response 'make-create-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-tags-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (customer-agent-info (:copier common-lisp:nil))
   (active-agents
    (common-lisp:error
     #A((25) common-lisp:base-char . ":activeagents is required"))
    :type (common-lisp:or integer common-lisp:null))
   (healthy-agents
    (common-lisp:error
     #A((26) common-lisp:base-char . ":healthyagents is required"))
    :type (common-lisp:or integer common-lisp:null))
   (black-listed-agents
    (common-lisp:error
     #A((30) common-lisp:base-char . ":blacklistedagents is required"))
    :type (common-lisp:or integer common-lisp:null))
   (shutdown-agents
    (common-lisp:error
     #A((27) common-lisp:base-char . ":shutdownagents is required"))
    :type (common-lisp:or integer common-lisp:null))
   (unhealthy-agents
    (common-lisp:error
     #A((28) common-lisp:base-char . ":unhealthyagents is required"))
    :type (common-lisp:or integer common-lisp:null))
   (total-agents
    (common-lisp:error
     #A((24) common-lisp:base-char . ":totalagents is required"))
    :type (common-lisp:or integer common-lisp:null))
   (unknown-agents
    (common-lisp:error
     #A((26) common-lisp:base-char . ":unknownagents is required"))
    :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'customer-agent-info 'make-customer-agent-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape customer-agent-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activeAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-agents)))
    (aws-sdk/generator/shape::to-query-params "healthyAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'healthy-agents)))
    (aws-sdk/generator/shape::to-query-params "blackListedAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'black-listed-agents)))
    (aws-sdk/generator/shape::to-query-params "shutdownAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shutdown-agents)))
    (aws-sdk/generator/shape::to-query-params "unhealthyAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unhealthy-agents)))
    (aws-sdk/generator/shape::to-query-params "totalAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-agents)))
    (aws-sdk/generator/shape::to-query-params "unknownAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unknown-agents))))))
(common-lisp:progn
 (common-lisp:defstruct (customer-connector-info (:copier common-lisp:nil))
   (active-connectors
    (common-lisp:error
     #A((29) common-lisp:base-char . ":activeconnectors is required"))
    :type (common-lisp:or integer common-lisp:null))
   (healthy-connectors
    (common-lisp:error
     #A((30) common-lisp:base-char . ":healthyconnectors is required"))
    :type (common-lisp:or integer common-lisp:null))
   (black-listed-connectors
    (common-lisp:error
     #A((34) common-lisp:base-char . ":blacklistedconnectors is required"))
    :type (common-lisp:or integer common-lisp:null))
   (shutdown-connectors
    (common-lisp:error
     #A((31) common-lisp:base-char . ":shutdownconnectors is required"))
    :type (common-lisp:or integer common-lisp:null))
   (unhealthy-connectors
    (common-lisp:error
     #A((32) common-lisp:base-char . ":unhealthyconnectors is required"))
    :type (common-lisp:or integer common-lisp:null))
   (total-connectors
    (common-lisp:error
     #A((28) common-lisp:base-char . ":totalconnectors is required"))
    :type (common-lisp:or integer common-lisp:null))
   (unknown-connectors
    (common-lisp:error
     #A((30) common-lisp:base-char . ":unknownconnectors is required"))
    :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'customer-connector-info 'make-customer-connector-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          customer-connector-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activeConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-connectors)))
    (aws-sdk/generator/shape::to-query-params "healthyConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'healthy-connectors)))
    (aws-sdk/generator/shape::to-query-params "blackListedConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'black-listed-connectors)))
    (aws-sdk/generator/shape::to-query-params "shutdownConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shutdown-connectors)))
    (aws-sdk/generator/shape::to-query-params "unhealthyConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unhealthy-connectors)))
    (aws-sdk/generator/shape::to-query-params "totalConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-connectors)))
    (aws-sdk/generator/shape::to-query-params "unknownConnectors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unknown-connectors))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-applications-request (:copier common-lisp:nil))
   (configuration-ids
    (common-lisp:error
     #A((29) common-lisp:base-char . ":configurationids is required"))
    :type (common-lisp:or application-ids-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-applications-request
                    'make-delete-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-applications-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-applications-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-applications-response
                    'make-delete-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-applications-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-request (:copier common-lisp:nil))
   (configuration-ids
    (common-lisp:error
     #A((29) common-lisp:base-char . ":configurationids is required"))
    :type (common-lisp:or configuration-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-request 'make-delete-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-ids)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-response 'make-delete-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-tags-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-agents-request (:copier common-lisp:nil))
   (agent-ids common-lisp:nil :type
    (common-lisp:or agent-ids common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filters common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-agents-request 'make-describe-agents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-agents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-ids)))
    (aws-sdk/generator/shape::to-query-params "filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-agents-response (:copier common-lisp:nil))
   (agents-info common-lisp:nil :type
    (common-lisp:or agents-info common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-agents-response 'make-describe-agents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-agents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentsInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agents-info)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:defstruct
    (describe-configurations-attribute
     (:constructor |make-describe-configurations-attribute|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype describe-configurations-attributes ()
   '(trivial-types:proper-list describe-configurations-attribute))
 (common-lisp:defun |make-describe-configurations-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            describe-configurations-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configurations-request (:copier common-lisp:nil))
   (configuration-ids
    (common-lisp:error
     #A((29) common-lisp:base-char . ":configurationids is required"))
    :type (common-lisp:or configuration-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configurations-request
                    'make-describe-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-configurations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configurations-response (:copier common-lisp:nil))
   (configurations common-lisp:nil :type
    (common-lisp:or describe-configurations-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configurations-response
                    'make-describe-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-configurations-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-export-configurations-request (:copier common-lisp:nil))
   (export-ids common-lisp:nil :type
    (common-lisp:or export-ids common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-export-configurations-request
                    'make-describe-export-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-export-configurations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-ids)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-export-configurations-response (:copier common-lisp:nil))
   (exports-info common-lisp:nil :type
    (common-lisp:or exports-info common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-export-configurations-response
                    'make-describe-export-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-export-configurations-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportsInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exports-info)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-export-tasks-request (:copier common-lisp:nil))
   (export-ids common-lisp:nil :type
    (common-lisp:or export-ids common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or export-filters common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-export-tasks-request
                    'make-describe-export-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-export-tasks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-ids)))
    (aws-sdk/generator/shape::to-query-params "filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-export-tasks-response (:copier common-lisp:nil))
   (exports-info common-lisp:nil :type
    (common-lisp:or exports-info common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-export-tasks-response
                    'make-describe-export-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-export-tasks-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportsInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exports-info)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or tag-filters common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-request 'make-describe-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type
    (common-lisp:or configuration-tag-set common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-response 'make-describe-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-tags-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-configuration-items-from-application-request
      (:copier common-lisp:nil))
   (application-configuration-id
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":applicationconfigurationid is required"))
    :type (common-lisp:or application-id common-lisp:null))
   (configuration-ids
    (common-lisp:error
     #A((29) common-lisp:base-char . ":configurationids is required"))
    :type (common-lisp:or configuration-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-configuration-items-from-application-request
                    'make-disassociate-configuration-items-from-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-configuration-items-from-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationConfigurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-configuration-id)))
    (aws-sdk/generator/shape::to-query-params "configurationIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-configuration-items-from-application-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-configuration-items-from-application-response
                    'make-disassociate-configuration-items-from-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-configuration-items-from-application-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (export-configurations-response (:copier common-lisp:nil))
   (export-id common-lisp:nil :type
    (common-lisp:or configurations-export-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-configurations-response
                    'make-export-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          export-configurations-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-id))))))
(common-lisp:deftype export-data-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype export-data-formats ()
   '(trivial-types:proper-list export-data-format))
 (common-lisp:defun |make-export-data-formats|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list export-data-format))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (export-filter (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or filter-name common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or filter-values common-lisp:null))
   (condition
    (common-lisp:error
     #A((22) common-lisp:base-char . ":condition is required"))
    :type (common-lisp:or condition common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-filter 'make-export-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape export-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values)))
    (aws-sdk/generator/shape::to-query-params "condition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'condition))))))
(common-lisp:progn
 (common-lisp:deftype export-filters ()
   '(trivial-types:proper-list export-filter))
 (common-lisp:defun |make-export-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list export-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype export-ids ()
   '(trivial-types:proper-list configurations-export-id))
 (common-lisp:defun |make-export-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configurations-export-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (export-info (:copier common-lisp:nil))
   (export-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":exportid is required"))
    :type (common-lisp:or configurations-export-id common-lisp:null))
   (export-status
    (common-lisp:error
     #A((25) common-lisp:base-char . ":exportstatus is required"))
    :type (common-lisp:or export-status common-lisp:null))
   (status-message
    (common-lisp:error
     #A((26) common-lisp:base-char . ":statusmessage is required"))
    :type (common-lisp:or export-status-message common-lisp:null))
   (configurations-download-url common-lisp:nil :type
    (common-lisp:or configurations-download-url common-lisp:null))
   (export-request-time
    (common-lisp:error
     #A((30) common-lisp:base-char . ":exportrequesttime is required"))
    :type (common-lisp:or export-request-time common-lisp:null))
   (is-truncated common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (requested-start-time common-lisp:nil :type
    (common-lisp:or time-stamp common-lisp:null))
   (requested-end-time common-lisp:nil :type
    (common-lisp:or time-stamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-info 'make-export-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape export-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-id)))
    (aws-sdk/generator/shape::to-query-params "exportStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-status)))
    (aws-sdk/generator/shape::to-query-params "statusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message)))
    (aws-sdk/generator/shape::to-query-params "configurationsDownloadUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations-download-url)))
    (aws-sdk/generator/shape::to-query-params "exportRequestTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-request-time)))
    (aws-sdk/generator/shape::to-query-params "isTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-truncated)))
    (aws-sdk/generator/shape::to-query-params "requestedStartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-start-time)))
    (aws-sdk/generator/shape::to-query-params "requestedEndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-end-time))))))
(common-lisp:deftype export-request-time () 'common-lisp:string)
(common-lisp:deftype export-status () 'common-lisp:string)
(common-lisp:deftype export-status-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exports-info () '(trivial-types:proper-list export-info))
 (common-lisp:defun |make-exports-info|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list export-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (filter (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or filter-values common-lisp:null))
   (condition
    (common-lisp:error
     #A((22) common-lisp:base-char . ":condition is required"))
    :type (common-lisp:or condition common-lisp:null)))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values)))
    (aws-sdk/generator/shape::to-query-params "condition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'condition))))))
(common-lisp:deftype filter-name () 'common-lisp:string)
(common-lisp:deftype filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values ()
   '(trivial-types:proper-list filter-value))
 (common-lisp:defun |make-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype filters () '(trivial-types:proper-list filter))
 (common-lisp:defun |make-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-discovery-summary-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-discovery-summary-request
                    'make-get-discovery-summary-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-discovery-summary-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-discovery-summary-response (:copier common-lisp:nil))
   (servers common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (applications common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (servers-mapped-to-applications common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (servers-mappedto-tags common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (agent-summary common-lisp:nil :type
    (common-lisp:or customer-agent-info common-lisp:null))
   (connector-summary common-lisp:nil :type
    (common-lisp:or customer-connector-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-discovery-summary-response
                    'make-get-discovery-summary-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-discovery-summary-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "servers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'servers)))
    (aws-sdk/generator/shape::to-query-params "applications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications)))
    (aws-sdk/generator/shape::to-query-params "serversMappedToApplications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'servers-mapped-to-applications)))
    (aws-sdk/generator/shape::to-query-params "serversMappedtoTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'servers-mappedto-tags)))
    (aws-sdk/generator/shape::to-query-params "agentSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-summary)))
    (aws-sdk/generator/shape::to-query-params "connectorSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connector-summary))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameter-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-value-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'make-invalid-parameter-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-value-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-configurations-request (:copier common-lisp:nil))
   (configuration-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":configurationtype is required"))
    :type (common-lisp:or configuration-item-type common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filters common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (order-by common-lisp:nil :type
    (common-lisp:or order-by-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configurations-request
                    'make-list-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-configurations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-type)))
    (aws-sdk/generator/shape::to-query-params "filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "orderBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'order-by))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configurations-response (:copier common-lisp:nil))
   (configurations common-lisp:nil :type
    (common-lisp:or configurations common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configurations-response
                    'make-list-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-configurations-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-server-neighbors-request (:copier common-lisp:nil))
   (configuration-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":configurationid is required"))
    :type (common-lisp:or configuration-id common-lisp:null))
   (port-information-needed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (neighbor-configuration-ids common-lisp:nil :type
    (common-lisp:or configuration-id-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-server-neighbors-request
                    'make-list-server-neighbors-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-server-neighbors-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-id)))
    (aws-sdk/generator/shape::to-query-params "portInformationNeeded"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port-information-needed)))
    (aws-sdk/generator/shape::to-query-params "neighborConfigurationIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'neighbor-configuration-ids)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-server-neighbors-response (:copier common-lisp:nil))
   (neighbors
    (common-lisp:error
     #A((22) common-lisp:base-char . ":neighbors is required"))
    :type (common-lisp:or neighbor-details-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (known-dependency-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-server-neighbors-response
                    'make-list-server-neighbors-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-server-neighbors-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "neighbors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'neighbors)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "knownDependencyCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'known-dependency-count))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (neighbor-connection-detail (:copier common-lisp:nil))
   (source-server-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":sourceserverid is required"))
    :type (common-lisp:or configuration-id common-lisp:null))
   (destination-server-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":destinationserverid is required"))
    :type (common-lisp:or configuration-id common-lisp:null))
   (destination-port common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (transport-protocol common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (connections-count
    (common-lisp:error
     #A((29) common-lisp:base-char . ":connectionscount is required"))
    :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'neighbor-connection-detail
                    'make-neighbor-connection-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          neighbor-connection-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "sourceServerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-server-id)))
    (aws-sdk/generator/shape::to-query-params "destinationServerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-server-id)))
    (aws-sdk/generator/shape::to-query-params "destinationPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-port)))
    (aws-sdk/generator/shape::to-query-params "transportProtocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'transport-protocol)))
    (aws-sdk/generator/shape::to-query-params "connectionsCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connections-count))))))
(common-lisp:progn
 (common-lisp:deftype neighbor-details-list ()
   '(trivial-types:proper-list neighbor-connection-detail))
 (common-lisp:defun |make-neighbor-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            neighbor-connection-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-not-permitted-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-not-permitted-exception
                    'make-operation-not-permitted-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-not-permitted-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (order-by-element (:copier common-lisp:nil))
   (field-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":fieldname is required"))
    :type (common-lisp:or string common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or |orderString| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'order-by-element 'make-order-by-element))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape order-by-element))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "fieldName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-name)))
    (aws-sdk/generator/shape::to-query-params "sortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order))))))
(common-lisp:progn
 (common-lisp:deftype order-by-list ()
   '(trivial-types:proper-list order-by-element))
 (common-lisp:defun |make-order-by-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list order-by-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (server-internal-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-internal-error-exception
                    'make-server-internal-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          server-internal-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-data-collection-by-agent-ids-request (:copier common-lisp:nil))
   (agent-ids
    (common-lisp:error
     #A((21) common-lisp:base-char . ":agentids is required"))
    :type (common-lisp:or agent-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-data-collection-by-agent-ids-request
                    'make-start-data-collection-by-agent-ids-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-data-collection-by-agent-ids-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-data-collection-by-agent-ids-response (:copier common-lisp:nil))
   (agents-configuration-status common-lisp:nil :type
    (common-lisp:or agent-configuration-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-data-collection-by-agent-ids-response
                    'make-start-data-collection-by-agent-ids-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-data-collection-by-agent-ids-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentsConfigurationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agents-configuration-status))))))
(common-lisp:progn
 (common-lisp:defstruct (start-export-task-request (:copier common-lisp:nil))
   (export-data-format common-lisp:nil :type
    (common-lisp:or export-data-formats common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or export-filters common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or time-stamp common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or time-stamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-export-task-request
                    'make-start-export-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-export-task-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportDataFormat"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-data-format)))
    (aws-sdk/generator/shape::to-query-params "filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time))))))
(common-lisp:progn
 (common-lisp:defstruct (start-export-task-response (:copier common-lisp:nil))
   (export-id common-lisp:nil :type
    (common-lisp:or configurations-export-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-export-task-response
                    'make-start-export-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-export-task-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-data-collection-by-agent-ids-request (:copier common-lisp:nil))
   (agent-ids
    (common-lisp:error
     #A((21) common-lisp:base-char . ":agentids is required"))
    :type (common-lisp:or agent-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-data-collection-by-agent-ids-request
                    'make-stop-data-collection-by-agent-ids-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-data-collection-by-agent-ids-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-data-collection-by-agent-ids-response (:copier common-lisp:nil))
   (agents-configuration-status common-lisp:nil :type
    (common-lisp:or agent-configuration-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-data-collection-by-agent-ids-response
                    'make-stop-data-collection-by-agent-ids-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-data-collection-by-agent-ids-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentsConfigurationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agents-configuration-status))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-filter (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or filter-name common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or filter-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-filter 'make-tag-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:progn
 (common-lisp:deftype tag-filters () '(trivial-types:proper-list tag-filter))
 (common-lisp:defun |make-tag-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-set () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype time-stamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (update-application-request (:copier common-lisp:nil))
   (configuration-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":configurationid is required"))
    :type (common-lisp:or application-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-request
                    'make-update-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-application-response
                    'make-update-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-response))
   (common-lisp:append)))
(common-lisp:deftype |orderString| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-configuration-items-to-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-configuration-id
                     configuration-ids)
   (common-lisp:declare
    (common-lisp:ignorable application-configuration-id configuration-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-configuration-items-to-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"AssociateConfigurationItemsToApplication")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssociateConfigurationItemsToApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'associate-configuration-items-to-application))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description)
   (common-lisp:declare (common-lisp:ignorable name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApplication")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-ids tags)
   (common-lisp:declare (common-lisp:ignorable configuration-ids tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateTags")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateTagsResponse" common-lisp:nil)))
 (common-lisp:export 'create-tags))
(common-lisp:progn
 (common-lisp:defun delete-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-ids)
   (common-lisp:declare (common-lisp:ignorable configuration-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-applications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApplications")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteApplicationsResponse" common-lisp:nil)))
 (common-lisp:export 'delete-applications))
(common-lisp:progn
 (common-lisp:defun delete-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-ids tags)
   (common-lisp:declare (common-lisp:ignorable configuration-ids tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteTags")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteTagsResponse" common-lisp:nil)))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun describe-agents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-ids filters max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable agent-ids filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-agents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAgents")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAgentsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-agents))
(common-lisp:progn
 (common-lisp:defun describe-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-ids)
   (common-lisp:declare (common-lisp:ignorable configuration-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-configurations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeConfigurations")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeConfigurationsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-configurations))
(common-lisp:progn
 (common-lisp:defun describe-export-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key export-ids max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable export-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-export-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeExportConfigurations")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeExportConfigurationsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-export-configurations))
(common-lisp:progn
 (common-lisp:defun describe-export-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key export-ids filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable export-ids filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-export-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeExportTasks")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeExportTasksResponse" common-lisp:nil)))
 (common-lisp:export 'describe-export-tasks))
(common-lisp:progn
 (common-lisp:defun describe-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTags")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTagsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun disassociate-configuration-items-from-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-configuration-id
                     configuration-ids)
   (common-lisp:declare
    (common-lisp:ignorable application-configuration-id configuration-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-configuration-items-from-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DisassociateConfigurationItemsFromApplication")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisassociateConfigurationItemsFromApplicationResponse"
      common-lisp:nil)))
 (common-lisp:export 'disassociate-configuration-items-from-application))
(common-lisp:progn
 (common-lisp:defun export-configurations ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "discovery")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "ExportConfigurations"))
    "ExportConfigurationsResponse" common-lisp:nil))
 (common-lisp:export 'export-configurations))
(common-lisp:progn
 (common-lisp:defun get-discovery-summary ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "discovery")
                             :method :post :params
                             (common-lisp:cons "Action" "GetDiscoverySummary"))
    "GetDiscoverySummaryResponse" common-lisp:nil))
 (common-lisp:export 'get-discovery-summary))
(common-lisp:progn
 (common-lisp:defun list-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-type filters max-results
                     next-token order-by)
   (common-lisp:declare
    (common-lisp:ignorable configuration-type filters max-results next-token
     order-by))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configurations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListConfigurations")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListConfigurationsResponse" common-lisp:nil)))
 (common-lisp:export 'list-configurations))
(common-lisp:progn
 (common-lisp:defun list-server-neighbors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id port-information-needed
                     neighbor-configuration-ids max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id port-information-needed
     neighbor-configuration-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-server-neighbors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListServerNeighbors")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListServerNeighborsResponse" common-lisp:nil)))
 (common-lisp:export 'list-server-neighbors))
(common-lisp:progn
 (common-lisp:defun start-data-collection-by-agent-ids
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-ids)
   (common-lisp:declare (common-lisp:ignorable agent-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-data-collection-by-agent-ids-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartDataCollectionByAgentIds")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartDataCollectionByAgentIdsResponse" common-lisp:nil)))
 (common-lisp:export 'start-data-collection-by-agent-ids))
(common-lisp:progn
 (common-lisp:defun start-export-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key export-data-format filters start-time
                     end-time)
   (common-lisp:declare
    (common-lisp:ignorable export-data-format filters start-time end-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-export-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartExportTask")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartExportTaskResponse" common-lisp:nil)))
 (common-lisp:export 'start-export-task))
(common-lisp:progn
 (common-lisp:defun stop-data-collection-by-agent-ids
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-ids)
   (common-lisp:declare (common-lisp:ignorable agent-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-data-collection-by-agent-ids-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopDataCollectionByAgentIds")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopDataCollectionByAgentIdsResponse" common-lisp:nil)))
 (common-lisp:export 'stop-data-collection-by-agent-ids))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id name description)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "discovery")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApplication")
                                  ("Version" ,@"2015-11-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'update-application))