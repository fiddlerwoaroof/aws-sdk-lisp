;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/snowball
  (:use)
  (:nicknames #:aws/snowball)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/snowball)

(common-lisp:progn
 (common-lisp:defstruct (address (:copier common-lisp:nil))
   (address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (company common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (street1 common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (street2 common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (street3 common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (city common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state-or-province common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (prefecture-or-district common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (landmark common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (country common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (postal-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (phone-number common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (is-restricted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'address 'make-address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape address))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Company"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'company)))
    (aws-sdk/generator/shape::to-query-params "Street1"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'street1)))
    (aws-sdk/generator/shape::to-query-params "Street2"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'street2)))
    (aws-sdk/generator/shape::to-query-params "Street3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'street3)))
    (aws-sdk/generator/shape::to-query-params "City"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'city)))
    (aws-sdk/generator/shape::to-query-params "StateOrProvince"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-or-province)))
    (aws-sdk/generator/shape::to-query-params "PrefectureOrDistrict"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefecture-or-district)))
    (aws-sdk/generator/shape::to-query-params "Landmark"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'landmark)))
    (aws-sdk/generator/shape::to-query-params "Country"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'country)))
    (aws-sdk/generator/shape::to-query-params "PostalCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'postal-code)))
    (aws-sdk/generator/shape::to-query-params "PhoneNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'phone-number)))
    (aws-sdk/generator/shape::to-query-params "IsRestricted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-restricted))))))
(common-lisp:deftype address-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype address-list () '(trivial-types:proper-list address))
 (common-lisp:defun |make-address-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (cancel-cluster-request (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-cluster-request 'make-cancel-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-cluster-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cancel-cluster-result 'make-cancel-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-cluster-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (cancel-job-request (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-request 'make-cancel-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-job-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-result 'make-cancel-job-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-job-result))
   (common-lisp:append)))
(common-lisp:deftype cluster-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cluster-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cluster-limit-exceeded-exception
                    'make-cluster-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cluster-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (cluster-list-entry (:copier common-lisp:nil))
   (cluster-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cluster-state common-lisp:nil :type
    (common-lisp:or cluster-state common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cluster-list-entry 'make-cluster-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cluster-list-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "ClusterState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-state)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype cluster-list-entry-list ()
   '(trivial-types:proper-list cluster-list-entry))
 (common-lisp:defun |make-cluster-list-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cluster-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cluster-metadata (:copier common-lisp:nil))
   (cluster-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (cluster-state common-lisp:nil :type
    (common-lisp:or cluster-state common-lisp:null))
   (job-type common-lisp:nil :type (common-lisp:or job-type common-lisp:null))
   (snowball-type common-lisp:nil :type
    (common-lisp:or snowball-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or job-resource common-lisp:null))
   (address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null))
   (shipping-option common-lisp:nil :type
    (common-lisp:or shipping-option common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification common-lisp:null))
   (forwarding-address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cluster-metadata 'make-cluster-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cluster-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "KmsKeyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kms-key-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "ClusterState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-state)))
    (aws-sdk/generator/shape::to-query-params "JobType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-type)))
    (aws-sdk/generator/shape::to-query-params "SnowballType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-type)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id)))
    (aws-sdk/generator/shape::to-query-params "ShippingOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shipping-option)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "ForwardingAddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-address-id))))))
(common-lisp:deftype cluster-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-address-request (:copier common-lisp:nil))
   (address
    (common-lisp:error #A((20) common-lisp:base-char . ":address is required"))
    :type (common-lisp:or address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-address-request 'make-create-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-address-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address))))))
(common-lisp:progn
 (common-lisp:defstruct (create-address-result (:copier common-lisp:nil))
   (address-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-address-result 'make-create-address-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-address-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-cluster-request (:copier common-lisp:nil))
   (job-type
    (common-lisp:error
     #A((21) common-lisp:base-char . ":job-type is required"))
    :type (common-lisp:or job-type common-lisp:null))
   (resources
    (common-lisp:error
     #A((22) common-lisp:base-char . ":resources is required"))
    :type (common-lisp:or job-resource common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (address-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":address-id is required"))
    :type (common-lisp:or address-id common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null))
   (snowball-type common-lisp:nil :type
    (common-lisp:or snowball-type common-lisp:null))
   (shipping-option
    (common-lisp:error
     #A((28) common-lisp:base-char . ":shipping-option is required"))
    :type (common-lisp:or shipping-option common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification common-lisp:null))
   (forwarding-address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cluster-request 'make-create-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-type)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id)))
    (aws-sdk/generator/shape::to-query-params "KmsKeyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kms-key-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "SnowballType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-type)))
    (aws-sdk/generator/shape::to-query-params "ShippingOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shipping-option)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "ForwardingAddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-address-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-cluster-result (:copier common-lisp:nil))
   (cluster-id common-lisp:nil :type
    (common-lisp:or cluster-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cluster-result 'make-create-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-cluster-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-job-request (:copier common-lisp:nil))
   (job-type common-lisp:nil :type (common-lisp:or job-type common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or job-resource common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (snowball-capacity-preference common-lisp:nil :type
    (common-lisp:or snowball-capacity common-lisp:null))
   (shipping-option common-lisp:nil :type
    (common-lisp:or shipping-option common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification common-lisp:null))
   (cluster-id common-lisp:nil :type
    (common-lisp:or cluster-id common-lisp:null))
   (snowball-type common-lisp:nil :type
    (common-lisp:or snowball-type common-lisp:null))
   (forwarding-address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-request 'make-create-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-type)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id)))
    (aws-sdk/generator/shape::to-query-params "KmsKeyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kms-key-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "SnowballCapacityPreference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-capacity-preference)))
    (aws-sdk/generator/shape::to-query-params "ShippingOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shipping-option)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "SnowballType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-type)))
    (aws-sdk/generator/shape::to-query-params "ForwardingAddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-address-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-job-result (:copier common-lisp:nil))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-result 'make-create-job-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-job-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct (data-transfer (:copier common-lisp:nil))
   (bytes-transferred common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (objects-transferred common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (total-bytes common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (total-objects common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'data-transfer 'make-data-transfer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape data-transfer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BytesTransferred"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bytes-transferred)))
    (aws-sdk/generator/shape::to-query-params "ObjectsTransferred"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'objects-transferred)))
    (aws-sdk/generator/shape::to-query-params "TotalBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-bytes)))
    (aws-sdk/generator/shape::to-query-params "TotalObjects"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-objects))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-address-request (:copier common-lisp:nil))
   (address-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":address-id is required"))
    :type (common-lisp:or address-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-address-request 'make-describe-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-address-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-address-result (:copier common-lisp:nil))
   (address common-lisp:nil :type (common-lisp:or address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-address-result 'make-describe-address-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-address-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-addresses-request (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or list-limit common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-addresses-request
                    'make-describe-addresses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-addresses-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-addresses-result (:copier common-lisp:nil))
   (addresses common-lisp:nil :type
    (common-lisp:or address-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-addresses-result
                    'make-describe-addresses-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-addresses-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Addresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'addresses)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-cluster-request (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cluster-request 'make-describe-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-cluster-result (:copier common-lisp:nil))
   (cluster-metadata common-lisp:nil :type
    (common-lisp:or cluster-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cluster-result 'make-describe-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-cluster-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-job-request (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-request 'make-describe-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-job-result (:copier common-lisp:nil))
   (job-metadata common-lisp:nil :type
    (common-lisp:or job-metadata common-lisp:null))
   (sub-job-metadata common-lisp:nil :type
    (common-lisp:or job-metadata-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-result 'make-describe-job-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-job-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-metadata)))
    (aws-sdk/generator/shape::to-query-params "SubJobMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sub-job-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (event-trigger-definition (:copier common-lisp:nil))
   (event-resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-trigger-definition 'make-event-trigger-definition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          event-trigger-definition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-resource-arn))))))
(common-lisp:progn
 (common-lisp:deftype event-trigger-definition-list ()
   '(trivial-types:proper-list event-trigger-definition))
 (common-lisp:defun |make-event-trigger-definition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            event-trigger-definition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (get-job-manifest-request (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-manifest-request 'make-get-job-manifest-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-job-manifest-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-job-manifest-result (:copier common-lisp:nil))
   (manifest-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-manifest-result 'make-get-job-manifest-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-job-manifest-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ManifestURI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'manifest-uri))))))
(common-lisp:progn
 (common-lisp:defstruct (get-job-unlock-code-request (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-unlock-code-request
                    'make-get-job-unlock-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-job-unlock-code-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-job-unlock-code-result (:copier common-lisp:nil))
   (unlock-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-unlock-code-result
                    'make-get-job-unlock-code-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-job-unlock-code-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UnlockCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unlock-code))))))
(common-lisp:progn
 (common-lisp:defstruct (get-snowball-usage-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-snowball-usage-request
                    'make-get-snowball-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-snowball-usage-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (get-snowball-usage-result (:copier common-lisp:nil))
   (snowball-limit common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (snowballs-in-use common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-snowball-usage-result
                    'make-get-snowball-usage-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-snowball-usage-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SnowballLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-limit)))
    (aws-sdk/generator/shape::to-query-params "SnowballsInUse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowballs-in-use))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (invalid-address-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-address-exception
                    'make-invalid-address-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-address-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-input-combination-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-combination-exception
                    'make-invalid-input-combination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-input-combination-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-job-state-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-job-state-exception
                    'make-invalid-job-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-job-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-next-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'make-invalid-next-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-next-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-resource-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-exception
                    'make-invalid-resource-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-resource-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (job-list-entry (:copier common-lisp:nil))
   (job-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (job-state common-lisp:nil :type
    (common-lisp:or job-state common-lisp:null))
   (is-master common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (job-type common-lisp:nil :type (common-lisp:or job-type common-lisp:null))
   (snowball-type common-lisp:nil :type
    (common-lisp:or snowball-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-list-entry 'make-job-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-list-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "JobState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-state)))
    (aws-sdk/generator/shape::to-query-params "IsMaster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-master)))
    (aws-sdk/generator/shape::to-query-params "JobType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-type)))
    (aws-sdk/generator/shape::to-query-params "SnowballType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-type)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype job-list-entry-list ()
   '(trivial-types:proper-list job-list-entry))
 (common-lisp:defun |make-job-list-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (job-logs (:copier common-lisp:nil))
   (job-completion-report-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (job-success-log-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (job-failure-log-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-logs 'make-job-logs))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-logs))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobCompletionReportURI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-completion-report-uri)))
    (aws-sdk/generator/shape::to-query-params "JobSuccessLogURI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-success-log-uri)))
    (aws-sdk/generator/shape::to-query-params "JobFailureLogURI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-failure-log-uri))))))
(common-lisp:progn
 (common-lisp:defstruct (job-metadata (:copier common-lisp:nil))
   (job-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (job-state common-lisp:nil :type
    (common-lisp:or job-state common-lisp:null))
   (job-type common-lisp:nil :type (common-lisp:or job-type common-lisp:null))
   (snowball-type common-lisp:nil :type
    (common-lisp:or snowball-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or job-resource common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null))
   (shipping-details common-lisp:nil :type
    (common-lisp:or shipping-details common-lisp:null))
   (snowball-capacity-preference common-lisp:nil :type
    (common-lisp:or snowball-capacity common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification common-lisp:null))
   (data-transfer-progress common-lisp:nil :type
    (common-lisp:or data-transfer common-lisp:null))
   (job-log-info common-lisp:nil :type
    (common-lisp:or job-logs common-lisp:null))
   (cluster-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (forwarding-address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-metadata 'make-job-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "JobState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-state)))
    (aws-sdk/generator/shape::to-query-params "JobType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-type)))
    (aws-sdk/generator/shape::to-query-params "SnowballType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-type)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "KmsKeyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kms-key-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id)))
    (aws-sdk/generator/shape::to-query-params "ShippingDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shipping-details)))
    (aws-sdk/generator/shape::to-query-params "SnowballCapacityPreference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-capacity-preference)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "DataTransferProgress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-transfer-progress)))
    (aws-sdk/generator/shape::to-query-params "JobLogInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-log-info)))
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "ForwardingAddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-address-id))))))
(common-lisp:progn
 (common-lisp:deftype job-metadata-list ()
   '(trivial-types:proper-list job-metadata))
 (common-lisp:defun |make-job-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (job-resource (:copier common-lisp:nil))
   (s3resources common-lisp:nil :type
    (common-lisp:or s3resource-list common-lisp:null))
   (lambda-resources common-lisp:nil :type
    (common-lisp:or lambda-resource-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-resource 'make-job-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3resources)))
    (aws-sdk/generator/shape::to-query-params "LambdaResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-resources))))))
(common-lisp:deftype job-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-state-list () '(trivial-types:proper-list job-state))
 (common-lisp:defun |make-job-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-state))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (kmsrequest-failed-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kmsrequest-failed-exception
                    'make-kmsrequest-failed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kmsrequest-failed-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (key-range (:copier common-lisp:nil))
   (begin-marker common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (end-marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-range 'make-key-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BeginMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'begin-marker)))
    (aws-sdk/generator/shape::to-query-params "EndMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-marker))))))
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (lambda-resource (:copier common-lisp:nil))
   (lambda-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (event-triggers common-lisp:nil :type
    (common-lisp:or event-trigger-definition-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lambda-resource 'make-lambda-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lambda-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LambdaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-arn)))
    (aws-sdk/generator/shape::to-query-params "EventTriggers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-triggers))))))
(common-lisp:progn
 (common-lisp:deftype lambda-resource-list ()
   '(trivial-types:proper-list lambda-resource))
 (common-lisp:defun |make-lambda-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lambda-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (list-cluster-jobs-request (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-limit common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cluster-jobs-request
                    'make-list-cluster-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-cluster-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-cluster-jobs-result (:copier common-lisp:nil))
   (job-list-entries common-lisp:nil :type
    (common-lisp:or job-list-entry-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cluster-jobs-result 'make-list-cluster-jobs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-cluster-jobs-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobListEntries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-list-entries)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-clusters-request (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or list-limit common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-clusters-request 'make-list-clusters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-clusters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-clusters-result (:copier common-lisp:nil))
   (cluster-list-entries common-lisp:nil :type
    (common-lisp:or cluster-list-entry-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-clusters-result 'make-list-clusters-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-clusters-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterListEntries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-list-entries)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-request (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or list-limit common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-request 'make-list-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-result (:copier common-lisp:nil))
   (job-list-entries common-lisp:nil :type
    (common-lisp:or job-list-entry-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-result 'make-list-jobs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobListEntries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-list-entries)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype list-limit () 'common-lisp:integer)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (notification (:copier common-lisp:nil))
   (sns-topic-arn common-lisp:nil :type
    (common-lisp:or sns-topic-arn common-lisp:null))
   (job-states-to-notify common-lisp:nil :type
    (common-lisp:or job-state-list common-lisp:null))
   (notify-all common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'notification 'make-notification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape notification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SnsTopicARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sns-topic-arn)))
    (aws-sdk/generator/shape::to-query-params "JobStatesToNotify"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-states-to-notify)))
    (aws-sdk/generator/shape::to-query-params "NotifyAll"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notify-all))))))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (s3resource (:copier common-lisp:nil))
   (bucket-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (key-range common-lisp:nil :type
    (common-lisp:or key-range common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3resource 'make-s3resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BucketArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-arn)))
    (aws-sdk/generator/shape::to-query-params "KeyRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-range))))))
(common-lisp:progn
 (common-lisp:deftype s3resource-list ()
   '(trivial-types:proper-list s3resource))
 (common-lisp:defun |make-s3resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list s3resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (shipment (:copier common-lisp:nil))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tracking-number common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'shipment 'make-shipment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape shipment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "TrackingNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tracking-number))))))
(common-lisp:progn
 (common-lisp:defstruct (shipping-details (:copier common-lisp:nil))
   (shipping-option common-lisp:nil :type
    (common-lisp:or shipping-option common-lisp:null))
   (inbound-shipment common-lisp:nil :type
    (common-lisp:or shipment common-lisp:null))
   (outbound-shipment common-lisp:nil :type
    (common-lisp:or shipment common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'shipping-details 'make-shipping-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape shipping-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ShippingOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shipping-option)))
    (aws-sdk/generator/shape::to-query-params "InboundShipment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inbound-shipment)))
    (aws-sdk/generator/shape::to-query-params "OutboundShipment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'outbound-shipment))))))
(common-lisp:deftype shipping-option () 'common-lisp:string)
(common-lisp:deftype snowball-capacity () 'common-lisp:string)
(common-lisp:deftype snowball-type () 'common-lisp:string)
(common-lisp:deftype sns-topic-arn () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-address-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-address-exception
                    'make-unsupported-address-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-address-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (update-cluster-request (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or job-resource common-lisp:null))
   (address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null))
   (shipping-option common-lisp:nil :type
    (common-lisp:or shipping-option common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification common-lisp:null))
   (forwarding-address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-cluster-request 'make-update-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id)))
    (aws-sdk/generator/shape::to-query-params "ShippingOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shipping-option)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "ForwardingAddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-address-id))))))
(common-lisp:progn
 (common-lisp:defstruct (update-cluster-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-cluster-result 'make-update-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-cluster-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-job-request (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or job-id common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or job-resource common-lisp:null))
   (address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null))
   (shipping-option common-lisp:nil :type
    (common-lisp:or shipping-option common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snowball-capacity-preference common-lisp:nil :type
    (common-lisp:or snowball-capacity common-lisp:null))
   (forwarding-address-id common-lisp:nil :type
    (common-lisp:or address-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-job-request 'make-update-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "AddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address-id)))
    (aws-sdk/generator/shape::to-query-params "ShippingOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shipping-option)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "SnowballCapacityPreference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snowball-capacity-preference)))
    (aws-sdk/generator/shape::to-query-params "ForwardingAddressId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-address-id))))))
(common-lisp:progn
 (common-lisp:defstruct (update-job-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-job-result 'make-update-job-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-job-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defun cancel-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id)
   (common-lisp:declare (common-lisp:ignorable cluster-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelCluster")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelClusterResult" common-lisp:nil)))
 (common-lisp:export 'cancel-cluster))
(common-lisp:progn
 (common-lisp:defun cancel-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelJob")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelJobResult" common-lisp:nil)))
 (common-lisp:export 'cancel-job))
(common-lisp:progn
 (common-lisp:defun create-address
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key address)
   (common-lisp:declare (common-lisp:ignorable address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-address-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAddress")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAddressResult" common-lisp:nil)))
 (common-lisp:export 'create-address))
(common-lisp:progn
 (common-lisp:defun create-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-type resources description address-id
                     kms-key-arn role-arn snowball-type shipping-option
                     notification forwarding-address-id)
   (common-lisp:declare
    (common-lisp:ignorable job-type resources description address-id
     kms-key-arn role-arn snowball-type shipping-option notification
     forwarding-address-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateCluster")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateClusterResult" common-lisp:nil)))
 (common-lisp:export 'create-cluster))
(common-lisp:progn
 (common-lisp:defun create-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-type resources description address-id
                     kms-key-arn role-arn snowball-capacity-preference
                     shipping-option notification cluster-id snowball-type
                     forwarding-address-id)
   (common-lisp:declare
    (common-lisp:ignorable job-type resources description address-id
     kms-key-arn role-arn snowball-capacity-preference shipping-option
     notification cluster-id snowball-type forwarding-address-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateJob")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateJobResult" common-lisp:nil)))
 (common-lisp:export 'create-job))
(common-lisp:progn
 (common-lisp:defun describe-address
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key address-id)
   (common-lisp:declare (common-lisp:ignorable address-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-address-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAddress")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAddressResult" common-lisp:nil)))
 (common-lisp:export 'describe-address))
(common-lisp:progn
 (common-lisp:defun describe-addresses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-addresses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAddresses")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAddressesResult" common-lisp:nil)))
 (common-lisp:export 'describe-addresses))
(common-lisp:progn
 (common-lisp:defun describe-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id)
   (common-lisp:declare (common-lisp:ignorable cluster-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeCluster")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeClusterResult" common-lisp:nil)))
 (common-lisp:export 'describe-cluster))
(common-lisp:progn
 (common-lisp:defun describe-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeJob")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeJobResult" common-lisp:nil)))
 (common-lisp:export 'describe-job))
(common-lisp:progn
 (common-lisp:defun get-job-manifest
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-manifest-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetJobManifest")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetJobManifestResult" common-lisp:nil)))
 (common-lisp:export 'get-job-manifest))
(common-lisp:progn
 (common-lisp:defun get-job-unlock-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-unlock-code-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetJobUnlockCode")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetJobUnlockCodeResult" common-lisp:nil)))
 (common-lisp:export 'get-job-unlock-code))
(common-lisp:progn
 (common-lisp:defun get-snowball-usage ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((8) common-lisp:base-char . "snowball") :method
                             :post :params
                             (common-lisp:cons "Action" "GetSnowballUsage"))
    "GetSnowballUsageResult" common-lisp:nil))
 (common-lisp:export 'get-snowball-usage))
(common-lisp:progn
 (common-lisp:defun list-cluster-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable cluster-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-cluster-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListClusterJobs")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListClusterJobsResult" common-lisp:nil)))
 (common-lisp:export 'list-cluster-jobs))
(common-lisp:progn
 (common-lisp:defun list-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-clusters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListClusters")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListClustersResult" common-lisp:nil)))
 (common-lisp:export 'list-clusters))
(common-lisp:progn
 (common-lisp:defun list-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListJobs")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListJobsResult" common-lisp:nil)))
 (common-lisp:export 'list-jobs))
(common-lisp:progn
 (common-lisp:defun update-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id role-arn description resources
                     address-id shipping-option notification
                     forwarding-address-id)
   (common-lisp:declare
    (common-lisp:ignorable cluster-id role-arn description resources address-id
     shipping-option notification forwarding-address-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateCluster")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateClusterResult" common-lisp:nil)))
 (common-lisp:export 'update-cluster))
(common-lisp:progn
 (common-lisp:defun update-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id role-arn notification resources
                     address-id shipping-option description
                     snowball-capacity-preference forwarding-address-id)
   (common-lisp:declare
    (common-lisp:ignorable job-id role-arn notification resources address-id
     shipping-option description snowball-capacity-preference
     forwarding-address-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "snowball")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateJob")
                                  ("Version" ,@"2016-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateJobResult" common-lisp:nil)))
 (common-lisp:export 'update-job))