;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/support
  (:use)
  (:nicknames #:aws/support)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/support)

(common-lisp:progn
 (common-lisp:defstruct
     (add-attachments-to-set-request (:copier common-lisp:nil))
   (attachment-set-id common-lisp:nil :type
    (common-lisp:or attachment-set-id common-lisp:null))
   (attachments
    (common-lisp:error
     #A((24) common-lisp:base-char . ":attachments is required"))
    :type (common-lisp:or attachments common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-attachments-to-set-request
                    'make-add-attachments-to-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-attachments-to-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attachmentSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-set-id)))
    (aws-sdk/generator/shape::to-query-params "attachments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachments))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-attachments-to-set-response (:copier common-lisp:nil))
   (attachment-set-id common-lisp:nil :type
    (common-lisp:or attachment-set-id common-lisp:null))
   (expiry-time common-lisp:nil :type
    (common-lisp:or expiry-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-attachments-to-set-response
                    'make-add-attachments-to-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-attachments-to-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attachmentSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-set-id)))
    (aws-sdk/generator/shape::to-query-params "expiryTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiry-time))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-communication-to-case-request (:copier common-lisp:nil))
   (case-id common-lisp:nil :type (common-lisp:or case-id common-lisp:null))
   (communication-body
    (common-lisp:error
     #A((30) common-lisp:base-char . ":communicationbody is required"))
    :type (common-lisp:or communication-body common-lisp:null))
   (cc-email-addresses common-lisp:nil :type
    (common-lisp:or cc-email-address-list common-lisp:null))
   (attachment-set-id common-lisp:nil :type
    (common-lisp:or attachment-set-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-communication-to-case-request
                    'make-add-communication-to-case-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-communication-to-case-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "caseId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-id)))
    (aws-sdk/generator/shape::to-query-params "communicationBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'communication-body)))
    (aws-sdk/generator/shape::to-query-params "ccEmailAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cc-email-addresses)))
    (aws-sdk/generator/shape::to-query-params "attachmentSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-set-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-communication-to-case-response (:copier common-lisp:nil))
   (result common-lisp:nil :type (common-lisp:or result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-communication-to-case-response
                    'make-add-communication-to-case-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-communication-to-case-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result))))))
(common-lisp:deftype after-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attachment (:copier common-lisp:nil))
   (file-name common-lisp:nil :type
    (common-lisp:or file-name common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attachment 'make-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attachment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "fileName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-name)))
    (aws-sdk/generator/shape::to-query-params "data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data))))))
(common-lisp:progn
 (common-lisp:defstruct (attachment-details (:copier common-lisp:nil))
   (attachment-id common-lisp:nil :type
    (common-lisp:or attachment-id common-lisp:null))
   (file-name common-lisp:nil :type
    (common-lisp:or file-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attachment-details 'make-attachment-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attachment-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attachmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-id)))
    (aws-sdk/generator/shape::to-query-params "fileName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-name))))))
(common-lisp:deftype attachment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attachment-id-not-found (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attachment-id-not-found 'make-attachment-id-not-found))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attachment-id-not-found))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (attachment-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attachment-limit-exceeded
                    'make-attachment-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attachment-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype attachment-set ()
   '(trivial-types:proper-list attachment-details))
 (common-lisp:defun |make-attachment-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attachment-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (attachment-set-expired (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attachment-set-expired 'make-attachment-set-expired))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attachment-set-expired))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype attachment-set-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attachment-set-id-not-found (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attachment-set-id-not-found
                    'make-attachment-set-id-not-found))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attachment-set-id-not-found))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (attachment-set-size-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attachment-set-size-limit-exceeded
                    'make-attachment-set-size-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attachment-set-size-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype attachments () '(trivial-types:proper-list attachment))
 (common-lisp:defun |make-attachments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attachment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype before-time () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (case-creation-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'case-creation-limit-exceeded
                    'make-case-creation-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          case-creation-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (case-details (:copier common-lisp:nil))
   (case-id common-lisp:nil :type (common-lisp:or case-id common-lisp:null))
   (display-id common-lisp:nil :type
    (common-lisp:or display-id common-lisp:null))
   (subject common-lisp:nil :type (common-lisp:or subject common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (service-code common-lisp:nil :type
    (common-lisp:or service-code common-lisp:null))
   (category-code common-lisp:nil :type
    (common-lisp:or category-code common-lisp:null))
   (severity-code common-lisp:nil :type
    (common-lisp:or severity-code common-lisp:null))
   (submitted-by common-lisp:nil :type
    (common-lisp:or submitted-by common-lisp:null))
   (time-created common-lisp:nil :type
    (common-lisp:or time-created common-lisp:null))
   (recent-communications common-lisp:nil :type
    (common-lisp:or recent-case-communications common-lisp:null))
   (cc-email-addresses common-lisp:nil :type
    (common-lisp:or cc-email-address-list common-lisp:null))
   (language common-lisp:nil :type (common-lisp:or language common-lisp:null)))
 (common-lisp:export (common-lisp:list 'case-details 'make-case-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape case-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "caseId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-id)))
    (aws-sdk/generator/shape::to-query-params "displayId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-id)))
    (aws-sdk/generator/shape::to-query-params "subject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "serviceCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-code)))
    (aws-sdk/generator/shape::to-query-params "categoryCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'category-code)))
    (aws-sdk/generator/shape::to-query-params "severityCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity-code)))
    (aws-sdk/generator/shape::to-query-params "submittedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'submitted-by)))
    (aws-sdk/generator/shape::to-query-params "timeCreated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-created)))
    (aws-sdk/generator/shape::to-query-params "recentCommunications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recent-communications)))
    (aws-sdk/generator/shape::to-query-params "ccEmailAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cc-email-addresses)))
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language))))))
(common-lisp:deftype case-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype case-id-list () '(trivial-types:proper-list case-id))
 (common-lisp:defun |make-case-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list case-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (case-id-not-found (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'case-id-not-found 'make-case-id-not-found))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape case-id-not-found))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype case-list () '(trivial-types:proper-list case-details))
 (common-lisp:defun |make-case-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list case-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype case-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (category (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or category-code common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or category-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'category 'make-category))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape category))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype category-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype category-list () '(trivial-types:proper-list category))
 (common-lisp:defun |make-category-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list category))
   aws-sdk/generator/shape::members))
(common-lisp:deftype category-name () 'common-lisp:string)
(common-lisp:deftype cc-email-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cc-email-address-list ()
   '(trivial-types:proper-list cc-email-address))
 (common-lisp:defun |make-cc-email-address-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cc-email-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (communication (:copier common-lisp:nil))
   (case-id common-lisp:nil :type (common-lisp:or case-id common-lisp:null))
   (body common-lisp:nil :type
    (common-lisp:or communication-body common-lisp:null))
   (submitted-by common-lisp:nil :type
    (common-lisp:or submitted-by common-lisp:null))
   (time-created common-lisp:nil :type
    (common-lisp:or time-created common-lisp:null))
   (attachment-set common-lisp:nil :type
    (common-lisp:or attachment-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'communication 'make-communication))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape communication))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "caseId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-id)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "submittedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'submitted-by)))
    (aws-sdk/generator/shape::to-query-params "timeCreated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-created)))
    (aws-sdk/generator/shape::to-query-params "attachmentSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-set))))))
(common-lisp:deftype communication-body () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype communication-list ()
   '(trivial-types:proper-list communication))
 (common-lisp:defun |make-communication-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list communication))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-case-request (:copier common-lisp:nil))
   (subject
    (common-lisp:error #A((20) common-lisp:base-char . ":subject is required"))
    :type (common-lisp:or subject common-lisp:null))
   (service-code common-lisp:nil :type
    (common-lisp:or service-code common-lisp:null))
   (severity-code common-lisp:nil :type
    (common-lisp:or severity-code common-lisp:null))
   (category-code common-lisp:nil :type
    (common-lisp:or category-code common-lisp:null))
   (communication-body
    (common-lisp:error
     #A((30) common-lisp:base-char . ":communicationbody is required"))
    :type (common-lisp:or communication-body common-lisp:null))
   (cc-email-addresses common-lisp:nil :type
    (common-lisp:or cc-email-address-list common-lisp:null))
   (language common-lisp:nil :type (common-lisp:or language common-lisp:null))
   (issue-type common-lisp:nil :type
    (common-lisp:or issue-type common-lisp:null))
   (attachment-set-id common-lisp:nil :type
    (common-lisp:or attachment-set-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-case-request 'make-create-case-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-case-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "subject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject)))
    (aws-sdk/generator/shape::to-query-params "serviceCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-code)))
    (aws-sdk/generator/shape::to-query-params "severityCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity-code)))
    (aws-sdk/generator/shape::to-query-params "categoryCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'category-code)))
    (aws-sdk/generator/shape::to-query-params "communicationBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'communication-body)))
    (aws-sdk/generator/shape::to-query-params "ccEmailAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cc-email-addresses)))
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language)))
    (aws-sdk/generator/shape::to-query-params "issueType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'issue-type)))
    (aws-sdk/generator/shape::to-query-params "attachmentSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-set-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-case-response (:copier common-lisp:nil))
   (case-id common-lisp:nil :type (common-lisp:or case-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-case-response 'make-create-case-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-case-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "caseId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-id))))))
(common-lisp:deftype data ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-attachment-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-attachment-limit-exceeded
                    'make-describe-attachment-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-attachment-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-attachment-request (:copier common-lisp:nil))
   (attachment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":attachmentid is required"))
    :type (common-lisp:or attachment-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-attachment-request
                    'make-describe-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attachmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-attachment-response (:copier common-lisp:nil))
   (attachment common-lisp:nil :type
    (common-lisp:or attachment common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-attachment-response
                    'make-describe-attachment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-attachment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attachment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-cases-request (:copier common-lisp:nil))
   (case-id-list common-lisp:nil :type
    (common-lisp:or case-id-list common-lisp:null))
   (display-id common-lisp:nil :type
    (common-lisp:or display-id common-lisp:null))
   (after-time common-lisp:nil :type
    (common-lisp:or after-time common-lisp:null))
   (before-time common-lisp:nil :type
    (common-lisp:or before-time common-lisp:null))
   (include-resolved-cases common-lisp:nil :type
    (common-lisp:or include-resolved-cases common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (language common-lisp:nil :type (common-lisp:or language common-lisp:null))
   (include-communications common-lisp:nil :type
    (common-lisp:or include-communications common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cases-request 'make-describe-cases-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-cases-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "caseIdList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-id-list)))
    (aws-sdk/generator/shape::to-query-params "displayId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-id)))
    (aws-sdk/generator/shape::to-query-params "afterTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'after-time)))
    (aws-sdk/generator/shape::to-query-params "beforeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'before-time)))
    (aws-sdk/generator/shape::to-query-params "includeResolvedCases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-resolved-cases)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language)))
    (aws-sdk/generator/shape::to-query-params "includeCommunications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-communications))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-cases-response (:copier common-lisp:nil))
   (cases common-lisp:nil :type (common-lisp:or case-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cases-response 'make-describe-cases-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-cases-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cases)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-communications-request (:copier common-lisp:nil))
   (case-id
    (common-lisp:error #A((19) common-lisp:base-char . ":caseid is required"))
    :type (common-lisp:or case-id common-lisp:null))
   (before-time common-lisp:nil :type
    (common-lisp:or before-time common-lisp:null))
   (after-time common-lisp:nil :type
    (common-lisp:or after-time common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-communications-request
                    'make-describe-communications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-communications-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "caseId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-id)))
    (aws-sdk/generator/shape::to-query-params "beforeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'before-time)))
    (aws-sdk/generator/shape::to-query-params "afterTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'after-time)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-communications-response (:copier common-lisp:nil))
   (communications common-lisp:nil :type
    (common-lisp:or communication-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-communications-response
                    'make-describe-communications-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-communications-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "communications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'communications)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-services-request (:copier common-lisp:nil))
   (service-code-list common-lisp:nil :type
    (common-lisp:or service-code-list common-lisp:null))
   (language common-lisp:nil :type (common-lisp:or language common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-services-request
                    'make-describe-services-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-services-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "serviceCodeList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-code-list)))
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-services-response (:copier common-lisp:nil))
   (services common-lisp:nil :type
    (common-lisp:or service-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-services-response
                    'make-describe-services-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-services-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "services"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'services))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-severity-levels-request (:copier common-lisp:nil))
   (language common-lisp:nil :type (common-lisp:or language common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-severity-levels-request
                    'make-describe-severity-levels-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-severity-levels-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-severity-levels-response (:copier common-lisp:nil))
   (severity-levels common-lisp:nil :type
    (common-lisp:or severity-levels-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-severity-levels-response
                    'make-describe-severity-levels-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-severity-levels-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "severityLevels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity-levels))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-check-refresh-statuses-request
      (:copier common-lisp:nil))
   (check-ids
    (common-lisp:error
     #A((21) common-lisp:base-char . ":checkids is required"))
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-check-refresh-statuses-request
                    'make-describe-trusted-advisor-check-refresh-statuses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-check-refresh-statuses-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checkIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'check-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-check-refresh-statuses-response
      (:copier common-lisp:nil))
   (statuses
    (common-lisp:error
     #A((21) common-lisp:base-char . ":statuses is required"))
    :type
    (common-lisp:or trusted-advisor-check-refresh-status-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-check-refresh-statuses-response
                    'make-describe-trusted-advisor-check-refresh-statuses-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-check-refresh-statuses-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "statuses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statuses))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-check-result-request (:copier common-lisp:nil))
   (check-id
    (common-lisp:error #A((20) common-lisp:base-char . ":checkid is required"))
    :type (common-lisp:or string common-lisp:null))
   (language common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-check-result-request
                    'make-describe-trusted-advisor-check-result-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-check-result-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checkId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'check-id)))
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-check-result-response (:copier common-lisp:nil))
   (result common-lisp:nil :type
    (common-lisp:or trusted-advisor-check-result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-check-result-response
                    'make-describe-trusted-advisor-check-result-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-check-result-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-check-summaries-request
      (:copier common-lisp:nil))
   (check-ids
    (common-lisp:error
     #A((21) common-lisp:base-char . ":checkids is required"))
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-check-summaries-request
                    'make-describe-trusted-advisor-check-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-check-summaries-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checkIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'check-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-check-summaries-response
      (:copier common-lisp:nil))
   (summaries
    (common-lisp:error
     #A((22) common-lisp:base-char . ":summaries is required"))
    :type
    (common-lisp:or trusted-advisor-check-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-check-summaries-response
                    'make-describe-trusted-advisor-check-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-check-summaries-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "summaries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'summaries))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-checks-request (:copier common-lisp:nil))
   (language
    (common-lisp:error
     #A((21) common-lisp:base-char . ":language is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-checks-request
                    'make-describe-trusted-advisor-checks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-checks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-advisor-checks-response (:copier common-lisp:nil))
   (checks
    (common-lisp:error #A((19) common-lisp:base-char . ":checks is required"))
    :type (common-lisp:or trusted-advisor-check-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-advisor-checks-response
                    'make-describe-trusted-advisor-checks-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-trusted-advisor-checks-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checks))))))
(common-lisp:deftype display-id () 'common-lisp:string)
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype expiry-time () 'common-lisp:string)
(common-lisp:deftype file-name () 'common-lisp:string)
(common-lisp:deftype include-communications () 'common-lisp:boolean)
(common-lisp:deftype include-resolved-cases () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (internal-server-error (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'make-internal-server-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype issue-type () 'common-lisp:string)
(common-lisp:deftype language () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (recent-case-communications (:copier common-lisp:nil))
   (communications common-lisp:nil :type
    (common-lisp:or communication-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recent-case-communications
                    'make-recent-case-communications))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          recent-case-communications))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "communications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'communications)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (refresh-trusted-advisor-check-request (:copier common-lisp:nil))
   (check-id
    (common-lisp:error #A((20) common-lisp:base-char . ":checkid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'refresh-trusted-advisor-check-request
                    'make-refresh-trusted-advisor-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          refresh-trusted-advisor-check-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checkId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'check-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (refresh-trusted-advisor-check-response (:copier common-lisp:nil))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type
    (common-lisp:or trusted-advisor-check-refresh-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'refresh-trusted-advisor-check-response
                    'make-refresh-trusted-advisor-check-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          refresh-trusted-advisor-check-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (resolve-case-request (:copier common-lisp:nil))
   (case-id common-lisp:nil :type (common-lisp:or case-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resolve-case-request 'make-resolve-case-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resolve-case-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "caseId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-id))))))
(common-lisp:progn
 (common-lisp:defstruct (resolve-case-response (:copier common-lisp:nil))
   (initial-case-status common-lisp:nil :type
    (common-lisp:or case-status common-lisp:null))
   (final-case-status common-lisp:nil :type
    (common-lisp:or case-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resolve-case-response 'make-resolve-case-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resolve-case-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "initialCaseStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initial-case-status)))
    (aws-sdk/generator/shape::to-query-params "finalCaseStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'final-case-status))))))
(common-lisp:deftype result () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (service (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or service-code common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or service-name common-lisp:null))
   (categories common-lisp:nil :type
    (common-lisp:or category-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service 'make-service))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape service))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "categories"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'categories))))))
(common-lisp:deftype service-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype service-code-list ()
   '(trivial-types:proper-list service-code))
 (common-lisp:defun |make-service-code-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype service-list () '(trivial-types:proper-list service))
 (common-lisp:defun |make-service-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service))
   aws-sdk/generator/shape::members))
(common-lisp:deftype service-name () 'common-lisp:string)
(common-lisp:deftype severity-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (severity-level (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or severity-level-code common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or severity-level-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'severity-level 'make-severity-level))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape severity-level))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype severity-level-code () 'common-lisp:string)
(common-lisp:deftype severity-level-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype severity-levels-list ()
   '(trivial-types:proper-list severity-level))
 (common-lisp:defun |make-severity-levels-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list severity-level))
   aws-sdk/generator/shape::members))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subject () 'common-lisp:string)
(common-lisp:deftype submitted-by () 'common-lisp:string)
(common-lisp:deftype time-created () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-category-specific-summary (:copier common-lisp:nil))
   (cost-optimizing common-lisp:nil :type
    (common-lisp:or trusted-advisor-cost-optimizing-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-category-specific-summary
                    'make-trusted-advisor-category-specific-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-category-specific-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "costOptimizing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cost-optimizing))))))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-check-description (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or string common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description
    (common-lisp:error
     #A((24) common-lisp:base-char . ":description is required"))
    :type (common-lisp:or string common-lisp:null))
   (category
    (common-lisp:error
     #A((21) common-lisp:base-char . ":category is required"))
    :type (common-lisp:or string common-lisp:null))
   (metadata
    (common-lisp:error
     #A((21) common-lisp:base-char . ":metadata is required"))
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-check-description
                    'make-trusted-advisor-check-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-check-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "category"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'category)))
    (aws-sdk/generator/shape::to-query-params "metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata))))))
(common-lisp:progn
 (common-lisp:deftype trusted-advisor-check-list ()
   '(trivial-types:proper-list trusted-advisor-check-description))
 (common-lisp:defun |make-trusted-advisor-check-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            trusted-advisor-check-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-check-refresh-status (:copier common-lisp:nil))
   (check-id
    (common-lisp:error #A((20) common-lisp:base-char . ":checkid is required"))
    :type (common-lisp:or string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or string common-lisp:null))
   (millis-until-next-refreshable
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":millisuntilnextrefreshable is required"))
    :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-check-refresh-status
                    'make-trusted-advisor-check-refresh-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-check-refresh-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checkId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'check-id)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "millisUntilNextRefreshable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'millis-until-next-refreshable))))))
(common-lisp:progn
 (common-lisp:deftype trusted-advisor-check-refresh-status-list ()
   '(trivial-types:proper-list trusted-advisor-check-refresh-status))
 (common-lisp:defun |make-trusted-advisor-check-refresh-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            trusted-advisor-check-refresh-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-check-result (:copier common-lisp:nil))
   (check-id
    (common-lisp:error #A((20) common-lisp:base-char . ":checkid is required"))
    :type (common-lisp:or string common-lisp:null))
   (timestamp
    (common-lisp:error #A((19) common-lisp:base-char . ":string is required"))
    :type (common-lisp:or string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or string common-lisp:null))
   (resources-summary
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcessummary is required"))
    :type (common-lisp:or trusted-advisor-resources-summary common-lisp:null))
   (category-specific-summary
    (common-lisp:error
     #A((36) common-lisp:base-char . ":categoryspecificsummary is required"))
    :type
    (common-lisp:or trusted-advisor-category-specific-summary
                    common-lisp:null))
   (flagged-resources
    (common-lisp:error
     #A((29) common-lisp:base-char . ":flaggedresources is required"))
    :type
    (common-lisp:or trusted-advisor-resource-detail-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-check-result
                    'make-trusted-advisor-check-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-check-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checkId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'check-id)))
    (aws-sdk/generator/shape::to-query-params "timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "resourcesSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources-summary)))
    (aws-sdk/generator/shape::to-query-params "categorySpecificSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'category-specific-summary)))
    (aws-sdk/generator/shape::to-query-params "flaggedResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'flagged-resources))))))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-check-summary (:copier common-lisp:nil))
   (check-id
    (common-lisp:error #A((20) common-lisp:base-char . ":checkid is required"))
    :type (common-lisp:or string common-lisp:null))
   (timestamp
    (common-lisp:error #A((19) common-lisp:base-char . ":string is required"))
    :type (common-lisp:or string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or string common-lisp:null))
   (has-flagged-resources common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (resources-summary
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcessummary is required"))
    :type (common-lisp:or trusted-advisor-resources-summary common-lisp:null))
   (category-specific-summary
    (common-lisp:error
     #A((36) common-lisp:base-char . ":categoryspecificsummary is required"))
    :type
    (common-lisp:or trusted-advisor-category-specific-summary
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-check-summary
                    'make-trusted-advisor-check-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-check-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checkId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'check-id)))
    (aws-sdk/generator/shape::to-query-params "timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "hasFlaggedResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'has-flagged-resources)))
    (aws-sdk/generator/shape::to-query-params "resourcesSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources-summary)))
    (aws-sdk/generator/shape::to-query-params "categorySpecificSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'category-specific-summary))))))
(common-lisp:progn
 (common-lisp:deftype trusted-advisor-check-summary-list ()
   '(trivial-types:proper-list trusted-advisor-check-summary))
 (common-lisp:defun |make-trusted-advisor-check-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            trusted-advisor-check-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-cost-optimizing-summary (:copier common-lisp:nil))
   (estimated-monthly-savings
    (common-lisp:error
     #A((36) common-lisp:base-char . ":estimatedmonthlysavings is required"))
    :type (common-lisp:or double common-lisp:null))
   (estimated-percent-monthly-savings
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":estimatedpercentmonthlysavings is required"))
    :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-cost-optimizing-summary
                    'make-trusted-advisor-cost-optimizing-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-cost-optimizing-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "estimatedMonthlySavings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'estimated-monthly-savings)))
    (aws-sdk/generator/shape::to-query-params "estimatedPercentMonthlySavings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'estimated-percent-monthly-savings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-resource-detail (:copier common-lisp:nil))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (is-suppressed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (metadata
    (common-lisp:error
     #A((21) common-lisp:base-char . ":metadata is required"))
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-resource-detail
                    'make-trusted-advisor-resource-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-resource-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "isSuppressed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-suppressed)))
    (aws-sdk/generator/shape::to-query-params "metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata))))))
(common-lisp:progn
 (common-lisp:deftype trusted-advisor-resource-detail-list ()
   '(trivial-types:proper-list trusted-advisor-resource-detail))
 (common-lisp:defun |make-trusted-advisor-resource-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            trusted-advisor-resource-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-advisor-resources-summary (:copier common-lisp:nil))
   (resources-processed
    (common-lisp:error
     #A((31) common-lisp:base-char . ":resourcesprocessed is required"))
    :type (common-lisp:or long common-lisp:null))
   (resources-flagged
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcesflagged is required"))
    :type (common-lisp:or long common-lisp:null))
   (resources-ignored
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcesignored is required"))
    :type (common-lisp:or long common-lisp:null))
   (resources-suppressed
    (common-lisp:error
     #A((32) common-lisp:base-char . ":resourcessuppressed is required"))
    :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-advisor-resources-summary
                    'make-trusted-advisor-resources-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trusted-advisor-resources-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourcesProcessed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources-processed)))
    (aws-sdk/generator/shape::to-query-params "resourcesFlagged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources-flagged)))
    (aws-sdk/generator/shape::to-query-params "resourcesIgnored"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources-ignored)))
    (aws-sdk/generator/shape::to-query-params "resourcesSuppressed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources-suppressed))))))
(common-lisp:progn
 (common-lisp:defun add-attachments-to-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attachment-set-id attachments)
   (common-lisp:declare (common-lisp:ignorable attachment-set-id attachments))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-attachments-to-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddAttachmentsToSet")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddAttachmentsToSetResponse" common-lisp:nil)))
 (common-lisp:export 'add-attachments-to-set))
(common-lisp:progn
 (common-lisp:defun add-communication-to-case
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key case-id communication-body
                     cc-email-addresses attachment-set-id)
   (common-lisp:declare
    (common-lisp:ignorable case-id communication-body cc-email-addresses
     attachment-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-add-communication-to-case-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddCommunicationToCase")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddCommunicationToCaseResponse" common-lisp:nil)))
 (common-lisp:export 'add-communication-to-case))
(common-lisp:progn
 (common-lisp:defun create-case
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subject service-code severity-code
                     category-code communication-body cc-email-addresses
                     language issue-type attachment-set-id)
   (common-lisp:declare
    (common-lisp:ignorable subject service-code severity-code category-code
     communication-body cc-email-addresses language issue-type
     attachment-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-case-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateCase")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateCaseResponse" common-lisp:nil)))
 (common-lisp:export 'create-case))
(common-lisp:progn
 (common-lisp:defun describe-attachment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attachment-id)
   (common-lisp:declare (common-lisp:ignorable attachment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-attachment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAttachment")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAttachmentResponse" common-lisp:nil)))
 (common-lisp:export 'describe-attachment))
(common-lisp:progn
 (common-lisp:defun describe-cases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key case-id-list display-id after-time
                     before-time include-resolved-cases next-token max-results
                     language include-communications)
   (common-lisp:declare
    (common-lisp:ignorable case-id-list display-id after-time before-time
     include-resolved-cases next-token max-results language
     include-communications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-cases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeCases")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeCasesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-cases))
(common-lisp:progn
 (common-lisp:defun describe-communications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key case-id before-time after-time next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable case-id before-time after-time next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-communications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeCommunications")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeCommunicationsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-communications))
(common-lisp:progn
 (common-lisp:defun describe-services
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-code-list language)
   (common-lisp:declare (common-lisp:ignorable service-code-list language))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-services-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeServices")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeServicesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-services))
(common-lisp:progn
 (common-lisp:defun describe-severity-levels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key language)
   (common-lisp:declare (common-lisp:ignorable language))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-severity-levels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeSeverityLevels")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSeverityLevelsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-severity-levels))
(common-lisp:progn
 (common-lisp:defun describe-trusted-advisor-check-refresh-statuses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key check-ids)
   (common-lisp:declare (common-lisp:ignorable check-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-trusted-advisor-check-refresh-statuses-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeTrustedAdvisorCheckRefreshStatuses")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTrustedAdvisorCheckRefreshStatusesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-trusted-advisor-check-refresh-statuses))
(common-lisp:progn
 (common-lisp:defun describe-trusted-advisor-check-result
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key check-id language)
   (common-lisp:declare (common-lisp:ignorable check-id language))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-trusted-advisor-check-result-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeTrustedAdvisorCheckResult")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTrustedAdvisorCheckResultResponse" common-lisp:nil)))
 (common-lisp:export 'describe-trusted-advisor-check-result))
(common-lisp:progn
 (common-lisp:defun describe-trusted-advisor-check-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key check-ids)
   (common-lisp:declare (common-lisp:ignorable check-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-trusted-advisor-check-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeTrustedAdvisorCheckSummaries")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTrustedAdvisorCheckSummariesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-trusted-advisor-check-summaries))
(common-lisp:progn
 (common-lisp:defun describe-trusted-advisor-checks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key language)
   (common-lisp:declare (common-lisp:ignorable language))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-trusted-advisor-checks-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTrustedAdvisorChecks")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTrustedAdvisorChecksResponse" common-lisp:nil)))
 (common-lisp:export 'describe-trusted-advisor-checks))
(common-lisp:progn
 (common-lisp:defun refresh-trusted-advisor-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key check-id)
   (common-lisp:declare (common-lisp:ignorable check-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-refresh-trusted-advisor-check-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RefreshTrustedAdvisorCheck")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RefreshTrustedAdvisorCheckResponse" common-lisp:nil)))
 (common-lisp:export 'refresh-trusted-advisor-check))
(common-lisp:progn
 (common-lisp:defun resolve-case
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key case-id)
   (common-lisp:declare (common-lisp:ignorable case-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-resolve-case-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "support" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ResolveCase")
                                  ("Version" ,@"2013-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ResolveCaseResponse" common-lisp:nil)))
 (common-lisp:export 'resolve-case))