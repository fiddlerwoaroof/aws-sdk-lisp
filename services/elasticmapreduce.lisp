;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/elasticmapreduce
  (:use)
  (:nicknames #:aws/elasticmapreduce)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/elasticmapreduce)

(common-lisp:deftype action-on-failure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (add-instance-fleet-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instance-fleet
    (common-lisp:error
     #A((27) common-lisp:base-char . ":instance-fleet is required"))
    :type (common-lisp:or instance-fleet-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-instance-fleet-input 'make-add-instance-fleet-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-instance-fleet-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet))))))
(common-lisp:progn
 (common-lisp:defstruct (add-instance-fleet-output (:copier common-lisp:nil))
   (cluster-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instance-fleet-id common-lisp:nil :type
    (common-lisp:or instance-fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-instance-fleet-output
                    'make-add-instance-fleet-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-instance-fleet-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (add-instance-groups-input (:copier common-lisp:nil))
   (instance-groups
    (common-lisp:error
     #A((28) common-lisp:base-char . ":instance-groups is required"))
    :type (common-lisp:or instance-group-config-list common-lisp:null))
   (job-flow-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":job-flow-id is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-instance-groups-input
                    'make-add-instance-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-instance-groups-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-groups)))
    (aws-sdk/generator/shape::to-query-params "JobFlowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-id))))))
(common-lisp:progn
 (common-lisp:defstruct (add-instance-groups-output (:copier common-lisp:nil))
   (job-flow-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instance-group-ids common-lisp:nil :type
    (common-lisp:or instance-group-ids-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-instance-groups-output
                    'make-add-instance-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-instance-groups-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (add-job-flow-steps-input (:copier common-lisp:nil))
   (job-flow-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":job-flow-id is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (steps
    (common-lisp:error #A((18) common-lisp:base-char . ":steps is required"))
    :type (common-lisp:or step-config-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-job-flow-steps-input 'make-add-job-flow-steps-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-job-flow-steps-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-id)))
    (aws-sdk/generator/shape::to-query-params "Steps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'steps))))))
(common-lisp:progn
 (common-lisp:defstruct (add-job-flow-steps-output (:copier common-lisp:nil))
   (step-ids common-lisp:nil :type
    (common-lisp:or step-ids-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-job-flow-steps-output
                    'make-add-job-flow-steps-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-job-flow-steps-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StepIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-input (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'add-tags-input 'make-add-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-output (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'add-tags-output 'make-add-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-output))
   (common-lisp:append)))
(common-lisp:deftype adjustment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (application (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (args common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (additional-info common-lisp:nil :type
    (common-lisp:or string-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'application 'make-application))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "Args"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'args)))
    (aws-sdk/generator/shape::to-query-params "AdditionalInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-info))))))
(common-lisp:progn
 (common-lisp:deftype application-list ()
   '(trivial-types:proper-list application))
 (common-lisp:defun |make-application-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-policy (:copier common-lisp:nil))
   (constraints
    (common-lisp:error
     #A((24) common-lisp:base-char . ":constraints is required"))
    :type (common-lisp:or scaling-constraints common-lisp:null))
   (rules
    (common-lisp:error #A((18) common-lisp:base-char . ":rules is required"))
    :type (common-lisp:or scaling-rule-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-policy 'make-auto-scaling-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape auto-scaling-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Constraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraints)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-scaling-policy-description (:copier common-lisp:nil))
   (status common-lisp:nil :type
    (common-lisp:or auto-scaling-policy-status common-lisp:null))
   (constraints common-lisp:nil :type
    (common-lisp:or scaling-constraints common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or scaling-rule-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-policy-description
                    'make-auto-scaling-policy-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-policy-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Constraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraints)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:deftype auto-scaling-policy-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (auto-scaling-policy-state-change-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or auto-scaling-policy-state-change-reason-code
                    common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-policy-state-change-reason
                    'make-auto-scaling-policy-state-change-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-policy-state-change-reason))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype auto-scaling-policy-state-change-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-policy-status (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or auto-scaling-policy-state common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or auto-scaling-policy-state-change-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-policy-status
                    'make-auto-scaling-policy-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-policy-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype boolean-object () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (bootstrap-action-config (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (script-bootstrap-action
    (common-lisp:error
     #A((36) common-lisp:base-char . ":script-bootstrap-action is required"))
    :type (common-lisp:or script-bootstrap-action-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bootstrap-action-config 'make-bootstrap-action-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bootstrap-action-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ScriptBootstrapAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'script-bootstrap-action))))))
(common-lisp:progn
 (common-lisp:deftype bootstrap-action-config-list ()
   '(trivial-types:proper-list bootstrap-action-config))
 (common-lisp:defun |make-bootstrap-action-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bootstrap-action-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (bootstrap-action-detail (:copier common-lisp:nil))
   (bootstrap-action-config common-lisp:nil :type
    (common-lisp:or bootstrap-action-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bootstrap-action-detail 'make-bootstrap-action-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bootstrap-action-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BootstrapActionConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bootstrap-action-config))))))
(common-lisp:progn
 (common-lisp:deftype bootstrap-action-detail-list ()
   '(trivial-types:proper-list bootstrap-action-detail))
 (common-lisp:defun |make-bootstrap-action-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bootstrap-action-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cancel-steps-info (:copier common-lisp:nil))
   (step-id common-lisp:nil :type (common-lisp:or step-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or cancel-steps-request-status common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-steps-info 'make-cancel-steps-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-steps-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StepId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:deftype cancel-steps-info-list ()
   '(trivial-types:proper-list cancel-steps-info))
 (common-lisp:defun |make-cancel-steps-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cancel-steps-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cancel-steps-input (:copier common-lisp:nil))
   (cluster-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (step-ids common-lisp:nil :type
    (common-lisp:or step-ids-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-steps-input 'make-cancel-steps-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-steps-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "StepIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-steps-output (:copier common-lisp:nil))
   (cancel-steps-info-list common-lisp:nil :type
    (common-lisp:or cancel-steps-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-steps-output 'make-cancel-steps-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-steps-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CancelStepsInfoList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cancel-steps-info-list))))))
(common-lisp:deftype cancel-steps-request-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-alarm-definition (:copier common-lisp:nil))
   (comparison-operator
    (common-lisp:error
     #A((32) common-lisp:base-char . ":comparison-operator is required"))
    :type (common-lisp:or comparison-operator common-lisp:null))
   (evaluation-periods common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (metric-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metric-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (namespace common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (period
    (common-lisp:error #A((19) common-lisp:base-char . ":period is required"))
    :type (common-lisp:or integer common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or statistic common-lisp:null))
   (threshold
    (common-lisp:error
     #A((22) common-lisp:base-char . ":threshold is required"))
    :type (common-lisp:or non-negative-double common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or unit common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or metric-dimension-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-alarm-definition
                    'make-cloud-watch-alarm-definition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-alarm-definition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ComparisonOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparison-operator)))
    (aws-sdk/generator/shape::to-query-params "EvaluationPeriods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-periods)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "Namespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace)))
    (aws-sdk/generator/shape::to-query-params "Period"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'period)))
    (aws-sdk/generator/shape::to-query-params "Statistic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statistic)))
    (aws-sdk/generator/shape::to-query-params "Threshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'threshold)))
    (aws-sdk/generator/shape::to-query-params "Unit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unit)))
    (aws-sdk/generator/shape::to-query-params "Dimensions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimensions))))))
(common-lisp:progn
 (common-lisp:defstruct (cluster (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or cluster-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or cluster-status common-lisp:null))
   (ec2instance-attributes common-lisp:nil :type
    (common-lisp:or ec2instance-attributes common-lisp:null))
   (instance-collection-type common-lisp:nil :type
    (common-lisp:or instance-collection-type common-lisp:null))
   (log-uri common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requested-ami-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (running-ami-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (release-label common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auto-terminate common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (termination-protected common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (visible-to-all-users common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (applications common-lisp:nil :type
    (common-lisp:or application-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (normalized-instance-hours common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (master-public-dns-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configuration-list common-lisp:null))
   (security-configuration common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (auto-scaling-role common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (scale-down-behavior common-lisp:nil :type
    (common-lisp:or scale-down-behavior common-lisp:null))
   (custom-ami-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (ebs-root-volume-size common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (repo-upgrade-on-boot common-lisp:nil :type
    (common-lisp:or repo-upgrade-on-boot common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cluster 'make-cluster))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cluster))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Ec2InstanceAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-attributes)))
    (aws-sdk/generator/shape::to-query-params "InstanceCollectionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-collection-type)))
    (aws-sdk/generator/shape::to-query-params "LogUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-uri)))
    (aws-sdk/generator/shape::to-query-params "RequestedAmiVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-ami-version)))
    (aws-sdk/generator/shape::to-query-params "RunningAmiVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'running-ami-version)))
    (aws-sdk/generator/shape::to-query-params "ReleaseLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'release-label)))
    (aws-sdk/generator/shape::to-query-params "AutoTerminate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-terminate)))
    (aws-sdk/generator/shape::to-query-params "TerminationProtected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-protected)))
    (aws-sdk/generator/shape::to-query-params "VisibleToAllUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'visible-to-all-users)))
    (aws-sdk/generator/shape::to-query-params "Applications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "NormalizedInstanceHours"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'normalized-instance-hours)))
    (aws-sdk/generator/shape::to-query-params "MasterPublicDnsName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-public-dns-name)))
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "SecurityConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-configuration)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-role)))
    (aws-sdk/generator/shape::to-query-params "ScaleDownBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scale-down-behavior)))
    (aws-sdk/generator/shape::to-query-params "CustomAmiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-ami-id)))
    (aws-sdk/generator/shape::to-query-params "EbsRootVolumeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-root-volume-size)))
    (aws-sdk/generator/shape::to-query-params "RepoUpgradeOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repo-upgrade-on-boot))))))
(common-lisp:deftype cluster-id () 'common-lisp:string)
(common-lisp:deftype cluster-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cluster-state-change-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or cluster-state-change-reason-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cluster-state-change-reason
                    'make-cluster-state-change-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cluster-state-change-reason))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype cluster-state-change-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cluster-state-list ()
   '(trivial-types:proper-list cluster-state))
 (common-lisp:defun |make-cluster-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cluster-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cluster-status (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or cluster-state common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or cluster-state-change-reason common-lisp:null))
   (timeline common-lisp:nil :type
    (common-lisp:or cluster-timeline common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cluster-status 'make-cluster-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cluster-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "Timeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeline))))))
(common-lisp:progn
 (common-lisp:defstruct (cluster-summary (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or cluster-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or cluster-status common-lisp:null))
   (normalized-instance-hours common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cluster-summary 'make-cluster-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cluster-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "NormalizedInstanceHours"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'normalized-instance-hours))))))
(common-lisp:progn
 (common-lisp:deftype cluster-summary-list ()
   '(trivial-types:proper-list cluster-summary))
 (common-lisp:defun |make-cluster-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cluster-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cluster-timeline (:copier common-lisp:nil))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (ready-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cluster-timeline 'make-cluster-timeline))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cluster-timeline))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "ReadyDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ready-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time))))))
(common-lisp:progn
 (common-lisp:defstruct (command (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (script-path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (args common-lisp:nil :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'command 'make-command))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape command))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ScriptPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'script-path)))
    (aws-sdk/generator/shape::to-query-params "Args"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'args))))))
(common-lisp:progn
 (common-lisp:deftype command-list () '(trivial-types:proper-list command))
 (common-lisp:defun |make-command-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list command))
   aws-sdk/generator/shape::members))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (configuration (:copier common-lisp:nil))
   (classification common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configuration-list common-lisp:null))
   (properties common-lisp:nil :type
    (common-lisp:or string-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'configuration 'make-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Classification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'classification)))
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "Properties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'properties))))))
(common-lisp:progn
 (common-lisp:deftype configuration-list ()
   '(trivial-types:proper-list configuration))
 (common-lisp:defun |make-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (create-security-configuration-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string common-lisp:null))
   (security-configuration
    (common-lisp:error
     #A((35) common-lisp:base-char . ":security-configuration is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-security-configuration-input
                    'make-create-security-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-security-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SecurityConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-security-configuration-output (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string common-lisp:null))
   (creation-date-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":creation-date-time is required"))
    :type (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-security-configuration-output
                    'make-create-security-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-security-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time))))))
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-security-configuration-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-security-configuration-input
                    'make-delete-security-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-security-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-security-configuration-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-security-configuration-output
                    'make-delete-security-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-security-configuration-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-cluster-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cluster-input 'make-describe-cluster-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-cluster-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-cluster-output (:copier common-lisp:nil))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cluster-output 'make-describe-cluster-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-cluster-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Cluster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-job-flows-input (:copier common-lisp:nil))
   (created-after common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (created-before common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (job-flow-ids common-lisp:nil :type
    (common-lisp:or xml-string-list common-lisp:null))
   (job-flow-states common-lisp:nil :type
    (common-lisp:or job-flow-execution-state-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-flows-input 'make-describe-job-flows-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-job-flows-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreatedAfter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-after)))
    (aws-sdk/generator/shape::to-query-params "CreatedBefore"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-before)))
    (aws-sdk/generator/shape::to-query-params "JobFlowIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-ids)))
    (aws-sdk/generator/shape::to-query-params "JobFlowStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-states))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-job-flows-output (:copier common-lisp:nil))
   (job-flows common-lisp:nil :type
    (common-lisp:or job-flow-detail-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-flows-output
                    'make-describe-job-flows-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-job-flows-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flows))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-security-configuration-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-security-configuration-input
                    'make-describe-security-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-security-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-security-configuration-output (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or xml-string common-lisp:null))
   (security-configuration common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-security-configuration-output
                    'make-describe-security-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-security-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SecurityConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-configuration)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-step-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (step-id
    (common-lisp:error #A((20) common-lisp:base-char . ":step-id is required"))
    :type (common-lisp:or step-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-step-input 'make-describe-step-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-step-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "StepId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-step-output (:copier common-lisp:nil))
   (step common-lisp:nil :type (common-lisp:or step common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-step-output 'make-describe-step-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-step-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Step"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step))))))
(common-lisp:progn
 (common-lisp:deftype ec2instance-ids-list ()
   '(trivial-types:proper-list instance-id))
 (common-lisp:defun |make-ec2instance-ids-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ec2instance-ids-to-terminate-list ()
   '(trivial-types:proper-list instance-id))
 (common-lisp:defun |make-ec2instance-ids-to-terminate-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ebs-block-device (:copier common-lisp:nil))
   (volume-specification common-lisp:nil :type
    (common-lisp:or volume-specification common-lisp:null))
   (device common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ebs-block-device 'make-ebs-block-device))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ebs-block-device))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-specification)))
    (aws-sdk/generator/shape::to-query-params "Device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device))))))
(common-lisp:progn
 (common-lisp:defstruct (ebs-block-device-config (:copier common-lisp:nil))
   (volume-specification
    (common-lisp:error
     #A((33) common-lisp:base-char . ":volume-specification is required"))
    :type (common-lisp:or volume-specification common-lisp:null))
   (volumes-per-instance common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ebs-block-device-config 'make-ebs-block-device-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          ebs-block-device-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-specification)))
    (aws-sdk/generator/shape::to-query-params "VolumesPerInstance"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volumes-per-instance))))))
(common-lisp:progn
 (common-lisp:deftype ebs-block-device-config-list ()
   '(trivial-types:proper-list ebs-block-device-config))
 (common-lisp:defun |make-ebs-block-device-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebs-block-device-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ebs-block-device-list ()
   '(trivial-types:proper-list ebs-block-device))
 (common-lisp:defun |make-ebs-block-device-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebs-block-device))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ebs-configuration (:copier common-lisp:nil))
   (ebs-block-device-configs common-lisp:nil :type
    (common-lisp:or ebs-block-device-config-list common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ebs-configuration 'make-ebs-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ebs-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EbsBlockDeviceConfigs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-block-device-configs)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized))))))
(common-lisp:progn
 (common-lisp:defstruct (ebs-volume (:copier common-lisp:nil))
   (device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebs-volume 'make-ebs-volume))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ebs-volume))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device)))
    (aws-sdk/generator/shape::to-query-params "VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-id))))))
(common-lisp:progn
 (common-lisp:deftype ebs-volume-list ()
   '(trivial-types:proper-list ebs-volume))
 (common-lisp:defun |make-ebs-volume-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebs-volume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ec2instance-attributes (:copier common-lisp:nil))
   (ec2key-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ec2subnet-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (requested-ec2subnet-ids common-lisp:nil :type
    (common-lisp:or xml-string-max-len256list common-lisp:null))
   (ec2availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (requested-ec2availability-zones common-lisp:nil :type
    (common-lisp:or xml-string-max-len256list common-lisp:null))
   (iam-instance-profile common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (emr-managed-master-security-group common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (emr-managed-slave-security-group common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (service-access-security-group common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (additional-master-security-groups common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (additional-slave-security-groups common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ec2instance-attributes 'make-ec2instance-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          ec2instance-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Ec2KeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2key-name)))
    (aws-sdk/generator/shape::to-query-params "Ec2SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2subnet-id)))
    (aws-sdk/generator/shape::to-query-params "RequestedEc2SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-ec2subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "Ec2AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2availability-zone)))
    (aws-sdk/generator/shape::to-query-params "RequestedEc2AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-ec2availability-zones)))
    (aws-sdk/generator/shape::to-query-params "IamInstanceProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-instance-profile)))
    (aws-sdk/generator/shape::to-query-params "EmrManagedMasterSecurityGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'emr-managed-master-security-group)))
    (aws-sdk/generator/shape::to-query-params "EmrManagedSlaveSecurityGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'emr-managed-slave-security-group)))
    (aws-sdk/generator/shape::to-query-params "ServiceAccessSecurityGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-access-security-group)))
    (aws-sdk/generator/shape::to-query-params "AdditionalMasterSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-master-security-groups)))
    (aws-sdk/generator/shape::to-query-params "AdditionalSlaveSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-slave-security-groups))))))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (failure-details (:copier common-lisp:nil))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-file common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failure-details 'make-failure-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape failure-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "LogFile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-file))))))
(common-lisp:progn
 (common-lisp:defstruct (hadoop-jar-step-config (:copier common-lisp:nil))
   (properties common-lisp:nil :type
    (common-lisp:or key-value-list common-lisp:null))
   (jar (common-lisp:error #A((16) common-lisp:base-char . ":jar is required"))
    :type (common-lisp:or xml-string common-lisp:null))
   (main-class common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (args common-lisp:nil :type
    (common-lisp:or xml-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hadoop-jar-step-config 'make-hadoop-jar-step-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          hadoop-jar-step-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Properties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'properties)))
    (aws-sdk/generator/shape::to-query-params "Jar"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jar)))
    (aws-sdk/generator/shape::to-query-params "MainClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'main-class)))
    (aws-sdk/generator/shape::to-query-params "Args"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'args))))))
(common-lisp:progn
 (common-lisp:defstruct (hadoop-step-config (:copier common-lisp:nil))
   (jar common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (properties common-lisp:nil :type
    (common-lisp:or string-map common-lisp:null))
   (main-class common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (args common-lisp:nil :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hadoop-step-config 'make-hadoop-step-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape hadoop-step-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Jar"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jar)))
    (aws-sdk/generator/shape::to-query-params "Properties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'properties)))
    (aws-sdk/generator/shape::to-query-params "MainClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'main-class)))
    (aws-sdk/generator/shape::to-query-params "Args"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'args))))))
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (ec2instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (public-dns-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (public-ip-address common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (private-dns-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-status common-lisp:null))
   (instance-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-fleet-id common-lisp:nil :type
    (common-lisp:or instance-fleet-id common-lisp:null))
   (market common-lisp:nil :type (common-lisp:or market-type common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null))
   (ebs-volumes common-lisp:nil :type
    (common-lisp:or ebs-volume-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Ec2InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-id)))
    (aws-sdk/generator/shape::to-query-params "PublicDnsName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-dns-name)))
    (aws-sdk/generator/shape::to-query-params "PublicIpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-ip-address)))
    (aws-sdk/generator/shape::to-query-params "PrivateDnsName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-dns-name)))
    (aws-sdk/generator/shape::to-query-params "PrivateIpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-ip-address)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet-id)))
    (aws-sdk/generator/shape::to-query-params "Market"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'market)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "EbsVolumes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-volumes))))))
(common-lisp:deftype instance-collection-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-fleet (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or instance-fleet-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-fleet-status common-lisp:null))
   (instance-fleet-type common-lisp:nil :type
    (common-lisp:or instance-fleet-type common-lisp:null))
   (target-on-demand-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (target-spot-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (provisioned-on-demand-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (provisioned-spot-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (instance-type-specifications common-lisp:nil :type
    (common-lisp:or instance-type-specification-list common-lisp:null))
   (launch-specifications common-lisp:nil :type
    (common-lisp:or instance-fleet-provisioning-specifications
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-fleet 'make-instance-fleet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-fleet))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleetType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet-type)))
    (aws-sdk/generator/shape::to-query-params "TargetOnDemandCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-on-demand-capacity)))
    (aws-sdk/generator/shape::to-query-params "TargetSpotCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-spot-capacity)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedOnDemandCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-on-demand-capacity)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedSpotCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-spot-capacity)))
    (aws-sdk/generator/shape::to-query-params "InstanceTypeSpecifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type-specifications)))
    (aws-sdk/generator/shape::to-query-params "LaunchSpecifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-fleet-config (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instance-fleet-type
    (common-lisp:error
     #A((32) common-lisp:base-char . ":instance-fleet-type is required"))
    :type (common-lisp:or instance-fleet-type common-lisp:null))
   (target-on-demand-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (target-spot-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (instance-type-configs common-lisp:nil :type
    (common-lisp:or instance-type-config-list common-lisp:null))
   (launch-specifications common-lisp:nil :type
    (common-lisp:or instance-fleet-provisioning-specifications
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-fleet-config 'make-instance-fleet-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-fleet-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleetType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet-type)))
    (aws-sdk/generator/shape::to-query-params "TargetOnDemandCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-on-demand-capacity)))
    (aws-sdk/generator/shape::to-query-params "TargetSpotCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-spot-capacity)))
    (aws-sdk/generator/shape::to-query-params "InstanceTypeConfigs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type-configs)))
    (aws-sdk/generator/shape::to-query-params "LaunchSpecifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-specifications))))))
(common-lisp:progn
 (common-lisp:deftype instance-fleet-config-list ()
   '(trivial-types:proper-list instance-fleet-config))
 (common-lisp:defun |make-instance-fleet-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-fleet-config))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-fleet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-fleet-list ()
   '(trivial-types:proper-list instance-fleet))
 (common-lisp:defun |make-instance-fleet-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-fleet))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-fleet-modify-config (:copier common-lisp:nil))
   (instance-fleet-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":instance-fleet-id is required"))
    :type (common-lisp:or instance-fleet-id common-lisp:null))
   (target-on-demand-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (target-spot-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-fleet-modify-config
                    'make-instance-fleet-modify-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-fleet-modify-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceFleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet-id)))
    (aws-sdk/generator/shape::to-query-params "TargetOnDemandCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-on-demand-capacity)))
    (aws-sdk/generator/shape::to-query-params "TargetSpotCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-spot-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-fleet-provisioning-specifications (:copier common-lisp:nil))
   (spot-specification
    (common-lisp:error
     #A((31) common-lisp:base-char . ":spot-specification is required"))
    :type (common-lisp:or spot-provisioning-specification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-fleet-provisioning-specifications
                    'make-instance-fleet-provisioning-specifications))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-fleet-provisioning-specifications))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SpotSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'spot-specification))))))
(common-lisp:deftype instance-fleet-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-fleet-state-change-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or instance-fleet-state-change-reason-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-fleet-state-change-reason
                    'make-instance-fleet-state-change-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-fleet-state-change-reason))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype instance-fleet-state-change-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-fleet-status (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or instance-fleet-state common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or instance-fleet-state-change-reason common-lisp:null))
   (timeline common-lisp:nil :type
    (common-lisp:or instance-fleet-timeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-fleet-status 'make-instance-fleet-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-fleet-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "Timeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeline))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-fleet-timeline (:copier common-lisp:nil))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (ready-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-fleet-timeline 'make-instance-fleet-timeline))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-fleet-timeline))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "ReadyDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ready-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time))))))
(common-lisp:deftype instance-fleet-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-group (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or instance-group-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (market common-lisp:nil :type (common-lisp:or market-type common-lisp:null))
   (instance-group-type common-lisp:nil :type
    (common-lisp:or instance-group-type common-lisp:null))
   (bid-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null))
   (requested-instance-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (running-instance-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-group-status common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configuration-list common-lisp:null))
   (ebs-block-devices common-lisp:nil :type
    (common-lisp:or ebs-block-device-list common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (shrink-policy common-lisp:nil :type
    (common-lisp:or shrink-policy common-lisp:null))
   (auto-scaling-policy common-lisp:nil :type
    (common-lisp:or auto-scaling-policy-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-group 'make-instance-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Market"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'market)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-type)))
    (aws-sdk/generator/shape::to-query-params "BidPrice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bid-price)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "RequestedInstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested-instance-count)))
    (aws-sdk/generator/shape::to-query-params "RunningInstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'running-instance-count)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "EbsBlockDevices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-block-devices)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized)))
    (aws-sdk/generator/shape::to-query-params "ShrinkPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shrink-policy)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-policy))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-group-config (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (market common-lisp:nil :type (common-lisp:or market-type common-lisp:null))
   (instance-role
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-role is required"))
    :type (common-lisp:or instance-role-type common-lisp:null))
   (bid-price common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or instance-type common-lisp:null))
   (instance-count
    (common-lisp:error
     #A((27) common-lisp:base-char . ":instance-count is required"))
    :type (common-lisp:or integer common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configuration-list common-lisp:null))
   (ebs-configuration common-lisp:nil :type
    (common-lisp:or ebs-configuration common-lisp:null))
   (auto-scaling-policy common-lisp:nil :type
    (common-lisp:or auto-scaling-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-group-config 'make-instance-group-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-group-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Market"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'market)))
    (aws-sdk/generator/shape::to-query-params "InstanceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-role)))
    (aws-sdk/generator/shape::to-query-params "BidPrice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bid-price)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "InstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-count)))
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "EbsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-configuration)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-policy))))))
(common-lisp:progn
 (common-lisp:deftype instance-group-config-list ()
   '(trivial-types:proper-list instance-group-config))
 (common-lisp:defun |make-instance-group-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-group-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-group-detail (:copier common-lisp:nil))
   (instance-group-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (market
    (common-lisp:error #A((19) common-lisp:base-char . ":market is required"))
    :type (common-lisp:or market-type common-lisp:null))
   (instance-role
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-role is required"))
    :type (common-lisp:or instance-role-type common-lisp:null))
   (bid-price common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or instance-type common-lisp:null))
   (instance-request-count
    (common-lisp:error
     #A((35) common-lisp:base-char . ":instance-request-count is required"))
    :type (common-lisp:or integer common-lisp:null))
   (instance-running-count
    (common-lisp:error
     #A((35) common-lisp:base-char . ":instance-running-count is required"))
    :type (common-lisp:or integer common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or instance-group-state common-lisp:null))
   (last-state-change-reason common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (creation-date-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":creation-date-time is required"))
    :type (common-lisp:or date common-lisp:null))
   (start-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (ready-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-group-detail 'make-instance-group-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-group-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Market"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'market)))
    (aws-sdk/generator/shape::to-query-params "InstanceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-role)))
    (aws-sdk/generator/shape::to-query-params "BidPrice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bid-price)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "InstanceRequestCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-request-count)))
    (aws-sdk/generator/shape::to-query-params "InstanceRunningCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-running-count)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "LastStateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "StartDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date-time)))
    (aws-sdk/generator/shape::to-query-params "ReadyDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ready-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time))))))
(common-lisp:progn
 (common-lisp:deftype instance-group-detail-list ()
   '(trivial-types:proper-list instance-group-detail))
 (common-lisp:defun |make-instance-group-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-group-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-group-ids-list ()
   '(trivial-types:proper-list xml-string-max-len256))
 (common-lisp:defun |make-instance-group-ids-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len256))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-group-list ()
   '(trivial-types:proper-list instance-group))
 (common-lisp:defun |make-instance-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-group-modify-config (:copier common-lisp:nil))
   (instance-group-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":instance-group-id is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instance-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (ec2instance-ids-to-terminate common-lisp:nil :type
    (common-lisp:or ec2instance-ids-to-terminate-list common-lisp:null))
   (shrink-policy common-lisp:nil :type
    (common-lisp:or shrink-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-group-modify-config
                    'make-instance-group-modify-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-group-modify-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-count)))
    (aws-sdk/generator/shape::to-query-params "EC2InstanceIdsToTerminate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-ids-to-terminate)))
    (aws-sdk/generator/shape::to-query-params "ShrinkPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shrink-policy))))))
(common-lisp:progn
 (common-lisp:deftype instance-group-modify-config-list ()
   '(trivial-types:proper-list instance-group-modify-config))
 (common-lisp:defun |make-instance-group-modify-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-group-modify-config))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-group-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-group-state-change-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or instance-group-state-change-reason-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-group-state-change-reason
                    'make-instance-group-state-change-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-group-state-change-reason))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype instance-group-state-change-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-group-status (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or instance-group-state common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or instance-group-state-change-reason common-lisp:null))
   (timeline common-lisp:nil :type
    (common-lisp:or instance-group-timeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-group-status 'make-instance-group-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-group-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "Timeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeline))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-group-timeline (:copier common-lisp:nil))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (ready-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-group-timeline 'make-instance-group-timeline))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-group-timeline))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "ReadyDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ready-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time))))))
(common-lisp:deftype instance-group-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-group-type-list ()
   '(trivial-types:proper-list instance-group-type))
 (common-lisp:defun |make-instance-group-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-group-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-list () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-resize-policy (:copier common-lisp:nil))
   (instances-to-terminate common-lisp:nil :type
    (common-lisp:or ec2instance-ids-list common-lisp:null))
   (instances-to-protect common-lisp:nil :type
    (common-lisp:or ec2instance-ids-list common-lisp:null))
   (instance-termination-timeout common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-resize-policy 'make-instance-resize-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-resize-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstancesToTerminate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-to-terminate)))
    (aws-sdk/generator/shape::to-query-params "InstancesToProtect"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-to-protect)))
    (aws-sdk/generator/shape::to-query-params "InstanceTerminationTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-termination-timeout))))))
(common-lisp:deftype instance-role-type () 'common-lisp:string)
(common-lisp:deftype instance-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-state-change-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or instance-state-change-reason-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-state-change-reason
                    'make-instance-state-change-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-state-change-reason))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype instance-state-change-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-state-list ()
   '(trivial-types:proper-list instance-state))
 (common-lisp:defun |make-instance-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-status (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or instance-state common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or instance-state-change-reason common-lisp:null))
   (timeline common-lisp:nil :type
    (common-lisp:or instance-timeline common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-status 'make-instance-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "Timeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeline))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-timeline (:copier common-lisp:nil))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (ready-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-timeline 'make-instance-timeline))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-timeline))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "ReadyDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ready-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time))))))
(common-lisp:deftype instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-type-config (:copier common-lisp:nil))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or instance-type common-lisp:null))
   (weighted-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (bid-price common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (bid-price-as-percentage-of-on-demand-price common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (ebs-configuration common-lisp:nil :type
    (common-lisp:or ebs-configuration common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configuration-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-type-config 'make-instance-type-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-type-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "WeightedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'weighted-capacity)))
    (aws-sdk/generator/shape::to-query-params "BidPrice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bid-price)))
    (aws-sdk/generator/shape::to-query-params
     "BidPriceAsPercentageOfOnDemandPrice"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'bid-price-as-percentage-of-on-demand-price)))
    (aws-sdk/generator/shape::to-query-params "EbsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-configuration)))
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations))))))
(common-lisp:progn
 (common-lisp:deftype instance-type-config-list ()
   '(trivial-types:proper-list instance-type-config))
 (common-lisp:defun |make-instance-type-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-type-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-type-specification (:copier common-lisp:nil))
   (instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null))
   (weighted-capacity common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (bid-price common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (bid-price-as-percentage-of-on-demand-price common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configuration-list common-lisp:null))
   (ebs-block-devices common-lisp:nil :type
    (common-lisp:or ebs-block-device-list common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-type-specification
                    'make-instance-type-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-type-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "WeightedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'weighted-capacity)))
    (aws-sdk/generator/shape::to-query-params "BidPrice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bid-price)))
    (aws-sdk/generator/shape::to-query-params
     "BidPriceAsPercentageOfOnDemandPrice"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'bid-price-as-percentage-of-on-demand-price)))
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "EbsBlockDevices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-block-devices)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized))))))
(common-lisp:progn
 (common-lisp:deftype instance-type-specification-list ()
   '(trivial-types:proper-list instance-type-specification))
 (common-lisp:defun |make-instance-type-specification-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-type-specification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-server-error (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'make-internal-server-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-error))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (internal-server-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'make-internal-server-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-request-exception (:copier common-lisp:nil))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'make-invalid-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (job-flow-detail (:copier common-lisp:nil))
   (job-flow-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":job-flow-id is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (log-uri common-lisp:nil :type (common-lisp:or xml-string common-lisp:null))
   (ami-version common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (execution-status-detail
    (common-lisp:error
     #A((36) common-lisp:base-char . ":execution-status-detail is required"))
    :type (common-lisp:or job-flow-execution-status-detail common-lisp:null))
   (instances
    (common-lisp:error
     #A((22) common-lisp:base-char . ":instances is required"))
    :type (common-lisp:or job-flow-instances-detail common-lisp:null))
   (steps common-lisp:nil :type
    (common-lisp:or step-detail-list common-lisp:null))
   (bootstrap-actions common-lisp:nil :type
    (common-lisp:or bootstrap-action-detail-list common-lisp:null))
   (supported-products common-lisp:nil :type
    (common-lisp:or supported-products-list common-lisp:null))
   (visible-to-all-users common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (job-flow-role common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (auto-scaling-role common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (scale-down-behavior common-lisp:nil :type
    (common-lisp:or scale-down-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-flow-detail 'make-job-flow-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-flow-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "LogUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-uri)))
    (aws-sdk/generator/shape::to-query-params "AmiVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ami-version)))
    (aws-sdk/generator/shape::to-query-params "ExecutionStatusDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-status-detail)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "Steps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'steps)))
    (aws-sdk/generator/shape::to-query-params "BootstrapActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bootstrap-actions)))
    (aws-sdk/generator/shape::to-query-params "SupportedProducts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-products)))
    (aws-sdk/generator/shape::to-query-params "VisibleToAllUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'visible-to-all-users)))
    (aws-sdk/generator/shape::to-query-params "JobFlowRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-role)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-role)))
    (aws-sdk/generator/shape::to-query-params "ScaleDownBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scale-down-behavior))))))
(common-lisp:progn
 (common-lisp:deftype job-flow-detail-list ()
   '(trivial-types:proper-list job-flow-detail))
 (common-lisp:defun |make-job-flow-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-flow-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-flow-execution-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-flow-execution-state-list ()
   '(trivial-types:proper-list job-flow-execution-state))
 (common-lisp:defun |make-job-flow-execution-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            job-flow-execution-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (job-flow-execution-status-detail (:copier common-lisp:nil))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or job-flow-execution-state common-lisp:null))
   (creation-date-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":creation-date-time is required"))
    :type (common-lisp:or date common-lisp:null))
   (start-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (ready-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (last-state-change-reason common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'job-flow-execution-status-detail
                    'make-job-flow-execution-status-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          job-flow-execution-status-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "StartDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date-time)))
    (aws-sdk/generator/shape::to-query-params "ReadyDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ready-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time)))
    (aws-sdk/generator/shape::to-query-params "LastStateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-state-change-reason))))))
(common-lisp:progn
 (common-lisp:defstruct (job-flow-instances-config (:copier common-lisp:nil))
   (master-instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null))
   (slave-instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null))
   (instance-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instance-groups common-lisp:nil :type
    (common-lisp:or instance-group-config-list common-lisp:null))
   (instance-fleets common-lisp:nil :type
    (common-lisp:or instance-fleet-config-list common-lisp:null))
   (ec2key-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (placement common-lisp:nil :type
    (common-lisp:or placement-type common-lisp:null))
   (keep-job-flow-alive-when-no-steps common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (termination-protected common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (hadoop-version common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (ec2subnet-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (ec2subnet-ids common-lisp:nil :type
    (common-lisp:or xml-string-max-len256list common-lisp:null))
   (emr-managed-master-security-group common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (emr-managed-slave-security-group common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (service-access-security-group common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (additional-master-security-groups common-lisp:nil :type
    (common-lisp:or security-groups-list common-lisp:null))
   (additional-slave-security-groups common-lisp:nil :type
    (common-lisp:or security-groups-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'job-flow-instances-config
                    'make-job-flow-instances-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          job-flow-instances-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MasterInstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-instance-type)))
    (aws-sdk/generator/shape::to-query-params "SlaveInstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slave-instance-type)))
    (aws-sdk/generator/shape::to-query-params "InstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-count)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-groups)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleets)))
    (aws-sdk/generator/shape::to-query-params "Ec2KeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2key-name)))
    (aws-sdk/generator/shape::to-query-params "Placement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement)))
    (aws-sdk/generator/shape::to-query-params "KeepJobFlowAliveWhenNoSteps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keep-job-flow-alive-when-no-steps)))
    (aws-sdk/generator/shape::to-query-params "TerminationProtected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-protected)))
    (aws-sdk/generator/shape::to-query-params "HadoopVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hadoop-version)))
    (aws-sdk/generator/shape::to-query-params "Ec2SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2subnet-id)))
    (aws-sdk/generator/shape::to-query-params "Ec2SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "EmrManagedMasterSecurityGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'emr-managed-master-security-group)))
    (aws-sdk/generator/shape::to-query-params "EmrManagedSlaveSecurityGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'emr-managed-slave-security-group)))
    (aws-sdk/generator/shape::to-query-params "ServiceAccessSecurityGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-access-security-group)))
    (aws-sdk/generator/shape::to-query-params "AdditionalMasterSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-master-security-groups)))
    (aws-sdk/generator/shape::to-query-params "AdditionalSlaveSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-slave-security-groups))))))
(common-lisp:progn
 (common-lisp:defstruct (job-flow-instances-detail (:copier common-lisp:nil))
   (master-instance-type
    (common-lisp:error
     #A((33) common-lisp:base-char . ":master-instance-type is required"))
    :type (common-lisp:or instance-type common-lisp:null))
   (master-public-dns-name common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (master-instance-id common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (slave-instance-type
    (common-lisp:error
     #A((32) common-lisp:base-char . ":slave-instance-type is required"))
    :type (common-lisp:or instance-type common-lisp:null))
   (instance-count
    (common-lisp:error
     #A((27) common-lisp:base-char . ":instance-count is required"))
    :type (common-lisp:or integer common-lisp:null))
   (instance-groups common-lisp:nil :type
    (common-lisp:or instance-group-detail-list common-lisp:null))
   (normalized-instance-hours common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (ec2key-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (ec2subnet-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (placement common-lisp:nil :type
    (common-lisp:or placement-type common-lisp:null))
   (keep-job-flow-alive-when-no-steps common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (termination-protected common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (hadoop-version common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'job-flow-instances-detail
                    'make-job-flow-instances-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          job-flow-instances-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MasterInstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-instance-type)))
    (aws-sdk/generator/shape::to-query-params "MasterPublicDnsName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-public-dns-name)))
    (aws-sdk/generator/shape::to-query-params "MasterInstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'master-instance-id)))
    (aws-sdk/generator/shape::to-query-params "SlaveInstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slave-instance-type)))
    (aws-sdk/generator/shape::to-query-params "InstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-count)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-groups)))
    (aws-sdk/generator/shape::to-query-params "NormalizedInstanceHours"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'normalized-instance-hours)))
    (aws-sdk/generator/shape::to-query-params "Ec2KeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2key-name)))
    (aws-sdk/generator/shape::to-query-params "Ec2SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2subnet-id)))
    (aws-sdk/generator/shape::to-query-params "Placement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement)))
    (aws-sdk/generator/shape::to-query-params "KeepJobFlowAliveWhenNoSteps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keep-job-flow-alive-when-no-steps)))
    (aws-sdk/generator/shape::to-query-params "TerminationProtected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-protected)))
    (aws-sdk/generator/shape::to-query-params "HadoopVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hadoop-version))))))
(common-lisp:progn
 (common-lisp:defstruct (key-value (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or xml-string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-value 'make-key-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype key-value-list () '(trivial-types:proper-list key-value))
 (common-lisp:defun |make-key-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bootstrap-actions-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bootstrap-actions-input
                    'make-list-bootstrap-actions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bootstrap-actions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bootstrap-actions-output (:copier common-lisp:nil))
   (bootstrap-actions common-lisp:nil :type
    (common-lisp:or command-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bootstrap-actions-output
                    'make-list-bootstrap-actions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bootstrap-actions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BootstrapActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bootstrap-actions)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-clusters-input (:copier common-lisp:nil))
   (created-after common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (created-before common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (cluster-states common-lisp:nil :type
    (common-lisp:or cluster-state-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-clusters-input 'make-list-clusters-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-clusters-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreatedAfter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-after)))
    (aws-sdk/generator/shape::to-query-params "CreatedBefore"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-before)))
    (aws-sdk/generator/shape::to-query-params "ClusterStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-states)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-clusters-output (:copier common-lisp:nil))
   (clusters common-lisp:nil :type
    (common-lisp:or cluster-summary-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-clusters-output 'make-list-clusters-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-clusters-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Clusters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clusters)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-instance-fleets-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instance-fleets-input
                    'make-list-instance-fleets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-instance-fleets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-instance-fleets-output (:copier common-lisp:nil))
   (instance-fleets common-lisp:nil :type
    (common-lisp:or instance-fleet-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instance-fleets-output
                    'make-list-instance-fleets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-instance-fleets-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceFleets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleets)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-instance-groups-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instance-groups-input
                    'make-list-instance-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-instance-groups-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-instance-groups-output (:copier common-lisp:nil))
   (instance-groups common-lisp:nil :type
    (common-lisp:or instance-group-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instance-groups-output
                    'make-list-instance-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-instance-groups-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-groups)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-instances-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (instance-group-id common-lisp:nil :type
    (common-lisp:or instance-group-id common-lisp:null))
   (instance-group-types common-lisp:nil :type
    (common-lisp:or instance-group-type-list common-lisp:null))
   (instance-fleet-id common-lisp:nil :type
    (common-lisp:or instance-fleet-id common-lisp:null))
   (instance-fleet-type common-lisp:nil :type
    (common-lisp:or instance-fleet-type common-lisp:null))
   (instance-states common-lisp:nil :type
    (common-lisp:or instance-state-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instances-input 'make-list-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-types)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleetType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet-type)))
    (aws-sdk/generator/shape::to-query-params "InstanceStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-states)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-instances-output (:copier common-lisp:nil))
   (instances common-lisp:nil :type
    (common-lisp:or instance-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instances-output 'make-list-instances-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-instances-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-security-configurations-input (:copier common-lisp:nil))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-security-configurations-input
                    'make-list-security-configurations-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-security-configurations-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-security-configurations-output (:copier common-lisp:nil))
   (security-configurations common-lisp:nil :type
    (common-lisp:or security-configuration-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-security-configurations-output
                    'make-list-security-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-security-configurations-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SecurityConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-configurations)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-steps-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (step-states common-lisp:nil :type
    (common-lisp:or step-state-list common-lisp:null))
   (step-ids common-lisp:nil :type
    (common-lisp:or xml-string-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-steps-input 'make-list-steps-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-steps-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "StepStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-states)))
    (aws-sdk/generator/shape::to-query-params "StepIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-ids)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-steps-output (:copier common-lisp:nil))
   (steps common-lisp:nil :type
    (common-lisp:or step-summary-list common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-steps-output 'make-list-steps-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-steps-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Steps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'steps)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:deftype marker () 'common-lisp:string)
(common-lisp:deftype market-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (metric-dimension (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-dimension 'make-metric-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape metric-dimension))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype metric-dimension-list ()
   '(trivial-types:proper-list metric-dimension))
 (common-lisp:defun |make-metric-dimension-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-dimension))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-fleet-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (instance-fleet
    (common-lisp:error
     #A((27) common-lisp:base-char . ":instance-fleet is required"))
    :type (common-lisp:or instance-fleet-modify-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-instance-fleet-input
                    'make-modify-instance-fleet-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-instance-fleet-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceFleet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-fleet))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-instance-groups-input (:copier common-lisp:nil))
   (cluster-id common-lisp:nil :type
    (common-lisp:or cluster-id common-lisp:null))
   (instance-groups common-lisp:nil :type
    (common-lisp:or instance-group-modify-config-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-instance-groups-input
                    'make-modify-instance-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-instance-groups-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-groups))))))
(common-lisp:progn
 (common-lisp:deftype new-supported-products-list ()
   '(trivial-types:proper-list supported-product-config))
 (common-lisp:defun |make-new-supported-products-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            supported-product-config))
   aws-sdk/generator/shape::members))
(common-lisp:deftype non-negative-double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (placement-type (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or xml-string-max-len256list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'placement-type 'make-placement-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape placement-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-auto-scaling-policy-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (instance-group-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":instance-group-id is required"))
    :type (common-lisp:or instance-group-id common-lisp:null))
   (auto-scaling-policy
    (common-lisp:error
     #A((32) common-lisp:base-char . ":auto-scaling-policy is required"))
    :type (common-lisp:or auto-scaling-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-auto-scaling-policy-input
                    'make-put-auto-scaling-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-auto-scaling-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-id)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-auto-scaling-policy-output (:copier common-lisp:nil))
   (cluster-id common-lisp:nil :type
    (common-lisp:or cluster-id common-lisp:null))
   (instance-group-id common-lisp:nil :type
    (common-lisp:or instance-group-id common-lisp:null))
   (auto-scaling-policy common-lisp:nil :type
    (common-lisp:or auto-scaling-policy-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-auto-scaling-policy-output
                    'make-put-auto-scaling-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-auto-scaling-policy-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-id)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-auto-scaling-policy-input (:copier common-lisp:nil))
   (cluster-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":cluster-id is required"))
    :type (common-lisp:or cluster-id common-lisp:null))
   (instance-group-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":instance-group-id is required"))
    :type (common-lisp:or instance-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-auto-scaling-policy-input
                    'make-remove-auto-scaling-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-auto-scaling-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-group-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-auto-scaling-policy-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'remove-auto-scaling-policy-output
                    'make-remove-auto-scaling-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-auto-scaling-policy-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (remove-tags-input (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-input 'make-remove-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape remove-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (remove-tags-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-output 'make-remove-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape remove-tags-output))
   (common-lisp:append)))
(common-lisp:deftype repo-upgrade-on-boot () 'common-lisp:string)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (run-job-flow-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (log-uri common-lisp:nil :type (common-lisp:or xml-string common-lisp:null))
   (additional-info common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (ami-version common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (release-label common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (instances
    (common-lisp:error
     #A((22) common-lisp:base-char . ":instances is required"))
    :type (common-lisp:or job-flow-instances-config common-lisp:null))
   (steps common-lisp:nil :type
    (common-lisp:or step-config-list common-lisp:null))
   (bootstrap-actions common-lisp:nil :type
    (common-lisp:or bootstrap-action-config-list common-lisp:null))
   (supported-products common-lisp:nil :type
    (common-lisp:or supported-products-list common-lisp:null))
   (new-supported-products common-lisp:nil :type
    (common-lisp:or new-supported-products-list common-lisp:null))
   (applications common-lisp:nil :type
    (common-lisp:or application-list common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configuration-list common-lisp:null))
   (visible-to-all-users common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (job-flow-role common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (security-configuration common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (auto-scaling-role common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (scale-down-behavior common-lisp:nil :type
    (common-lisp:or scale-down-behavior common-lisp:null))
   (custom-ami-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (ebs-root-volume-size common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (repo-upgrade-on-boot common-lisp:nil :type
    (common-lisp:or repo-upgrade-on-boot common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'run-job-flow-input 'make-run-job-flow-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape run-job-flow-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "LogUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-uri)))
    (aws-sdk/generator/shape::to-query-params "AdditionalInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-info)))
    (aws-sdk/generator/shape::to-query-params "AmiVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ami-version)))
    (aws-sdk/generator/shape::to-query-params "ReleaseLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'release-label)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "Steps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'steps)))
    (aws-sdk/generator/shape::to-query-params "BootstrapActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bootstrap-actions)))
    (aws-sdk/generator/shape::to-query-params "SupportedProducts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-products)))
    (aws-sdk/generator/shape::to-query-params "NewSupportedProducts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-supported-products)))
    (aws-sdk/generator/shape::to-query-params "Applications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications)))
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "VisibleToAllUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'visible-to-all-users)))
    (aws-sdk/generator/shape::to-query-params "JobFlowRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-role)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "SecurityConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-configuration)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-role)))
    (aws-sdk/generator/shape::to-query-params "ScaleDownBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scale-down-behavior)))
    (aws-sdk/generator/shape::to-query-params "CustomAmiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-ami-id)))
    (aws-sdk/generator/shape::to-query-params "EbsRootVolumeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-root-volume-size)))
    (aws-sdk/generator/shape::to-query-params "RepoUpgradeOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repo-upgrade-on-boot))))))
(common-lisp:progn
 (common-lisp:defstruct (run-job-flow-output (:copier common-lisp:nil))
   (job-flow-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'run-job-flow-output 'make-run-job-flow-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape run-job-flow-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlowId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-id))))))
(common-lisp:deftype scale-down-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (scaling-action (:copier common-lisp:nil))
   (market common-lisp:nil :type (common-lisp:or market-type common-lisp:null))
   (simple-scaling-policy-configuration
    (common-lisp:error
     #A((48) common-lisp:base-char
        . ":simple-scaling-policy-configuration is required"))
    :type
    (common-lisp:or simple-scaling-policy-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scaling-action 'make-scaling-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Market"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'market)))
    (aws-sdk/generator/shape::to-query-params
     "SimpleScalingPolicyConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'simple-scaling-policy-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (scaling-constraints (:copier common-lisp:nil))
   (min-capacity
    (common-lisp:error
     #A((25) common-lisp:base-char . ":min-capacity is required"))
    :type (common-lisp:or integer common-lisp:null))
   (max-capacity
    (common-lisp:error
     #A((25) common-lisp:base-char . ":max-capacity is required"))
    :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scaling-constraints 'make-scaling-constraints))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-constraints))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MinCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-capacity)))
    (aws-sdk/generator/shape::to-query-params "MaxCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct (scaling-rule (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or scaling-action common-lisp:null))
   (trigger
    (common-lisp:error #A((20) common-lisp:base-char . ":trigger is required"))
    :type (common-lisp:or scaling-trigger common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scaling-rule 'make-scaling-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Trigger"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger))))))
(common-lisp:progn
 (common-lisp:deftype scaling-rule-list ()
   '(trivial-types:proper-list scaling-rule))
 (common-lisp:defun |make-scaling-rule-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scaling-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scaling-trigger (:copier common-lisp:nil))
   (cloud-watch-alarm-definition
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":cloud-watch-alarm-definition is required"))
    :type (common-lisp:or cloud-watch-alarm-definition common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scaling-trigger 'make-scaling-trigger))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-trigger))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CloudWatchAlarmDefinition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-alarm-definition))))))
(common-lisp:progn
 (common-lisp:defstruct
     (script-bootstrap-action-config (:copier common-lisp:nil))
   (path
    (common-lisp:error #A((17) common-lisp:base-char . ":path is required"))
    :type (common-lisp:or xml-string common-lisp:null))
   (args common-lisp:nil :type
    (common-lisp:or xml-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'script-bootstrap-action-config
                    'make-script-bootstrap-action-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          script-bootstrap-action-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "Args"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'args))))))
(common-lisp:progn
 (common-lisp:deftype security-configuration-list ()
   '(trivial-types:proper-list security-configuration-summary))
 (common-lisp:defun |make-security-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            security-configuration-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (security-configuration-summary (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or xml-string common-lisp:null))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-configuration-summary
                    'make-security-configuration-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          security-configuration-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time))))))
(common-lisp:progn
 (common-lisp:deftype security-groups-list ()
   '(trivial-types:proper-list xml-string-max-len256))
 (common-lisp:defun |make-security-groups-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len256))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (set-termination-protection-input (:copier common-lisp:nil))
   (job-flow-ids
    (common-lisp:error
     #A((25) common-lisp:base-char . ":job-flow-ids is required"))
    :type (common-lisp:or xml-string-list common-lisp:null))
   (termination-protected
    (common-lisp:error
     #A((34) common-lisp:base-char . ":termination-protected is required"))
    :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-termination-protection-input
                    'make-set-termination-protection-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-termination-protection-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlowIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-ids)))
    (aws-sdk/generator/shape::to-query-params "TerminationProtected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-protected))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-visible-to-all-users-input (:copier common-lisp:nil))
   (job-flow-ids
    (common-lisp:error
     #A((25) common-lisp:base-char . ":job-flow-ids is required"))
    :type (common-lisp:or xml-string-list common-lisp:null))
   (visible-to-all-users
    (common-lisp:error
     #A((33) common-lisp:base-char . ":visible-to-all-users is required"))
    :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-visible-to-all-users-input
                    'make-set-visible-to-all-users-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-visible-to-all-users-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlowIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-ids)))
    (aws-sdk/generator/shape::to-query-params "VisibleToAllUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'visible-to-all-users))))))
(common-lisp:progn
 (common-lisp:defstruct (shrink-policy (:copier common-lisp:nil))
   (decommission-timeout common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instance-resize-policy common-lisp:nil :type
    (common-lisp:or instance-resize-policy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'shrink-policy 'make-shrink-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape shrink-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DecommissionTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decommission-timeout)))
    (aws-sdk/generator/shape::to-query-params "InstanceResizePolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-resize-policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (simple-scaling-policy-configuration (:copier common-lisp:nil))
   (adjustment-type common-lisp:nil :type
    (common-lisp:or adjustment-type common-lisp:null))
   (scaling-adjustment
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scaling-adjustment is required"))
    :type (common-lisp:or integer common-lisp:null))
   (cool-down common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'simple-scaling-policy-configuration
                    'make-simple-scaling-policy-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          simple-scaling-policy-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AdjustmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'adjustment-type)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment)))
    (aws-sdk/generator/shape::to-query-params "CoolDown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cool-down))))))
(common-lisp:progn
 (common-lisp:defstruct
     (spot-provisioning-specification (:copier common-lisp:nil))
   (timeout-duration-minutes
    (common-lisp:error
     #A((37) common-lisp:base-char . ":timeout-duration-minutes is required"))
    :type (common-lisp:or whole-number common-lisp:null))
   (timeout-action
    (common-lisp:error
     #A((27) common-lisp:base-char . ":timeout-action is required"))
    :type (common-lisp:or spot-provisioning-timeout-action common-lisp:null))
   (block-duration-minutes common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'spot-provisioning-specification
                    'make-spot-provisioning-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          spot-provisioning-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TimeoutDurationMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-duration-minutes)))
    (aws-sdk/generator/shape::to-query-params "TimeoutAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-action)))
    (aws-sdk/generator/shape::to-query-params "BlockDurationMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'block-duration-minutes))))))
(common-lisp:deftype spot-provisioning-timeout-action () 'common-lisp:string)
(common-lisp:deftype statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (step (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or step-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (config common-lisp:nil :type
    (common-lisp:or hadoop-step-config common-lisp:null))
   (action-on-failure common-lisp:nil :type
    (common-lisp:or action-on-failure common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or step-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step 'make-step))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Config"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'config)))
    (aws-sdk/generator/shape::to-query-params "ActionOnFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-on-failure)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (step-config (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or xml-string-max-len256 common-lisp:null))
   (action-on-failure common-lisp:nil :type
    (common-lisp:or action-on-failure common-lisp:null))
   (hadoop-jar-step
    (common-lisp:error
     #A((28) common-lisp:base-char . ":hadoop-jar-step is required"))
    :type (common-lisp:or hadoop-jar-step-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-config 'make-step-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ActionOnFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-on-failure)))
    (aws-sdk/generator/shape::to-query-params "HadoopJarStep"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hadoop-jar-step))))))
(common-lisp:progn
 (common-lisp:deftype step-config-list ()
   '(trivial-types:proper-list step-config))
 (common-lisp:defun |make-step-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (step-detail (:copier common-lisp:nil))
   (step-config
    (common-lisp:error
     #A((24) common-lisp:base-char . ":step-config is required"))
    :type (common-lisp:or step-config common-lisp:null))
   (execution-status-detail
    (common-lisp:error
     #A((36) common-lisp:base-char . ":execution-status-detail is required"))
    :type (common-lisp:or step-execution-status-detail common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-detail 'make-step-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StepConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-config)))
    (aws-sdk/generator/shape::to-query-params "ExecutionStatusDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-status-detail))))))
(common-lisp:progn
 (common-lisp:deftype step-detail-list ()
   '(trivial-types:proper-list step-detail))
 (common-lisp:defun |make-step-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype step-execution-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (step-execution-status-detail (:copier common-lisp:nil))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or step-execution-state common-lisp:null))
   (creation-date-time
    (common-lisp:error
     #A((31) common-lisp:base-char . ":creation-date-time is required"))
    :type (common-lisp:or date common-lisp:null))
   (start-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (last-state-change-reason common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'step-execution-status-detail
                    'make-step-execution-status-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          step-execution-status-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "StartDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time)))
    (aws-sdk/generator/shape::to-query-params "LastStateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-state-change-reason))))))
(common-lisp:deftype step-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype step-ids-list ()
   '(trivial-types:proper-list xml-string-max-len256))
 (common-lisp:defun |make-step-ids-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len256))
   aws-sdk/generator/shape::members))
(common-lisp:deftype step-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (step-state-change-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or step-state-change-reason-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'step-state-change-reason 'make-step-state-change-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          step-state-change-reason))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype step-state-change-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype step-state-list ()
   '(trivial-types:proper-list step-state))
 (common-lisp:defun |make-step-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (step-status (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or step-state common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or step-state-change-reason common-lisp:null))
   (failure-details common-lisp:nil :type
    (common-lisp:or failure-details common-lisp:null))
   (timeline common-lisp:nil :type
    (common-lisp:or step-timeline common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-status 'make-step-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "FailureDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-details)))
    (aws-sdk/generator/shape::to-query-params "Timeline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeline))))))
(common-lisp:progn
 (common-lisp:defstruct (step-summary (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or step-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (config common-lisp:nil :type
    (common-lisp:or hadoop-step-config common-lisp:null))
   (action-on-failure common-lisp:nil :type
    (common-lisp:or action-on-failure common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or step-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-summary 'make-step-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Config"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'config)))
    (aws-sdk/generator/shape::to-query-params "ActionOnFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-on-failure)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype step-summary-list ()
   '(trivial-types:proper-list step-summary))
 (common-lisp:defun |make-step-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (step-timeline (:copier common-lisp:nil))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (start-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (end-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-timeline 'make-step-timeline))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-timeline))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "StartDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date-time)))
    (aws-sdk/generator/shape::to-query-params "EndDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date-time))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (string-map
     (:constructor |make-string-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (supported-product-config (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or xml-string-max-len256 common-lisp:null))
   (args common-lisp:nil :type
    (common-lisp:or xml-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'supported-product-config 'make-supported-product-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          supported-product-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Args"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'args))))))
(common-lisp:progn
 (common-lisp:deftype supported-products-list ()
   '(trivial-types:proper-list xml-string-max-len256))
 (common-lisp:defun |make-supported-products-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len256))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (terminate-job-flows-input (:copier common-lisp:nil))
   (job-flow-ids
    (common-lisp:error
     #A((25) common-lisp:base-char . ":job-flow-ids is required"))
    :type (common-lisp:or xml-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-job-flows-input
                    'make-terminate-job-flows-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-job-flows-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobFlowIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-flow-ids))))))
(common-lisp:deftype unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (volume-specification (:copier common-lisp:nil))
   (volume-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":volume-type is required"))
    :type (common-lisp:or string common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (size-in-gb
    (common-lisp:error
     #A((23) common-lisp:base-char . ":size-in-gb is required"))
    :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-specification 'make-volume-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape volume-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-type)))
    (aws-sdk/generator/shape::to-query-params "Iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops)))
    (aws-sdk/generator/shape::to-query-params "SizeInGB"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-in-gb))))))
(common-lisp:deftype whole-number () 'common-lisp:integer)
(common-lisp:deftype xml-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype xml-string-list ()
   '(trivial-types:proper-list xml-string))
 (common-lisp:defun |make-xml-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype xml-string-max-len256 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype xml-string-max-len256list ()
   '(trivial-types:proper-list xml-string-max-len256))
 (common-lisp:defun |make-xml-string-max-len256list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len256))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun add-instance-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id instance-fleet)
   (common-lisp:declare (common-lisp:ignorable cluster-id instance-fleet))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-instance-fleet-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddInstanceFleet")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddInstanceFleetOutput" common-lisp:nil)))
 (common-lisp:export 'add-instance-fleet))
(common-lisp:progn
 (common-lisp:defun add-instance-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-groups job-flow-id)
   (common-lisp:declare (common-lisp:ignorable instance-groups job-flow-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-instance-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddInstanceGroups")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddInstanceGroupsOutput" common-lisp:nil)))
 (common-lisp:export 'add-instance-groups))
(common-lisp:progn
 (common-lisp:defun add-job-flow-steps
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-flow-id steps)
   (common-lisp:declare (common-lisp:ignorable job-flow-id steps))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-job-flow-steps-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddJobFlowSteps")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddJobFlowStepsOutput" common-lisp:nil)))
 (common-lisp:export 'add-job-flow-steps))
(common-lisp:progn
 (common-lisp:defun add-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tags)
   (common-lisp:declare (common-lisp:ignorable resource-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddTags")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddTagsOutput" common-lisp:nil)))
 (common-lisp:export 'add-tags))
(common-lisp:progn
 (common-lisp:defun cancel-steps
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id step-ids)
   (common-lisp:declare (common-lisp:ignorable cluster-id step-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-steps-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelSteps")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelStepsOutput" common-lisp:nil)))
 (common-lisp:export 'cancel-steps))
(common-lisp:progn
 (common-lisp:defun create-security-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name security-configuration)
   (common-lisp:declare (common-lisp:ignorable name security-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-security-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSecurityConfiguration")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSecurityConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'create-security-configuration))
(common-lisp:progn
 (common-lisp:defun delete-security-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-security-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSecurityConfiguration")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSecurityConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'delete-security-configuration))
(common-lisp:progn
 (common-lisp:defun describe-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id)
   (common-lisp:declare (common-lisp:ignorable cluster-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-cluster-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeCluster")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeClusterOutput" common-lisp:nil)))
 (common-lisp:export 'describe-cluster))
(common-lisp:progn
 (common-lisp:defun describe-job-flows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key created-after created-before job-flow-ids
                     job-flow-states)
   (common-lisp:declare
    (common-lisp:ignorable created-after created-before job-flow-ids
     job-flow-states))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-job-flows-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeJobFlows")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeJobFlowsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-job-flows))
(common-lisp:progn
 (common-lisp:defun describe-security-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-security-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeSecurityConfiguration")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSecurityConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'describe-security-configuration))
(common-lisp:progn
 (common-lisp:defun describe-step
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id step-id)
   (common-lisp:declare (common-lisp:ignorable cluster-id step-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-step-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeStep")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeStepOutput" common-lisp:nil)))
 (common-lisp:export 'describe-step))
(common-lisp:progn
 (common-lisp:defun list-bootstrap-actions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id marker)
   (common-lisp:declare (common-lisp:ignorable cluster-id marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-bootstrap-actions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListBootstrapActions")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBootstrapActionsOutput" common-lisp:nil)))
 (common-lisp:export 'list-bootstrap-actions))
(common-lisp:progn
 (common-lisp:defun list-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key created-after created-before
                     cluster-states marker)
   (common-lisp:declare
    (common-lisp:ignorable created-after created-before cluster-states marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-clusters-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListClusters")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListClustersOutput" common-lisp:nil)))
 (common-lisp:export 'list-clusters))
(common-lisp:progn
 (common-lisp:defun list-instance-fleets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id marker)
   (common-lisp:declare (common-lisp:ignorable cluster-id marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-instance-fleets-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListInstanceFleets")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListInstanceFleetsOutput" common-lisp:nil)))
 (common-lisp:export 'list-instance-fleets))
(common-lisp:progn
 (common-lisp:defun list-instance-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id marker)
   (common-lisp:declare (common-lisp:ignorable cluster-id marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-instance-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListInstanceGroups")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListInstanceGroupsOutput" common-lisp:nil)))
 (common-lisp:export 'list-instance-groups))
(common-lisp:progn
 (common-lisp:defun list-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id instance-group-id
                     instance-group-types instance-fleet-id instance-fleet-type
                     instance-states marker)
   (common-lisp:declare
    (common-lisp:ignorable cluster-id instance-group-id instance-group-types
     instance-fleet-id instance-fleet-type instance-states marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-instances-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListInstances")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListInstancesOutput" common-lisp:nil)))
 (common-lisp:export 'list-instances))
(common-lisp:progn
 (common-lisp:defun list-security-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker)
   (common-lisp:declare (common-lisp:ignorable marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-security-configurations-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListSecurityConfigurations")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListSecurityConfigurationsOutput" common-lisp:nil)))
 (common-lisp:export 'list-security-configurations))
(common-lisp:progn
 (common-lisp:defun list-steps
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id step-states step-ids marker)
   (common-lisp:declare
    (common-lisp:ignorable cluster-id step-states step-ids marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-steps-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListSteps")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListStepsOutput" common-lisp:nil)))
 (common-lisp:export 'list-steps))
(common-lisp:progn
 (common-lisp:defun modify-instance-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id instance-fleet)
   (common-lisp:declare (common-lisp:ignorable cluster-id instance-fleet))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-instance-fleet-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyInstanceFleet")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-instance-fleet))
(common-lisp:progn
 (common-lisp:defun modify-instance-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id instance-groups)
   (common-lisp:declare (common-lisp:ignorable cluster-id instance-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-instance-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyInstanceGroups")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-instance-groups))
(common-lisp:progn
 (common-lisp:defun put-auto-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id instance-group-id
                     auto-scaling-policy)
   (common-lisp:declare
    (common-lisp:ignorable cluster-id instance-group-id auto-scaling-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-auto-scaling-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutAutoScalingPolicy")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutAutoScalingPolicyOutput" common-lisp:nil)))
 (common-lisp:export 'put-auto-scaling-policy))
(common-lisp:progn
 (common-lisp:defun remove-auto-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-id instance-group-id)
   (common-lisp:declare (common-lisp:ignorable cluster-id instance-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-auto-scaling-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveAutoScalingPolicy")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveAutoScalingPolicyOutput" common-lisp:nil)))
 (common-lisp:export 'remove-auto-scaling-policy))
(common-lisp:progn
 (common-lisp:defun remove-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-id tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveTags")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveTagsOutput" common-lisp:nil)))
 (common-lisp:export 'remove-tags))
(common-lisp:progn
 (common-lisp:defun run-job-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name log-uri additional-info ami-version
                     release-label instances steps bootstrap-actions
                     supported-products new-supported-products applications
                     configurations visible-to-all-users job-flow-role
                     service-role tags security-configuration auto-scaling-role
                     scale-down-behavior custom-ami-id ebs-root-volume-size
                     repo-upgrade-on-boot)
   (common-lisp:declare
    (common-lisp:ignorable name log-uri additional-info ami-version
     release-label instances steps bootstrap-actions supported-products
     new-supported-products applications configurations visible-to-all-users
     job-flow-role service-role tags security-configuration auto-scaling-role
     scale-down-behavior custom-ami-id ebs-root-volume-size
     repo-upgrade-on-boot))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-run-job-flow-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RunJobFlow")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RunJobFlowOutput" common-lisp:nil)))
 (common-lisp:export 'run-job-flow))
(common-lisp:progn
 (common-lisp:defun set-termination-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-flow-ids termination-protected)
   (common-lisp:declare
    (common-lisp:ignorable job-flow-ids termination-protected))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-termination-protection-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetTerminationProtection")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-termination-protection))
(common-lisp:progn
 (common-lisp:defun set-visible-to-all-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-flow-ids visible-to-all-users)
   (common-lisp:declare
    (common-lisp:ignorable job-flow-ids visible-to-all-users))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-visible-to-all-users-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetVisibleToAllUsers")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-visible-to-all-users))
(common-lisp:progn
 (common-lisp:defun terminate-job-flows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-flow-ids)
   (common-lisp:declare (common-lisp:ignorable job-flow-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-terminate-job-flows-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticmapreduce")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TerminateJobFlows")
                                  ("Version" ,@"2009-03-31"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'terminate-job-flows))