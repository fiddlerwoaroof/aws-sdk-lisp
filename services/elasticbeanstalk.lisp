;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/elasticbeanstalk
  (:use)
  (:nicknames #:aws/elasticbeanstalk)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/elasticbeanstalk)

(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (abort-environment-update-message (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-environment-update-message
                    'make-abort-environment-update-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          abort-environment-update-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name))))))
(common-lisp:deftype abortable-operation-in-progress () 'common-lisp:boolean)
(common-lisp:deftype action-history-status () 'common-lisp:string)
(common-lisp:deftype action-status () 'common-lisp:string)
(common-lisp:deftype action-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (application-description (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (date-created common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null))
   (date-updated common-lisp:nil :type
    (common-lisp:or update-date common-lisp:null))
   (versions common-lisp:nil :type
    (common-lisp:or version-labels-list common-lisp:null))
   (configuration-templates common-lisp:nil :type
    (common-lisp:or configuration-template-names-list common-lisp:null))
   (resource-lifecycle-config common-lisp:nil :type
    (common-lisp:or application-resource-lifecycle-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-description 'make-application-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DateCreated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-created)))
    (aws-sdk/generator/shape::to-query-params "DateUpdated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-updated)))
    (aws-sdk/generator/shape::to-query-params "Versions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'versions)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-templates)))
    (aws-sdk/generator/shape::to-query-params "ResourceLifecycleConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-lifecycle-config))))))
(common-lisp:progn
 (common-lisp:deftype application-description-list ()
   '(trivial-types:proper-list application-description))
 (common-lisp:defun |make-application-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (application-description-message (:copier common-lisp:nil))
   (application common-lisp:nil :type
    (common-lisp:or application-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-description-message
                    'make-application-description-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-description-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Application"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application))))))
(common-lisp:progn
 (common-lisp:defstruct
     (application-descriptions-message (:copier common-lisp:nil))
   (applications common-lisp:nil :type
    (common-lisp:or application-description-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-descriptions-message
                    'make-application-descriptions-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-descriptions-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Applications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications))))))
(common-lisp:progn
 (common-lisp:defstruct (application-metrics (:copier common-lisp:nil))
   (duration common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (request-count common-lisp:nil :type
    (common-lisp:or request-count common-lisp:null))
   (status-codes common-lisp:nil :type
    (common-lisp:or status-codes common-lisp:null))
   (latency common-lisp:nil :type (common-lisp:or latency common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-metrics 'make-application-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application-metrics))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "RequestCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-count)))
    (aws-sdk/generator/shape::to-query-params "StatusCodes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-codes)))
    (aws-sdk/generator/shape::to-query-params "Latency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latency))))))
(common-lisp:deftype application-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-names-list ()
   '(trivial-types:proper-list application-name))
 (common-lisp:defun |make-application-names-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (application-resource-lifecycle-config (:copier common-lisp:nil))
   (service-role common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (version-lifecycle-config common-lisp:nil :type
    (common-lisp:or application-version-lifecycle-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-resource-lifecycle-config
                    'make-application-resource-lifecycle-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-resource-lifecycle-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "VersionLifecycleConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-lifecycle-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (application-resource-lifecycle-description-message
      (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (resource-lifecycle-config common-lisp:nil :type
    (common-lisp:or application-resource-lifecycle-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-resource-lifecycle-description-message
                    'make-application-resource-lifecycle-description-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-resource-lifecycle-description-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "ResourceLifecycleConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-lifecycle-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (application-version-description (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (version-label common-lisp:nil :type
    (common-lisp:or version-label common-lisp:null))
   (source-build-information common-lisp:nil :type
    (common-lisp:or source-build-information common-lisp:null))
   (build-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-bundle common-lisp:nil :type
    (common-lisp:or s3location common-lisp:null))
   (date-created common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null))
   (date-updated common-lisp:nil :type
    (common-lisp:or update-date common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or application-version-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-version-description
                    'make-application-version-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-version-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "SourceBuildInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-build-information)))
    (aws-sdk/generator/shape::to-query-params "BuildArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-arn)))
    (aws-sdk/generator/shape::to-query-params "SourceBundle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-bundle)))
    (aws-sdk/generator/shape::to-query-params "DateCreated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-created)))
    (aws-sdk/generator/shape::to-query-params "DateUpdated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-updated)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype application-version-description-list ()
   '(trivial-types:proper-list application-version-description))
 (common-lisp:defun |make-application-version-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            application-version-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (application-version-description-message (:copier common-lisp:nil))
   (application-version common-lisp:nil :type
    (common-lisp:or application-version-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-version-description-message
                    'make-application-version-description-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-version-description-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (application-version-descriptions-message (:copier common-lisp:nil))
   (application-versions common-lisp:nil :type
    (common-lisp:or application-version-description-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-version-descriptions-message
                    'make-application-version-descriptions-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-version-descriptions-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-versions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (application-version-lifecycle-config (:copier common-lisp:nil))
   (max-count-rule common-lisp:nil :type
    (common-lisp:or max-count-rule common-lisp:null))
   (max-age-rule common-lisp:nil :type
    (common-lisp:or max-age-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-version-lifecycle-config
                    'make-application-version-lifecycle-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-version-lifecycle-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxCountRule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-count-rule)))
    (aws-sdk/generator/shape::to-query-params "MaxAgeRule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-age-rule))))))
(common-lisp:deftype application-version-proccess () 'common-lisp:boolean)
(common-lisp:deftype application-version-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (apply-environment-managed-action-request (:copier common-lisp:nil))
   (environment-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (action-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":action-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apply-environment-managed-action-request
                    'make-apply-environment-managed-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          apply-environment-managed-action-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "ActionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (apply-environment-managed-action-result (:copier common-lisp:nil))
   (action-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (action-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (action-type common-lisp:nil :type
    (common-lisp:or action-type common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apply-environment-managed-action-result
                    'make-apply-environment-managed-action-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          apply-environment-managed-action-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-id)))
    (aws-sdk/generator/shape::to-query-params "ActionDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-description)))
    (aws-sdk/generator/shape::to-query-params "ActionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-type)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:deftype auto-create-application () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-group (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group 'make-auto-scaling-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape auto-scaling-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-list ()
   '(trivial-types:proper-list auto-scaling-group))
 (common-lisp:defun |make-auto-scaling-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype available-solution-stack-details-list ()
   '(trivial-types:proper-list solution-stack-description))
 (common-lisp:defun |make-available-solution-stack-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            solution-stack-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype available-solution-stack-names-list ()
   '(trivial-types:proper-list solution-stack-name))
 (common-lisp:defun |make-available-solution-stack-names-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list solution-stack-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boxed-boolean () 'common-lisp:boolean)
(common-lisp:deftype boxed-int () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (build-configuration (:copier common-lisp:nil))
   (artifact-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (code-build-service-role
    (common-lisp:error
     #A((36) common-lisp:base-char . ":code-build-service-role is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (compute-type common-lisp:nil :type
    (common-lisp:or compute-type common-lisp:null))
   (image
    (common-lisp:error #A((18) common-lisp:base-char . ":image is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (timeout-in-minutes common-lisp:nil :type
    (common-lisp:or boxed-int common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'build-configuration 'make-build-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape build-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ArtifactName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artifact-name)))
    (aws-sdk/generator/shape::to-query-params "CodeBuildServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-build-service-role)))
    (aws-sdk/generator/shape::to-query-params "ComputeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-type)))
    (aws-sdk/generator/shape::to-query-params "Image"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image)))
    (aws-sdk/generator/shape::to-query-params "TimeoutInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-minutes))))))
(common-lisp:progn
 (common-lisp:defstruct (builder (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'builder 'make-builder))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape builder))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (cpuutilization (:copier common-lisp:nil))
   (user common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (nice common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (system common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (idle common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (iowait common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (irq common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (soft-irq common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cpuutilization 'make-cpuutilization))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cpuutilization))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user)))
    (aws-sdk/generator/shape::to-query-params "Nice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'nice)))
    (aws-sdk/generator/shape::to-query-params "System"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'system)))
    (aws-sdk/generator/shape::to-query-params "Idle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idle)))
    (aws-sdk/generator/shape::to-query-params "IOWait"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iowait)))
    (aws-sdk/generator/shape::to-query-params "IRQ"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'irq)))
    (aws-sdk/generator/shape::to-query-params "SoftIRQ"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'soft-irq))))))
(common-lisp:deftype cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype causes () '(trivial-types:proper-list cause))
 (common-lisp:defun |make-causes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cause))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (check-dnsavailability-message (:copier common-lisp:nil))
   (cnameprefix
    (common-lisp:error
     #A((24) common-lisp:base-char . ":cnameprefix is required"))
    :type (common-lisp:or dnscname-prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'check-dnsavailability-message
                    'make-check-dnsavailability-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          check-dnsavailability-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CNAMEPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cnameprefix))))))
(common-lisp:progn
 (common-lisp:defstruct
     (check-dnsavailability-result-message (:copier common-lisp:nil))
   (available common-lisp:nil :type
    (common-lisp:or cname-availability common-lisp:null))
   (fully-qualified-cname common-lisp:nil :type
    (common-lisp:or dnscname common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'check-dnsavailability-result-message
                    'make-check-dnsavailability-result-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          check-dnsavailability-result-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Available"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'available)))
    (aws-sdk/generator/shape::to-query-params "FullyQualifiedCNAME"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fully-qualified-cname))))))
(common-lisp:deftype cname-availability () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (code-build-not-in-service-region-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'code-build-not-in-service-region-exception
                    'make-code-build-not-in-service-region-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          code-build-not-in-service-region-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (compose-environments-message (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (group-name common-lisp:nil :type
    (common-lisp:or group-name common-lisp:null))
   (version-labels common-lisp:nil :type
    (common-lisp:or version-labels common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compose-environments-message
                    'make-compose-environments-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compose-environments-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-labels))))))
(common-lisp:deftype compute-type () 'common-lisp:string)
(common-lisp:deftype configuration-deployment-status () 'common-lisp:string)
(common-lisp:deftype configuration-option-default-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-option-description (:copier common-lisp:nil))
   (namespace common-lisp:nil :type
    (common-lisp:or option-namespace common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or configuration-option-name common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or configuration-option-default-value common-lisp:null))
   (change-severity common-lisp:nil :type
    (common-lisp:or configuration-option-severity common-lisp:null))
   (user-defined common-lisp:nil :type
    (common-lisp:or user-defined-option common-lisp:null))
   (value-type common-lisp:nil :type
    (common-lisp:or configuration-option-value-type common-lisp:null))
   (value-options common-lisp:nil :type
    (common-lisp:or configuration-option-possible-values common-lisp:null))
   (min-value common-lisp:nil :type
    (common-lisp:or option-restriction-min-value common-lisp:null))
   (max-value common-lisp:nil :type
    (common-lisp:or option-restriction-max-value common-lisp:null))
   (max-length common-lisp:nil :type
    (common-lisp:or option-restriction-max-length common-lisp:null))
   (regex common-lisp:nil :type
    (common-lisp:or option-restriction-regex common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-option-description
                    'make-configuration-option-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-option-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Namespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "ChangeSeverity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-severity)))
    (aws-sdk/generator/shape::to-query-params "UserDefined"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-defined)))
    (aws-sdk/generator/shape::to-query-params "ValueType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value-type)))
    (aws-sdk/generator/shape::to-query-params "ValueOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value-options)))
    (aws-sdk/generator/shape::to-query-params "MinValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-value)))
    (aws-sdk/generator/shape::to-query-params "MaxValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-value)))
    (aws-sdk/generator/shape::to-query-params "MaxLength"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-length)))
    (aws-sdk/generator/shape::to-query-params "Regex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'regex))))))
(common-lisp:progn
 (common-lisp:deftype configuration-option-descriptions-list ()
   '(trivial-types:proper-list configuration-option-description))
 (common-lisp:defun |make-configuration-option-descriptions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configuration-option-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype configuration-option-name () 'common-lisp:string)
(common-lisp:deftype configuration-option-possible-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-option-possible-values ()
   '(trivial-types:proper-list configuration-option-possible-value))
 (common-lisp:defun |make-configuration-option-possible-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configuration-option-possible-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-option-setting (:copier common-lisp:nil))
   (resource-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (namespace common-lisp:nil :type
    (common-lisp:or option-namespace common-lisp:null))
   (option-name common-lisp:nil :type
    (common-lisp:or configuration-option-name common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or configuration-option-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-option-setting
                    'make-configuration-option-setting))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-option-setting))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-name)))
    (aws-sdk/generator/shape::to-query-params "Namespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace)))
    (aws-sdk/generator/shape::to-query-params "OptionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype configuration-option-settings-list ()
   '(trivial-types:proper-list configuration-option-setting))
 (common-lisp:defun |make-configuration-option-settings-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configuration-option-setting))
   aws-sdk/generator/shape::members))
(common-lisp:deftype configuration-option-severity () 'common-lisp:string)
(common-lisp:deftype configuration-option-value () 'common-lisp:string)
(common-lisp:deftype configuration-option-value-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-options-description (:copier common-lisp:nil))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (options common-lisp:nil :type
    (common-lisp:or configuration-option-descriptions-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-options-description
                    'make-configuration-options-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-options-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options))))))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-settings-description (:copier common-lisp:nil))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or configuration-deployment-status common-lisp:null))
   (date-created common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null))
   (date-updated common-lisp:nil :type
    (common-lisp:or update-date common-lisp:null))
   (option-settings common-lisp:nil :type
    (common-lisp:or configuration-option-settings-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-settings-description
                    'make-configuration-settings-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-settings-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "DeploymentStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-status)))
    (aws-sdk/generator/shape::to-query-params "DateCreated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-created)))
    (aws-sdk/generator/shape::to-query-params "DateUpdated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-updated)))
    (aws-sdk/generator/shape::to-query-params "OptionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-settings))))))
(common-lisp:progn
 (common-lisp:deftype configuration-settings-description-list ()
   '(trivial-types:proper-list configuration-settings-description))
 (common-lisp:defun |make-configuration-settings-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configuration-settings-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-settings-descriptions (:copier common-lisp:nil))
   (configuration-settings common-lisp:nil :type
    (common-lisp:or configuration-settings-description-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-settings-descriptions
                    'make-configuration-settings-descriptions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-settings-descriptions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-settings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-settings-validation-messages (:copier common-lisp:nil))
   (messages common-lisp:nil :type
    (common-lisp:or validation-messages-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-settings-validation-messages
                    'make-configuration-settings-validation-messages))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-settings-validation-messages))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Messages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'messages))))))
(common-lisp:deftype configuration-template-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-template-names-list ()
   '(trivial-types:proper-list configuration-template-name))
 (common-lisp:defun |make-configuration-template-names-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configuration-template-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-application-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (resource-lifecycle-config common-lisp:nil :type
    (common-lisp:or application-resource-lifecycle-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-message
                    'make-create-application-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ResourceLifecycleConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-lifecycle-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-application-version-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (version-label
    (common-lisp:error
     #A((26) common-lisp:base-char . ":version-label is required"))
    :type (common-lisp:or version-label common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (source-build-information common-lisp:nil :type
    (common-lisp:or source-build-information common-lisp:null))
   (source-bundle common-lisp:nil :type
    (common-lisp:or s3location common-lisp:null))
   (build-configuration common-lisp:nil :type
    (common-lisp:or build-configuration common-lisp:null))
   (auto-create-application common-lisp:nil :type
    (common-lisp:or auto-create-application common-lisp:null))
   (process common-lisp:nil :type
    (common-lisp:or application-version-proccess common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-version-message
                    'make-create-application-version-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-version-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "SourceBuildInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-build-information)))
    (aws-sdk/generator/shape::to-query-params "SourceBundle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-bundle)))
    (aws-sdk/generator/shape::to-query-params "BuildConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-configuration)))
    (aws-sdk/generator/shape::to-query-params "AutoCreateApplication"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-create-application)))
    (aws-sdk/generator/shape::to-query-params "Process"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'process))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-template-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (template-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":template-name is required"))
    :type (common-lisp:or configuration-template-name common-lisp:null))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (source-configuration common-lisp:nil :type
    (common-lisp:or source-configuration common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (option-settings common-lisp:nil :type
    (common-lisp:or configuration-option-settings-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-template-message
                    'make-create-configuration-template-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-configuration-template-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "SourceConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-configuration)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "OptionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-settings))))))
(common-lisp:progn
 (common-lisp:defstruct (create-environment-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (group-name common-lisp:nil :type
    (common-lisp:or group-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (cnameprefix common-lisp:nil :type
    (common-lisp:or dnscname-prefix common-lisp:null))
   (tier common-lisp:nil :type
    (common-lisp:or environment-tier common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (version-label common-lisp:nil :type
    (common-lisp:or version-label common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (option-settings common-lisp:nil :type
    (common-lisp:or configuration-option-settings-list common-lisp:null))
   (options-to-remove common-lisp:nil :type
    (common-lisp:or options-specifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-environment-message
                    'make-create-environment-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-environment-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "CNAMEPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cnameprefix)))
    (aws-sdk/generator/shape::to-query-params "Tier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tier)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "OptionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-settings)))
    (aws-sdk/generator/shape::to-query-params "OptionsToRemove"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options-to-remove))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-platform-version-request (:copier common-lisp:nil))
   (platform-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":platform-name is required"))
    :type (common-lisp:or platform-name common-lisp:null))
   (platform-version
    (common-lisp:error
     #A((29) common-lisp:base-char . ":platform-version is required"))
    :type (common-lisp:or platform-version common-lisp:null))
   (platform-definition-bundle
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":platform-definition-bundle is required"))
    :type (common-lisp:or s3location common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (option-settings common-lisp:nil :type
    (common-lisp:or configuration-option-settings-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-platform-version-request
                    'make-create-platform-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-platform-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-version)))
    (aws-sdk/generator/shape::to-query-params "PlatformDefinitionBundle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-definition-bundle)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "OptionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-settings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-platform-version-result (:copier common-lisp:nil))
   (platform-summary common-lisp:nil :type
    (common-lisp:or platform-summary common-lisp:null))
   (builder common-lisp:nil :type (common-lisp:or builder common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-platform-version-result
                    'make-create-platform-version-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-platform-version-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-summary)))
    (aws-sdk/generator/shape::to-query-params "Builder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'builder))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-storage-location-result-message (:copier common-lisp:nil))
   (s3bucket common-lisp:nil :type (common-lisp:or s3bucket common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-storage-location-result-message
                    'make-create-storage-location-result-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-storage-location-result-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket))))))
(common-lisp:deftype creation-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (custom-ami (:copier common-lisp:nil))
   (virtualization-type common-lisp:nil :type
    (common-lisp:or virtualization-type common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or image-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'custom-ami 'make-custom-ami))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape custom-ami))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VirtualizationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'virtualization-type)))
    (aws-sdk/generator/shape::to-query-params "ImageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-id))))))
(common-lisp:progn
 (common-lisp:deftype custom-ami-list ()
   '(trivial-types:proper-list custom-ami))
 (common-lisp:defun |make-custom-ami-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-ami))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dnscname () 'common-lisp:string)
(common-lisp:deftype dnscname-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-application-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (terminate-env-by-force common-lisp:nil :type
    (common-lisp:or terminate-env-force common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-message
                    'make-delete-application-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TerminateEnvByForce"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'terminate-env-by-force))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-version-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (version-label
    (common-lisp:error
     #A((26) common-lisp:base-char . ":version-label is required"))
    :type (common-lisp:or version-label common-lisp:null))
   (delete-source-bundle common-lisp:nil :type
    (common-lisp:or delete-source-bundle common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-version-message
                    'make-delete-application-version-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-version-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "DeleteSourceBundle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-source-bundle))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-template-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (template-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":template-name is required"))
    :type (common-lisp:or configuration-template-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-template-message
                    'make-delete-configuration-template-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-configuration-template-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-environment-configuration-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (environment-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":environment-name is required"))
    :type (common-lisp:or environment-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-environment-configuration-message
                    'make-delete-environment-configuration-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-environment-configuration-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-platform-version-request (:copier common-lisp:nil))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-platform-version-request
                    'make-delete-platform-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-platform-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-platform-version-result (:copier common-lisp:nil))
   (platform-summary common-lisp:nil :type
    (common-lisp:or platform-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-platform-version-result
                    'make-delete-platform-version-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-platform-version-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-summary))))))
(common-lisp:deftype delete-source-bundle () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (deployment (:copier common-lisp:nil))
   (version-label common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deployment-time common-lisp:nil :type
    (common-lisp:or deployment-timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "DeploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "DeploymentTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-time))))))
(common-lisp:deftype deployment-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-versions-message (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (version-labels common-lisp:nil :type
    (common-lisp:or version-labels-list common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-versions-message
                    'make-describe-application-versions-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-application-versions-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-labels)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-applications-message (:copier common-lisp:nil))
   (application-names common-lisp:nil :type
    (common-lisp:or application-names-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-applications-message
                    'make-describe-applications-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-applications-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-options-message (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (options common-lisp:nil :type
    (common-lisp:or options-specifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-options-message
                    'make-describe-configuration-options-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-configuration-options-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "Options"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-settings-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-settings-message
                    'make-describe-configuration-settings-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-configuration-settings-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environment-health-request (:copier common-lisp:nil))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (attribute-names common-lisp:nil :type
    (common-lisp:or environment-health-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-health-request
                    'make-describe-environment-health-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environment-health-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "AttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environment-health-result (:copier common-lisp:nil))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (health-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or environment-health common-lisp:null))
   (color common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (causes common-lisp:nil :type (common-lisp:or causes common-lisp:null))
   (application-metrics common-lisp:nil :type
    (common-lisp:or application-metrics common-lisp:null))
   (instances-health common-lisp:nil :type
    (common-lisp:or instance-health-summary common-lisp:null))
   (refreshed-at common-lisp:nil :type
    (common-lisp:or refreshed-at common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-health-result
                    'make-describe-environment-health-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environment-health-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "HealthStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-status)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Color"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'color)))
    (aws-sdk/generator/shape::to-query-params "Causes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'causes)))
    (aws-sdk/generator/shape::to-query-params "ApplicationMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-metrics)))
    (aws-sdk/generator/shape::to-query-params "InstancesHealth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-health)))
    (aws-sdk/generator/shape::to-query-params "RefreshedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'refreshed-at))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environment-managed-action-history-request
      (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-items common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-managed-action-history-request
                    'make-describe-environment-managed-action-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environment-managed-action-history-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environment-managed-action-history-result
      (:copier common-lisp:nil))
   (managed-action-history-items common-lisp:nil :type
    (common-lisp:or managed-action-history-items common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-managed-action-history-result
                    'make-describe-environment-managed-action-history-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environment-managed-action-history-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ManagedActionHistoryItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'managed-action-history-items)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environment-managed-actions-request (:copier common-lisp:nil))
   (environment-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or action-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-managed-actions-request
                    'make-describe-environment-managed-actions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environment-managed-actions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environment-managed-actions-result (:copier common-lisp:nil))
   (managed-actions common-lisp:nil :type
    (common-lisp:or managed-actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-managed-actions-result
                    'make-describe-environment-managed-actions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environment-managed-actions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ManagedActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'managed-actions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environment-resources-message (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-resources-message
                    'make-describe-environment-resources-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environment-resources-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-environments-message (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (version-label common-lisp:nil :type
    (common-lisp:or version-label common-lisp:null))
   (environment-ids common-lisp:nil :type
    (common-lisp:or environment-id-list common-lisp:null))
   (environment-names common-lisp:nil :type
    (common-lisp:or environment-names-list common-lisp:null))
   (include-deleted common-lisp:nil :type
    (common-lisp:or include-deleted common-lisp:null))
   (included-deleted-back-to common-lisp:nil :type
    (common-lisp:or include-deleted-back-to common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-environments-message
                    'make-describe-environments-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-environments-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-ids)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-names)))
    (aws-sdk/generator/shape::to-query-params "IncludeDeleted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-deleted)))
    (aws-sdk/generator/shape::to-query-params "IncludedDeletedBackTo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'included-deleted-back-to)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-events-message (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (version-label common-lisp:nil :type
    (common-lisp:or version-label common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or request-id common-lisp:null))
   (severity common-lisp:nil :type
    (common-lisp:or event-severity common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or time-filter-start common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or time-filter-end common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-events-message 'make-describe-events-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-events-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "RequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id)))
    (aws-sdk/generator/shape::to-query-params "Severity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instances-health-request (:copier common-lisp:nil))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (attribute-names common-lisp:nil :type
    (common-lisp:or instances-health-attributes common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instances-health-request
                    'make-describe-instances-health-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instances-health-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "AttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instances-health-result (:copier common-lisp:nil))
   (instance-health-list common-lisp:nil :type
    (common-lisp:or instance-health-list common-lisp:null))
   (refreshed-at common-lisp:nil :type
    (common-lisp:or refreshed-at common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instances-health-result
                    'make-describe-instances-health-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instances-health-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceHealthList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-health-list)))
    (aws-sdk/generator/shape::to-query-params "RefreshedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'refreshed-at)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-platform-version-request (:copier common-lisp:nil))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-platform-version-request
                    'make-describe-platform-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-platform-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-platform-version-result (:copier common-lisp:nil))
   (platform-description common-lisp:nil :type
    (common-lisp:or platform-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-platform-version-result
                    'make-describe-platform-version-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-platform-version-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-description))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype ec2instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (elastic-beanstalk-service-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'elastic-beanstalk-service-exception
                    'make-elastic-beanstalk-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          elastic-beanstalk-service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype endpoint-url () 'common-lisp:string)
(common-lisp:deftype environment-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (environment-description (:copier common-lisp:nil))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (version-label common-lisp:nil :type
    (common-lisp:or version-label common-lisp:null))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (endpoint-url common-lisp:nil :type
    (common-lisp:or endpoint-url common-lisp:null))
   (cname common-lisp:nil :type (common-lisp:or dnscname common-lisp:null))
   (date-created common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null))
   (date-updated common-lisp:nil :type
    (common-lisp:or update-date common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or environment-status common-lisp:null))
   (abortable-operation-in-progress common-lisp:nil :type
    (common-lisp:or abortable-operation-in-progress common-lisp:null))
   (health common-lisp:nil :type
    (common-lisp:or environment-health common-lisp:null))
   (health-status common-lisp:nil :type
    (common-lisp:or environment-health-status common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or environment-resources-description common-lisp:null))
   (tier common-lisp:nil :type
    (common-lisp:or environment-tier common-lisp:null))
   (environment-links common-lisp:nil :type
    (common-lisp:or environment-links common-lisp:null))
   (environment-arn common-lisp:nil :type
    (common-lisp:or environment-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-description 'make-environment-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          environment-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "EndpointURL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-url)))
    (aws-sdk/generator/shape::to-query-params "CNAME"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cname)))
    (aws-sdk/generator/shape::to-query-params "DateCreated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-created)))
    (aws-sdk/generator/shape::to-query-params "DateUpdated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-updated)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "AbortableOperationInProgress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abortable-operation-in-progress)))
    (aws-sdk/generator/shape::to-query-params "Health"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health)))
    (aws-sdk/generator/shape::to-query-params "HealthStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-status)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "Tier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tier)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentLinks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-links)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-arn))))))
(common-lisp:progn
 (common-lisp:deftype environment-descriptions-list ()
   '(trivial-types:proper-list environment-description))
 (common-lisp:defun |make-environment-descriptions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (environment-descriptions-message (:copier common-lisp:nil))
   (environments common-lisp:nil :type
    (common-lisp:or environment-descriptions-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-descriptions-message
                    'make-environment-descriptions-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          environment-descriptions-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Environments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environments)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype environment-health () 'common-lisp:string)
(common-lisp:deftype environment-health-attribute () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-health-attributes ()
   '(trivial-types:proper-list environment-health-attribute))
 (common-lisp:defun |make-environment-health-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            environment-health-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype environment-health-status () 'common-lisp:string)
(common-lisp:deftype environment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-id-list ()
   '(trivial-types:proper-list environment-id))
 (common-lisp:defun |make-environment-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (environment-info-description (:copier common-lisp:nil))
   (info-type common-lisp:nil :type
    (common-lisp:or environment-info-type common-lisp:null))
   (ec2instance-id common-lisp:nil :type
    (common-lisp:or ec2instance-id common-lisp:null))
   (sample-timestamp common-lisp:nil :type
    (common-lisp:or sample-timestamp common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-info-description
                    'make-environment-info-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          environment-info-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InfoType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info-type)))
    (aws-sdk/generator/shape::to-query-params "Ec2InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-id)))
    (aws-sdk/generator/shape::to-query-params "SampleTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-timestamp)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype environment-info-description-list ()
   '(trivial-types:proper-list environment-info-description))
 (common-lisp:defun |make-environment-info-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            environment-info-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype environment-info-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (environment-link (:copier common-lisp:nil))
   (link-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-link 'make-environment-link))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-link))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name))))))
(common-lisp:progn
 (common-lisp:deftype environment-links ()
   '(trivial-types:proper-list environment-link))
 (common-lisp:defun |make-environment-links|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-link))
   aws-sdk/generator/shape::members))
(common-lisp:deftype environment-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-names-list ()
   '(trivial-types:proper-list environment-name))
 (common-lisp:defun |make-environment-names-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (environment-resource-description (:copier common-lisp:nil))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (auto-scaling-groups common-lisp:nil :type
    (common-lisp:or auto-scaling-group-list common-lisp:null))
   (instances common-lisp:nil :type
    (common-lisp:or instance-list common-lisp:null))
   (launch-configurations common-lisp:nil :type
    (common-lisp:or launch-configuration-list common-lisp:null))
   (load-balancers common-lisp:nil :type
    (common-lisp:or load-balancer-list common-lisp:null))
   (triggers common-lisp:nil :type
    (common-lisp:or trigger-list common-lisp:null))
   (queues common-lisp:nil :type (common-lisp:or queue-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-resource-description
                    'make-environment-resource-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          environment-resource-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configurations)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancers)))
    (aws-sdk/generator/shape::to-query-params "Triggers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'triggers)))
    (aws-sdk/generator/shape::to-query-params "Queues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'queues))))))
(common-lisp:progn
 (common-lisp:defstruct
     (environment-resource-descriptions-message (:copier common-lisp:nil))
   (environment-resources common-lisp:nil :type
    (common-lisp:or environment-resource-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-resource-descriptions-message
                    'make-environment-resource-descriptions-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          environment-resource-descriptions-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-resources))))))
(common-lisp:progn
 (common-lisp:defstruct
     (environment-resources-description (:copier common-lisp:nil))
   (load-balancer common-lisp:nil :type
    (common-lisp:or load-balancer-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-resources-description
                    'make-environment-resources-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          environment-resources-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer))))))
(common-lisp:deftype environment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (environment-tier (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-tier 'make-environment-tier))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-tier))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:deftype event-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (event-description (:copier common-lisp:nil))
   (event-date common-lisp:nil :type
    (common-lisp:or event-date common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or event-message common-lisp:null))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (version-label common-lisp:nil :type
    (common-lisp:or version-label common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or request-id common-lisp:null))
   (severity common-lisp:nil :type
    (common-lisp:or event-severity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-description 'make-event-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape event-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-date)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "RequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id)))
    (aws-sdk/generator/shape::to-query-params "Severity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity))))))
(common-lisp:progn
 (common-lisp:deftype event-description-list ()
   '(trivial-types:proper-list event-description))
 (common-lisp:defun |make-event-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (event-descriptions-message (:copier common-lisp:nil))
   (events common-lisp:nil :type
    (common-lisp:or event-description-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-descriptions-message
                    'make-event-descriptions-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          event-descriptions-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype event-message () 'common-lisp:string)
(common-lisp:deftype event-severity () 'common-lisp:string)
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:deftype failure-type () 'common-lisp:string)
(common-lisp:deftype file-type-extension () 'common-lisp:string)
(common-lisp:deftype force-terminate () 'common-lisp:boolean)
(common-lisp:deftype group-name () 'common-lisp:string)
(common-lisp:deftype image-id () 'common-lisp:string)
(common-lisp:deftype include-deleted () 'common-lisp:boolean)
(common-lisp:deftype include-deleted-back-to () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:deftype instance-health-list ()
   '(trivial-types:proper-list single-instance-health))
 (common-lisp:defun |make-instance-health-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list single-instance-health))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-health-summary (:copier common-lisp:nil))
   (no-data common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (unknown common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (pending common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (ok common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (info common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (warning common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (degraded common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (severe common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-health-summary 'make-instance-health-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-health-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NoData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'no-data)))
    (aws-sdk/generator/shape::to-query-params "Unknown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unknown)))
    (aws-sdk/generator/shape::to-query-params "Pending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending)))
    (aws-sdk/generator/shape::to-query-params "Ok"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ok)))
    (aws-sdk/generator/shape::to-query-params "Info"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info)))
    (aws-sdk/generator/shape::to-query-params "Warning"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warning)))
    (aws-sdk/generator/shape::to-query-params "Degraded"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'degraded)))
    (aws-sdk/generator/shape::to-query-params "Severe"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severe))))))
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-list () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instances-health-attribute () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instances-health-attributes ()
   '(trivial-types:proper-list instances-health-attribute))
 (common-lisp:defun |make-instances-health-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instances-health-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (insufficient-privileges-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'insufficient-privileges-exception
                    'make-insufficient-privileges-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          insufficient-privileges-exception))
   (common-lisp:append)))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (invalid-request-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'make-invalid-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-request-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (latency (:copier common-lisp:nil))
   (p999 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (p99 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (p95 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (p90 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (p85 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (p75 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (p50 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null))
   (p10 common-lisp:nil :type
    (common-lisp:or nullable-double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'latency 'make-latency))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape latency))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "P999"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p999)))
    (aws-sdk/generator/shape::to-query-params "P99"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p99)))
    (aws-sdk/generator/shape::to-query-params "P95"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p95)))
    (aws-sdk/generator/shape::to-query-params "P90"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p90)))
    (aws-sdk/generator/shape::to-query-params "P85"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p85)))
    (aws-sdk/generator/shape::to-query-params "P75"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p75)))
    (aws-sdk/generator/shape::to-query-params "P50"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p50)))
    (aws-sdk/generator/shape::to-query-params "P10"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'p10))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-configuration (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'launch-configuration 'make-launch-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape launch-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype launch-configuration-list ()
   '(trivial-types:proper-list launch-configuration))
 (common-lisp:defun |make-launch-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list launch-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype launched-at () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-available-solution-stacks-result-message (:copier common-lisp:nil))
   (solution-stacks common-lisp:nil :type
    (common-lisp:or available-solution-stack-names-list common-lisp:null))
   (solution-stack-details common-lisp:nil :type
    (common-lisp:or available-solution-stack-details-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-available-solution-stacks-result-message
                    'make-list-available-solution-stacks-result-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-available-solution-stacks-result-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SolutionStacks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stacks)))
    (aws-sdk/generator/shape::to-query-params "SolutionStackDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-platform-versions-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or platform-filters common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or platform-max-records common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-platform-versions-request
                    'make-list-platform-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-platform-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-platform-versions-result (:copier common-lisp:nil))
   (platform-summary-list common-lisp:nil :type
    (common-lisp:or platform-summary-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-platform-versions-result
                    'make-list-platform-versions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-platform-versions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformSummaryList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-summary-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (listener (:copier common-lisp:nil))
   (protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'listener 'make-listener))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape listener))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port))))))
(common-lisp:progn
 (common-lisp:deftype load-average ()
   '(trivial-types:proper-list load-average-value))
 (common-lisp:defun |make-load-average|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-average-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype load-average-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (load-balancer (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'load-balancer 'make-load-balancer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape load-balancer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (load-balancer-description (:copier common-lisp:nil))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (listeners common-lisp:nil :type
    (common-lisp:or load-balancer-listeners-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-description
                    'make-load-balancer-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-balancer-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "Listeners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listeners))))))
(common-lisp:progn
 (common-lisp:deftype load-balancer-list ()
   '(trivial-types:proper-list load-balancer))
 (common-lisp:defun |make-load-balancer-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-balancer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype load-balancer-listeners-description ()
   '(trivial-types:proper-list listener))
 (common-lisp:defun |make-load-balancer-listeners-description|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list listener))
   aws-sdk/generator/shape::members))
(common-lisp:deftype maintainer () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (managed-action (:copier common-lisp:nil))
   (action-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (action-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (action-type common-lisp:nil :type
    (common-lisp:or action-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or action-status common-lisp:null))
   (window-start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'managed-action 'make-managed-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape managed-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-id)))
    (aws-sdk/generator/shape::to-query-params "ActionDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-description)))
    (aws-sdk/generator/shape::to-query-params "ActionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-type)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "WindowStartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'window-start-time))))))
(common-lisp:progn
 (common-lisp:defstruct (managed-action-history-item (:copier common-lisp:nil))
   (action-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (action-type common-lisp:nil :type
    (common-lisp:or action-type common-lisp:null))
   (action-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (failure-type common-lisp:nil :type
    (common-lisp:or failure-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or action-history-status common-lisp:null))
   (failure-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (executed-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (finished-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'managed-action-history-item
                    'make-managed-action-history-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          managed-action-history-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-id)))
    (aws-sdk/generator/shape::to-query-params "ActionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-type)))
    (aws-sdk/generator/shape::to-query-params "ActionDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-description)))
    (aws-sdk/generator/shape::to-query-params "FailureType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-type)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "FailureDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-description)))
    (aws-sdk/generator/shape::to-query-params "ExecutedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'executed-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-time))))))
(common-lisp:progn
 (common-lisp:deftype managed-action-history-items ()
   '(trivial-types:proper-list managed-action-history-item))
 (common-lisp:defun |make-managed-action-history-items|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            managed-action-history-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (managed-action-invalid-state-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'managed-action-invalid-state-exception
                    'make-managed-action-invalid-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          managed-action-invalid-state-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype managed-actions ()
   '(trivial-types:proper-list managed-action))
 (common-lisp:defun |make-managed-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list managed-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (max-age-rule (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or boxed-boolean common-lisp:null))
   (max-age-in-days common-lisp:nil :type
    (common-lisp:or boxed-int common-lisp:null))
   (delete-source-from-s3 common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'max-age-rule 'make-max-age-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape max-age-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "MaxAgeInDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-age-in-days)))
    (aws-sdk/generator/shape::to-query-params "DeleteSourceFromS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-source-from-s3))))))
(common-lisp:progn
 (common-lisp:defstruct (max-count-rule (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or boxed-boolean common-lisp:null))
   (max-count common-lisp:nil :type
    (common-lisp:or boxed-int common-lisp:null))
   (delete-source-from-s3 common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'max-count-rule 'make-max-count-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape max-count-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "MaxCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-count)))
    (aws-sdk/generator/shape::to-query-params "DeleteSourceFromS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-source-from-s3))))))
(common-lisp:deftype max-records () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:deftype nullable-double () 'common-lisp:double-float)
(common-lisp:deftype nullable-integer () 'common-lisp:integer)
(common-lisp:deftype nullable-long () 'common-lisp:integer)
(common-lisp:deftype operating-system-name () 'common-lisp:string)
(common-lisp:deftype operating-system-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-in-progress-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'operation-in-progress-exception
                    'make-operation-in-progress-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-in-progress-exception))
   (common-lisp:append)))
(common-lisp:deftype option-namespace () 'common-lisp:string)
(common-lisp:deftype option-restriction-max-length () 'common-lisp:integer)
(common-lisp:deftype option-restriction-max-value () 'common-lisp:integer)
(common-lisp:deftype option-restriction-min-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (option-restriction-regex (:copier common-lisp:nil))
   (pattern common-lisp:nil :type
    (common-lisp:or regex-pattern common-lisp:null))
   (label common-lisp:nil :type (common-lisp:or regex-label common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'option-restriction-regex 'make-option-restriction-regex))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          option-restriction-regex))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pattern)))
    (aws-sdk/generator/shape::to-query-params "Label"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'label))))))
(common-lisp:progn
 (common-lisp:defstruct (option-specification (:copier common-lisp:nil))
   (resource-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (namespace common-lisp:nil :type
    (common-lisp:or option-namespace common-lisp:null))
   (option-name common-lisp:nil :type
    (common-lisp:or configuration-option-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'option-specification 'make-option-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape option-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-name)))
    (aws-sdk/generator/shape::to-query-params "Namespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace)))
    (aws-sdk/generator/shape::to-query-params "OptionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-name))))))
(common-lisp:progn
 (common-lisp:deftype options-specifier-list ()
   '(trivial-types:proper-list option-specification))
 (common-lisp:defun |make-options-specifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list option-specification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype platform-arn () 'common-lisp:string)
(common-lisp:deftype platform-category () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (platform-description (:copier common-lisp:nil))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (platform-owner common-lisp:nil :type
    (common-lisp:or platform-owner common-lisp:null))
   (platform-name common-lisp:nil :type
    (common-lisp:or platform-name common-lisp:null))
   (platform-version common-lisp:nil :type
    (common-lisp:or platform-version common-lisp:null))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-status common-lisp:nil :type
    (common-lisp:or platform-status common-lisp:null))
   (date-created common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null))
   (date-updated common-lisp:nil :type
    (common-lisp:or update-date common-lisp:null))
   (platform-category common-lisp:nil :type
    (common-lisp:or platform-category common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (maintainer common-lisp:nil :type
    (common-lisp:or maintainer common-lisp:null))
   (operating-system-name common-lisp:nil :type
    (common-lisp:or operating-system-name common-lisp:null))
   (operating-system-version common-lisp:nil :type
    (common-lisp:or operating-system-version common-lisp:null))
   (programming-languages common-lisp:nil :type
    (common-lisp:or platform-programming-languages common-lisp:null))
   (frameworks common-lisp:nil :type
    (common-lisp:or platform-frameworks common-lisp:null))
   (custom-ami-list common-lisp:nil :type
    (common-lisp:or custom-ami-list common-lisp:null))
   (supported-tier-list common-lisp:nil :type
    (common-lisp:or supported-tier-list common-lisp:null))
   (supported-addon-list common-lisp:nil :type
    (common-lisp:or supported-addon-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'platform-description 'make-platform-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape platform-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "PlatformOwner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-owner)))
    (aws-sdk/generator/shape::to-query-params "PlatformName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-version)))
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-status)))
    (aws-sdk/generator/shape::to-query-params "DateCreated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-created)))
    (aws-sdk/generator/shape::to-query-params "DateUpdated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date-updated)))
    (aws-sdk/generator/shape::to-query-params "PlatformCategory"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-category)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Maintainer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maintainer)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystemName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system-name)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystemVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system-version)))
    (aws-sdk/generator/shape::to-query-params "ProgrammingLanguages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'programming-languages)))
    (aws-sdk/generator/shape::to-query-params "Frameworks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frameworks)))
    (aws-sdk/generator/shape::to-query-params "CustomAmiList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-ami-list)))
    (aws-sdk/generator/shape::to-query-params "SupportedTierList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-tier-list)))
    (aws-sdk/generator/shape::to-query-params "SupportedAddonList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-addon-list))))))
(common-lisp:progn
 (common-lisp:defstruct (platform-filter (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or platform-filter-type common-lisp:null))
   (operator common-lisp:nil :type
    (common-lisp:or platform-filter-operator common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or platform-filter-value-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'platform-filter 'make-platform-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape platform-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Operator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operator)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype platform-filter-operator () 'common-lisp:string)
(common-lisp:deftype platform-filter-type () 'common-lisp:string)
(common-lisp:deftype platform-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype platform-filter-value-list ()
   '(trivial-types:proper-list platform-filter-value))
 (common-lisp:defun |make-platform-filter-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype platform-filters ()
   '(trivial-types:proper-list platform-filter))
 (common-lisp:defun |make-platform-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (platform-framework (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'platform-framework 'make-platform-framework))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape platform-framework))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:deftype platform-frameworks ()
   '(trivial-types:proper-list platform-framework))
 (common-lisp:defun |make-platform-frameworks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-framework))
   aws-sdk/generator/shape::members))
(common-lisp:deftype platform-max-records () 'common-lisp:integer)
(common-lisp:deftype platform-name () 'common-lisp:string)
(common-lisp:deftype platform-owner () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (platform-programming-language (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'platform-programming-language
                    'make-platform-programming-language))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          platform-programming-language))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:deftype platform-programming-languages ()
   '(trivial-types:proper-list platform-programming-language))
 (common-lisp:defun |make-platform-programming-languages|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            platform-programming-language))
   aws-sdk/generator/shape::members))
(common-lisp:deftype platform-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (platform-summary (:copier common-lisp:nil))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (platform-owner common-lisp:nil :type
    (common-lisp:or platform-owner common-lisp:null))
   (platform-status common-lisp:nil :type
    (common-lisp:or platform-status common-lisp:null))
   (platform-category common-lisp:nil :type
    (common-lisp:or platform-category common-lisp:null))
   (operating-system-name common-lisp:nil :type
    (common-lisp:or operating-system-name common-lisp:null))
   (operating-system-version common-lisp:nil :type
    (common-lisp:or operating-system-version common-lisp:null))
   (supported-tier-list common-lisp:nil :type
    (common-lisp:or supported-tier-list common-lisp:null))
   (supported-addon-list common-lisp:nil :type
    (common-lisp:or supported-addon-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'platform-summary 'make-platform-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape platform-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "PlatformOwner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-owner)))
    (aws-sdk/generator/shape::to-query-params "PlatformStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-status)))
    (aws-sdk/generator/shape::to-query-params "PlatformCategory"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-category)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystemName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system-name)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystemVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system-version)))
    (aws-sdk/generator/shape::to-query-params "SupportedTierList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-tier-list)))
    (aws-sdk/generator/shape::to-query-params "SupportedAddonList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-addon-list))))))
(common-lisp:progn
 (common-lisp:deftype platform-summary-list ()
   '(trivial-types:proper-list platform-summary))
 (common-lisp:defun |make-platform-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype platform-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (platform-version-still-referenced-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'platform-version-still-referenced-exception
                    'make-platform-version-still-referenced-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          platform-version-still-referenced-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (queue (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'queue 'make-queue))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape queue))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "URL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:progn
 (common-lisp:deftype queue-list () '(trivial-types:proper-list queue))
 (common-lisp:defun |make-queue-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list queue))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rebuild-environment-message (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rebuild-environment-message
                    'make-rebuild-environment-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rebuild-environment-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name))))))
(common-lisp:deftype refreshed-at () 'common-lisp:string)
(common-lisp:deftype regex-label () 'common-lisp:string)
(common-lisp:deftype regex-pattern () 'common-lisp:string)
(common-lisp:deftype request-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (request-environment-info-message (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (info-type
    (common-lisp:error
     #A((22) common-lisp:base-char . ":info-type is required"))
    :type (common-lisp:or environment-info-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-environment-info-message
                    'make-request-environment-info-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-environment-info-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "InfoType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info-type))))))
(common-lisp:deftype request-id () 'common-lisp:string)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (restart-app-server-message (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'restart-app-server-message
                    'make-restart-app-server-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          restart-app-server-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-environment-info-message (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (info-type
    (common-lisp:error
     #A((22) common-lisp:base-char . ":info-type is required"))
    :type (common-lisp:or environment-info-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-environment-info-message
                    'make-retrieve-environment-info-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          retrieve-environment-info-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "InfoType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-environment-info-result-message (:copier common-lisp:nil))
   (environment-info common-lisp:nil :type
    (common-lisp:or environment-info-description-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-environment-info-result-message
                    'make-retrieve-environment-info-result-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          retrieve-environment-info-result-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-info))))))
(common-lisp:deftype s3bucket () 'common-lisp:string)
(common-lisp:deftype s3key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (s3location (:copier common-lisp:nil))
   (s3bucket common-lisp:nil :type (common-lisp:or s3bucket common-lisp:null))
   (s3key common-lisp:nil :type (common-lisp:or s3key common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3location 'make-s3location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket)))
    (aws-sdk/generator/shape::to-query-params "S3Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3key))))))
(common-lisp:progn
 (common-lisp:defstruct
     (s3location-not-in-service-region-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 's3location-not-in-service-region-exception
                    'make-s3location-not-in-service-region-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          s3location-not-in-service-region-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (s3subscription-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 's3subscription-required-exception
                    'make-s3subscription-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          s3subscription-required-exception))
   (common-lisp:append)))
(common-lisp:deftype sample-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (single-instance-health (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (health-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (color common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (causes common-lisp:nil :type (common-lisp:or causes common-lisp:null))
   (launched-at common-lisp:nil :type
    (common-lisp:or launched-at common-lisp:null))
   (application-metrics common-lisp:nil :type
    (common-lisp:or application-metrics common-lisp:null))
   (system common-lisp:nil :type
    (common-lisp:or system-status common-lisp:null))
   (deployment common-lisp:nil :type
    (common-lisp:or deployment common-lisp:null))
   (availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'single-instance-health 'make-single-instance-health))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          single-instance-health))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "HealthStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-status)))
    (aws-sdk/generator/shape::to-query-params "Color"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'color)))
    (aws-sdk/generator/shape::to-query-params "Causes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'causes)))
    (aws-sdk/generator/shape::to-query-params "LaunchedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launched-at)))
    (aws-sdk/generator/shape::to-query-params "ApplicationMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-metrics)))
    (aws-sdk/generator/shape::to-query-params "System"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'system)))
    (aws-sdk/generator/shape::to-query-params "Deployment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type))))))
(common-lisp:progn
 (common-lisp:defstruct (solution-stack-description (:copier common-lisp:nil))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (permitted-file-types common-lisp:nil :type
    (common-lisp:or solution-stack-file-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'solution-stack-description
                    'make-solution-stack-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          solution-stack-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PermittedFileTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'permitted-file-types))))))
(common-lisp:progn
 (common-lisp:deftype solution-stack-file-type-list ()
   '(trivial-types:proper-list file-type-extension))
 (common-lisp:defun |make-solution-stack-file-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list file-type-extension))
   aws-sdk/generator/shape::members))
(common-lisp:deftype solution-stack-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (source-build-information (:copier common-lisp:nil))
   (source-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":source-type is required"))
    :type (common-lisp:or source-type common-lisp:null))
   (source-repository
    (common-lisp:error
     #A((30) common-lisp:base-char . ":source-repository is required"))
    :type (common-lisp:or source-repository common-lisp:null))
   (source-location
    (common-lisp:error
     #A((28) common-lisp:base-char . ":source-location is required"))
    :type (common-lisp:or source-location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'source-build-information 'make-source-build-information))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          source-build-information))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-type)))
    (aws-sdk/generator/shape::to-query-params "SourceRepository"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-repository)))
    (aws-sdk/generator/shape::to-query-params "SourceLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-location))))))
(common-lisp:progn
 (common-lisp:defstruct
     (source-bundle-deletion-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'source-bundle-deletion-exception
                    'make-source-bundle-deletion-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          source-bundle-deletion-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (source-configuration (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'source-configuration 'make-source-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape source-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name))))))
(common-lisp:deftype source-location () 'common-lisp:string)
(common-lisp:deftype source-repository () 'common-lisp:string)
(common-lisp:deftype source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (status-codes (:copier common-lisp:nil))
   (status2xx common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (status3xx common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (status4xx common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (status5xx common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'status-codes 'make-status-codes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape status-codes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status2xx"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status2xx)))
    (aws-sdk/generator/shape::to-query-params "Status3xx"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status3xx)))
    (aws-sdk/generator/shape::to-query-params "Status4xx"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status4xx)))
    (aws-sdk/generator/shape::to-query-params "Status5xx"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status5xx))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype supported-addon () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype supported-addon-list ()
   '(trivial-types:proper-list supported-addon))
 (common-lisp:defun |make-supported-addon-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list supported-addon))
   aws-sdk/generator/shape::members))
(common-lisp:deftype supported-tier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype supported-tier-list ()
   '(trivial-types:proper-list supported-tier))
 (common-lisp:defun |make-supported-tier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list supported-tier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (swap-environment-cnames-message (:copier common-lisp:nil))
   (source-environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (source-environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (destination-environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (destination-environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'swap-environment-cnames-message
                    'make-swap-environment-cnames-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          swap-environment-cnames-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceEnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-environment-id)))
    (aws-sdk/generator/shape::to-query-params "SourceEnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-environment-name)))
    (aws-sdk/generator/shape::to-query-params "DestinationEnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-environment-id)))
    (aws-sdk/generator/shape::to-query-params "DestinationEnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-environment-name))))))
(common-lisp:progn
 (common-lisp:defstruct (system-status (:copier common-lisp:nil))
   (cpuutilization common-lisp:nil :type
    (common-lisp:or cpuutilization common-lisp:null))
   (load-average common-lisp:nil :type
    (common-lisp:or load-average common-lisp:null)))
 (common-lisp:export (common-lisp:list 'system-status 'make-system-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape system-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CPUUtilization"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cpuutilization)))
    (aws-sdk/generator/shape::to-query-params "LoadAverage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-average))))))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype terminate-env-force () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (terminate-environment-message (:copier common-lisp:nil))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (terminate-resources common-lisp:nil :type
    (common-lisp:or terminate-environment-resources common-lisp:null))
   (force-terminate common-lisp:nil :type
    (common-lisp:or force-terminate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-environment-message
                    'make-terminate-environment-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-environment-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "TerminateResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'terminate-resources)))
    (aws-sdk/generator/shape::to-query-params "ForceTerminate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'force-terminate))))))
(common-lisp:deftype terminate-environment-resources () 'common-lisp:boolean)
(common-lisp:deftype time-filter-end () 'common-lisp:string)
(common-lisp:deftype time-filter-start () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-application-versions-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-application-versions-exception
                    'make-too-many-application-versions-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-application-versions-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-applications-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-applications-exception
                    'make-too-many-applications-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-applications-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (too-many-buckets-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-buckets-exception
                    'make-too-many-buckets-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-buckets-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-configuration-templates-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-configuration-templates-exception
                    'make-too-many-configuration-templates-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-configuration-templates-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-environments-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-environments-exception
                    'make-too-many-environments-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-environments-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-platforms-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-platforms-exception
                    'make-too-many-platforms-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-platforms-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (trigger (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'trigger 'make-trigger))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape trigger))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype trigger-list () '(trivial-types:proper-list trigger))
 (common-lisp:defun |make-trigger-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list trigger))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (update-application-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-message
                    'make-update-application-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-resource-lifecycle-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (resource-lifecycle-config
    (common-lisp:error
     #A((38) common-lisp:base-char . ":resource-lifecycle-config is required"))
    :type
    (common-lisp:or application-resource-lifecycle-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-resource-lifecycle-message
                    'make-update-application-resource-lifecycle-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-resource-lifecycle-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "ResourceLifecycleConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-lifecycle-config))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-version-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (version-label
    (common-lisp:error
     #A((26) common-lisp:base-char . ":version-label is required"))
    :type (common-lisp:or version-label common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-version-message
                    'make-update-application-version-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-version-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-template-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (template-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":template-name is required"))
    :type (common-lisp:or configuration-template-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (option-settings common-lisp:nil :type
    (common-lisp:or configuration-option-settings-list common-lisp:null))
   (options-to-remove common-lisp:nil :type
    (common-lisp:or options-specifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-template-message
                    'make-update-configuration-template-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-configuration-template-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "OptionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-settings)))
    (aws-sdk/generator/shape::to-query-params "OptionsToRemove"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options-to-remove))))))
(common-lisp:deftype update-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (update-environment-message (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (environment-id common-lisp:nil :type
    (common-lisp:or environment-id common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (group-name common-lisp:nil :type
    (common-lisp:or group-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (tier common-lisp:nil :type
    (common-lisp:or environment-tier common-lisp:null))
   (version-label common-lisp:nil :type
    (common-lisp:or version-label common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (solution-stack-name common-lisp:nil :type
    (common-lisp:or solution-stack-name common-lisp:null))
   (platform-arn common-lisp:nil :type
    (common-lisp:or platform-arn common-lisp:null))
   (option-settings common-lisp:nil :type
    (common-lisp:or configuration-option-settings-list common-lisp:null))
   (options-to-remove common-lisp:nil :type
    (common-lisp:or options-specifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-environment-message
                    'make-update-environment-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-environment-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-id)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Tier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tier)))
    (aws-sdk/generator/shape::to-query-params "VersionLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-label)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "SolutionStackName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'solution-stack-name)))
    (aws-sdk/generator/shape::to-query-params "PlatformArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-arn)))
    (aws-sdk/generator/shape::to-query-params "OptionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-settings)))
    (aws-sdk/generator/shape::to-query-params "OptionsToRemove"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'options-to-remove))))))
(common-lisp:deftype user-defined-option () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (validate-configuration-settings-message (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (template-name common-lisp:nil :type
    (common-lisp:or configuration-template-name common-lisp:null))
   (environment-name common-lisp:nil :type
    (common-lisp:or environment-name common-lisp:null))
   (option-settings
    (common-lisp:error
     #A((28) common-lisp:base-char . ":option-settings is required"))
    :type
    (common-lisp:or configuration-option-settings-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validate-configuration-settings-message
                    'make-validate-configuration-settings-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          validate-configuration-settings-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "TemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'template-name)))
    (aws-sdk/generator/shape::to-query-params "EnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-name)))
    (aws-sdk/generator/shape::to-query-params "OptionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-settings))))))
(common-lisp:progn
 (common-lisp:defstruct (validation-message (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or validation-message-string common-lisp:null))
   (severity common-lisp:nil :type
    (common-lisp:or validation-severity common-lisp:null))
   (namespace common-lisp:nil :type
    (common-lisp:or option-namespace common-lisp:null))
   (option-name common-lisp:nil :type
    (common-lisp:or configuration-option-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-message 'make-validation-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape validation-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Severity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity)))
    (aws-sdk/generator/shape::to-query-params "Namespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace)))
    (aws-sdk/generator/shape::to-query-params "OptionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'option-name))))))
(common-lisp:deftype validation-message-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype validation-messages-list ()
   '(trivial-types:proper-list validation-message))
 (common-lisp:defun |make-validation-messages-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list validation-message))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-severity () 'common-lisp:string)
(common-lisp:deftype version-label () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype version-labels ()
   '(trivial-types:proper-list version-label))
 (common-lisp:defun |make-version-labels|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list version-label))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype version-labels-list ()
   '(trivial-types:proper-list version-label))
 (common-lisp:defun |make-version-labels-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list version-label))
   aws-sdk/generator/shape::members))
(common-lisp:deftype virtualization-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun abort-environment-update
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-abort-environment-update-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AbortEnvironmentUpdate")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'abort-environment-update))
(common-lisp:progn
 (common-lisp:defun apply-environment-managed-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-name environment-id
                     action-id)
   (common-lisp:declare
    (common-lisp:ignorable environment-name environment-id action-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-apply-environment-managed-action-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ApplyEnvironmentManagedAction")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplyEnvironmentManagedActionResult"
      "ApplyEnvironmentManagedActionResult")))
 (common-lisp:export 'apply-environment-managed-action))
(common-lisp:progn
 (common-lisp:defun check-dnsavailability
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cnameprefix)
   (common-lisp:declare (common-lisp:ignorable cnameprefix))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-check-dnsavailability-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CheckDNSAvailability")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CheckDNSAvailabilityResultMessage" "CheckDNSAvailabilityResult")))
 (common-lisp:export 'check-dnsavailability))
(common-lisp:progn
 (common-lisp:defun compose-environments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name group-name
                     version-labels)
   (common-lisp:declare
    (common-lisp:ignorable application-name group-name version-labels))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-compose-environments-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ComposeEnvironments")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnvironmentDescriptionsMessage" "ComposeEnvironmentsResult")))
 (common-lisp:export 'compose-environments))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name description
                     resource-lifecycle-config)
   (common-lisp:declare
    (common-lisp:ignorable application-name description
     resource-lifecycle-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApplication")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplicationDescriptionMessage" "CreateApplicationResult")))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-application-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name version-label
                     description source-build-information source-bundle
                     build-configuration auto-create-application process)
   (common-lisp:declare
    (common-lisp:ignorable application-name version-label description
     source-build-information source-bundle build-configuration
     auto-create-application process))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-application-version-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApplicationVersion")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplicationVersionDescriptionMessage"
      "CreateApplicationVersionResult")))
 (common-lisp:export 'create-application-version))
(common-lisp:progn
 (common-lisp:defun create-configuration-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name template-name
                     solution-stack-name platform-arn source-configuration
                     environment-id description option-settings)
   (common-lisp:declare
    (common-lisp:ignorable application-name template-name solution-stack-name
     platform-arn source-configuration environment-id description
     option-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configuration-template-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateConfigurationTemplate")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfigurationSettingsDescription" "CreateConfigurationTemplateResult")))
 (common-lisp:export 'create-configuration-template))
(common-lisp:progn
 (common-lisp:defun create-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name environment-name
                     group-name description cnameprefix tier tags version-label
                     template-name solution-stack-name platform-arn
                     option-settings options-to-remove)
   (common-lisp:declare
    (common-lisp:ignorable application-name environment-name group-name
     description cnameprefix tier tags version-label template-name
     solution-stack-name platform-arn option-settings options-to-remove))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-environment-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateEnvironment")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnvironmentDescription" "CreateEnvironmentResult")))
 (common-lisp:export 'create-environment))
(common-lisp:progn
 (common-lisp:defun create-platform-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-name platform-version
                     platform-definition-bundle environment-name
                     option-settings)
   (common-lisp:declare
    (common-lisp:ignorable platform-name platform-version
     platform-definition-bundle environment-name option-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-platform-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePlatformVersion")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePlatformVersionResult" "CreatePlatformVersionResult")))
 (common-lisp:export 'create-platform-version))
(common-lisp:progn
 (common-lisp:defun create-storage-location ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((16) common-lisp:base-char
                                . "elasticbeanstalk")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "CreateStorageLocation"))
    "CreateStorageLocationResultMessage" "CreateStorageLocationResult"))
 (common-lisp:export 'create-storage-location))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name terminate-env-by-force)
   (common-lisp:declare
    (common-lisp:ignorable application-name terminate-env-by-force))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApplication")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-application-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name version-label
                     delete-source-bundle)
   (common-lisp:declare
    (common-lisp:ignorable application-name version-label
     delete-source-bundle))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-version-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApplicationVersion")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-application-version))
(common-lisp:progn
 (common-lisp:defun delete-configuration-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name template-name)
   (common-lisp:declare (common-lisp:ignorable application-name template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configuration-template-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteConfigurationTemplate")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-configuration-template))
(common-lisp:progn
 (common-lisp:defun delete-environment-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name environment-name)
   (common-lisp:declare
    (common-lisp:ignorable application-name environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-environment-configuration-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteEnvironmentConfiguration")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-environment-configuration))
(common-lisp:progn
 (common-lisp:defun delete-platform-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-arn)
   (common-lisp:declare (common-lisp:ignorable platform-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-platform-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePlatformVersion")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeletePlatformVersionResult" "DeletePlatformVersionResult")))
 (common-lisp:export 'delete-platform-version))
(common-lisp:progn
 (common-lisp:defun describe-application-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name version-labels
                     max-records next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-name version-labels max-records
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-application-versions-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeApplicationVersions")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplicationVersionDescriptionsMessage"
      "DescribeApplicationVersionsResult")))
 (common-lisp:export 'describe-application-versions))
(common-lisp:progn
 (common-lisp:defun describe-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-names)
   (common-lisp:declare (common-lisp:ignorable application-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-applications-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeApplications")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplicationDescriptionsMessage" "DescribeApplicationsResult")))
 (common-lisp:export 'describe-applications))
(common-lisp:progn
 (common-lisp:defun describe-configuration-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name template-name
                     environment-name solution-stack-name platform-arn options)
   (common-lisp:declare
    (common-lisp:ignorable application-name template-name environment-name
     solution-stack-name platform-arn options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-configuration-options-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeConfigurationOptions")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfigurationOptionsDescription" "DescribeConfigurationOptionsResult")))
 (common-lisp:export 'describe-configuration-options))
(common-lisp:progn
 (common-lisp:defun describe-configuration-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name template-name
                     environment-name)
   (common-lisp:declare
    (common-lisp:ignorable application-name template-name environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-configuration-settings-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeConfigurationSettings")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfigurationSettingsDescriptions"
      "DescribeConfigurationSettingsResult")))
 (common-lisp:export 'describe-configuration-settings))
(common-lisp:progn
 (common-lisp:defun describe-environment-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-name environment-id
                     attribute-names)
   (common-lisp:declare
    (common-lisp:ignorable environment-name environment-id attribute-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-environment-health-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEnvironmentHealth")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEnvironmentHealthResult" "DescribeEnvironmentHealthResult")))
 (common-lisp:export 'describe-environment-health))
(common-lisp:progn
 (common-lisp:defun describe-environment-managed-action-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name
                     next-token max-items)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name next-token
     max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-environment-managed-action-history-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeEnvironmentManagedActionHistory")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEnvironmentManagedActionHistoryResult"
      "DescribeEnvironmentManagedActionHistoryResult")))
 (common-lisp:export 'describe-environment-managed-action-history))
(common-lisp:progn
 (common-lisp:defun describe-environment-managed-actions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-name environment-id status)
   (common-lisp:declare
    (common-lisp:ignorable environment-name environment-id status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-environment-managed-actions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeEnvironmentManagedActions")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEnvironmentManagedActionsResult"
      "DescribeEnvironmentManagedActionsResult")))
 (common-lisp:export 'describe-environment-managed-actions))
(common-lisp:progn
 (common-lisp:defun describe-environment-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-environment-resources-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEnvironmentResources")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnvironmentResourceDescriptionsMessage"
      "DescribeEnvironmentResourcesResult")))
 (common-lisp:export 'describe-environment-resources))
(common-lisp:progn
 (common-lisp:defun describe-environments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name version-label
                     environment-ids environment-names include-deleted
                     included-deleted-back-to max-records next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-name version-label environment-ids
     environment-names include-deleted included-deleted-back-to max-records
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-environments-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEnvironments")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnvironmentDescriptionsMessage" "DescribeEnvironmentsResult")))
 (common-lisp:export 'describe-environments))
(common-lisp:progn
 (common-lisp:defun describe-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name version-label
                     template-name environment-id environment-name platform-arn
                     request-id severity start-time end-time max-records
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-name version-label template-name
     environment-id environment-name platform-arn request-id severity
     start-time end-time max-records next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-events-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEvents")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EventDescriptionsMessage" "DescribeEventsResult")))
 (common-lisp:export 'describe-events))
(common-lisp:progn
 (common-lisp:defun describe-instances-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-name environment-id
                     attribute-names next-token)
   (common-lisp:declare
    (common-lisp:ignorable environment-name environment-id attribute-names
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instances-health-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeInstancesHealth")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstancesHealthResult" "DescribeInstancesHealthResult")))
 (common-lisp:export 'describe-instances-health))
(common-lisp:progn
 (common-lisp:defun describe-platform-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-arn)
   (common-lisp:declare (common-lisp:ignorable platform-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-platform-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePlatformVersion")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePlatformVersionResult" "DescribePlatformVersionResult")))
 (common-lisp:export 'describe-platform-version))
(common-lisp:progn
 (common-lisp:defun list-available-solution-stacks ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((16) common-lisp:base-char
                                . "elasticbeanstalk")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "ListAvailableSolutionStacks"))
    "ListAvailableSolutionStacksResultMessage"
    "ListAvailableSolutionStacksResult"))
 (common-lisp:export 'list-available-solution-stacks))
(common-lisp:progn
 (common-lisp:defun list-platform-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-records next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-records next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-platform-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPlatformVersions")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPlatformVersionsResult" "ListPlatformVersionsResult")))
 (common-lisp:export 'list-platform-versions))
(common-lisp:progn
 (common-lisp:defun rebuild-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-rebuild-environment-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RebuildEnvironment")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'rebuild-environment))
(common-lisp:progn
 (common-lisp:defun request-environment-info
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name
                     info-type)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name info-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-request-environment-info-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RequestEnvironmentInfo")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'request-environment-info))
(common-lisp:progn
 (common-lisp:defun restart-app-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-restart-app-server-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RestartAppServer")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'restart-app-server))
(common-lisp:progn
 (common-lisp:defun retrieve-environment-info
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name
                     info-type)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name info-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-retrieve-environment-info-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RetrieveEnvironmentInfo")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RetrieveEnvironmentInfoResultMessage" "RetrieveEnvironmentInfoResult")))
 (common-lisp:export 'retrieve-environment-info))
(common-lisp:progn
 (common-lisp:defun swap-environment-cnames
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-environment-id
                     source-environment-name destination-environment-id
                     destination-environment-name)
   (common-lisp:declare
    (common-lisp:ignorable source-environment-id source-environment-name
     destination-environment-id destination-environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-swap-environment-cnames-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SwapEnvironmentCNAMEs")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'swap-environment-cnames))
(common-lisp:progn
 (common-lisp:defun terminate-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id environment-name
                     terminate-resources force-terminate)
   (common-lisp:declare
    (common-lisp:ignorable environment-id environment-name terminate-resources
     force-terminate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-terminate-environment-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TerminateEnvironment")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnvironmentDescription" "TerminateEnvironmentResult")))
 (common-lisp:export 'terminate-environment))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name description)
   (common-lisp:declare (common-lisp:ignorable application-name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApplication")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplicationDescriptionMessage" "UpdateApplicationResult")))
 (common-lisp:export 'update-application))
(common-lisp:progn
 (common-lisp:defun update-application-resource-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     resource-lifecycle-config)
   (common-lisp:declare
    (common-lisp:ignorable application-name resource-lifecycle-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-application-resource-lifecycle-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"UpdateApplicationResourceLifecycle")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplicationResourceLifecycleDescriptionMessage"
      "UpdateApplicationResourceLifecycleResult")))
 (common-lisp:export 'update-application-resource-lifecycle))
(common-lisp:progn
 (common-lisp:defun update-application-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name version-label
                     description)
   (common-lisp:declare
    (common-lisp:ignorable application-name version-label description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-application-version-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApplicationVersion")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplicationVersionDescriptionMessage"
      "UpdateApplicationVersionResult")))
 (common-lisp:export 'update-application-version))
(common-lisp:progn
 (common-lisp:defun update-configuration-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name template-name
                     description option-settings options-to-remove)
   (common-lisp:declare
    (common-lisp:ignorable application-name template-name description
     option-settings options-to-remove))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configuration-template-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateConfigurationTemplate")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfigurationSettingsDescription" "UpdateConfigurationTemplateResult")))
 (common-lisp:export 'update-configuration-template))
(common-lisp:progn
 (common-lisp:defun update-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name environment-id
                     environment-name group-name description tier version-label
                     template-name solution-stack-name platform-arn
                     option-settings options-to-remove)
   (common-lisp:declare
    (common-lisp:ignorable application-name environment-id environment-name
     group-name description tier version-label template-name
     solution-stack-name platform-arn option-settings options-to-remove))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-environment-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateEnvironment")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnvironmentDescription" "UpdateEnvironmentResult")))
 (common-lisp:export 'update-environment))
(common-lisp:progn
 (common-lisp:defun validate-configuration-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name template-name
                     environment-name option-settings)
   (common-lisp:declare
    (common-lisp:ignorable application-name template-name environment-name
     option-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-validate-configuration-settings-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "elasticbeanstalk")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ValidateConfigurationSettings")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfigurationSettingsValidationMessages"
      "ValidateConfigurationSettingsResult")))
 (common-lisp:export 'validate-configuration-settings))