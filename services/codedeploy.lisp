;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/codedeploy
  (:use)
  (:nicknames #:aws/codedeploy)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/codedeploy)

(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-on-premises-instances-input (:copier common-lisp:nil))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null))
   (instance-names
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instancenames is required"))
    :type (common-lisp:or instance-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-on-premises-instances-input
                    'make-add-tags-to-on-premises-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-tags-to-on-premises-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "instanceNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-names))))))
(common-lisp:deftype additional-deployment-status-info () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (alarm (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or alarm-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm 'make-alarm))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape alarm))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (alarm-configuration (:copier common-lisp:nil))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ignore-poll-alarm-failure common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or alarm-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alarm-configuration 'make-alarm-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape alarm-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "ignorePollAlarmFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ignore-poll-alarm-failure)))
    (aws-sdk/generator/shape::to-query-params "alarms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarms))))))
(common-lisp:progn
 (common-lisp:deftype alarm-list () '(trivial-types:proper-list alarm))
 (common-lisp:defun |make-alarm-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm))
   aws-sdk/generator/shape::members))
(common-lisp:deftype alarm-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (alarms-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'alarms-limit-exceeded-exception
                    'make-alarms-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          alarms-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (application-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'application-already-exists-exception
                    'make-application-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-already-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (application-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'application-does-not-exist-exception
                    'make-application-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:deftype application-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (application-info (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or application-id common-lisp:null))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (create-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (linked-to-git-hub common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (git-hub-account-name common-lisp:nil :type
    (common-lisp:or git-hub-account-token-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-info 'make-application-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "createTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-time)))
    (aws-sdk/generator/shape::to-query-params "linkedToGitHub"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'linked-to-git-hub)))
    (aws-sdk/generator/shape::to-query-params "gitHubAccountName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'git-hub-account-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (application-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'application-limit-exceeded-exception
                    'make-application-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype application-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (application-name-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'application-name-required-exception
                    'make-application-name-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-name-required-exception))
   (common-lisp:append)))
(common-lisp:deftype application-revision-sort-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype applications-info-list ()
   '(trivial-types:proper-list application-info))
 (common-lisp:defun |make-applications-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype applications-list ()
   '(trivial-types:proper-list application-name))
 (common-lisp:defun |make-applications-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (auto-rollback-configuration (:copier common-lisp:nil))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (events common-lisp:nil :type
    (common-lisp:or auto-rollback-events-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-rollback-configuration
                    'make-auto-rollback-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-rollback-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events))))))
(common-lisp:deftype auto-rollback-event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auto-rollback-events-list ()
   '(trivial-types:proper-list auto-rollback-event))
 (common-lisp:defun |make-auto-rollback-events-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-rollback-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-group (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or auto-scaling-group-name common-lisp:null))
   (hook common-lisp:nil :type
    (common-lisp:or auto-scaling-group-hook common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group 'make-auto-scaling-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape auto-scaling-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "hook"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hook))))))
(common-lisp:deftype auto-scaling-group-hook () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-list ()
   '(trivial-types:proper-list auto-scaling-group))
 (common-lisp:defun |make-auto-scaling-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype auto-scaling-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-name-list ()
   '(trivial-types:proper-list auto-scaling-group-name))
 (common-lisp:defun |make-auto-scaling-group-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-application-revisions-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (revisions
    (common-lisp:error
     #A((22) common-lisp:base-char . ":revisions is required"))
    :type (common-lisp:or revision-location-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-application-revisions-input
                    'make-batch-get-application-revisions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-application-revisions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "revisions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revisions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-application-revisions-output (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (revisions common-lisp:nil :type
    (common-lisp:or revision-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-application-revisions-output
                    'make-batch-get-application-revisions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-application-revisions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "errorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message)))
    (aws-sdk/generator/shape::to-query-params "revisions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revisions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-applications-input (:copier common-lisp:nil))
   (application-names common-lisp:nil :type
    (common-lisp:or applications-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-applications-input
                    'make-batch-get-applications-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-applications-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-applications-output (:copier common-lisp:nil))
   (applications-info common-lisp:nil :type
    (common-lisp:or applications-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-applications-output
                    'make-batch-get-applications-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-applications-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationsInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications-info))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-deployment-groups-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (deployment-group-names
    (common-lisp:error
     #A((33) common-lisp:base-char . ":deploymentgroupnames is required"))
    :type (common-lisp:or deployment-groups-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-deployment-groups-input
                    'make-batch-get-deployment-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-deployment-groups-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-deployment-groups-output (:copier common-lisp:nil))
   (deployment-groups-info common-lisp:nil :type
    (common-lisp:or deployment-group-info-list common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-deployment-groups-output
                    'make-batch-get-deployment-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-deployment-groups-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentGroupsInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-groups-info)))
    (aws-sdk/generator/shape::to-query-params "errorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-deployment-instances-input (:copier common-lisp:nil))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or deployment-id common-lisp:null))
   (instance-ids
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instanceids is required"))
    :type (common-lisp:or instances-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-deployment-instances-input
                    'make-batch-get-deployment-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-deployment-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "instanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-deployment-instances-output (:copier common-lisp:nil))
   (instances-summary common-lisp:nil :type
    (common-lisp:or instance-summary-list common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-deployment-instances-output
                    'make-batch-get-deployment-instances-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-deployment-instances-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instancesSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-summary)))
    (aws-sdk/generator/shape::to-query-params "errorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-get-deployments-input (:copier common-lisp:nil))
   (deployment-ids common-lisp:nil :type
    (common-lisp:or deployments-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-deployments-input
                    'make-batch-get-deployments-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-deployments-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-deployments-output (:copier common-lisp:nil))
   (deployments-info common-lisp:nil :type
    (common-lisp:or deployments-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-deployments-output
                    'make-batch-get-deployments-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-deployments-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentsInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployments-info))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-on-premises-instances-input (:copier common-lisp:nil))
   (instance-names common-lisp:nil :type
    (common-lisp:or instance-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-on-premises-instances-input
                    'make-batch-get-on-premises-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-on-premises-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-on-premises-instances-output (:copier common-lisp:nil))
   (instance-infos common-lisp:nil :type
    (common-lisp:or instance-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-on-premises-instances-output
                    'make-batch-get-on-premises-instances-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-on-premises-instances-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceInfos"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-infos))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-limit-exceeded-exception
                    'make-batch-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (blue-green-deployment-configuration (:copier common-lisp:nil))
   (terminate-blue-instances-on-deployment-success common-lisp:nil :type
    (common-lisp:or blue-instance-termination-option common-lisp:null))
   (deployment-ready-option common-lisp:nil :type
    (common-lisp:or deployment-ready-option common-lisp:null))
   (green-fleet-provisioning-option common-lisp:nil :type
    (common-lisp:or green-fleet-provisioning-option common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'blue-green-deployment-configuration
                    'make-blue-green-deployment-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          blue-green-deployment-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "terminateBlueInstancesOnDeploymentSuccess"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'terminate-blue-instances-on-deployment-success)))
    (aws-sdk/generator/shape::to-query-params "deploymentReadyOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-ready-option)))
    (aws-sdk/generator/shape::to-query-params "greenFleetProvisioningOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'green-fleet-provisioning-option))))))
(common-lisp:progn
 (common-lisp:defstruct
     (blue-instance-termination-option (:copier common-lisp:nil))
   (action common-lisp:nil :type
    (common-lisp:or instance-action common-lisp:null))
   (termination-wait-time-in-minutes common-lisp:nil :type
    (common-lisp:or duration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'blue-instance-termination-option
                    'make-blue-instance-termination-option))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          blue-instance-termination-option))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "terminationWaitTimeInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-wait-time-in-minutes))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (bucket-name-filter-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'bucket-name-filter-required-exception
                    'make-bucket-name-filter-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bucket-name-filter-required-exception))
   (common-lisp:append)))
(common-lisp:deftype bundle-type () 'common-lisp:string)
(common-lisp:deftype commit-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (continue-deployment-input (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'continue-deployment-input
                    'make-continue-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          continue-deployment-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-application-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-input 'make-create-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-application-output (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or application-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-output
                    'make-create-application-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-config-input (:copier common-lisp:nil))
   (deployment-config-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":deploymentconfigname is required"))
    :type (common-lisp:or deployment-config-name common-lisp:null))
   (minimum-healthy-hosts
    (common-lisp:error
     #A((32) common-lisp:base-char . ":minimumhealthyhosts is required"))
    :type (common-lisp:or minimum-healthy-hosts common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-config-input
                    'make-create-deployment-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-config-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name)))
    (aws-sdk/generator/shape::to-query-params "minimumHealthyHosts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minimum-healthy-hosts))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-config-output (:copier common-lisp:nil))
   (deployment-config-id common-lisp:nil :type
    (common-lisp:or deployment-config-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-config-output
                    'make-create-deployment-config-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-config-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentConfigId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-group-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (deployment-group-name
    (common-lisp:error
     #A((32) common-lisp:base-char . ":deploymentgroupname is required"))
    :type (common-lisp:or deployment-group-name common-lisp:null))
   (deployment-config-name common-lisp:nil :type
    (common-lisp:or deployment-config-name common-lisp:null))
   (ec2tag-filters common-lisp:nil :type
    (common-lisp:or ec2tag-filter-list common-lisp:null))
   (on-premises-instance-tag-filters common-lisp:nil :type
    (common-lisp:or tag-filter-list common-lisp:null))
   (auto-scaling-groups common-lisp:nil :type
    (common-lisp:or auto-scaling-group-name-list common-lisp:null))
   (service-role-arn
    (common-lisp:error
     #A((27) common-lisp:base-char . ":servicerolearn is required"))
    :type (common-lisp:or role common-lisp:null))
   (trigger-configurations common-lisp:nil :type
    (common-lisp:or trigger-config-list common-lisp:null))
   (alarm-configuration common-lisp:nil :type
    (common-lisp:or alarm-configuration common-lisp:null))
   (auto-rollback-configuration common-lisp:nil :type
    (common-lisp:or auto-rollback-configuration common-lisp:null))
   (deployment-style common-lisp:nil :type
    (common-lisp:or deployment-style common-lisp:null))
   (blue-green-deployment-configuration common-lisp:nil :type
    (common-lisp:or blue-green-deployment-configuration common-lisp:null))
   (load-balancer-info common-lisp:nil :type
    (common-lisp:or load-balancer-info common-lisp:null))
   (ec2tag-set common-lisp:nil :type
    (common-lisp:or ec2tag-set common-lisp:null))
   (on-premises-tag-set common-lisp:nil :type
    (common-lisp:or on-premises-tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-group-input
                    'make-create-deployment-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-group-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name)))
    (aws-sdk/generator/shape::to-query-params "ec2TagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-filters)))
    (aws-sdk/generator/shape::to-query-params "onPremisesInstanceTagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-premises-instance-tag-filters)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "serviceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "triggerConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger-configurations)))
    (aws-sdk/generator/shape::to-query-params "alarmConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarm-configuration)))
    (aws-sdk/generator/shape::to-query-params "autoRollbackConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-rollback-configuration)))
    (aws-sdk/generator/shape::to-query-params "deploymentStyle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-style)))
    (aws-sdk/generator/shape::to-query-params
     "blueGreenDeploymentConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'blue-green-deployment-configuration)))
    (aws-sdk/generator/shape::to-query-params "loadBalancerInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-info)))
    (aws-sdk/generator/shape::to-query-params "ec2TagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-set)))
    (aws-sdk/generator/shape::to-query-params "onPremisesTagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-premises-tag-set))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-group-output (:copier common-lisp:nil))
   (deployment-group-id common-lisp:nil :type
    (common-lisp:or deployment-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-group-output
                    'make-create-deployment-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-group-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-deployment-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (deployment-group-name common-lisp:nil :type
    (common-lisp:or deployment-group-name common-lisp:null))
   (revision common-lisp:nil :type
    (common-lisp:or revision-location common-lisp:null))
   (deployment-config-name common-lisp:nil :type
    (common-lisp:or deployment-config-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (ignore-application-stop-failures common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (target-instances common-lisp:nil :type
    (common-lisp:or target-instances common-lisp:null))
   (auto-rollback-configuration common-lisp:nil :type
    (common-lisp:or auto-rollback-configuration common-lisp:null))
   (update-outdated-instances-only common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (file-exists-behavior common-lisp:nil :type
    (common-lisp:or file-exists-behavior common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-input 'make-create-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-name)))
    (aws-sdk/generator/shape::to-query-params "revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision)))
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ignoreApplicationStopFailures"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ignore-application-stop-failures)))
    (aws-sdk/generator/shape::to-query-params "targetInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-instances)))
    (aws-sdk/generator/shape::to-query-params "autoRollbackConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-rollback-configuration)))
    (aws-sdk/generator/shape::to-query-params "updateOutdatedInstancesOnly"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-outdated-instances-only)))
    (aws-sdk/generator/shape::to-query-params "fileExistsBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-exists-behavior))))))
(common-lisp:progn
 (common-lisp:defstruct (create-deployment-output (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-output 'make-create-deployment-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-application-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-input 'make-delete-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-deployment-config-input (:copier common-lisp:nil))
   (deployment-config-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":deploymentconfigname is required"))
    :type (common-lisp:or deployment-config-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-config-input
                    'make-delete-deployment-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-deployment-config-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-deployment-group-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (deployment-group-name
    (common-lisp:error
     #A((32) common-lisp:base-char . ":deploymentgroupname is required"))
    :type (common-lisp:or deployment-group-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-group-input
                    'make-delete-deployment-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-deployment-group-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-deployment-group-output (:copier common-lisp:nil))
   (hooks-not-cleaned-up common-lisp:nil :type
    (common-lisp:or auto-scaling-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-group-output
                    'make-delete-deployment-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-deployment-group-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "hooksNotCleanedUp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hooks-not-cleaned-up))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-already-completed-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-already-completed-exception
                    'make-deployment-already-completed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-already-completed-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-config-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-config-already-exists-exception
                    'make-deployment-config-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-config-already-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-config-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-config-does-not-exist-exception
                    'make-deployment-config-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-config-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:deftype deployment-config-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-config-in-use-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-config-in-use-exception
                    'make-deployment-config-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-config-in-use-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (deployment-config-info (:copier common-lisp:nil))
   (deployment-config-id common-lisp:nil :type
    (common-lisp:or deployment-config-id common-lisp:null))
   (deployment-config-name common-lisp:nil :type
    (common-lisp:or deployment-config-name common-lisp:null))
   (minimum-healthy-hosts common-lisp:nil :type
    (common-lisp:or minimum-healthy-hosts common-lisp:null))
   (create-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-config-info 'make-deployment-config-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-config-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentConfigId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-id)))
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name)))
    (aws-sdk/generator/shape::to-query-params "minimumHealthyHosts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minimum-healthy-hosts)))
    (aws-sdk/generator/shape::to-query-params "createTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-time))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-config-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-config-limit-exceeded-exception
                    'make-deployment-config-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-config-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype deployment-config-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-config-name-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-config-name-required-exception
                    'make-deployment-config-name-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-config-name-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype deployment-configs-list ()
   '(trivial-types:proper-list deployment-config-name))
 (common-lisp:defun |make-deployment-configs-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-config-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype deployment-creator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-does-not-exist-exception
                    'make-deployment-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-group-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-group-already-exists-exception
                    'make-deployment-group-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-group-already-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-group-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-group-does-not-exist-exception
                    'make-deployment-group-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-group-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:deftype deployment-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (deployment-group-info (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (deployment-group-id common-lisp:nil :type
    (common-lisp:or deployment-group-id common-lisp:null))
   (deployment-group-name common-lisp:nil :type
    (common-lisp:or deployment-group-name common-lisp:null))
   (deployment-config-name common-lisp:nil :type
    (common-lisp:or deployment-config-name common-lisp:null))
   (ec2tag-filters common-lisp:nil :type
    (common-lisp:or ec2tag-filter-list common-lisp:null))
   (on-premises-instance-tag-filters common-lisp:nil :type
    (common-lisp:or tag-filter-list common-lisp:null))
   (auto-scaling-groups common-lisp:nil :type
    (common-lisp:or auto-scaling-group-list common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or role common-lisp:null))
   (target-revision common-lisp:nil :type
    (common-lisp:or revision-location common-lisp:null))
   (trigger-configurations common-lisp:nil :type
    (common-lisp:or trigger-config-list common-lisp:null))
   (alarm-configuration common-lisp:nil :type
    (common-lisp:or alarm-configuration common-lisp:null))
   (auto-rollback-configuration common-lisp:nil :type
    (common-lisp:or auto-rollback-configuration common-lisp:null))
   (deployment-style common-lisp:nil :type
    (common-lisp:or deployment-style common-lisp:null))
   (blue-green-deployment-configuration common-lisp:nil :type
    (common-lisp:or blue-green-deployment-configuration common-lisp:null))
   (load-balancer-info common-lisp:nil :type
    (common-lisp:or load-balancer-info common-lisp:null))
   (last-successful-deployment common-lisp:nil :type
    (common-lisp:or last-deployment-info common-lisp:null))
   (last-attempted-deployment common-lisp:nil :type
    (common-lisp:or last-deployment-info common-lisp:null))
   (ec2tag-set common-lisp:nil :type
    (common-lisp:or ec2tag-set common-lisp:null))
   (on-premises-tag-set common-lisp:nil :type
    (common-lisp:or on-premises-tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-group-info 'make-deployment-group-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-group-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-id)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name)))
    (aws-sdk/generator/shape::to-query-params "ec2TagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-filters)))
    (aws-sdk/generator/shape::to-query-params "onPremisesInstanceTagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-premises-instance-tag-filters)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "serviceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "targetRevision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-revision)))
    (aws-sdk/generator/shape::to-query-params "triggerConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger-configurations)))
    (aws-sdk/generator/shape::to-query-params "alarmConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarm-configuration)))
    (aws-sdk/generator/shape::to-query-params "autoRollbackConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-rollback-configuration)))
    (aws-sdk/generator/shape::to-query-params "deploymentStyle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-style)))
    (aws-sdk/generator/shape::to-query-params
     "blueGreenDeploymentConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'blue-green-deployment-configuration)))
    (aws-sdk/generator/shape::to-query-params "loadBalancerInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-info)))
    (aws-sdk/generator/shape::to-query-params "lastSuccessfulDeployment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-successful-deployment)))
    (aws-sdk/generator/shape::to-query-params "lastAttemptedDeployment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-attempted-deployment)))
    (aws-sdk/generator/shape::to-query-params "ec2TagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-set)))
    (aws-sdk/generator/shape::to-query-params "onPremisesTagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-premises-tag-set))))))
(common-lisp:progn
 (common-lisp:deftype deployment-group-info-list ()
   '(trivial-types:proper-list deployment-group-info))
 (common-lisp:defun |make-deployment-group-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-group-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-group-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-group-limit-exceeded-exception
                    'make-deployment-group-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-group-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype deployment-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-group-name-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-group-name-required-exception
                    'make-deployment-group-name-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-group-name-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype deployment-groups-list ()
   '(trivial-types:proper-list deployment-group-name))
 (common-lisp:defun |make-deployment-groups-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-group-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype deployment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-id-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-id-required-exception
                    'make-deployment-id-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-id-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (deployment-info (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (deployment-group-name common-lisp:nil :type
    (common-lisp:or deployment-group-name common-lisp:null))
   (deployment-config-name common-lisp:nil :type
    (common-lisp:or deployment-config-name common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (previous-revision common-lisp:nil :type
    (common-lisp:or revision-location common-lisp:null))
   (revision common-lisp:nil :type
    (common-lisp:or revision-location common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or deployment-status common-lisp:null))
   (error-information common-lisp:nil :type
    (common-lisp:or error-information common-lisp:null))
   (create-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (complete-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deployment-overview common-lisp:nil :type
    (common-lisp:or deployment-overview common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (creator common-lisp:nil :type
    (common-lisp:or deployment-creator common-lisp:null))
   (ignore-application-stop-failures common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-rollback-configuration common-lisp:nil :type
    (common-lisp:or auto-rollback-configuration common-lisp:null))
   (update-outdated-instances-only common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (rollback-info common-lisp:nil :type
    (common-lisp:or rollback-info common-lisp:null))
   (deployment-style common-lisp:nil :type
    (common-lisp:or deployment-style common-lisp:null))
   (target-instances common-lisp:nil :type
    (common-lisp:or target-instances common-lisp:null))
   (instance-termination-wait-time-started common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (blue-green-deployment-configuration common-lisp:nil :type
    (common-lisp:or blue-green-deployment-configuration common-lisp:null))
   (load-balancer-info common-lisp:nil :type
    (common-lisp:or load-balancer-info common-lisp:null))
   (additional-deployment-status-info common-lisp:nil :type
    (common-lisp:or additional-deployment-status-info common-lisp:null))
   (file-exists-behavior common-lisp:nil :type
    (common-lisp:or file-exists-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployment-info 'make-deployment-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployment-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "previousRevision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'previous-revision)))
    (aws-sdk/generator/shape::to-query-params "revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "errorInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-information)))
    (aws-sdk/generator/shape::to-query-params "createTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-time)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "completeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'complete-time)))
    (aws-sdk/generator/shape::to-query-params "deploymentOverview"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-overview)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "creator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creator)))
    (aws-sdk/generator/shape::to-query-params "ignoreApplicationStopFailures"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ignore-application-stop-failures)))
    (aws-sdk/generator/shape::to-query-params "autoRollbackConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-rollback-configuration)))
    (aws-sdk/generator/shape::to-query-params "updateOutdatedInstancesOnly"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-outdated-instances-only)))
    (aws-sdk/generator/shape::to-query-params "rollbackInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rollback-info)))
    (aws-sdk/generator/shape::to-query-params "deploymentStyle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-style)))
    (aws-sdk/generator/shape::to-query-params "targetInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-instances)))
    (aws-sdk/generator/shape::to-query-params
     "instanceTerminationWaitTimeStarted"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'instance-termination-wait-time-started)))
    (aws-sdk/generator/shape::to-query-params
     "blueGreenDeploymentConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'blue-green-deployment-configuration)))
    (aws-sdk/generator/shape::to-query-params "loadBalancerInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-info)))
    (aws-sdk/generator/shape::to-query-params "additionalDeploymentStatusInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-deployment-status-info)))
    (aws-sdk/generator/shape::to-query-params "fileExistsBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-exists-behavior))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-is-not-in-ready-state-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-is-not-in-ready-state-exception
                    'make-deployment-is-not-in-ready-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-is-not-in-ready-state-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-limit-exceeded-exception
                    'make-deployment-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-not-started-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-not-started-exception
                    'make-deployment-not-started-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-not-started-exception))
   (common-lisp:append)))
(common-lisp:deftype deployment-option () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (deployment-overview (:copier common-lisp:nil))
   (pending common-lisp:nil :type
    (common-lisp:or instance-count common-lisp:null))
   (in-progress common-lisp:nil :type
    (common-lisp:or instance-count common-lisp:null))
   (succeeded common-lisp:nil :type
    (common-lisp:or instance-count common-lisp:null))
   (failed common-lisp:nil :type
    (common-lisp:or instance-count common-lisp:null))
   (skipped common-lisp:nil :type
    (common-lisp:or instance-count common-lisp:null))
   (ready common-lisp:nil :type
    (common-lisp:or instance-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-overview 'make-deployment-overview))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployment-overview))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Pending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending)))
    (aws-sdk/generator/shape::to-query-params "InProgress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'in-progress)))
    (aws-sdk/generator/shape::to-query-params "Succeeded"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'succeeded)))
    (aws-sdk/generator/shape::to-query-params "Failed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed)))
    (aws-sdk/generator/shape::to-query-params "Skipped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'skipped)))
    (aws-sdk/generator/shape::to-query-params "Ready"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ready))))))
(common-lisp:deftype deployment-ready-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (deployment-ready-option (:copier common-lisp:nil))
   (action-on-timeout common-lisp:nil :type
    (common-lisp:or deployment-ready-action common-lisp:null))
   (wait-time-in-minutes common-lisp:nil :type
    (common-lisp:or duration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-ready-option 'make-deployment-ready-option))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deployment-ready-option))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "actionOnTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-on-timeout)))
    (aws-sdk/generator/shape::to-query-params "waitTimeInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'wait-time-in-minutes))))))
(common-lisp:deftype deployment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype deployment-status-list ()
   '(trivial-types:proper-list deployment-status))
 (common-lisp:defun |make-deployment-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (deployment-style (:copier common-lisp:nil))
   (deployment-type common-lisp:nil :type
    (common-lisp:or deployment-type common-lisp:null))
   (deployment-option common-lisp:nil :type
    (common-lisp:or deployment-option common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-style 'make-deployment-style))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployment-style))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-type)))
    (aws-sdk/generator/shape::to-query-params "deploymentOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-option))))))
(common-lisp:deftype deployment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype deployments-info-list ()
   '(trivial-types:proper-list deployment-info))
 (common-lisp:defun |make-deployments-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype deployments-list ()
   '(trivial-types:proper-list deployment-id))
 (common-lisp:defun |make-deployments-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-on-premises-instance-input (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or instance-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-on-premises-instance-input
                    'make-deregister-on-premises-instance-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-on-premises-instance-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (description-too-long-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'description-too-long-exception
                    'make-description-too-long-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          description-too-long-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (diagnostics (:copier common-lisp:nil))
   (error-code common-lisp:nil :type
    (common-lisp:or lifecycle-error-code common-lisp:null))
   (script-name common-lisp:nil :type
    (common-lisp:or script-name common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or lifecycle-message common-lisp:null))
   (log-tail common-lisp:nil :type (common-lisp:or log-tail common-lisp:null)))
 (common-lisp:export (common-lisp:list 'diagnostics 'make-diagnostics))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape diagnostics))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "errorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "scriptName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'script-name)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "logTail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-tail))))))
(common-lisp:deftype duration () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (ec2tag-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or value common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or ec2tag-filter-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ec2tag-filter 'make-ec2tag-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ec2tag-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype ec2tag-filter-list ()
   '(trivial-types:proper-list ec2tag-filter))
 (common-lisp:defun |make-ec2tag-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2tag-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ec2tag-filter-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (ec2tag-set (:copier common-lisp:nil))
   (ec2tag-set-list common-lisp:nil :type
    (common-lisp:or ec2tag-set-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ec2tag-set 'make-ec2tag-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ec2tag-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ec2TagSetList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-set-list))))))
(common-lisp:progn
 (common-lisp:deftype ec2tag-set-list ()
   '(trivial-types:proper-list ec2tag-filter-list))
 (common-lisp:defun |make-ec2tag-set-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2tag-filter-list))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (elbinfo (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or elbname common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elbinfo 'make-elbinfo))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape elbinfo))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype elbinfo-list () '(trivial-types:proper-list elbinfo))
 (common-lisp:defun |make-elbinfo-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list elbinfo))
   aws-sdk/generator/shape::members))
(common-lisp:deftype elbname () 'common-lisp:string)
(common-lisp:deftype etag () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (error-information (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'error-information 'make-error-information))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape error-information))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype file-exists-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (generic-revision-info (:copier common-lisp:nil))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (deployment-groups common-lisp:nil :type
    (common-lisp:or deployment-groups-list common-lisp:null))
   (first-used-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-used-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (register-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generic-revision-info 'make-generic-revision-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generic-revision-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-groups)))
    (aws-sdk/generator/shape::to-query-params "firstUsedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'first-used-time)))
    (aws-sdk/generator/shape::to-query-params "lastUsedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-used-time)))
    (aws-sdk/generator/shape::to-query-params "registerTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'register-time))))))
(common-lisp:progn
 (common-lisp:defstruct (get-application-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-input 'make-get-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-application-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-application-output (:copier common-lisp:nil))
   (application common-lisp:nil :type
    (common-lisp:or application-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-output 'make-get-application-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-application-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "application"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-revision-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (revision
    (common-lisp:error
     #A((21) common-lisp:base-char . ":revision is required"))
    :type (common-lisp:or revision-location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-revision-input
                    'make-get-application-revision-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-application-revision-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-revision-output (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (revision common-lisp:nil :type
    (common-lisp:or revision-location common-lisp:null))
   (revision-info common-lisp:nil :type
    (common-lisp:or generic-revision-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-revision-output
                    'make-get-application-revision-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-application-revision-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision)))
    (aws-sdk/generator/shape::to-query-params "revisionInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision-info))))))
(common-lisp:progn
 (common-lisp:defstruct (get-deployment-config-input (:copier common-lisp:nil))
   (deployment-config-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":deploymentconfigname is required"))
    :type (common-lisp:or deployment-config-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-config-input
                    'make-get-deployment-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-config-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployment-config-output (:copier common-lisp:nil))
   (deployment-config-info common-lisp:nil :type
    (common-lisp:or deployment-config-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-config-output
                    'make-get-deployment-config-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-config-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentConfigInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-info))))))
(common-lisp:progn
 (common-lisp:defstruct (get-deployment-group-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (deployment-group-name
    (common-lisp:error
     #A((32) common-lisp:base-char . ":deploymentgroupname is required"))
    :type (common-lisp:or deployment-group-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-group-input
                    'make-get-deployment-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-group-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-deployment-group-output (:copier common-lisp:nil))
   (deployment-group-info common-lisp:nil :type
    (common-lisp:or deployment-group-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-group-output
                    'make-get-deployment-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-group-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentGroupInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-info))))))
(common-lisp:progn
 (common-lisp:defstruct (get-deployment-input (:copier common-lisp:nil))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or deployment-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-input 'make-get-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-deployment-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployment-instance-input (:copier common-lisp:nil))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or deployment-id common-lisp:null))
   (instance-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":instanceid is required"))
    :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-instance-input
                    'make-get-deployment-instance-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-instance-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "instanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployment-instance-output (:copier common-lisp:nil))
   (instance-summary common-lisp:nil :type
    (common-lisp:or instance-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-instance-output
                    'make-get-deployment-instance-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-instance-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-summary))))))
(common-lisp:progn
 (common-lisp:defstruct (get-deployment-output (:copier common-lisp:nil))
   (deployment-info common-lisp:nil :type
    (common-lisp:or deployment-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-output 'make-get-deployment-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-info))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-on-premises-instance-input (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or instance-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-on-premises-instance-input
                    'make-get-on-premises-instance-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-on-premises-instance-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-on-premises-instance-output (:copier common-lisp:nil))
   (instance-info common-lisp:nil :type
    (common-lisp:or instance-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-on-premises-instance-output
                    'make-get-on-premises-instance-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-on-premises-instance-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-info))))))
(common-lisp:progn
 (common-lisp:defstruct
     (git-hub-account-token-does-not-exist-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'git-hub-account-token-does-not-exist-exception
                    'make-git-hub-account-token-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          git-hub-account-token-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:deftype git-hub-account-token-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype git-hub-account-token-name-list ()
   '(trivial-types:proper-list git-hub-account-token-name))
 (common-lisp:defun |make-git-hub-account-token-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            git-hub-account-token-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (git-hub-location (:copier common-lisp:nil))
   (repository common-lisp:nil :type
    (common-lisp:or repository common-lisp:null))
   (commit-id common-lisp:nil :type
    (common-lisp:or commit-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'git-hub-location 'make-git-hub-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape git-hub-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repository"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository)))
    (aws-sdk/generator/shape::to-query-params "commitId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'commit-id))))))
(common-lisp:deftype green-fleet-provisioning-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (green-fleet-provisioning-option (:copier common-lisp:nil))
   (action common-lisp:nil :type
    (common-lisp:or green-fleet-provisioning-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'green-fleet-provisioning-option
                    'make-green-fleet-provisioning-option))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          green-fleet-provisioning-option))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action))))))
(common-lisp:progn
 (common-lisp:defstruct (iam-arn-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'iam-arn-required-exception
                    'make-iam-arn-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          iam-arn-required-exception))
   (common-lisp:append)))
(common-lisp:deftype iam-session-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (iam-session-arn-already-registered-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'iam-session-arn-already-registered-exception
                    'make-iam-session-arn-already-registered-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          iam-session-arn-already-registered-exception))
   (common-lisp:append)))
(common-lisp:deftype iam-user-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (iam-user-arn-already-registered-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'iam-user-arn-already-registered-exception
                    'make-iam-user-arn-already-registered-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          iam-user-arn-already-registered-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (iam-user-arn-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'iam-user-arn-required-exception
                    'make-iam-user-arn-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          iam-user-arn-required-exception))
   (common-lisp:append)))
(common-lisp:deftype instance-action () 'common-lisp:string)
(common-lisp:deftype instance-arn () 'common-lisp:string)
(common-lisp:deftype instance-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-does-not-exist-exception
                    'make-instance-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-id-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-id-required-exception
                    'make-instance-id-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-id-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (instance-info (:copier common-lisp:nil))
   (instance-name common-lisp:nil :type
    (common-lisp:or instance-name common-lisp:null))
   (iam-session-arn common-lisp:nil :type
    (common-lisp:or iam-session-arn common-lisp:null))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or iam-user-arn common-lisp:null))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (register-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deregister-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-info 'make-instance-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name)))
    (aws-sdk/generator/shape::to-query-params "iamSessionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-session-arn)))
    (aws-sdk/generator/shape::to-query-params "iamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "instanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-arn)))
    (aws-sdk/generator/shape::to-query-params "registerTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'register-time)))
    (aws-sdk/generator/shape::to-query-params "deregisterTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deregister-time)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:deftype instance-info-list ()
   '(trivial-types:proper-list instance-info))
 (common-lisp:defun |make-instance-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-limit-exceeded-exception
                    'make-instance-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype instance-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-name-already-registered-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-name-already-registered-exception
                    'make-instance-name-already-registered-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-name-already-registered-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype instance-name-list ()
   '(trivial-types:proper-list instance-name))
 (common-lisp:defun |make-instance-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-name-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-name-required-exception
                    'make-instance-name-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-name-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-not-registered-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-not-registered-exception
                    'make-instance-not-registered-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          instance-not-registered-exception))
   (common-lisp:append)))
(common-lisp:deftype instance-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-status-list ()
   '(trivial-types:proper-list instance-status))
 (common-lisp:defun |make-instance-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-summary (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-status common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (lifecycle-events common-lisp:nil :type
    (common-lisp:or lifecycle-event-list common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-summary 'make-instance-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "instanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "lifecycleEvents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-events)))
    (aws-sdk/generator/shape::to-query-params "instanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type))))))
(common-lisp:progn
 (common-lisp:deftype instance-summary-list ()
   '(trivial-types:proper-list instance-summary))
 (common-lisp:defun |make-instance-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-type-list ()
   '(trivial-types:proper-list instance-type))
 (common-lisp:defun |make-instance-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instances-list ()
   '(trivial-types:proper-list instance-id))
 (common-lisp:defun |make-instances-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-alarm-config-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-alarm-config-exception
                    'make-invalid-alarm-config-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-alarm-config-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-application-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-application-name-exception
                    'make-invalid-application-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-application-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-auto-rollback-config-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-auto-rollback-config-exception
                    'make-invalid-auto-rollback-config-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-auto-rollback-config-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-auto-scaling-group-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-auto-scaling-group-exception
                    'make-invalid-auto-scaling-group-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-auto-scaling-group-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-blue-green-deployment-configuration-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-blue-green-deployment-configuration-exception
                    'make-invalid-blue-green-deployment-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-blue-green-deployment-configuration-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-bucket-name-filter-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-bucket-name-filter-exception
                    'make-invalid-bucket-name-filter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-bucket-name-filter-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-deployed-state-filter-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-deployed-state-filter-exception
                    'make-invalid-deployed-state-filter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-deployed-state-filter-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-deployment-config-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-deployment-config-name-exception
                    'make-invalid-deployment-config-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-deployment-config-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-deployment-group-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-deployment-group-name-exception
                    'make-invalid-deployment-group-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-deployment-group-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-deployment-id-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-deployment-id-exception
                    'make-invalid-deployment-id-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-deployment-id-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-deployment-instance-type-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-deployment-instance-type-exception
                    'make-invalid-deployment-instance-type-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-deployment-instance-type-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-deployment-status-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-deployment-status-exception
                    'make-invalid-deployment-status-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-deployment-status-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-deployment-style-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-deployment-style-exception
                    'make-invalid-deployment-style-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-deployment-style-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-ec2tag-combination-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-ec2tag-combination-exception
                    'make-invalid-ec2tag-combination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-ec2tag-combination-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-ec2tag-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-ec2tag-exception 'make-invalid-ec2tag-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-ec2tag-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-file-exists-behavior-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-file-exists-behavior-exception
                    'make-invalid-file-exists-behavior-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-file-exists-behavior-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-iam-session-arn-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-iam-session-arn-exception
                    'make-invalid-iam-session-arn-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-iam-session-arn-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-iam-user-arn-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-iam-user-arn-exception
                    'make-invalid-iam-user-arn-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-iam-user-arn-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-instance-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-instance-name-exception
                    'make-invalid-instance-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-instance-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-instance-status-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-instance-status-exception
                    'make-invalid-instance-status-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-instance-status-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-instance-type-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-instance-type-exception
                    'make-invalid-instance-type-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-instance-type-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-key-prefix-filter-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-key-prefix-filter-exception
                    'make-invalid-key-prefix-filter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-key-prefix-filter-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-load-balancer-info-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-load-balancer-info-exception
                    'make-invalid-load-balancer-info-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-load-balancer-info-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-minimum-healthy-host-value-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-minimum-healthy-host-value-exception
                    'make-invalid-minimum-healthy-host-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-minimum-healthy-host-value-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-next-token-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'make-invalid-next-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-next-token-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-on-premises-tag-combination-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-on-premises-tag-combination-exception
                    'make-invalid-on-premises-tag-combination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-on-premises-tag-combination-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-operation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-operation-exception
                    'make-invalid-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-operation-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-registration-status-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-registration-status-exception
                    'make-invalid-registration-status-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-registration-status-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-revision-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-revision-exception
                    'make-invalid-revision-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-revision-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-role-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-role-exception 'make-invalid-role-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-role-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-sort-by-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-sort-by-exception
                    'make-invalid-sort-by-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-sort-by-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-sort-order-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-sort-order-exception
                    'make-invalid-sort-order-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-sort-order-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-tag-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-tag-exception 'make-invalid-tag-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-tag-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-tag-filter-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-tag-filter-exception
                    'make-invalid-tag-filter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-tag-filter-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-target-instances-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-target-instances-exception
                    'make-invalid-target-instances-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-target-instances-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-time-range-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-time-range-exception
                    'make-invalid-time-range-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-time-range-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-trigger-config-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-trigger-config-exception
                    'make-invalid-trigger-config-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-trigger-config-exception))
   (common-lisp:append)))
(common-lisp:deftype key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (last-deployment-info (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or deployment-status common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (create-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'last-deployment-info 'make-last-deployment-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape last-deployment-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "createTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-time))))))
(common-lisp:deftype lifecycle-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (lifecycle-event (:copier common-lisp:nil))
   (lifecycle-event-name common-lisp:nil :type
    (common-lisp:or lifecycle-event-name common-lisp:null))
   (diagnostics common-lisp:nil :type
    (common-lisp:or diagnostics common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or lifecycle-event-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lifecycle-event 'make-lifecycle-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lifecycle-event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "lifecycleEventName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-event-name)))
    (aws-sdk/generator/shape::to-query-params "diagnostics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'diagnostics)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype lifecycle-event-list ()
   '(trivial-types:proper-list lifecycle-event))
 (common-lisp:defun |make-lifecycle-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lifecycle-event))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lifecycle-event-name () 'common-lisp:string)
(common-lisp:deftype lifecycle-event-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-hook-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-hook-limit-exceeded-exception
                    'make-lifecycle-hook-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lifecycle-hook-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype lifecycle-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-revisions-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (sort-by common-lisp:nil :type
    (common-lisp:or application-revision-sort-by common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null))
   (s3bucket common-lisp:nil :type (common-lisp:or s3bucket common-lisp:null))
   (s3key-prefix common-lisp:nil :type (common-lisp:or s3key common-lisp:null))
   (deployed common-lisp:nil :type
    (common-lisp:or list-state-filter-action common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-revisions-input
                    'make-list-application-revisions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-application-revisions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "sortBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-by)))
    (aws-sdk/generator/shape::to-query-params "sortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "s3Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket)))
    (aws-sdk/generator/shape::to-query-params "s3KeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3key-prefix)))
    (aws-sdk/generator/shape::to-query-params "deployed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployed)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-revisions-output (:copier common-lisp:nil))
   (revisions common-lisp:nil :type
    (common-lisp:or revision-location-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-revisions-output
                    'make-list-application-revisions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-application-revisions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "revisions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revisions)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-applications-input (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applications-input 'make-list-applications-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-applications-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-applications-output (:copier common-lisp:nil))
   (applications common-lisp:nil :type
    (common-lisp:or applications-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applications-output 'make-list-applications-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-applications-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deployment-configs-input (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployment-configs-input
                    'make-list-deployment-configs-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployment-configs-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deployment-configs-output (:copier common-lisp:nil))
   (deployment-configs-list common-lisp:nil :type
    (common-lisp:or deployment-configs-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployment-configs-output
                    'make-list-deployment-configs-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployment-configs-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentConfigsList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-configs-list)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deployment-groups-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployment-groups-input
                    'make-list-deployment-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployment-groups-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deployment-groups-output (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (deployment-groups common-lisp:nil :type
    (common-lisp:or deployment-groups-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployment-groups-output
                    'make-list-deployment-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployment-groups-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-groups)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deployment-instances-input (:copier common-lisp:nil))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or deployment-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (instance-status-filter common-lisp:nil :type
    (common-lisp:or instance-status-list common-lisp:null))
   (instance-type-filter common-lisp:nil :type
    (common-lisp:or instance-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployment-instances-input
                    'make-list-deployment-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployment-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "instanceStatusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-status-filter)))
    (aws-sdk/generator/shape::to-query-params "instanceTypeFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type-filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deployment-instances-output (:copier common-lisp:nil))
   (instances-list common-lisp:nil :type
    (common-lisp:or instances-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployment-instances-output
                    'make-list-deployment-instances-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployment-instances-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instancesList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-list)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-deployments-input (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (deployment-group-name common-lisp:nil :type
    (common-lisp:or deployment-group-name common-lisp:null))
   (include-only-statuses common-lisp:nil :type
    (common-lisp:or deployment-status-list common-lisp:null))
   (create-time-range common-lisp:nil :type
    (common-lisp:or time-range common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployments-input 'make-list-deployments-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployments-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-group-name)))
    (aws-sdk/generator/shape::to-query-params "includeOnlyStatuses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-only-statuses)))
    (aws-sdk/generator/shape::to-query-params "createTimeRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-time-range)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-deployments-output (:copier common-lisp:nil))
   (deployments common-lisp:nil :type
    (common-lisp:or deployments-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deployments-output 'make-list-deployments-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-deployments-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deployments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployments)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-git-hub-account-token-names-input (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-git-hub-account-token-names-input
                    'make-list-git-hub-account-token-names-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-git-hub-account-token-names-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-git-hub-account-token-names-output (:copier common-lisp:nil))
   (token-name-list common-lisp:nil :type
    (common-lisp:or git-hub-account-token-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-git-hub-account-token-names-output
                    'make-list-git-hub-account-token-names-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-git-hub-account-token-names-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tokenNameList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token-name-list)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-on-premises-instances-input (:copier common-lisp:nil))
   (registration-status common-lisp:nil :type
    (common-lisp:or registration-status common-lisp:null))
   (tag-filters common-lisp:nil :type
    (common-lisp:or tag-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-on-premises-instances-input
                    'make-list-on-premises-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-on-premises-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registrationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-status)))
    (aws-sdk/generator/shape::to-query-params "tagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-filters)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-on-premises-instances-output (:copier common-lisp:nil))
   (instance-names common-lisp:nil :type
    (common-lisp:or instance-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-on-premises-instances-output
                    'make-list-on-premises-instances-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-on-premises-instances-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-names)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype list-state-filter-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (load-balancer-info (:copier common-lisp:nil))
   (elb-info-list common-lisp:nil :type
    (common-lisp:or elbinfo-list common-lisp:null))
   (target-group-info-list common-lisp:nil :type
    (common-lisp:or target-group-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-info 'make-load-balancer-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape load-balancer-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "elbInfoList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elb-info-list)))
    (aws-sdk/generator/shape::to-query-params "targetGroupInfoList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-info-list))))))
(common-lisp:deftype log-tail () 'common-lisp:string)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (minimum-healthy-hosts (:copier common-lisp:nil))
   (value common-lisp:nil :type
    (common-lisp:or minimum-healthy-hosts-value common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or minimum-healthy-hosts-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'minimum-healthy-hosts 'make-minimum-healthy-hosts))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          minimum-healthy-hosts))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype minimum-healthy-hosts-type () 'common-lisp:string)
(common-lisp:deftype minimum-healthy-hosts-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (multiple-iam-arns-provided-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'multiple-iam-arns-provided-exception
                    'make-multiple-iam-arns-provided-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          multiple-iam-arns-provided-exception))
   (common-lisp:append)))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (on-premises-tag-set (:copier common-lisp:nil))
   (on-premises-tag-set-list common-lisp:nil :type
    (common-lisp:or on-premises-tag-set-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'on-premises-tag-set 'make-on-premises-tag-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape on-premises-tag-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "onPremisesTagSetList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-premises-tag-set-list))))))
(common-lisp:progn
 (common-lisp:deftype on-premises-tag-set-list ()
   '(trivial-types:proper-list tag-filter-list))
 (common-lisp:defun |make-on-premises-tag-set-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-filter-list))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (register-application-revision-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (revision
    (common-lisp:error
     #A((21) common-lisp:base-char . ":revision is required"))
    :type (common-lisp:or revision-location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-application-revision-input
                    'make-register-application-revision-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-application-revision-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-on-premises-instance-input (:copier common-lisp:nil))
   (instance-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancename is required"))
    :type (common-lisp:or instance-name common-lisp:null))
   (iam-session-arn common-lisp:nil :type
    (common-lisp:or iam-session-arn common-lisp:null))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or iam-user-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-on-premises-instance-input
                    'make-register-on-premises-instance-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-on-premises-instance-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "instanceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-name)))
    (aws-sdk/generator/shape::to-query-params "iamSessionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-session-arn)))
    (aws-sdk/generator/shape::to-query-params "iamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn))))))
(common-lisp:deftype registration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-on-premises-instances-input (:copier common-lisp:nil))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null))
   (instance-names
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instancenames is required"))
    :type (common-lisp:or instance-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-on-premises-instances-input
                    'make-remove-tags-from-on-premises-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-tags-from-on-premises-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "instanceNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-names))))))
(common-lisp:deftype repository () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-validation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-validation-exception
                    'make-resource-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-validation-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (revision-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'revision-does-not-exist-exception
                    'make-revision-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          revision-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (revision-info (:copier common-lisp:nil))
   (revision-location common-lisp:nil :type
    (common-lisp:or revision-location common-lisp:null))
   (generic-revision-info common-lisp:nil :type
    (common-lisp:or generic-revision-info common-lisp:null)))
 (common-lisp:export (common-lisp:list 'revision-info 'make-revision-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape revision-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "revisionLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision-location)))
    (aws-sdk/generator/shape::to-query-params "genericRevisionInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'generic-revision-info))))))
(common-lisp:progn
 (common-lisp:deftype revision-info-list ()
   '(trivial-types:proper-list revision-info))
 (common-lisp:defun |make-revision-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list revision-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (revision-location (:copier common-lisp:nil))
   (revision-type common-lisp:nil :type
    (common-lisp:or revision-location-type common-lisp:null))
   (s3location common-lisp:nil :type
    (common-lisp:or s3location common-lisp:null))
   (git-hub-location common-lisp:nil :type
    (common-lisp:or git-hub-location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revision-location 'make-revision-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape revision-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "revisionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision-type)))
    (aws-sdk/generator/shape::to-query-params "s3Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3location)))
    (aws-sdk/generator/shape::to-query-params "gitHubLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'git-hub-location))))))
(common-lisp:progn
 (common-lisp:deftype revision-location-list ()
   '(trivial-types:proper-list revision-location))
 (common-lisp:defun |make-revision-location-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list revision-location))
   aws-sdk/generator/shape::members))
(common-lisp:deftype revision-location-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (revision-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'revision-required-exception
                    'make-revision-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          revision-required-exception))
   (common-lisp:append)))
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (role-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'role-required-exception 'make-role-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          role-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (rollback-info (:copier common-lisp:nil))
   (rollback-deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (rollback-triggering-deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (rollback-message common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rollback-info 'make-rollback-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rollback-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "rollbackDeploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rollback-deployment-id)))
    (aws-sdk/generator/shape::to-query-params "rollbackTriggeringDeploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rollback-triggering-deployment-id)))
    (aws-sdk/generator/shape::to-query-params "rollbackMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rollback-message))))))
(common-lisp:deftype s3bucket () 'common-lisp:string)
(common-lisp:deftype s3key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (s3location (:copier common-lisp:nil))
   (bucket common-lisp:nil :type (common-lisp:or s3bucket common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or s3key common-lisp:null))
   (bundle-type common-lisp:nil :type
    (common-lisp:or bundle-type common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version-id common-lisp:null))
   (e-tag common-lisp:nil :type (common-lisp:or etag common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3location 'make-s3location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "bundleType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-type)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "eTag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'e-tag))))))
(common-lisp:deftype script-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (skip-wait-time-for-instance-termination-input (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'skip-wait-time-for-instance-termination-input
                    'make-skip-wait-time-for-instance-termination-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          skip-wait-time-for-instance-termination-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id))))))
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stop-deployment-input (:copier common-lisp:nil))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or deployment-id common-lisp:null))
   (auto-rollback-enabled common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-deployment-input 'make-stop-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-deployment-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "autoRollbackEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-rollback-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-deployment-output (:copier common-lisp:nil))
   (status common-lisp:nil :type (common-lisp:or stop-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-deployment-output 'make-stop-deployment-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-deployment-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "statusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message))))))
(common-lisp:deftype stop-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or value common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or tag-filter-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-filter 'make-tag-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype tag-filter-list ()
   '(trivial-types:proper-list tag-filter))
 (common-lisp:defun |make-tag-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-filter-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-limit-exceeded-exception
                    'make-tag-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-required-exception 'make-tag-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-set-list-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-set-list-limit-exceeded-exception
                    'make-tag-set-list-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-set-list-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (target-group-info (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or target-group-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-group-info 'make-target-group-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target-group-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype target-group-info-list ()
   '(trivial-types:proper-list target-group-info))
 (common-lisp:defun |make-target-group-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-group-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (target-instances (:copier common-lisp:nil))
   (tag-filters common-lisp:nil :type
    (common-lisp:or ec2tag-filter-list common-lisp:null))
   (auto-scaling-groups common-lisp:nil :type
    (common-lisp:or auto-scaling-group-name-list common-lisp:null))
   (ec2tag-set common-lisp:nil :type
    (common-lisp:or ec2tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-instances 'make-target-instances))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target-instances))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-filters)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "ec2TagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-set))))))
(common-lisp:progn
 (common-lisp:defstruct (time-range (:copier common-lisp:nil))
   (start common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (end common-lisp:nil :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'time-range 'make-time-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape time-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "start"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start)))
    (aws-sdk/generator/shape::to-query-params "end"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end))))))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (trigger-config (:copier common-lisp:nil))
   (trigger-name common-lisp:nil :type
    (common-lisp:or trigger-name common-lisp:null))
   (trigger-target-arn common-lisp:nil :type
    (common-lisp:or trigger-target-arn common-lisp:null))
   (trigger-events common-lisp:nil :type
    (common-lisp:or trigger-event-type-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'trigger-config 'make-trigger-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape trigger-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "triggerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger-name)))
    (aws-sdk/generator/shape::to-query-params "triggerTargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger-target-arn)))
    (aws-sdk/generator/shape::to-query-params "triggerEvents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger-events))))))
(common-lisp:progn
 (common-lisp:deftype trigger-config-list ()
   '(trivial-types:proper-list trigger-config))
 (common-lisp:defun |make-trigger-config-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list trigger-config))
   aws-sdk/generator/shape::members))
(common-lisp:deftype trigger-event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype trigger-event-type-list ()
   '(trivial-types:proper-list trigger-event-type))
 (common-lisp:defun |make-trigger-event-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list trigger-event-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype trigger-name () 'common-lisp:string)
(common-lisp:deftype trigger-target-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (trigger-targets-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'trigger-targets-limit-exceeded-exception
                    'make-trigger-targets-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          trigger-targets-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-action-for-deployment-type-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'unsupported-action-for-deployment-type-exception
                    'make-unsupported-action-for-deployment-type-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-action-for-deployment-type-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-application-input (:copier common-lisp:nil))
   (application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null))
   (new-application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-input 'make-update-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "newApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-application-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-deployment-group-input (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":applicationname is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-deployment-group-name
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":currentdeploymentgroupname is required"))
    :type (common-lisp:or deployment-group-name common-lisp:null))
   (new-deployment-group-name common-lisp:nil :type
    (common-lisp:or deployment-group-name common-lisp:null))
   (deployment-config-name common-lisp:nil :type
    (common-lisp:or deployment-config-name common-lisp:null))
   (ec2tag-filters common-lisp:nil :type
    (common-lisp:or ec2tag-filter-list common-lisp:null))
   (on-premises-instance-tag-filters common-lisp:nil :type
    (common-lisp:or tag-filter-list common-lisp:null))
   (auto-scaling-groups common-lisp:nil :type
    (common-lisp:or auto-scaling-group-name-list common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or role common-lisp:null))
   (trigger-configurations common-lisp:nil :type
    (common-lisp:or trigger-config-list common-lisp:null))
   (alarm-configuration common-lisp:nil :type
    (common-lisp:or alarm-configuration common-lisp:null))
   (auto-rollback-configuration common-lisp:nil :type
    (common-lisp:or auto-rollback-configuration common-lisp:null))
   (deployment-style common-lisp:nil :type
    (common-lisp:or deployment-style common-lisp:null))
   (blue-green-deployment-configuration common-lisp:nil :type
    (common-lisp:or blue-green-deployment-configuration common-lisp:null))
   (load-balancer-info common-lisp:nil :type
    (common-lisp:or load-balancer-info common-lisp:null))
   (ec2tag-set common-lisp:nil :type
    (common-lisp:or ec2tag-set common-lisp:null))
   (on-premises-tag-set common-lisp:nil :type
    (common-lisp:or on-premises-tag-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-deployment-group-input
                    'make-update-deployment-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-deployment-group-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "applicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "currentDeploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-deployment-group-name)))
    (aws-sdk/generator/shape::to-query-params "newDeploymentGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-deployment-group-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentConfigName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-config-name)))
    (aws-sdk/generator/shape::to-query-params "ec2TagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-filters)))
    (aws-sdk/generator/shape::to-query-params "onPremisesInstanceTagFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-premises-instance-tag-filters)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "serviceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "triggerConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger-configurations)))
    (aws-sdk/generator/shape::to-query-params "alarmConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarm-configuration)))
    (aws-sdk/generator/shape::to-query-params "autoRollbackConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-rollback-configuration)))
    (aws-sdk/generator/shape::to-query-params "deploymentStyle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-style)))
    (aws-sdk/generator/shape::to-query-params
     "blueGreenDeploymentConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'blue-green-deployment-configuration)))
    (aws-sdk/generator/shape::to-query-params "loadBalancerInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-info)))
    (aws-sdk/generator/shape::to-query-params "ec2TagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2tag-set)))
    (aws-sdk/generator/shape::to-query-params "onPremisesTagSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-premises-tag-set))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-deployment-group-output (:copier common-lisp:nil))
   (hooks-not-cleaned-up common-lisp:nil :type
    (common-lisp:or auto-scaling-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-deployment-group-output
                    'make-update-deployment-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-deployment-group-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "hooksNotCleanedUp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hooks-not-cleaned-up))))))
(common-lisp:deftype value () 'common-lisp:string)
(common-lisp:deftype version-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-tags-to-on-premises-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tags instance-names)
   (common-lisp:declare (common-lisp:ignorable tags instance-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-add-tags-to-on-premises-instances-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddTagsToOnPremisesInstances")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'add-tags-to-on-premises-instances))
(common-lisp:progn
 (common-lisp:defun batch-get-application-revisions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name revisions)
   (common-lisp:declare (common-lisp:ignorable application-name revisions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-application-revisions-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetApplicationRevisions")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetApplicationRevisionsOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-application-revisions))
(common-lisp:progn
 (common-lisp:defun batch-get-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-names)
   (common-lisp:declare (common-lisp:ignorable application-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-applications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetApplications")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetApplicationsOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-applications))
(common-lisp:progn
 (common-lisp:defun batch-get-deployment-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name deployment-group-names)
   (common-lisp:declare
    (common-lisp:ignorable application-name deployment-group-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-deployment-groups-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetDeploymentGroups")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetDeploymentGroupsOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-deployment-groups))
(common-lisp:progn
 (common-lisp:defun batch-get-deployment-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id instance-ids)
   (common-lisp:declare (common-lisp:ignorable deployment-id instance-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-deployment-instances-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetDeploymentInstances")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetDeploymentInstancesOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-deployment-instances))
(common-lisp:progn
 (common-lisp:defun batch-get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-ids)
   (common-lisp:declare (common-lisp:ignorable deployment-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-deployments-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetDeployments")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetDeploymentsOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-deployments))
(common-lisp:progn
 (common-lisp:defun batch-get-on-premises-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-names)
   (common-lisp:declare (common-lisp:ignorable instance-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-on-premises-instances-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetOnPremisesInstances")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetOnPremisesInstancesOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-on-premises-instances))
(common-lisp:progn
 (common-lisp:defun continue-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-continue-deployment-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ContinueDeployment")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'continue-deployment))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name)
   (common-lisp:declare (common-lisp:ignorable application-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApplication")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateApplicationOutput" common-lisp:nil)))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name deployment-group-name
                     revision deployment-config-name description
                     ignore-application-stop-failures target-instances
                     auto-rollback-configuration update-outdated-instances-only
                     file-exists-behavior)
   (common-lisp:declare
    (common-lisp:ignorable application-name deployment-group-name revision
     deployment-config-name description ignore-application-stop-failures
     target-instances auto-rollback-configuration
     update-outdated-instances-only file-exists-behavior))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDeployment")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDeploymentOutput" common-lisp:nil)))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-deployment-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-config-name
                     minimum-healthy-hosts)
   (common-lisp:declare
    (common-lisp:ignorable deployment-config-name minimum-healthy-hosts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-config-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDeploymentConfig")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDeploymentConfigOutput" common-lisp:nil)))
 (common-lisp:export 'create-deployment-config))
(common-lisp:progn
 (common-lisp:defun create-deployment-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name deployment-group-name
                     deployment-config-name ec2tag-filters
                     on-premises-instance-tag-filters auto-scaling-groups
                     service-role-arn trigger-configurations
                     alarm-configuration auto-rollback-configuration
                     deployment-style blue-green-deployment-configuration
                     load-balancer-info ec2tag-set on-premises-tag-set)
   (common-lisp:declare
    (common-lisp:ignorable application-name deployment-group-name
     deployment-config-name ec2tag-filters on-premises-instance-tag-filters
     auto-scaling-groups service-role-arn trigger-configurations
     alarm-configuration auto-rollback-configuration deployment-style
     blue-green-deployment-configuration load-balancer-info ec2tag-set
     on-premises-tag-set))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDeploymentGroup")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDeploymentGroupOutput" common-lisp:nil)))
 (common-lisp:export 'create-deployment-group))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name)
   (common-lisp:declare (common-lisp:ignorable application-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApplication")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-deployment-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-config-name)
   (common-lisp:declare (common-lisp:ignorable deployment-config-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-config-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDeploymentConfig")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-deployment-config))
(common-lisp:progn
 (common-lisp:defun delete-deployment-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name deployment-group-name)
   (common-lisp:declare
    (common-lisp:ignorable application-name deployment-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDeploymentGroup")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDeploymentGroupOutput" common-lisp:nil)))
 (common-lisp:export 'delete-deployment-group))
(common-lisp:progn
 (common-lisp:defun deregister-on-premises-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-on-premises-instance-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterOnPremisesInstance")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-on-premises-instance))
(common-lisp:progn
 (common-lisp:defun get-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name)
   (common-lisp:declare (common-lisp:ignorable application-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetApplication")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetApplicationOutput" common-lisp:nil)))
 (common-lisp:export 'get-application))
(common-lisp:progn
 (common-lisp:defun get-application-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name revision)
   (common-lisp:declare (common-lisp:ignorable application-name revision))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-revision-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetApplicationRevision")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetApplicationRevisionOutput" common-lisp:nil)))
 (common-lisp:export 'get-application-revision))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDeployment")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDeploymentOutput" common-lisp:nil)))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-deployment-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-config-name)
   (common-lisp:declare (common-lisp:ignorable deployment-config-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-config-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDeploymentConfig")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDeploymentConfigOutput" common-lisp:nil)))
 (common-lisp:export 'get-deployment-config))
(common-lisp:progn
 (common-lisp:defun get-deployment-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name deployment-group-name)
   (common-lisp:declare
    (common-lisp:ignorable application-name deployment-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDeploymentGroup")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDeploymentGroupOutput" common-lisp:nil)))
 (common-lisp:export 'get-deployment-group))
(common-lisp:progn
 (common-lisp:defun get-deployment-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id instance-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-instance-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDeploymentInstance")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDeploymentInstanceOutput" common-lisp:nil)))
 (common-lisp:export 'get-deployment-instance))
(common-lisp:progn
 (common-lisp:defun get-on-premises-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-on-premises-instance-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetOnPremisesInstance")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetOnPremisesInstanceOutput" common-lisp:nil)))
 (common-lisp:export 'get-on-premises-instance))
(common-lisp:progn
 (common-lisp:defun list-application-revisions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name sort-by sort-order
                     s3bucket s3key-prefix deployed next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-name sort-by sort-order s3bucket
     s3key-prefix deployed next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-application-revisions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListApplicationRevisions")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListApplicationRevisionsOutput" common-lisp:nil)))
 (common-lisp:export 'list-application-revisions))
(common-lisp:progn
 (common-lisp:defun list-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListApplications")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListApplicationsOutput" common-lisp:nil)))
 (common-lisp:export 'list-applications))
(common-lisp:progn
 (common-lisp:defun list-deployment-configs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-deployment-configs-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDeploymentConfigs")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDeploymentConfigsOutput" common-lisp:nil)))
 (common-lisp:export 'list-deployment-configs))
(common-lisp:progn
 (common-lisp:defun list-deployment-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name next-token)
   (common-lisp:declare (common-lisp:ignorable application-name next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-deployment-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDeploymentGroups")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDeploymentGroupsOutput" common-lisp:nil)))
 (common-lisp:export 'list-deployment-groups))
(common-lisp:progn
 (common-lisp:defun list-deployment-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id next-token
                     instance-status-filter instance-type-filter)
   (common-lisp:declare
    (common-lisp:ignorable deployment-id next-token instance-status-filter
     instance-type-filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-deployment-instances-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDeploymentInstances")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDeploymentInstancesOutput" common-lisp:nil)))
 (common-lisp:export 'list-deployment-instances))
(common-lisp:progn
 (common-lisp:defun list-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name deployment-group-name
                     include-only-statuses create-time-range next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-name deployment-group-name
     include-only-statuses create-time-range next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-deployments-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDeployments")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDeploymentsOutput" common-lisp:nil)))
 (common-lisp:export 'list-deployments))
(common-lisp:progn
 (common-lisp:defun list-git-hub-account-token-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-git-hub-account-token-names-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListGitHubAccountTokenNames")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListGitHubAccountTokenNamesOutput" common-lisp:nil)))
 (common-lisp:export 'list-git-hub-account-token-names))
(common-lisp:progn
 (common-lisp:defun list-on-premises-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registration-status tag-filters
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable registration-status tag-filters next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-on-premises-instances-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListOnPremisesInstances")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListOnPremisesInstancesOutput" common-lisp:nil)))
 (common-lisp:export 'list-on-premises-instances))
(common-lisp:progn
 (common-lisp:defun register-application-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name description revision)
   (common-lisp:declare
    (common-lisp:ignorable application-name description revision))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-application-revision-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterApplicationRevision")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-application-revision))
(common-lisp:progn
 (common-lisp:defun register-on-premises-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name iam-session-arn
                     iam-user-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-name iam-session-arn iam-user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-on-premises-instance-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterOnPremisesInstance")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-on-premises-instance))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-on-premises-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tags instance-names)
   (common-lisp:declare (common-lisp:ignorable tags instance-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-tags-from-on-premises-instances-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"RemoveTagsFromOnPremisesInstances")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-tags-from-on-premises-instances))
(common-lisp:progn
 (common-lisp:defun skip-wait-time-for-instance-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-skip-wait-time-for-instance-termination-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"SkipWaitTimeForInstanceTermination")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'skip-wait-time-for-instance-termination))
(common-lisp:progn
 (common-lisp:defun stop-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id auto-rollback-enabled)
   (common-lisp:declare
    (common-lisp:ignorable deployment-id auto-rollback-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-deployment-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopDeployment")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopDeploymentOutput" common-lisp:nil)))
 (common-lisp:export 'stop-deployment))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name new-application-name)
   (common-lisp:declare
    (common-lisp:ignorable application-name new-application-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApplication")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-application))
(common-lisp:progn
 (common-lisp:defun update-deployment-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-deployment-group-name new-deployment-group-name
                     deployment-config-name ec2tag-filters
                     on-premises-instance-tag-filters auto-scaling-groups
                     service-role-arn trigger-configurations
                     alarm-configuration auto-rollback-configuration
                     deployment-style blue-green-deployment-configuration
                     load-balancer-info ec2tag-set on-premises-tag-set)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-deployment-group-name
     new-deployment-group-name deployment-config-name ec2tag-filters
     on-premises-instance-tag-filters auto-scaling-groups service-role-arn
     trigger-configurations alarm-configuration auto-rollback-configuration
     deployment-style blue-green-deployment-configuration load-balancer-info
     ec2tag-set on-premises-tag-set))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deployment-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codedeploy")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDeploymentGroup")
                                  ("Version" ,@"2014-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDeploymentGroupOutput" common-lisp:nil)))
 (common-lisp:export 'update-deployment-group))