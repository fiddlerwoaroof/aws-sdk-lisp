;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/gamelift
  (:use)
  (:nicknames #:aws/gamelift)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/gamelift)

(common-lisp:progn
 (common-lisp:defstruct (accept-match-input (:copier common-lisp:nil))
   (ticket-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":ticket-id is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (player-ids
    (common-lisp:error
     #A((23) common-lisp:base-char . ":player-ids is required"))
    :type (common-lisp:or matchmaking-player-id-list common-lisp:null))
   (acceptance-type
    (common-lisp:error
     #A((28) common-lisp:base-char . ":acceptance-type is required"))
    :type (common-lisp:or acceptance-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-match-input 'make-accept-match-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape accept-match-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TicketId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ticket-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-ids)))
    (aws-sdk/generator/shape::to-query-params "AcceptanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acceptance-type))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-match-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'accept-match-output 'make-accept-match-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape accept-match-output))
   (common-lisp:append)))
(common-lisp:deftype acceptance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (alias (:copier common-lisp:nil))
   (alias-id common-lisp:nil :type (common-lisp:or alias-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-blank-and-length-constraint-string common-lisp:null))
   (alias-arn common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or free-text common-lisp:null))
   (routing-strategy common-lisp:nil :type
    (common-lisp:or routing-strategy common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alias 'make-alias))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape alias))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "AliasArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-arn)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoutingStrategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'routing-strategy)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-time))))))
(common-lisp:deftype alias-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alias-list () '(trivial-types:proper-list alias))
 (common-lisp:defun |make-alias-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alias))
   aws-sdk/generator/shape::members))
(common-lisp:deftype arn-string-model () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attribute-value (:copier common-lisp:nil))
   (s common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (n common-lisp:nil :type (common-lisp:or double-object common-lisp:null))
   (sl common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (sdm common-lisp:nil :type
    (common-lisp:or string-double-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-value 'make-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's)))
    (aws-sdk/generator/shape::to-query-params "N"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'n)))
    (aws-sdk/generator/shape::to-query-params "SL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sl)))
    (aws-sdk/generator/shape::to-query-params "SDM"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sdm))))))
(common-lisp:progn
 (common-lisp:defstruct (aws-credentials (:copier common-lisp:nil))
   (access-key-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (secret-access-key common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (session-token common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'aws-credentials 'make-aws-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape aws-credentials))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-key-id)))
    (aws-sdk/generator/shape::to-query-params "SecretAccessKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-access-key)))
    (aws-sdk/generator/shape::to-query-params "SessionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session-token))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (build (:copier common-lisp:nil))
   (build-id common-lisp:nil :type (common-lisp:or build-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or free-text common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or free-text common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or build-status common-lisp:null))
   (size-on-disk common-lisp:nil :type
    (common-lisp:or positive-long common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'build 'make-build))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape build))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "SizeOnDisk"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-on-disk)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time))))))
(common-lisp:deftype build-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype build-list () '(trivial-types:proper-list build))
 (common-lisp:defun |make-build-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list build))
   aws-sdk/generator/shape::members))
(common-lisp:deftype build-status () 'common-lisp:string)
(common-lisp:deftype comparison-operator-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (conflict-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'make-conflict-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape conflict-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (create-alias-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type
    (common-lisp:or non-blank-and-length-constraint-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (routing-strategy
    (common-lisp:error
     #A((29) common-lisp:base-char . ":routing-strategy is required"))
    :type (common-lisp:or routing-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alias-input 'make-create-alias-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-alias-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoutingStrategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'routing-strategy))))))
(common-lisp:progn
 (common-lisp:defstruct (create-alias-output (:copier common-lisp:nil))
   (alias common-lisp:nil :type (common-lisp:or alias common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alias-output 'make-create-alias-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-alias-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Alias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias))))))
(common-lisp:progn
 (common-lisp:defstruct (create-build-input (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (storage-location common-lisp:nil :type
    (common-lisp:or s3location common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-build-input 'make-create-build-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-build-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "StorageLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-location)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system))))))
(common-lisp:progn
 (common-lisp:defstruct (create-build-output (:copier common-lisp:nil))
   (build common-lisp:nil :type (common-lisp:or build common-lisp:null))
   (upload-credentials common-lisp:nil :type
    (common-lisp:or aws-credentials common-lisp:null))
   (storage-location common-lisp:nil :type
    (common-lisp:or s3location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-build-output 'make-create-build-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-build-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Build"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build)))
    (aws-sdk/generator/shape::to-query-params "UploadCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-credentials)))
    (aws-sdk/generator/shape::to-query-params "StorageLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-location))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or non-zero-and-max-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (build-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":build-id is required"))
    :type (common-lisp:or build-id common-lisp:null))
   (server-launch-path common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (server-launch-parameters common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (log-paths common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (ec2instance-type
    (common-lisp:error
     #A((29) common-lisp:base-char . ":ec2instance-type is required"))
    :type (common-lisp:or ec2instance-type common-lisp:null))
   (ec2inbound-permissions common-lisp:nil :type
    (common-lisp:or ip-permissions-list common-lisp:null))
   (new-game-session-protection-policy common-lisp:nil :type
    (common-lisp:or protection-policy common-lisp:null))
   (runtime-configuration common-lisp:nil :type
    (common-lisp:or runtime-configuration common-lisp:null))
   (resource-creation-limit-policy common-lisp:nil :type
    (common-lisp:or resource-creation-limit-policy common-lisp:null))
   (metric-groups common-lisp:nil :type
    (common-lisp:or metric-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-fleet-input 'make-create-fleet-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-fleet-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id)))
    (aws-sdk/generator/shape::to-query-params "ServerLaunchPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-launch-path)))
    (aws-sdk/generator/shape::to-query-params "ServerLaunchParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-launch-parameters)))
    (aws-sdk/generator/shape::to-query-params "LogPaths"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-paths)))
    (aws-sdk/generator/shape::to-query-params "EC2InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-type)))
    (aws-sdk/generator/shape::to-query-params "EC2InboundPermissions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2inbound-permissions)))
    (aws-sdk/generator/shape::to-query-params "NewGameSessionProtectionPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-game-session-protection-policy)))
    (aws-sdk/generator/shape::to-query-params "RuntimeConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runtime-configuration)))
    (aws-sdk/generator/shape::to-query-params "ResourceCreationLimitPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-creation-limit-policy)))
    (aws-sdk/generator/shape::to-query-params "MetricGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-groups))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-output (:copier common-lisp:nil))
   (fleet-attributes common-lisp:nil :type
    (common-lisp:or fleet-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-fleet-output 'make-create-fleet-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-fleet-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (create-game-session-input (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (alias-id common-lisp:nil :type (common-lisp:or alias-id common-lisp:null))
   (maximum-player-session-count
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":maximum-player-session-count is required"))
    :type (common-lisp:or whole-number common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-properties common-lisp:nil :type
    (common-lisp:or game-property-list common-lisp:null))
   (creator-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-id common-lisp:nil :type
    (common-lisp:or id-string-model common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or id-string-model common-lisp:null))
   (game-session-data common-lisp:nil :type
    (common-lisp:or game-session-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-game-session-input
                    'make-create-game-session-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-game-session-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id)))
    (aws-sdk/generator/shape::to-query-params "MaximumPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-player-session-count)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "GameProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-properties)))
    (aws-sdk/generator/shape::to-query-params "CreatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creator-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "IdempotencyToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idempotency-token)))
    (aws-sdk/generator/shape::to-query-params "GameSessionData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-data))))))
(common-lisp:progn
 (common-lisp:defstruct (create-game-session-output (:copier common-lisp:nil))
   (game-session common-lisp:nil :type
    (common-lisp:or game-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-game-session-output
                    'make-create-game-session-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-game-session-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSession"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-game-session-queue-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or game-session-queue-name common-lisp:null))
   (timeout-in-seconds common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (player-latency-policies common-lisp:nil :type
    (common-lisp:or player-latency-policy-list common-lisp:null))
   (destinations common-lisp:nil :type
    (common-lisp:or game-session-queue-destination-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-game-session-queue-input
                    'make-create-game-session-queue-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-game-session-queue-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "TimeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "PlayerLatencyPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-latency-policies)))
    (aws-sdk/generator/shape::to-query-params "Destinations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destinations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-game-session-queue-output (:copier common-lisp:nil))
   (game-session-queue common-lisp:nil :type
    (common-lisp:or game-session-queue common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-game-session-queue-output
                    'make-create-game-session-queue-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-game-session-queue-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionQueue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-matchmaking-configuration-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-queue-arns
    (common-lisp:error
     #A((36) common-lisp:base-char . ":game-session-queue-arns is required"))
    :type (common-lisp:or queue-arns-list common-lisp:null))
   (request-timeout-seconds
    (common-lisp:error
     #A((36) common-lisp:base-char . ":request-timeout-seconds is required"))
    :type
    (common-lisp:or matchmaking-request-timeout-integer common-lisp:null))
   (acceptance-timeout-seconds common-lisp:nil :type
    (common-lisp:or matchmaking-acceptance-timeout-integer common-lisp:null))
   (acceptance-required
    (common-lisp:error
     #A((32) common-lisp:base-char . ":acceptance-required is required"))
    :type (common-lisp:or boolean common-lisp:null))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (notification-target common-lisp:nil :type
    (common-lisp:or sns-arn-string-model common-lisp:null))
   (additional-player-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (custom-event-data common-lisp:nil :type
    (common-lisp:or custom-event-data common-lisp:null))
   (game-properties common-lisp:nil :type
    (common-lisp:or game-property-list common-lisp:null))
   (game-session-data common-lisp:nil :type
    (common-lisp:or game-session-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-matchmaking-configuration-input
                    'make-create-matchmaking-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-matchmaking-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "GameSessionQueueArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue-arns)))
    (aws-sdk/generator/shape::to-query-params "RequestTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "AcceptanceTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acceptance-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "AcceptanceRequired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acceptance-required)))
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "NotificationTarget"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-target)))
    (aws-sdk/generator/shape::to-query-params "AdditionalPlayerCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-player-count)))
    (aws-sdk/generator/shape::to-query-params "CustomEventData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-event-data)))
    (aws-sdk/generator/shape::to-query-params "GameProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-properties)))
    (aws-sdk/generator/shape::to-query-params "GameSessionData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-data))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-matchmaking-configuration-output (:copier common-lisp:nil))
   (configuration common-lisp:nil :type
    (common-lisp:or matchmaking-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-matchmaking-configuration-output
                    'make-create-matchmaking-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-matchmaking-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-matchmaking-rule-set-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (rule-set-body
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-body is required"))
    :type (common-lisp:or rule-set-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-matchmaking-rule-set-input
                    'make-create-matchmaking-rule-set-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-matchmaking-rule-set-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "RuleSetBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-body))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-matchmaking-rule-set-output (:copier common-lisp:nil))
   (rule-set
    (common-lisp:error
     #A((21) common-lisp:base-char . ":rule-set is required"))
    :type (common-lisp:or matchmaking-rule-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-matchmaking-rule-set-output
                    'make-create-matchmaking-rule-set-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-matchmaking-rule-set-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set))))))
(common-lisp:progn
 (common-lisp:defstruct (create-player-session-input (:copier common-lisp:nil))
   (game-session-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":game-session-id is required"))
    :type (common-lisp:or arn-string-model common-lisp:null))
   (player-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":player-id is required"))
    :type (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-data common-lisp:nil :type
    (common-lisp:or player-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-player-session-input
                    'make-create-player-session-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-player-session-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-data))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-player-session-output (:copier common-lisp:nil))
   (player-session common-lisp:nil :type
    (common-lisp:or player-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-player-session-output
                    'make-create-player-session-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-player-session-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerSession"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-player-sessions-input (:copier common-lisp:nil))
   (game-session-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":game-session-id is required"))
    :type (common-lisp:or arn-string-model common-lisp:null))
   (player-ids
    (common-lisp:error
     #A((23) common-lisp:base-char . ":player-ids is required"))
    :type (common-lisp:or player-id-list common-lisp:null))
   (player-data-map common-lisp:nil :type
    (common-lisp:or player-data-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-player-sessions-input
                    'make-create-player-sessions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-player-sessions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-ids)))
    (aws-sdk/generator/shape::to-query-params "PlayerDataMap"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-data-map))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-player-sessions-output (:copier common-lisp:nil))
   (player-sessions common-lisp:nil :type
    (common-lisp:or player-session-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-player-sessions-output
                    'make-create-player-sessions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-player-sessions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-sessions))))))
(common-lisp:deftype custom-event-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-alias-input (:copier common-lisp:nil))
   (alias-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":alias-id is required"))
    :type (common-lisp:or alias-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-alias-input 'make-delete-alias-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-alias-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-build-input (:copier common-lisp:nil))
   (build-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":build-id is required"))
    :type (common-lisp:or build-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-build-input 'make-delete-build-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-build-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-fleet-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-fleet-input 'make-delete-fleet-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-fleet-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-game-session-queue-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or game-session-queue-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-game-session-queue-input
                    'make-delete-game-session-queue-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-game-session-queue-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-game-session-queue-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-game-session-queue-output
                    'make-delete-game-session-queue-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-game-session-queue-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-matchmaking-configuration-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-matchmaking-configuration-input
                    'make-delete-matchmaking-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-matchmaking-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-matchmaking-configuration-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-matchmaking-configuration-output
                    'make-delete-matchmaking-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-matchmaking-configuration-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-scaling-policy-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or non-zero-and-max-string common-lisp:null))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-scaling-policy-input
                    'make-delete-scaling-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-scaling-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-alias-input (:copier common-lisp:nil))
   (alias-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":alias-id is required"))
    :type (common-lisp:or alias-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alias-input 'make-describe-alias-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-alias-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-alias-output (:copier common-lisp:nil))
   (alias common-lisp:nil :type (common-lisp:or alias common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alias-output 'make-describe-alias-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-alias-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Alias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-build-input (:copier common-lisp:nil))
   (build-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":build-id is required"))
    :type (common-lisp:or build-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-build-input 'make-describe-build-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-build-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-build-output (:copier common-lisp:nil))
   (build common-lisp:nil :type (common-lisp:or build common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-build-output 'make-describe-build-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-build-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Build"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-ec2instance-limits-input (:copier common-lisp:nil))
   (ec2instance-type common-lisp:nil :type
    (common-lisp:or ec2instance-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-ec2instance-limits-input
                    'make-describe-ec2instance-limits-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-ec2instance-limits-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EC2InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-ec2instance-limits-output (:copier common-lisp:nil))
   (ec2instance-limits common-lisp:nil :type
    (common-lisp:or ec2instance-limit-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-ec2instance-limits-output
                    'make-describe-ec2instance-limits-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-ec2instance-limits-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EC2InstanceLimits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-limits))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-attributes-input (:copier common-lisp:nil))
   (fleet-ids common-lisp:nil :type
    (common-lisp:or fleet-id-list common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-attributes-input
                    'make-describe-fleet-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-ids)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-attributes-output (:copier common-lisp:nil))
   (fleet-attributes common-lisp:nil :type
    (common-lisp:or fleet-attributes-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-attributes-output
                    'make-describe-fleet-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-attributes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-capacity-input (:copier common-lisp:nil))
   (fleet-ids common-lisp:nil :type
    (common-lisp:or fleet-id-list common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-capacity-input
                    'make-describe-fleet-capacity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-capacity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-ids)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-capacity-output (:copier common-lisp:nil))
   (fleet-capacity common-lisp:nil :type
    (common-lisp:or fleet-capacity-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-capacity-output
                    'make-describe-fleet-capacity-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-capacity-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-capacity)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleet-events-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-events-input
                    'make-describe-fleet-events-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-events-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-events-output (:copier common-lisp:nil))
   (events common-lisp:nil :type (common-lisp:or event-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-events-output
                    'make-describe-fleet-events-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-events-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-port-settings-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-port-settings-input
                    'make-describe-fleet-port-settings-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-port-settings-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-port-settings-output (:copier common-lisp:nil))
   (inbound-permissions common-lisp:nil :type
    (common-lisp:or ip-permissions-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-port-settings-output
                    'make-describe-fleet-port-settings-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-port-settings-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InboundPermissions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inbound-permissions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-utilization-input (:copier common-lisp:nil))
   (fleet-ids common-lisp:nil :type
    (common-lisp:or fleet-id-list common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-utilization-input
                    'make-describe-fleet-utilization-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-utilization-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-ids)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fleet-utilization-output (:copier common-lisp:nil))
   (fleet-utilization common-lisp:nil :type
    (common-lisp:or fleet-utilization-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fleet-utilization-output
                    'make-describe-fleet-utilization-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-fleet-utilization-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetUtilization"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-utilization)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-session-details-input (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (game-session-id common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null))
   (alias-id common-lisp:nil :type (common-lisp:or alias-id common-lisp:null))
   (status-filter common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-session-details-input
                    'make-describe-game-session-details-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-session-details-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id)))
    (aws-sdk/generator/shape::to-query-params "StatusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-filter)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-session-details-output (:copier common-lisp:nil))
   (game-session-details common-lisp:nil :type
    (common-lisp:or game-session-detail-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-session-details-output
                    'make-describe-game-session-details-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-session-details-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-details)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-session-placement-input (:copier common-lisp:nil))
   (placement-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":placement-id is required"))
    :type (common-lisp:or id-string-model common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-session-placement-input
                    'make-describe-game-session-placement-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-session-placement-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlacementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-session-placement-output (:copier common-lisp:nil))
   (game-session-placement common-lisp:nil :type
    (common-lisp:or game-session-placement common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-session-placement-output
                    'make-describe-game-session-placement-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-session-placement-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionPlacement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-placement))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-session-queues-input (:copier common-lisp:nil))
   (names common-lisp:nil :type
    (common-lisp:or game-session-queue-name-list common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-session-queues-input
                    'make-describe-game-session-queues-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-session-queues-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-session-queues-output (:copier common-lisp:nil))
   (game-session-queues common-lisp:nil :type
    (common-lisp:or game-session-queue-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-session-queues-output
                    'make-describe-game-session-queues-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-session-queues-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionQueues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queues)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-sessions-input (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (game-session-id common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null))
   (alias-id common-lisp:nil :type (common-lisp:or alias-id common-lisp:null))
   (status-filter common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-sessions-input
                    'make-describe-game-sessions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-sessions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id)))
    (aws-sdk/generator/shape::to-query-params "StatusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-filter)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-game-sessions-output (:copier common-lisp:nil))
   (game-sessions common-lisp:nil :type
    (common-lisp:or game-session-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-game-sessions-output
                    'make-describe-game-sessions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-game-sessions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-sessions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instances-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instances-input 'make-describe-instances-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instances-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instances-output (:copier common-lisp:nil))
   (instances common-lisp:nil :type
    (common-lisp:or instance-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instances-output
                    'make-describe-instances-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instances-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-matchmaking-configurations-input (:copier common-lisp:nil))
   (names common-lisp:nil :type
    (common-lisp:or matchmaking-id-list common-lisp:null))
   (rule-set-name common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-matchmaking-configurations-input
                    'make-describe-matchmaking-configurations-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-matchmaking-configurations-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-matchmaking-configurations-output (:copier common-lisp:nil))
   (configurations common-lisp:nil :type
    (common-lisp:or matchmaking-configuration-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-matchmaking-configurations-output
                    'make-describe-matchmaking-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-matchmaking-configurations-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Configurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configurations)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-matchmaking-input (:copier common-lisp:nil))
   (ticket-ids
    (common-lisp:error
     #A((23) common-lisp:base-char . ":ticket-ids is required"))
    :type (common-lisp:or matchmaking-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-matchmaking-input
                    'make-describe-matchmaking-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-matchmaking-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TicketIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ticket-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-matchmaking-output (:copier common-lisp:nil))
   (ticket-list common-lisp:nil :type
    (common-lisp:or matchmaking-ticket-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-matchmaking-output
                    'make-describe-matchmaking-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-matchmaking-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TicketList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ticket-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-matchmaking-rule-sets-input (:copier common-lisp:nil))
   (names common-lisp:nil :type
    (common-lisp:or matchmaking-rule-set-name-list common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or rule-set-limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-matchmaking-rule-sets-input
                    'make-describe-matchmaking-rule-sets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-matchmaking-rule-sets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-matchmaking-rule-sets-output (:copier common-lisp:nil))
   (rule-sets
    (common-lisp:error
     #A((22) common-lisp:base-char . ":rule-sets is required"))
    :type (common-lisp:or matchmaking-rule-set-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-matchmaking-rule-sets-output
                    'make-describe-matchmaking-rule-sets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-matchmaking-rule-sets-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-sets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-player-sessions-input (:copier common-lisp:nil))
   (game-session-id common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null))
   (player-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-session-id common-lisp:nil :type
    (common-lisp:or player-session-id common-lisp:null))
   (player-session-status-filter common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-player-sessions-input
                    'make-describe-player-sessions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-player-sessions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerSessionStatusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session-status-filter)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-player-sessions-output (:copier common-lisp:nil))
   (player-sessions common-lisp:nil :type
    (common-lisp:or player-session-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-player-sessions-output
                    'make-describe-player-sessions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-player-sessions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-sessions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-runtime-configuration-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-runtime-configuration-input
                    'make-describe-runtime-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-runtime-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-runtime-configuration-output (:copier common-lisp:nil))
   (runtime-configuration common-lisp:nil :type
    (common-lisp:or runtime-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-runtime-configuration-output
                    'make-describe-runtime-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-runtime-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuntimeConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runtime-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-policies-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (status-filter common-lisp:nil :type
    (common-lisp:or scaling-status-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-policies-input
                    'make-describe-scaling-policies-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-policies-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "StatusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-filter)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-policies-output (:copier common-lisp:nil))
   (scaling-policies common-lisp:nil :type
    (common-lisp:or scaling-policy-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-policies-output
                    'make-describe-scaling-policies-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-policies-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScalingPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-policies)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (desired-player-session (:copier common-lisp:nil))
   (player-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-data common-lisp:nil :type
    (common-lisp:or player-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'desired-player-session 'make-desired-player-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          desired-player-session))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-data))))))
(common-lisp:progn
 (common-lisp:deftype desired-player-session-list ()
   '(trivial-types:proper-list desired-player-session))
 (common-lisp:defun |make-desired-player-session-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list desired-player-session))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:deftype double-object () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (ec2instance-counts (:copier common-lisp:nil))
   (desired common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (minimum common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (maximum common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (pending common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (active common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (idle common-lisp:nil :type (common-lisp:or whole-number common-lisp:null))
   (terminating common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ec2instance-counts 'make-ec2instance-counts))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ec2instance-counts))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DESIRED"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired)))
    (aws-sdk/generator/shape::to-query-params "MINIMUM"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minimum)))
    (aws-sdk/generator/shape::to-query-params "MAXIMUM"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum)))
    (aws-sdk/generator/shape::to-query-params "PENDING"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending)))
    (aws-sdk/generator/shape::to-query-params "ACTIVE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active)))
    (aws-sdk/generator/shape::to-query-params "IDLE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idle)))
    (aws-sdk/generator/shape::to-query-params "TERMINATING"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'terminating))))))
(common-lisp:progn
 (common-lisp:defstruct (ec2instance-limit (:copier common-lisp:nil))
   (ec2instance-type common-lisp:nil :type
    (common-lisp:or ec2instance-type common-lisp:null))
   (current-instances common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (instance-limit common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ec2instance-limit 'make-ec2instance-limit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ec2instance-limit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EC2InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-type)))
    (aws-sdk/generator/shape::to-query-params "CurrentInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-instances)))
    (aws-sdk/generator/shape::to-query-params "InstanceLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-limit))))))
(common-lisp:progn
 (common-lisp:deftype ec2instance-limit-list ()
   '(trivial-types:proper-list ec2instance-limit))
 (common-lisp:defun |make-ec2instance-limit-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2instance-limit))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ec2instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (event (:copier common-lisp:nil))
   (event-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (event-code common-lisp:nil :type
    (common-lisp:or event-code common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (event-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (pre-signed-log-url common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "EventCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "EventTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-time)))
    (aws-sdk/generator/shape::to-query-params "PreSignedLogUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pre-signed-log-url))))))
(common-lisp:deftype event-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-list () '(trivial-types:proper-list event))
 (common-lisp:defun |make-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (fleet-attributes (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (fleet-arn common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (termination-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or fleet-status common-lisp:null))
   (build-id common-lisp:nil :type (common-lisp:or build-id common-lisp:null))
   (server-launch-path common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (server-launch-parameters common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (log-paths common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (new-game-session-protection-policy common-lisp:nil :type
    (common-lisp:or protection-policy common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (resource-creation-limit-policy common-lisp:nil :type
    (common-lisp:or resource-creation-limit-policy common-lisp:null))
   (metric-groups common-lisp:nil :type
    (common-lisp:or metric-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fleet-attributes 'make-fleet-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape fleet-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "FleetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-arn)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "TerminationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-time)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id)))
    (aws-sdk/generator/shape::to-query-params "ServerLaunchPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-launch-path)))
    (aws-sdk/generator/shape::to-query-params "ServerLaunchParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-launch-parameters)))
    (aws-sdk/generator/shape::to-query-params "LogPaths"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-paths)))
    (aws-sdk/generator/shape::to-query-params "NewGameSessionProtectionPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-game-session-protection-policy)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "ResourceCreationLimitPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-creation-limit-policy)))
    (aws-sdk/generator/shape::to-query-params "MetricGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-groups))))))
(common-lisp:progn
 (common-lisp:deftype fleet-attributes-list ()
   '(trivial-types:proper-list fleet-attributes))
 (common-lisp:defun |make-fleet-attributes-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fleet-attributes))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (fleet-capacity (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or ec2instance-type common-lisp:null))
   (instance-counts common-lisp:nil :type
    (common-lisp:or ec2instance-counts common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-capacity 'make-fleet-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape fleet-capacity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "InstanceCounts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-counts))))))
(common-lisp:progn
 (common-lisp:defstruct
     (fleet-capacity-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fleet-capacity-exceeded-exception
                    'make-fleet-capacity-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          fleet-capacity-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype fleet-capacity-list ()
   '(trivial-types:proper-list fleet-capacity))
 (common-lisp:defun |make-fleet-capacity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fleet-capacity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fleet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fleet-id-list () '(trivial-types:proper-list fleet-id))
 (common-lisp:defun |make-fleet-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fleet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fleet-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (fleet-utilization (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (active-server-process-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (active-game-session-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (current-player-session-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (maximum-player-session-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fleet-utilization 'make-fleet-utilization))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape fleet-utilization))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "ActiveServerProcessCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-server-process-count)))
    (aws-sdk/generator/shape::to-query-params "ActiveGameSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-game-session-count)))
    (aws-sdk/generator/shape::to-query-params "CurrentPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-player-session-count)))
    (aws-sdk/generator/shape::to-query-params "MaximumPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-player-session-count))))))
(common-lisp:progn
 (common-lisp:deftype fleet-utilization-list ()
   '(trivial-types:proper-list fleet-utilization))
 (common-lisp:defun |make-fleet-utilization-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fleet-utilization))
   aws-sdk/generator/shape::members))
(common-lisp:deftype float () 'common-lisp:single-float)
(common-lisp:deftype free-text () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (game-property (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or game-property-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or game-property-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'game-property 'make-game-property))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape game-property))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype game-property-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype game-property-list ()
   '(trivial-types:proper-list game-property))
 (common-lisp:defun |make-game-property-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list game-property))
   aws-sdk/generator/shape::members))
(common-lisp:deftype game-property-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (game-session (:copier common-lisp:nil))
   (game-session-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (termination-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (current-player-session-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (maximum-player-session-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or game-session-status common-lisp:null))
   (game-properties common-lisp:nil :type
    (common-lisp:or game-property-list common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port-number common-lisp:null))
   (player-session-creation-policy common-lisp:nil :type
    (common-lisp:or player-session-creation-policy common-lisp:null))
   (creator-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-data common-lisp:nil :type
    (common-lisp:or game-session-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'game-session 'make-game-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape game-session))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "TerminationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-time)))
    (aws-sdk/generator/shape::to-query-params "CurrentPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-player-session-count)))
    (aws-sdk/generator/shape::to-query-params "MaximumPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-player-session-count)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "GameProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-properties)))
    (aws-sdk/generator/shape::to-query-params "IpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "PlayerSessionCreationPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session-creation-policy)))
    (aws-sdk/generator/shape::to-query-params "CreatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creator-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-data))))))
(common-lisp:deftype game-session-activation-timeout-seconds ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (game-session-connection-info (:copier common-lisp:nil))
   (game-session-arn common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or string-model common-lisp:null))
   (port common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (matched-player-sessions common-lisp:nil :type
    (common-lisp:or matched-player-session-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'game-session-connection-info
                    'make-game-session-connection-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          game-session-connection-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-arn)))
    (aws-sdk/generator/shape::to-query-params "IpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "MatchedPlayerSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'matched-player-sessions))))))
(common-lisp:deftype game-session-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (game-session-detail (:copier common-lisp:nil))
   (game-session common-lisp:nil :type
    (common-lisp:or game-session common-lisp:null))
   (protection-policy common-lisp:nil :type
    (common-lisp:or protection-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'game-session-detail 'make-game-session-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape game-session-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSession"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session)))
    (aws-sdk/generator/shape::to-query-params "ProtectionPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protection-policy))))))
(common-lisp:progn
 (common-lisp:deftype game-session-detail-list ()
   '(trivial-types:proper-list game-session-detail))
 (common-lisp:defun |make-game-session-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list game-session-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (game-session-full-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'game-session-full-exception
                    'make-game-session-full-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          game-session-full-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype game-session-list ()
   '(trivial-types:proper-list game-session))
 (common-lisp:defun |make-game-session-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list game-session))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (game-session-placement (:copier common-lisp:nil))
   (placement-id common-lisp:nil :type
    (common-lisp:or id-string-model common-lisp:null))
   (game-session-queue-name common-lisp:nil :type
    (common-lisp:or game-session-queue-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or game-session-placement-state common-lisp:null))
   (game-properties common-lisp:nil :type
    (common-lisp:or game-property-list common-lisp:null))
   (maximum-player-session-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (game-session-name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-arn common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-region common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-latencies common-lisp:nil :type
    (common-lisp:or player-latency-list common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port-number common-lisp:null))
   (placed-player-sessions common-lisp:nil :type
    (common-lisp:or placed-player-session-list common-lisp:null))
   (game-session-data common-lisp:nil :type
    (common-lisp:or game-session-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'game-session-placement 'make-game-session-placement))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          game-session-placement))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlacementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionQueueName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue-name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "GameProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-properties)))
    (aws-sdk/generator/shape::to-query-params "MaximumPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-player-session-count)))
    (aws-sdk/generator/shape::to-query-params "GameSessionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-name)))
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-arn)))
    (aws-sdk/generator/shape::to-query-params "GameSessionRegion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-region)))
    (aws-sdk/generator/shape::to-query-params "PlayerLatencies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-latencies)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "IpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "PlacedPlayerSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placed-player-sessions)))
    (aws-sdk/generator/shape::to-query-params "GameSessionData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-data))))))
(common-lisp:deftype game-session-placement-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (game-session-queue (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or game-session-queue-name common-lisp:null))
   (game-session-queue-arn common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null))
   (timeout-in-seconds common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (player-latency-policies common-lisp:nil :type
    (common-lisp:or player-latency-policy-list common-lisp:null))
   (destinations common-lisp:nil :type
    (common-lisp:or game-session-queue-destination-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'game-session-queue 'make-game-session-queue))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape game-session-queue))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "GameSessionQueueArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue-arn)))
    (aws-sdk/generator/shape::to-query-params "TimeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "PlayerLatencyPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-latency-policies)))
    (aws-sdk/generator/shape::to-query-params "Destinations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destinations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (game-session-queue-destination (:copier common-lisp:nil))
   (destination-arn common-lisp:nil :type
    (common-lisp:or arn-string-model common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'game-session-queue-destination
                    'make-game-session-queue-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          game-session-queue-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DestinationArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-arn))))))
(common-lisp:progn
 (common-lisp:deftype game-session-queue-destination-list ()
   '(trivial-types:proper-list game-session-queue-destination))
 (common-lisp:defun |make-game-session-queue-destination-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            game-session-queue-destination))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype game-session-queue-list ()
   '(trivial-types:proper-list game-session-queue))
 (common-lisp:defun |make-game-session-queue-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list game-session-queue))
   aws-sdk/generator/shape::members))
(common-lisp:deftype game-session-queue-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype game-session-queue-name-list ()
   '(trivial-types:proper-list game-session-queue-name))
 (common-lisp:defun |make-game-session-queue-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list game-session-queue-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype game-session-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-game-session-log-url-input (:copier common-lisp:nil))
   (game-session-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":game-session-id is required"))
    :type (common-lisp:or arn-string-model common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-game-session-log-url-input
                    'make-get-game-session-log-url-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-game-session-log-url-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-game-session-log-url-output (:copier common-lisp:nil))
   (pre-signed-url common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-game-session-log-url-output
                    'make-get-game-session-log-url-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-game-session-log-url-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PreSignedUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pre-signed-url))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instance-access-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-access-input
                    'make-get-instance-access-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-access-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-instance-access-output (:copier common-lisp:nil))
   (instance-access common-lisp:nil :type
    (common-lisp:or instance-access common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-access-output
                    'make-get-instance-access-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-instance-access-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceAccess"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-access))))))
(common-lisp:deftype id-string-model () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (idempotent-parameter-mismatch-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'idempotent-parameter-mismatch-exception
                    'make-idempotent-parameter-mismatch-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          idempotent-parameter-mismatch-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or ec2instance-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-status common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "IpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-access (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (operating-system common-lisp:nil :type
    (common-lisp:or operating-system common-lisp:null))
   (credentials common-lisp:nil :type
    (common-lisp:or instance-credentials common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-access 'make-instance-access))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-access))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "IpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "OperatingSystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operating-system)))
    (aws-sdk/generator/shape::to-query-params "Credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-credentials (:copier common-lisp:nil))
   (user-name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (secret common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-credentials 'make-instance-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-credentials))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-name)))
    (aws-sdk/generator/shape::to-query-params "Secret"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret))))))
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-list () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-status () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-service-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'make-internal-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-fleet-status-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-fleet-status-exception
                    'make-invalid-fleet-status-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-fleet-status-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-game-session-status-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-game-session-status-exception
                    'make-invalid-game-session-status-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-game-session-status-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-request-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'make-invalid-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype ip-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (ip-permission (:copier common-lisp:nil))
   (from-port
    (common-lisp:error
     #A((22) common-lisp:base-char . ":from-port is required"))
    :type (common-lisp:or port-number common-lisp:null))
   (to-port
    (common-lisp:error #A((20) common-lisp:base-char . ":to-port is required"))
    :type (common-lisp:or port-number common-lisp:null))
   (ip-range
    (common-lisp:error
     #A((21) common-lisp:base-char . ":ip-range is required"))
    :type (common-lisp:or non-blank-string common-lisp:null))
   (protocol
    (common-lisp:error
     #A((21) common-lisp:base-char . ":protocol is required"))
    :type (common-lisp:or ip-protocol common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ip-permission 'make-ip-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ip-permission))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FromPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-port)))
    (aws-sdk/generator/shape::to-query-params "ToPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'to-port)))
    (aws-sdk/generator/shape::to-query-params "IpRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-range)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol))))))
(common-lisp:progn
 (common-lisp:deftype ip-permissions-list ()
   '(trivial-types:proper-list ip-permission))
 (common-lisp:defun |make-ip-permissions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ip-permission))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ip-protocol () 'common-lisp:string)
(common-lisp:defstruct
    (latency-map
     (:constructor |make-latency-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-aliases-input (:copier common-lisp:nil))
   (routing-strategy-type common-lisp:nil :type
    (common-lisp:or routing-strategy-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-aliases-input 'make-list-aliases-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-aliases-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RoutingStrategyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'routing-strategy-type)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-aliases-output (:copier common-lisp:nil))
   (aliases common-lisp:nil :type (common-lisp:or alias-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-aliases-output 'make-list-aliases-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-aliases-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Aliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aliases)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-builds-input (:copier common-lisp:nil))
   (status common-lisp:nil :type
    (common-lisp:or build-status common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-builds-input 'make-list-builds-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-builds-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-builds-output (:copier common-lisp:nil))
   (builds common-lisp:nil :type (common-lisp:or build-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-builds-output 'make-list-builds-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-builds-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Builds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'builds)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-fleets-input (:copier common-lisp:nil))
   (build-id common-lisp:nil :type (common-lisp:or build-id common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fleets-input 'make-list-fleets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-fleets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-fleets-output (:copier common-lisp:nil))
   (fleet-ids common-lisp:nil :type
    (common-lisp:or fleet-id-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fleets-output 'make-list-fleets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-fleets-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (matched-player-session (:copier common-lisp:nil))
   (player-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-session-id common-lisp:nil :type
    (common-lisp:or player-session-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'matched-player-session 'make-matched-player-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          matched-player-session))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session-id))))))
(common-lisp:progn
 (common-lisp:deftype matched-player-session-list ()
   '(trivial-types:proper-list matched-player-session))
 (common-lisp:defun |make-matched-player-session-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list matched-player-session))
   aws-sdk/generator/shape::members))
(common-lisp:deftype matchmaking-acceptance-timeout-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (matchmaking-configuration (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-queue-arns common-lisp:nil :type
    (common-lisp:or queue-arns-list common-lisp:null))
   (request-timeout-seconds common-lisp:nil :type
    (common-lisp:or matchmaking-request-timeout-integer common-lisp:null))
   (acceptance-timeout-seconds common-lisp:nil :type
    (common-lisp:or matchmaking-acceptance-timeout-integer common-lisp:null))
   (acceptance-required common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (rule-set-name common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (notification-target common-lisp:nil :type
    (common-lisp:or sns-arn-string-model common-lisp:null))
   (additional-player-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (custom-event-data common-lisp:nil :type
    (common-lisp:or custom-event-data common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (game-properties common-lisp:nil :type
    (common-lisp:or game-property-list common-lisp:null))
   (game-session-data common-lisp:nil :type
    (common-lisp:or game-session-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'matchmaking-configuration
                    'make-matchmaking-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          matchmaking-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "GameSessionQueueArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue-arns)))
    (aws-sdk/generator/shape::to-query-params "RequestTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "AcceptanceTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acceptance-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "AcceptanceRequired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acceptance-required)))
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "NotificationTarget"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-target)))
    (aws-sdk/generator/shape::to-query-params "AdditionalPlayerCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-player-count)))
    (aws-sdk/generator/shape::to-query-params "CustomEventData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-event-data)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "GameProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-properties)))
    (aws-sdk/generator/shape::to-query-params "GameSessionData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-data))))))
(common-lisp:progn
 (common-lisp:deftype matchmaking-configuration-list ()
   '(trivial-types:proper-list matchmaking-configuration))
 (common-lisp:defun |make-matchmaking-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            matchmaking-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype matchmaking-configuration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype matchmaking-id-list ()
   '(trivial-types:proper-list matchmaking-id-string-model))
 (common-lisp:defun |make-matchmaking-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            matchmaking-id-string-model))
   aws-sdk/generator/shape::members))
(common-lisp:deftype matchmaking-id-string-model () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype matchmaking-player-id-list ()
   '(trivial-types:proper-list player-id-string-model))
 (common-lisp:defun |make-matchmaking-player-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list player-id-string-model))
   aws-sdk/generator/shape::members))
(common-lisp:deftype matchmaking-request-timeout-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (matchmaking-rule-set (:copier common-lisp:nil))
   (rule-set-name common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (rule-set-body
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-body is required"))
    :type (common-lisp:or rule-set-body common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'matchmaking-rule-set 'make-matchmaking-rule-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape matchmaking-rule-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "RuleSetBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-body)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time))))))
(common-lisp:progn
 (common-lisp:deftype matchmaking-rule-set-list ()
   '(trivial-types:proper-list matchmaking-rule-set))
 (common-lisp:defun |make-matchmaking-rule-set-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list matchmaking-rule-set))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype matchmaking-rule-set-name-list ()
   '(trivial-types:proper-list matchmaking-id-string-model))
 (common-lisp:defun |make-matchmaking-rule-set-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            matchmaking-id-string-model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (matchmaking-ticket (:copier common-lisp:nil))
   (ticket-id common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (configuration-name common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or matchmaking-configuration-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or string-model common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or string-model common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (players common-lisp:nil :type
    (common-lisp:or player-list common-lisp:null))
   (game-session-connection-info common-lisp:nil :type
    (common-lisp:or game-session-connection-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'matchmaking-ticket 'make-matchmaking-ticket))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape matchmaking-ticket))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TicketId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ticket-id)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-reason)))
    (aws-sdk/generator/shape::to-query-params "StatusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "Players"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'players)))
    (aws-sdk/generator/shape::to-query-params "GameSessionConnectionInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-connection-info))))))
(common-lisp:progn
 (common-lisp:deftype matchmaking-ticket-list ()
   '(trivial-types:proper-list matchmaking-ticket))
 (common-lisp:defun |make-matchmaking-ticket-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list matchmaking-ticket))
   aws-sdk/generator/shape::members))
(common-lisp:deftype max-concurrent-game-session-activations ()
  'common-lisp:integer)
(common-lisp:deftype metric-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-group-list ()
   '(trivial-types:proper-list metric-group))
 (common-lisp:defun |make-metric-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype non-blank-and-length-constraint-string ()
  'common-lisp:string)
(common-lisp:deftype non-blank-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:deftype non-zero-and-max-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype operating-system () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (placed-player-session (:copier common-lisp:nil))
   (player-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-session-id common-lisp:nil :type
    (common-lisp:or player-session-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'placed-player-session 'make-placed-player-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          placed-player-session))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session-id))))))
(common-lisp:progn
 (common-lisp:deftype placed-player-session-list ()
   '(trivial-types:proper-list placed-player-session))
 (common-lisp:defun |make-placed-player-session-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list placed-player-session))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (player (:copier common-lisp:nil))
   (player-id common-lisp:nil :type
    (common-lisp:or player-id-string-model common-lisp:null))
   (player-attributes common-lisp:nil :type
    (common-lisp:or player-attribute-map common-lisp:null))
   (team common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (latency-in-ms common-lisp:nil :type
    (common-lisp:or latency-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'player 'make-player))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape player))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-attributes)))
    (aws-sdk/generator/shape::to-query-params "Team"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'team)))
    (aws-sdk/generator/shape::to-query-params "LatencyInMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latency-in-ms))))))
(common-lisp:defstruct
    (player-attribute-map
     (:constructor |make-player-attribute-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype player-data () 'common-lisp:string)
(common-lisp:defstruct
    (player-data-map
     (:constructor |make-player-data-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype player-id-list ()
   '(trivial-types:proper-list non-zero-and-max-string))
 (common-lisp:defun |make-player-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-zero-and-max-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype player-id-string-model () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (player-latency (:copier common-lisp:nil))
   (player-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (region-identifier common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (latency-in-milliseconds common-lisp:nil :type
    (common-lisp:or float common-lisp:null)))
 (common-lisp:export (common-lisp:list 'player-latency 'make-player-latency))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape player-latency))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "RegionIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region-identifier)))
    (aws-sdk/generator/shape::to-query-params "LatencyInMilliseconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latency-in-milliseconds))))))
(common-lisp:progn
 (common-lisp:deftype player-latency-list ()
   '(trivial-types:proper-list player-latency))
 (common-lisp:defun |make-player-latency-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list player-latency))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (player-latency-policy (:copier common-lisp:nil))
   (maximum-individual-player-latency-milliseconds common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (policy-duration-seconds common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'player-latency-policy 'make-player-latency-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          player-latency-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "MaximumIndividualPlayerLatencyMilliseconds"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'maximum-individual-player-latency-milliseconds)))
    (aws-sdk/generator/shape::to-query-params "PolicyDurationSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-duration-seconds))))))
(common-lisp:progn
 (common-lisp:deftype player-latency-policy-list ()
   '(trivial-types:proper-list player-latency-policy))
 (common-lisp:defun |make-player-latency-policy-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list player-latency-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype player-list () '(trivial-types:proper-list player))
 (common-lisp:defun |make-player-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list player))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (player-session (:copier common-lisp:nil))
   (player-session-id common-lisp:nil :type
    (common-lisp:or player-session-id common-lisp:null))
   (player-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-id common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (termination-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or player-session-status common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port-number common-lisp:null))
   (player-data common-lisp:nil :type
    (common-lisp:or player-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'player-session 'make-player-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape player-session))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlayerSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session-id)))
    (aws-sdk/generator/shape::to-query-params "PlayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "TerminationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-time)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "IpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "PlayerData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-data))))))
(common-lisp:deftype player-session-creation-policy () 'common-lisp:string)
(common-lisp:deftype player-session-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype player-session-list ()
   '(trivial-types:proper-list player-session))
 (common-lisp:defun |make-player-session-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list player-session))
   aws-sdk/generator/shape::members))
(common-lisp:deftype player-session-status () 'common-lisp:string)
(common-lisp:deftype port-number () 'common-lisp:integer)
(common-lisp:deftype positive-integer () 'common-lisp:integer)
(common-lisp:deftype positive-long () 'common-lisp:integer)
(common-lisp:deftype protection-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (put-scaling-policy-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or non-zero-and-max-string common-lisp:null))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (scaling-adjustment
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scaling-adjustment is required"))
    :type (common-lisp:or integer common-lisp:null))
   (scaling-adjustment-type
    (common-lisp:error
     #A((36) common-lisp:base-char . ":scaling-adjustment-type is required"))
    :type (common-lisp:or scaling-adjustment-type common-lisp:null))
   (threshold
    (common-lisp:error
     #A((22) common-lisp:base-char . ":threshold is required"))
    :type (common-lisp:or double common-lisp:null))
   (comparison-operator
    (common-lisp:error
     #A((32) common-lisp:base-char . ":comparison-operator is required"))
    :type (common-lisp:or comparison-operator-type common-lisp:null))
   (evaluation-periods
    (common-lisp:error
     #A((31) common-lisp:base-char . ":evaluation-periods is required"))
    :type (common-lisp:or positive-integer common-lisp:null))
   (metric-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metric-name is required"))
    :type (common-lisp:or metric-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scaling-policy-input 'make-put-scaling-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-scaling-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment-type)))
    (aws-sdk/generator/shape::to-query-params "Threshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'threshold)))
    (aws-sdk/generator/shape::to-query-params "ComparisonOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparison-operator)))
    (aws-sdk/generator/shape::to-query-params "EvaluationPeriods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-periods)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name))))))
(common-lisp:progn
 (common-lisp:defstruct (put-scaling-policy-output (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scaling-policy-output
                    'make-put-scaling-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-scaling-policy-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype queue-arns-list ()
   '(trivial-types:proper-list arn-string-model))
 (common-lisp:defun |make-queue-arns-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn-string-model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (request-upload-credentials-input (:copier common-lisp:nil))
   (build-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":build-id is required"))
    :type (common-lisp:or build-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-upload-credentials-input
                    'make-request-upload-credentials-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-upload-credentials-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (request-upload-credentials-output (:copier common-lisp:nil))
   (upload-credentials common-lisp:nil :type
    (common-lisp:or aws-credentials common-lisp:null))
   (storage-location common-lisp:nil :type
    (common-lisp:or s3location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-upload-credentials-output
                    'make-request-upload-credentials-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-upload-credentials-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UploadCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-credentials)))
    (aws-sdk/generator/shape::to-query-params "StorageLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-location))))))
(common-lisp:progn
 (common-lisp:defstruct (resolve-alias-input (:copier common-lisp:nil))
   (alias-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":alias-id is required"))
    :type (common-lisp:or alias-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resolve-alias-input 'make-resolve-alias-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resolve-alias-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id))))))
(common-lisp:progn
 (common-lisp:defstruct (resolve-alias-output (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resolve-alias-output 'make-resolve-alias-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resolve-alias-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-creation-limit-policy (:copier common-lisp:nil))
   (new-game-sessions-per-creator common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (policy-period-in-minutes common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-creation-limit-policy
                    'make-resource-creation-limit-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-creation-limit-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NewGameSessionsPerCreator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-game-sessions-per-creator)))
    (aws-sdk/generator/shape::to-query-params "PolicyPeriodInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-period-in-minutes))))))
(common-lisp:progn
 (common-lisp:defstruct (routing-strategy (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or routing-strategy-type common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or free-text common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'routing-strategy 'make-routing-strategy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape routing-strategy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype routing-strategy-type () 'common-lisp:string)
(common-lisp:deftype rule-set-body () 'common-lisp:string)
(common-lisp:deftype rule-set-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (runtime-configuration (:copier common-lisp:nil))
   (server-processes common-lisp:nil :type
    (common-lisp:or server-process-list common-lisp:null))
   (max-concurrent-game-session-activations common-lisp:nil :type
    (common-lisp:or max-concurrent-game-session-activations common-lisp:null))
   (game-session-activation-timeout-seconds common-lisp:nil :type
    (common-lisp:or game-session-activation-timeout-seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'runtime-configuration 'make-runtime-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          runtime-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServerProcesses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-processes)))
    (aws-sdk/generator/shape::to-query-params
     "MaxConcurrentGameSessionActivations"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'max-concurrent-game-session-activations)))
    (aws-sdk/generator/shape::to-query-params
     "GameSessionActivationTimeoutSeconds"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'game-session-activation-timeout-seconds))))))
(common-lisp:progn
 (common-lisp:defstruct (s3location (:copier common-lisp:nil))
   (bucket common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3location 'make-s3location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:deftype scaling-adjustment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (scaling-policy (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or scaling-status-type common-lisp:null))
   (scaling-adjustment common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (scaling-adjustment-type common-lisp:nil :type
    (common-lisp:or scaling-adjustment-type common-lisp:null))
   (comparison-operator common-lisp:nil :type
    (common-lisp:or comparison-operator-type common-lisp:null))
   (threshold common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (evaluation-periods common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scaling-policy 'make-scaling-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment-type)))
    (aws-sdk/generator/shape::to-query-params "ComparisonOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparison-operator)))
    (aws-sdk/generator/shape::to-query-params "Threshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'threshold)))
    (aws-sdk/generator/shape::to-query-params "EvaluationPeriods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-periods)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name))))))
(common-lisp:progn
 (common-lisp:deftype scaling-policy-list ()
   '(trivial-types:proper-list scaling-policy))
 (common-lisp:defun |make-scaling-policy-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scaling-policy))
   aws-sdk/generator/shape::members))
(common-lisp:deftype scaling-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (search-game-sessions-input (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (alias-id common-lisp:nil :type (common-lisp:or alias-id common-lisp:null))
   (filter-expression common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (sort-expression common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-game-sessions-input
                    'make-search-game-sessions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          search-game-sessions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id)))
    (aws-sdk/generator/shape::to-query-params "FilterExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-expression)))
    (aws-sdk/generator/shape::to-query-params "SortExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-expression)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (search-game-sessions-output (:copier common-lisp:nil))
   (game-sessions common-lisp:nil :type
    (common-lisp:or game-session-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-game-sessions-output
                    'make-search-game-sessions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          search-game-sessions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-sessions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (server-process (:copier common-lisp:nil))
   (launch-path
    (common-lisp:error
     #A((24) common-lisp:base-char . ":launch-path is required"))
    :type (common-lisp:or non-zero-and-max-string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (concurrent-executions
    (common-lisp:error
     #A((34) common-lisp:base-char . ":concurrent-executions is required"))
    :type (common-lisp:or positive-integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'server-process 'make-server-process))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape server-process))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-path)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "ConcurrentExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'concurrent-executions))))))
(common-lisp:progn
 (common-lisp:deftype server-process-list ()
   '(trivial-types:proper-list server-process))
 (common-lisp:defun |make-server-process-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list server-process))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sns-arn-string-model () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-game-session-placement-input (:copier common-lisp:nil))
   (placement-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":placement-id is required"))
    :type (common-lisp:or id-string-model common-lisp:null))
   (game-session-queue-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":game-session-queue-name is required"))
    :type (common-lisp:or game-session-queue-name common-lisp:null))
   (game-properties common-lisp:nil :type
    (common-lisp:or game-property-list common-lisp:null))
   (maximum-player-session-count
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":maximum-player-session-count is required"))
    :type (common-lisp:or whole-number common-lisp:null))
   (game-session-name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-latencies common-lisp:nil :type
    (common-lisp:or player-latency-list common-lisp:null))
   (desired-player-sessions common-lisp:nil :type
    (common-lisp:or desired-player-session-list common-lisp:null))
   (game-session-data common-lisp:nil :type
    (common-lisp:or game-session-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-game-session-placement-input
                    'make-start-game-session-placement-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-game-session-placement-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlacementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-id)))
    (aws-sdk/generator/shape::to-query-params "GameSessionQueueName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue-name)))
    (aws-sdk/generator/shape::to-query-params "GameProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-properties)))
    (aws-sdk/generator/shape::to-query-params "MaximumPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-player-session-count)))
    (aws-sdk/generator/shape::to-query-params "GameSessionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-name)))
    (aws-sdk/generator/shape::to-query-params "PlayerLatencies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-latencies)))
    (aws-sdk/generator/shape::to-query-params "DesiredPlayerSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-player-sessions)))
    (aws-sdk/generator/shape::to-query-params "GameSessionData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-data))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-game-session-placement-output (:copier common-lisp:nil))
   (game-session-placement common-lisp:nil :type
    (common-lisp:or game-session-placement common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-game-session-placement-output
                    'make-start-game-session-placement-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-game-session-placement-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionPlacement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-placement))))))
(common-lisp:progn
 (common-lisp:defstruct (start-matchmaking-input (:copier common-lisp:nil))
   (ticket-id common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (configuration-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":configuration-name is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (players
    (common-lisp:error #A((20) common-lisp:base-char . ":players is required"))
    :type (common-lisp:or player-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-matchmaking-input 'make-start-matchmaking-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-matchmaking-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TicketId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ticket-id)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-name)))
    (aws-sdk/generator/shape::to-query-params "Players"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'players))))))
(common-lisp:progn
 (common-lisp:defstruct (start-matchmaking-output (:copier common-lisp:nil))
   (matchmaking-ticket common-lisp:nil :type
    (common-lisp:or matchmaking-ticket common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-matchmaking-output 'make-start-matchmaking-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-matchmaking-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MatchmakingTicket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'matchmaking-ticket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-game-session-placement-input (:copier common-lisp:nil))
   (placement-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":placement-id is required"))
    :type (common-lisp:or id-string-model common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-game-session-placement-input
                    'make-stop-game-session-placement-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-game-session-placement-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PlacementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-game-session-placement-output (:copier common-lisp:nil))
   (game-session-placement common-lisp:nil :type
    (common-lisp:or game-session-placement common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-game-session-placement-output
                    'make-stop-game-session-placement-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-game-session-placement-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionPlacement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-placement))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-matchmaking-input (:copier common-lisp:nil))
   (ticket-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":ticket-id is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-matchmaking-input 'make-stop-matchmaking-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-matchmaking-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TicketId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ticket-id))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-matchmaking-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'stop-matchmaking-output 'make-stop-matchmaking-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-matchmaking-output))
   (common-lisp:append)))
(common-lisp:defstruct
    (string-double-map
     (:constructor |make-string-double-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype string-list ()
   '(trivial-types:proper-list non-zero-and-max-string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-zero-and-max-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string-model () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (terminal-routing-strategy-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminal-routing-strategy-exception
                    'make-terminal-routing-strategy-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminal-routing-strategy-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (unauthorized-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'make-unauthorized-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unauthorized-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-region-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-region-exception
                    'make-unsupported-region-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-region-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (update-alias-input (:copier common-lisp:nil))
   (alias-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":alias-id is required"))
    :type (common-lisp:or alias-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-blank-and-length-constraint-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (routing-strategy common-lisp:nil :type
    (common-lisp:or routing-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alias-input 'make-update-alias-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-alias-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AliasId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoutingStrategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'routing-strategy))))))
(common-lisp:progn
 (common-lisp:defstruct (update-alias-output (:copier common-lisp:nil))
   (alias common-lisp:nil :type (common-lisp:or alias common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alias-output 'make-update-alias-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-alias-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Alias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias))))))
(common-lisp:progn
 (common-lisp:defstruct (update-build-input (:copier common-lisp:nil))
   (build-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":build-id is required"))
    :type (common-lisp:or build-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-build-input 'make-update-build-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-build-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BuildId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (update-build-output (:copier common-lisp:nil))
   (build common-lisp:nil :type (common-lisp:or build common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-build-output 'make-update-build-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-build-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Build"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fleet-attributes-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (new-game-session-protection-policy common-lisp:nil :type
    (common-lisp:or protection-policy common-lisp:null))
   (resource-creation-limit-policy common-lisp:nil :type
    (common-lisp:or resource-creation-limit-policy common-lisp:null))
   (metric-groups common-lisp:nil :type
    (common-lisp:or metric-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-attributes-input
                    'make-update-fleet-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-fleet-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "NewGameSessionProtectionPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-game-session-protection-policy)))
    (aws-sdk/generator/shape::to-query-params "ResourceCreationLimitPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-creation-limit-policy)))
    (aws-sdk/generator/shape::to-query-params "MetricGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-groups))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fleet-attributes-output (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-attributes-output
                    'make-update-fleet-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-fleet-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (update-fleet-capacity-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (desired-instances common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (min-size common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (max-size common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-capacity-input
                    'make-update-fleet-capacity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-fleet-capacity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "DesiredInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-instances)))
    (aws-sdk/generator/shape::to-query-params "MinSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-size)))
    (aws-sdk/generator/shape::to-query-params "MaxSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fleet-capacity-output (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-capacity-output
                    'make-update-fleet-capacity-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-fleet-capacity-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fleet-port-settings-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (inbound-permission-authorizations common-lisp:nil :type
    (common-lisp:or ip-permissions-list common-lisp:null))
   (inbound-permission-revocations common-lisp:nil :type
    (common-lisp:or ip-permissions-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-port-settings-input
                    'make-update-fleet-port-settings-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-fleet-port-settings-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "InboundPermissionAuthorizations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inbound-permission-authorizations)))
    (aws-sdk/generator/shape::to-query-params "InboundPermissionRevocations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inbound-permission-revocations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fleet-port-settings-output (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fleet-port-settings-output
                    'make-update-fleet-port-settings-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-fleet-port-settings-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (update-game-session-input (:copier common-lisp:nil))
   (game-session-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":game-session-id is required"))
    :type (common-lisp:or arn-string-model common-lisp:null))
   (maximum-player-session-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (player-session-creation-policy common-lisp:nil :type
    (common-lisp:or player-session-creation-policy common-lisp:null))
   (protection-policy common-lisp:nil :type
    (common-lisp:or protection-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-session-input
                    'make-update-game-session-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-game-session-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-id)))
    (aws-sdk/generator/shape::to-query-params "MaximumPlayerSessionCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maximum-player-session-count)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "PlayerSessionCreationPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-session-creation-policy)))
    (aws-sdk/generator/shape::to-query-params "ProtectionPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protection-policy))))))
(common-lisp:progn
 (common-lisp:defstruct (update-game-session-output (:copier common-lisp:nil))
   (game-session common-lisp:nil :type
    (common-lisp:or game-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-session-output
                    'make-update-game-session-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-game-session-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSession"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-game-session-queue-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or game-session-queue-name common-lisp:null))
   (timeout-in-seconds common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (player-latency-policies common-lisp:nil :type
    (common-lisp:or player-latency-policy-list common-lisp:null))
   (destinations common-lisp:nil :type
    (common-lisp:or game-session-queue-destination-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-session-queue-input
                    'make-update-game-session-queue-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-game-session-queue-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "TimeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "PlayerLatencyPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'player-latency-policies)))
    (aws-sdk/generator/shape::to-query-params "Destinations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destinations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-game-session-queue-output (:copier common-lisp:nil))
   (game-session-queue common-lisp:nil :type
    (common-lisp:or game-session-queue common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-session-queue-output
                    'make-update-game-session-queue-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-game-session-queue-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GameSessionQueue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-matchmaking-configuration-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or non-zero-and-max-string common-lisp:null))
   (game-session-queue-arns common-lisp:nil :type
    (common-lisp:or queue-arns-list common-lisp:null))
   (request-timeout-seconds common-lisp:nil :type
    (common-lisp:or matchmaking-request-timeout-integer common-lisp:null))
   (acceptance-timeout-seconds common-lisp:nil :type
    (common-lisp:or matchmaking-acceptance-timeout-integer common-lisp:null))
   (acceptance-required common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (rule-set-name common-lisp:nil :type
    (common-lisp:or matchmaking-id-string-model common-lisp:null))
   (notification-target common-lisp:nil :type
    (common-lisp:or sns-arn-string-model common-lisp:null))
   (additional-player-count common-lisp:nil :type
    (common-lisp:or whole-number common-lisp:null))
   (custom-event-data common-lisp:nil :type
    (common-lisp:or custom-event-data common-lisp:null))
   (game-properties common-lisp:nil :type
    (common-lisp:or game-property-list common-lisp:null))
   (game-session-data common-lisp:nil :type
    (common-lisp:or game-session-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-matchmaking-configuration-input
                    'make-update-matchmaking-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-matchmaking-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "GameSessionQueueArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-queue-arns)))
    (aws-sdk/generator/shape::to-query-params "RequestTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "AcceptanceTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acceptance-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "AcceptanceRequired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acceptance-required)))
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "NotificationTarget"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-target)))
    (aws-sdk/generator/shape::to-query-params "AdditionalPlayerCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-player-count)))
    (aws-sdk/generator/shape::to-query-params "CustomEventData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-event-data)))
    (aws-sdk/generator/shape::to-query-params "GameProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-properties)))
    (aws-sdk/generator/shape::to-query-params "GameSessionData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'game-session-data))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-matchmaking-configuration-output (:copier common-lisp:nil))
   (configuration common-lisp:nil :type
    (common-lisp:or matchmaking-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-matchmaking-configuration-output
                    'make-update-matchmaking-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-matchmaking-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-runtime-configuration-input (:copier common-lisp:nil))
   (fleet-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":fleet-id is required"))
    :type (common-lisp:or fleet-id common-lisp:null))
   (runtime-configuration
    (common-lisp:error
     #A((34) common-lisp:base-char . ":runtime-configuration is required"))
    :type (common-lisp:or runtime-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-runtime-configuration-input
                    'make-update-runtime-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-runtime-configuration-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FleetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-id)))
    (aws-sdk/generator/shape::to-query-params "RuntimeConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runtime-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-runtime-configuration-output (:copier common-lisp:nil))
   (runtime-configuration common-lisp:nil :type
    (common-lisp:or runtime-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-runtime-configuration-output
                    'make-update-runtime-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-runtime-configuration-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuntimeConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runtime-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (validate-matchmaking-rule-set-input (:copier common-lisp:nil))
   (rule-set-body
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-body is required"))
    :type (common-lisp:or rule-set-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validate-matchmaking-rule-set-input
                    'make-validate-matchmaking-rule-set-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          validate-matchmaking-rule-set-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-body))))))
(common-lisp:progn
 (common-lisp:defstruct
     (validate-matchmaking-rule-set-output (:copier common-lisp:nil))
   (valid common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validate-matchmaking-rule-set-output
                    'make-validate-matchmaking-rule-set-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          validate-matchmaking-rule-set-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Valid"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'valid))))))
(common-lisp:deftype whole-number () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defun accept-match
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ticket-id player-ids acceptance-type)
   (common-lisp:declare
    (common-lisp:ignorable ticket-id player-ids acceptance-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-accept-match-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AcceptMatch")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AcceptMatchOutput" common-lisp:nil)))
 (common-lisp:export 'accept-match))
(common-lisp:progn
 (common-lisp:defun create-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description routing-strategy)
   (common-lisp:declare
    (common-lisp:ignorable name description routing-strategy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-alias-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAlias")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAliasOutput" common-lisp:nil)))
 (common-lisp:export 'create-alias))
(common-lisp:progn
 (common-lisp:defun create-build
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version storage-location
                     operating-system)
   (common-lisp:declare
    (common-lisp:ignorable name version storage-location operating-system))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-build-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateBuild")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateBuildOutput" common-lisp:nil)))
 (common-lisp:export 'create-build))
(common-lisp:progn
 (common-lisp:defun create-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description build-id
                     server-launch-path server-launch-parameters log-paths
                     ec2instance-type ec2inbound-permissions
                     new-game-session-protection-policy runtime-configuration
                     resource-creation-limit-policy metric-groups)
   (common-lisp:declare
    (common-lisp:ignorable name description build-id server-launch-path
     server-launch-parameters log-paths ec2instance-type ec2inbound-permissions
     new-game-session-protection-policy runtime-configuration
     resource-creation-limit-policy metric-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-fleet-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateFleet")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateFleetOutput" common-lisp:nil)))
 (common-lisp:export 'create-fleet))
(common-lisp:progn
 (common-lisp:defun create-game-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id alias-id
                     maximum-player-session-count name game-properties
                     creator-id game-session-id idempotency-token
                     game-session-data)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id alias-id maximum-player-session-count name
     game-properties creator-id game-session-id idempotency-token
     game-session-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-game-session-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateGameSession")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateGameSessionOutput" common-lisp:nil)))
 (common-lisp:export 'create-game-session))
(common-lisp:progn
 (common-lisp:defun create-game-session-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name timeout-in-seconds
                     player-latency-policies destinations)
   (common-lisp:declare
    (common-lisp:ignorable name timeout-in-seconds player-latency-policies
     destinations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-game-session-queue-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateGameSessionQueue")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateGameSessionQueueOutput" common-lisp:nil)))
 (common-lisp:export 'create-game-session-queue))
(common-lisp:progn
 (common-lisp:defun create-matchmaking-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description game-session-queue-arns
                     request-timeout-seconds acceptance-timeout-seconds
                     acceptance-required rule-set-name notification-target
                     additional-player-count custom-event-data game-properties
                     game-session-data)
   (common-lisp:declare
    (common-lisp:ignorable name description game-session-queue-arns
     request-timeout-seconds acceptance-timeout-seconds acceptance-required
     rule-set-name notification-target additional-player-count
     custom-event-data game-properties game-session-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-matchmaking-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateMatchmakingConfiguration")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateMatchmakingConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'create-matchmaking-configuration))
(common-lisp:progn
 (common-lisp:defun create-matchmaking-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name rule-set-body)
   (common-lisp:declare (common-lisp:ignorable name rule-set-body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-matchmaking-rule-set-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateMatchmakingRuleSet")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateMatchmakingRuleSetOutput" common-lisp:nil)))
 (common-lisp:export 'create-matchmaking-rule-set))
(common-lisp:progn
 (common-lisp:defun create-player-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-session-id player-id player-data)
   (common-lisp:declare
    (common-lisp:ignorable game-session-id player-id player-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-player-session-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePlayerSession")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePlayerSessionOutput" common-lisp:nil)))
 (common-lisp:export 'create-player-session))
(common-lisp:progn
 (common-lisp:defun create-player-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-session-id player-ids
                     player-data-map)
   (common-lisp:declare
    (common-lisp:ignorable game-session-id player-ids player-data-map))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-player-sessions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePlayerSessions")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePlayerSessionsOutput" common-lisp:nil)))
 (common-lisp:export 'create-player-sessions))
(common-lisp:progn
 (common-lisp:defun delete-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alias-id)
   (common-lisp:declare (common-lisp:ignorable alias-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-alias-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAlias")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-alias))
(common-lisp:progn
 (common-lisp:defun delete-build
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key build-id)
   (common-lisp:declare (common-lisp:ignorable build-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-build-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBuild")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-build))
(common-lisp:progn
 (common-lisp:defun delete-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id)
   (common-lisp:declare (common-lisp:ignorable fleet-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-fleet-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteFleet")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-fleet))
(common-lisp:progn
 (common-lisp:defun delete-game-session-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-game-session-queue-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteGameSessionQueue")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteGameSessionQueueOutput" common-lisp:nil)))
 (common-lisp:export 'delete-game-session-queue))
(common-lisp:progn
 (common-lisp:defun delete-matchmaking-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-matchmaking-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteMatchmakingConfiguration")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteMatchmakingConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'delete-matchmaking-configuration))
(common-lisp:progn
 (common-lisp:defun delete-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name fleet-id)
   (common-lisp:declare (common-lisp:ignorable name fleet-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-scaling-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteScalingPolicy")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-scaling-policy))
(common-lisp:progn
 (common-lisp:defun describe-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alias-id)
   (common-lisp:declare (common-lisp:ignorable alias-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alias-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAlias")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAliasOutput" common-lisp:nil)))
 (common-lisp:export 'describe-alias))
(common-lisp:progn
 (common-lisp:defun describe-build
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key build-id)
   (common-lisp:declare (common-lisp:ignorable build-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-build-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeBuild")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeBuildOutput" common-lisp:nil)))
 (common-lisp:export 'describe-build))
(common-lisp:progn
 (common-lisp:defun describe-ec2instance-limits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ec2instance-type)
   (common-lisp:declare (common-lisp:ignorable ec2instance-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-ec2instance-limits-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEC2InstanceLimits")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEC2InstanceLimitsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-ec2instance-limits))
(common-lisp:progn
 (common-lisp:defun describe-fleet-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-ids limit next-token)
   (common-lisp:declare (common-lisp:ignorable fleet-ids limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-fleet-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFleetAttributes")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFleetAttributesOutput" common-lisp:nil)))
 (common-lisp:export 'describe-fleet-attributes))
(common-lisp:progn
 (common-lisp:defun describe-fleet-capacity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-ids limit next-token)
   (common-lisp:declare (common-lisp:ignorable fleet-ids limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-fleet-capacity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFleetCapacity")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFleetCapacityOutput" common-lisp:nil)))
 (common-lisp:export 'describe-fleet-capacity))
(common-lisp:progn
 (common-lisp:defun describe-fleet-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id start-time end-time limit
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id start-time end-time limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-fleet-events-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFleetEvents")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFleetEventsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-fleet-events))
(common-lisp:progn
 (common-lisp:defun describe-fleet-port-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id)
   (common-lisp:declare (common-lisp:ignorable fleet-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-fleet-port-settings-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFleetPortSettings")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFleetPortSettingsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-fleet-port-settings))
(common-lisp:progn
 (common-lisp:defun describe-fleet-utilization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-ids limit next-token)
   (common-lisp:declare (common-lisp:ignorable fleet-ids limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-fleet-utilization-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFleetUtilization")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFleetUtilizationOutput" common-lisp:nil)))
 (common-lisp:export 'describe-fleet-utilization))
(common-lisp:progn
 (common-lisp:defun describe-game-session-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id game-session-id alias-id
                     status-filter limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id game-session-id alias-id status-filter
     limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-game-session-details-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeGameSessionDetails")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeGameSessionDetailsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-game-session-details))
(common-lisp:progn
 (common-lisp:defun describe-game-session-placement
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key placement-id)
   (common-lisp:declare (common-lisp:ignorable placement-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-game-session-placement-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeGameSessionPlacement")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeGameSessionPlacementOutput" common-lisp:nil)))
 (common-lisp:export 'describe-game-session-placement))
(common-lisp:progn
 (common-lisp:defun describe-game-session-queues
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names limit next-token)
   (common-lisp:declare (common-lisp:ignorable names limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-game-session-queues-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeGameSessionQueues")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeGameSessionQueuesOutput" common-lisp:nil)))
 (common-lisp:export 'describe-game-session-queues))
(common-lisp:progn
 (common-lisp:defun describe-game-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id game-session-id alias-id
                     status-filter limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id game-session-id alias-id status-filter
     limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-game-sessions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeGameSessions")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeGameSessionsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-game-sessions))
(common-lisp:progn
 (common-lisp:defun describe-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id instance-id limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id instance-id limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-instances-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeInstances")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstancesOutput" common-lisp:nil)))
 (common-lisp:export 'describe-instances))
(common-lisp:progn
 (common-lisp:defun describe-matchmaking
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ticket-ids)
   (common-lisp:declare (common-lisp:ignorable ticket-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-matchmaking-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeMatchmaking")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMatchmakingOutput" common-lisp:nil)))
 (common-lisp:export 'describe-matchmaking))
(common-lisp:progn
 (common-lisp:defun describe-matchmaking-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names rule-set-name limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable names rule-set-name limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-matchmaking-configurations-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeMatchmakingConfigurations")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMatchmakingConfigurationsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-matchmaking-configurations))
(common-lisp:progn
 (common-lisp:defun describe-matchmaking-rule-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names limit next-token)
   (common-lisp:declare (common-lisp:ignorable names limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-matchmaking-rule-sets-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeMatchmakingRuleSets")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMatchmakingRuleSetsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-matchmaking-rule-sets))
(common-lisp:progn
 (common-lisp:defun describe-player-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-session-id player-id
                     player-session-id player-session-status-filter limit
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable game-session-id player-id player-session-id
     player-session-status-filter limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-player-sessions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePlayerSessions")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePlayerSessionsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-player-sessions))
(common-lisp:progn
 (common-lisp:defun describe-runtime-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id)
   (common-lisp:declare (common-lisp:ignorable fleet-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-runtime-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRuntimeConfiguration")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRuntimeConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'describe-runtime-configuration))
(common-lisp:progn
 (common-lisp:defun describe-scaling-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id status-filter limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id status-filter limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-scaling-policies-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeScalingPolicies")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeScalingPoliciesOutput" common-lisp:nil)))
 (common-lisp:export 'describe-scaling-policies))
(common-lisp:progn
 (common-lisp:defun get-game-session-log-url
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-session-id)
   (common-lisp:declare (common-lisp:ignorable game-session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-game-session-log-url-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetGameSessionLogUrl")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetGameSessionLogUrlOutput" common-lisp:nil)))
 (common-lisp:export 'get-game-session-log-url))
(common-lisp:progn
 (common-lisp:defun get-instance-access
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id instance-id)
   (common-lisp:declare (common-lisp:ignorable fleet-id instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-access-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetInstanceAccess")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetInstanceAccessOutput" common-lisp:nil)))
 (common-lisp:export 'get-instance-access))
(common-lisp:progn
 (common-lisp:defun list-aliases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key routing-strategy-type name limit
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable routing-strategy-type name limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-aliases-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAliases")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAliasesOutput" common-lisp:nil)))
 (common-lisp:export 'list-aliases))
(common-lisp:progn
 (common-lisp:defun list-builds
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status limit next-token)
   (common-lisp:declare (common-lisp:ignorable status limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-builds-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListBuilds")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBuildsOutput" common-lisp:nil)))
 (common-lisp:export 'list-builds))
(common-lisp:progn
 (common-lisp:defun list-fleets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key build-id limit next-token)
   (common-lisp:declare (common-lisp:ignorable build-id limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-fleets-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListFleets")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListFleetsOutput" common-lisp:nil)))
 (common-lisp:export 'list-fleets))
(common-lisp:progn
 (common-lisp:defun put-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name fleet-id scaling-adjustment
                     scaling-adjustment-type threshold comparison-operator
                     evaluation-periods metric-name)
   (common-lisp:declare
    (common-lisp:ignorable name fleet-id scaling-adjustment
     scaling-adjustment-type threshold comparison-operator evaluation-periods
     metric-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-scaling-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutScalingPolicy")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutScalingPolicyOutput" common-lisp:nil)))
 (common-lisp:export 'put-scaling-policy))
(common-lisp:progn
 (common-lisp:defun request-upload-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key build-id)
   (common-lisp:declare (common-lisp:ignorable build-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-request-upload-credentials-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RequestUploadCredentials")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RequestUploadCredentialsOutput" common-lisp:nil)))
 (common-lisp:export 'request-upload-credentials))
(common-lisp:progn
 (common-lisp:defun resolve-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alias-id)
   (common-lisp:declare (common-lisp:ignorable alias-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-resolve-alias-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ResolveAlias")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ResolveAliasOutput" common-lisp:nil)))
 (common-lisp:export 'resolve-alias))
(common-lisp:progn
 (common-lisp:defun search-game-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id alias-id filter-expression
                     sort-expression limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id alias-id filter-expression sort-expression
     limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-search-game-sessions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SearchGameSessions")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SearchGameSessionsOutput" common-lisp:nil)))
 (common-lisp:export 'search-game-sessions))
(common-lisp:progn
 (common-lisp:defun start-game-session-placement
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key placement-id game-session-queue-name
                     game-properties maximum-player-session-count
                     game-session-name player-latencies desired-player-sessions
                     game-session-data)
   (common-lisp:declare
    (common-lisp:ignorable placement-id game-session-queue-name game-properties
     maximum-player-session-count game-session-name player-latencies
     desired-player-sessions game-session-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-game-session-placement-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartGameSessionPlacement")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartGameSessionPlacementOutput" common-lisp:nil)))
 (common-lisp:export 'start-game-session-placement))
(common-lisp:progn
 (common-lisp:defun start-matchmaking
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ticket-id configuration-name players)
   (common-lisp:declare
    (common-lisp:ignorable ticket-id configuration-name players))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-matchmaking-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartMatchmaking")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartMatchmakingOutput" common-lisp:nil)))
 (common-lisp:export 'start-matchmaking))
(common-lisp:progn
 (common-lisp:defun stop-game-session-placement
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key placement-id)
   (common-lisp:declare (common-lisp:ignorable placement-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-game-session-placement-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopGameSessionPlacement")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopGameSessionPlacementOutput" common-lisp:nil)))
 (common-lisp:export 'stop-game-session-placement))
(common-lisp:progn
 (common-lisp:defun stop-matchmaking
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ticket-id)
   (common-lisp:declare (common-lisp:ignorable ticket-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-matchmaking-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopMatchmaking")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopMatchmakingOutput" common-lisp:nil)))
 (common-lisp:export 'stop-matchmaking))
(common-lisp:progn
 (common-lisp:defun update-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alias-id name description
                     routing-strategy)
   (common-lisp:declare
    (common-lisp:ignorable alias-id name description routing-strategy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-alias-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAlias")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateAliasOutput" common-lisp:nil)))
 (common-lisp:export 'update-alias))
(common-lisp:progn
 (common-lisp:defun update-build
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key build-id name version)
   (common-lisp:declare (common-lisp:ignorable build-id name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-build-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateBuild")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateBuildOutput" common-lisp:nil)))
 (common-lisp:export 'update-build))
(common-lisp:progn
 (common-lisp:defun update-fleet-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id name description
                     new-game-session-protection-policy
                     resource-creation-limit-policy metric-groups)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id name description
     new-game-session-protection-policy resource-creation-limit-policy
     metric-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-fleet-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFleetAttributes")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateFleetAttributesOutput" common-lisp:nil)))
 (common-lisp:export 'update-fleet-attributes))
(common-lisp:progn
 (common-lisp:defun update-fleet-capacity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id desired-instances min-size
                     max-size)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id desired-instances min-size max-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-fleet-capacity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFleetCapacity")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateFleetCapacityOutput" common-lisp:nil)))
 (common-lisp:export 'update-fleet-capacity))
(common-lisp:progn
 (common-lisp:defun update-fleet-port-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id
                     inbound-permission-authorizations
                     inbound-permission-revocations)
   (common-lisp:declare
    (common-lisp:ignorable fleet-id inbound-permission-authorizations
     inbound-permission-revocations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-fleet-port-settings-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFleetPortSettings")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateFleetPortSettingsOutput" common-lisp:nil)))
 (common-lisp:export 'update-fleet-port-settings))
(common-lisp:progn
 (common-lisp:defun update-game-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-session-id
                     maximum-player-session-count name
                     player-session-creation-policy protection-policy)
   (common-lisp:declare
    (common-lisp:ignorable game-session-id maximum-player-session-count name
     player-session-creation-policy protection-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-game-session-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateGameSession")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateGameSessionOutput" common-lisp:nil)))
 (common-lisp:export 'update-game-session))
(common-lisp:progn
 (common-lisp:defun update-game-session-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name timeout-in-seconds
                     player-latency-policies destinations)
   (common-lisp:declare
    (common-lisp:ignorable name timeout-in-seconds player-latency-policies
     destinations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-game-session-queue-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateGameSessionQueue")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateGameSessionQueueOutput" common-lisp:nil)))
 (common-lisp:export 'update-game-session-queue))
(common-lisp:progn
 (common-lisp:defun update-matchmaking-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description game-session-queue-arns
                     request-timeout-seconds acceptance-timeout-seconds
                     acceptance-required rule-set-name notification-target
                     additional-player-count custom-event-data game-properties
                     game-session-data)
   (common-lisp:declare
    (common-lisp:ignorable name description game-session-queue-arns
     request-timeout-seconds acceptance-timeout-seconds acceptance-required
     rule-set-name notification-target additional-player-count
     custom-event-data game-properties game-session-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-matchmaking-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMatchmakingConfiguration")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateMatchmakingConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'update-matchmaking-configuration))
(common-lisp:progn
 (common-lisp:defun update-runtime-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fleet-id runtime-configuration)
   (common-lisp:declare (common-lisp:ignorable fleet-id runtime-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-runtime-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRuntimeConfiguration")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateRuntimeConfigurationOutput" common-lisp:nil)))
 (common-lisp:export 'update-runtime-configuration))
(common-lisp:progn
 (common-lisp:defun validate-matchmaking-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-body)
   (common-lisp:declare (common-lisp:ignorable rule-set-body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-validate-matchmaking-rule-set-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "gamelift")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ValidateMatchmakingRuleSet")
                                  ("Version" ,@"2015-10-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ValidateMatchmakingRuleSetOutput" common-lisp:nil)))
 (common-lisp:export 'validate-matchmaking-rule-set))