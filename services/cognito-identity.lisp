;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cognito-identity
  (:use)
  (:nicknames #:aws/cognito-identity)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/cognito-identity)

(common-lisp:deftype arnstring () 'common-lisp:string)
(common-lisp:deftype access-key-string () 'common-lisp:string)
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:deftype ambiguous-role-resolution-type () 'common-lisp:string)
(common-lisp:deftype claim-name () 'common-lisp:string)
(common-lisp:deftype claim-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cognito-identity-provider (:copier common-lisp:nil))
   (provider-name common-lisp:nil :type
    (common-lisp:or cognito-identity-provider-name common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or cognito-identity-provider-client-id common-lisp:null))
   (server-side-token-check common-lisp:nil :type
    (common-lisp:or cognito-identity-provider-token-check common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cognito-identity-provider
                    'make-cognito-identity-provider))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cognito-identity-provider))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "ClientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-id)))
    (aws-sdk/generator/shape::to-query-params "ServerSideTokenCheck"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'server-side-token-check))))))
(common-lisp:deftype cognito-identity-provider-client-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cognito-identity-provider-list ()
   '(trivial-types:proper-list cognito-identity-provider))
 (common-lisp:defun |make-cognito-identity-provider-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cognito-identity-provider))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cognito-identity-provider-name () 'common-lisp:string)
(common-lisp:deftype cognito-identity-provider-token-check ()
  'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (create-identity-pool-input (:copier common-lisp:nil))
   (identity-pool-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":identity-pool-name is required"))
    :type (common-lisp:or identity-pool-name common-lisp:null))
   (allow-unauthenticated-identities
    (common-lisp:error
     #A((45) common-lisp:base-char
        . ":allow-unauthenticated-identities is required"))
    :type (common-lisp:or identity-pool-unauthenticated common-lisp:null))
   (supported-login-providers common-lisp:nil :type
    (common-lisp:or identity-providers common-lisp:null))
   (developer-provider-name common-lisp:nil :type
    (common-lisp:or developer-provider-name common-lisp:null))
   (open-id-connect-provider-arns common-lisp:nil :type
    (common-lisp:or oidcprovider-list common-lisp:null))
   (cognito-identity-providers common-lisp:nil :type
    (common-lisp:or cognito-identity-provider-list common-lisp:null))
   (saml-provider-arns common-lisp:nil :type
    (common-lisp:or samlprovider-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-identity-pool-input
                    'make-create-identity-pool-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-identity-pool-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-name)))
    (aws-sdk/generator/shape::to-query-params "AllowUnauthenticatedIdentities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-unauthenticated-identities)))
    (aws-sdk/generator/shape::to-query-params "SupportedLoginProviders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-login-providers)))
    (aws-sdk/generator/shape::to-query-params "DeveloperProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-provider-name)))
    (aws-sdk/generator/shape::to-query-params "OpenIdConnectProviderARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-id-connect-provider-arns)))
    (aws-sdk/generator/shape::to-query-params "CognitoIdentityProviders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cognito-identity-providers)))
    (aws-sdk/generator/shape::to-query-params "SamlProviderARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'saml-provider-arns))))))
(common-lisp:progn
 (common-lisp:defstruct (credentials (:copier common-lisp:nil))
   (access-key-id common-lisp:nil :type
    (common-lisp:or access-key-string common-lisp:null))
   (secret-key common-lisp:nil :type
    (common-lisp:or secret-key-string common-lisp:null))
   (session-token common-lisp:nil :type
    (common-lisp:or session-token-string common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'credentials 'make-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape credentials))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-key-id)))
    (aws-sdk/generator/shape::to-query-params "SecretKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-key)))
    (aws-sdk/generator/shape::to-query-params "SessionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session-token)))
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration))))))
(common-lisp:deftype date-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-identities-input (:copier common-lisp:nil))
   (identity-ids-to-delete
    (common-lisp:error
     #A((35) common-lisp:base-char . ":identity-ids-to-delete is required"))
    :type (common-lisp:or identity-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-identities-input 'make-delete-identities-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identities-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityIdsToDelete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-ids-to-delete))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-identities-response (:copier common-lisp:nil))
   (unprocessed-identity-ids common-lisp:nil :type
    (common-lisp:or unprocessed-identity-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-identities-response
                    'make-delete-identities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UnprocessedIdentityIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unprocessed-identity-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-identity-pool-input (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-identity-pool-input
                    'make-delete-identity-pool-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identity-pool-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-identity-input (:copier common-lisp:nil))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-input 'make-describe-identity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-pool-input (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-pool-input
                    'make-describe-identity-pool-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-pool-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:deftype developer-provider-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (developer-user-already-registered-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'developer-user-already-registered-exception
                    'make-developer-user-already-registered-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          developer-user-already-registered-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype developer-user-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype developer-user-identifier-list ()
   '(trivial-types:proper-list developer-user-identifier))
 (common-lisp:defun |make-developer-user-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            developer-user-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (external-service-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'external-service-exception
                    'make-external-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          external-service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-credentials-for-identity-input (:copier common-lisp:nil))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (logins common-lisp:nil :type (common-lisp:or logins-map common-lisp:null))
   (custom-role-arn common-lisp:nil :type
    (common-lisp:or arnstring common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-credentials-for-identity-input
                    'make-get-credentials-for-identity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-credentials-for-identity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Logins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logins)))
    (aws-sdk/generator/shape::to-query-params "CustomRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-credentials-for-identity-response (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (credentials common-lisp:nil :type
    (common-lisp:or credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-credentials-for-identity-response
                    'make-get-credentials-for-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-credentials-for-identity-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials))))))
(common-lisp:progn
 (common-lisp:defstruct (get-id-input (:copier common-lisp:nil))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (logins common-lisp:nil :type (common-lisp:or logins-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-id-input 'make-get-id-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-id-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Logins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logins))))))
(common-lisp:progn
 (common-lisp:defstruct (get-id-response (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-id-response 'make-get-id-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-id-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-pool-roles-input (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-pool-roles-input
                    'make-get-identity-pool-roles-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-pool-roles-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-pool-roles-response (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (roles common-lisp:nil :type (common-lisp:or roles-map common-lisp:null))
   (role-mappings common-lisp:nil :type
    (common-lisp:or role-mapping-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-pool-roles-response
                    'make-get-identity-pool-roles-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-pool-roles-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Roles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'roles)))
    (aws-sdk/generator/shape::to-query-params "RoleMappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-mappings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-open-id-token-for-developer-identity-input (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (logins
    (common-lisp:error #A((19) common-lisp:base-char . ":logins is required"))
    :type (common-lisp:or logins-map common-lisp:null))
   (token-duration common-lisp:nil :type
    (common-lisp:or token-duration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-open-id-token-for-developer-identity-input
                    'make-get-open-id-token-for-developer-identity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-open-id-token-for-developer-identity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Logins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logins)))
    (aws-sdk/generator/shape::to-query-params "TokenDuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token-duration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-open-id-token-for-developer-identity-response
      (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or oidctoken common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-open-id-token-for-developer-identity-response
                    'make-get-open-id-token-for-developer-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-open-id-token-for-developer-identity-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-open-id-token-input (:copier common-lisp:nil))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (logins common-lisp:nil :type (common-lisp:or logins-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-open-id-token-input 'make-get-open-id-token-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-open-id-token-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Logins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logins))))))
(common-lisp:progn
 (common-lisp:defstruct (get-open-id-token-response (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or oidctoken common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-open-id-token-response
                    'make-get-open-id-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-open-id-token-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:deftype hide-disabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype identities-list ()
   '(trivial-types:proper-list identity-description))
 (common-lisp:defun |make-identities-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (identity-description (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (logins common-lisp:nil :type (common-lisp:or logins-list common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-description 'make-identity-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape identity-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Logins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logins)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date))))))
(common-lisp:deftype identity-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype identity-id-list ()
   '(trivial-types:proper-list identity-id))
 (common-lisp:defun |make-identity-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (identity-pool (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-pool-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":identity-pool-name is required"))
    :type (common-lisp:or identity-pool-name common-lisp:null))
   (allow-unauthenticated-identities
    (common-lisp:error
     #A((45) common-lisp:base-char
        . ":allow-unauthenticated-identities is required"))
    :type (common-lisp:or identity-pool-unauthenticated common-lisp:null))
   (supported-login-providers common-lisp:nil :type
    (common-lisp:or identity-providers common-lisp:null))
   (developer-provider-name common-lisp:nil :type
    (common-lisp:or developer-provider-name common-lisp:null))
   (open-id-connect-provider-arns common-lisp:nil :type
    (common-lisp:or oidcprovider-list common-lisp:null))
   (cognito-identity-providers common-lisp:nil :type
    (common-lisp:or cognito-identity-provider-list common-lisp:null))
   (saml-provider-arns common-lisp:nil :type
    (common-lisp:or samlprovider-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'identity-pool 'make-identity-pool))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape identity-pool))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityPoolName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-name)))
    (aws-sdk/generator/shape::to-query-params "AllowUnauthenticatedIdentities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-unauthenticated-identities)))
    (aws-sdk/generator/shape::to-query-params "SupportedLoginProviders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-login-providers)))
    (aws-sdk/generator/shape::to-query-params "DeveloperProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-provider-name)))
    (aws-sdk/generator/shape::to-query-params "OpenIdConnectProviderARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'open-id-connect-provider-arns)))
    (aws-sdk/generator/shape::to-query-params "CognitoIdentityProviders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cognito-identity-providers)))
    (aws-sdk/generator/shape::to-query-params "SamlProviderARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'saml-provider-arns))))))
(common-lisp:deftype identity-pool-id () 'common-lisp:string)
(common-lisp:deftype identity-pool-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (identity-pool-short-description (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (identity-pool-name common-lisp:nil :type
    (common-lisp:or identity-pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-pool-short-description
                    'make-identity-pool-short-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          identity-pool-short-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityPoolName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-name))))))
(common-lisp:deftype identity-pool-unauthenticated () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype identity-pools-list ()
   '(trivial-types:proper-list identity-pool-short-description))
 (common-lisp:defun |make-identity-pools-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            identity-pool-short-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype identity-provider-id () 'common-lisp:string)
(common-lisp:deftype identity-provider-name () 'common-lisp:string)
(common-lisp:deftype identity-provider-token () 'common-lisp:string)
(common-lisp:defstruct
    (identity-providers
     (:constructor |make-identity-providers|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (internal-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception 'make-internal-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-identity-pool-configuration-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-identity-pool-configuration-exception
                    'make-invalid-identity-pool-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-identity-pool-configuration-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameter-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-identities-input (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (max-results
    (common-lisp:error
     #A((24) common-lisp:base-char . ":max-results is required"))
    :type (common-lisp:or query-limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null))
   (hide-disabled common-lisp:nil :type
    (common-lisp:or hide-disabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identities-input 'make-list-identities-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identities-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "HideDisabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hide-disabled))))))
(common-lisp:progn
 (common-lisp:defstruct (list-identities-response (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (identities common-lisp:nil :type
    (common-lisp:or identities-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identities-response 'make-list-identities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Identities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-identity-pools-input (:copier common-lisp:nil))
   (max-results
    (common-lisp:error
     #A((24) common-lisp:base-char . ":max-results is required"))
    :type (common-lisp:or query-limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-pools-input
                    'make-list-identity-pools-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-pools-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-pools-response (:copier common-lisp:nil))
   (identity-pools common-lisp:nil :type
    (common-lisp:or identity-pools-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-pools-response
                    'make-list-identity-pools-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-pools-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPools"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pools)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:deftype logins-list ()
   '(trivial-types:proper-list identity-provider-name))
 (common-lisp:defun |make-logins-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity-provider-name))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (logins-map
     (:constructor |make-logins-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct
     (lookup-developer-identity-input (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (developer-user-identifier common-lisp:nil :type
    (common-lisp:or developer-user-identifier common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or query-limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lookup-developer-identity-input
                    'make-lookup-developer-identity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lookup-developer-identity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DeveloperUserIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-user-identifier)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lookup-developer-identity-response (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (developer-user-identifier-list common-lisp:nil :type
    (common-lisp:or developer-user-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lookup-developer-identity-response
                    'make-lookup-developer-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lookup-developer-identity-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DeveloperUserIdentifierList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-user-identifier-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (mapping-rule (:copier common-lisp:nil))
   (claim
    (common-lisp:error #A((18) common-lisp:base-char . ":claim is required"))
    :type (common-lisp:or claim-name common-lisp:null))
   (match-type
    (common-lisp:error
     #A((23) common-lisp:base-char . ":match-type is required"))
    :type (common-lisp:or mapping-rule-match-type common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or claim-value common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or arnstring common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mapping-rule 'make-mapping-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape mapping-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Claim"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'claim)))
    (aws-sdk/generator/shape::to-query-params "MatchType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'match-type)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:deftype mapping-rule-match-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype mapping-rules-list ()
   '(trivial-types:proper-list mapping-rule))
 (common-lisp:defun |make-mapping-rules-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mapping-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (merge-developer-identities-input (:copier common-lisp:nil))
   (source-user-identifier
    (common-lisp:error
     #A((35) common-lisp:base-char . ":source-user-identifier is required"))
    :type (common-lisp:or developer-user-identifier common-lisp:null))
   (destination-user-identifier
    (common-lisp:error
     #A((40) common-lisp:base-char
        . ":destination-user-identifier is required"))
    :type (common-lisp:or developer-user-identifier common-lisp:null))
   (developer-provider-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":developer-provider-name is required"))
    :type (common-lisp:or developer-provider-name common-lisp:null))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'merge-developer-identities-input
                    'make-merge-developer-identities-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          merge-developer-identities-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceUserIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-user-identifier)))
    (aws-sdk/generator/shape::to-query-params "DestinationUserIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-user-identifier)))
    (aws-sdk/generator/shape::to-query-params "DeveloperProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-provider-name)))
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (merge-developer-identities-response (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'merge-developer-identities-response
                    'make-merge-developer-identities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          merge-developer-identities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id))))))
(common-lisp:progn
 (common-lisp:defstruct (not-authorized-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-authorized-exception 'make-not-authorized-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          not-authorized-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype oidcprovider-list ()
   '(trivial-types:proper-list arnstring))
 (common-lisp:defun |make-oidcprovider-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arnstring))
   aws-sdk/generator/shape::members))
(common-lisp:deftype oidctoken () 'common-lisp:string)
(common-lisp:deftype pagination-key () 'common-lisp:string)
(common-lisp:deftype query-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (resource-conflict-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-conflict-exception
                    'make-resource-conflict-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-conflict-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (role-mapping (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or role-mapping-type common-lisp:null))
   (ambiguous-role-resolution common-lisp:nil :type
    (common-lisp:or ambiguous-role-resolution-type common-lisp:null))
   (rules-configuration common-lisp:nil :type
    (common-lisp:or rules-configuration-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'role-mapping 'make-role-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape role-mapping))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "AmbiguousRoleResolution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ambiguous-role-resolution)))
    (aws-sdk/generator/shape::to-query-params "RulesConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-configuration))))))
(common-lisp:defstruct
    (role-mapping-map
     (:constructor |make-role-mapping-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype role-mapping-type () 'common-lisp:string)
(common-lisp:deftype role-type () 'common-lisp:string)
(common-lisp:defstruct
    (roles-map
     (:constructor |make-roles-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (rules-configuration-type (:copier common-lisp:nil))
   (rules
    (common-lisp:error #A((18) common-lisp:base-char . ":rules is required"))
    :type (common-lisp:or mapping-rules-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rules-configuration-type 'make-rules-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rules-configuration-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:deftype samlprovider-list ()
   '(trivial-types:proper-list arnstring))
 (common-lisp:defun |make-samlprovider-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arnstring))
   aws-sdk/generator/shape::members))
(common-lisp:deftype secret-key-string () 'common-lisp:string)
(common-lisp:deftype session-token-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-pool-roles-input (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (roles
    (common-lisp:error #A((18) common-lisp:base-char . ":roles is required"))
    :type (common-lisp:or roles-map common-lisp:null))
   (role-mappings common-lisp:nil :type
    (common-lisp:or role-mapping-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-pool-roles-input
                    'make-set-identity-pool-roles-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-pool-roles-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Roles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'roles)))
    (aws-sdk/generator/shape::to-query-params "RoleMappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-mappings))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype token-duration () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unlink-developer-identity-input (:copier common-lisp:nil))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (developer-provider-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":developer-provider-name is required"))
    :type (common-lisp:or developer-provider-name common-lisp:null))
   (developer-user-identifier
    (common-lisp:error
     #A((38) common-lisp:base-char . ":developer-user-identifier is required"))
    :type (common-lisp:or developer-user-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unlink-developer-identity-input
                    'make-unlink-developer-identity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unlink-developer-identity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "DeveloperProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-provider-name)))
    (aws-sdk/generator/shape::to-query-params "DeveloperUserIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'developer-user-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (unlink-identity-input (:copier common-lisp:nil))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (logins
    (common-lisp:error #A((19) common-lisp:base-char . ":logins is required"))
    :type (common-lisp:or logins-map common-lisp:null))
   (logins-to-remove
    (common-lisp:error
     #A((29) common-lisp:base-char . ":logins-to-remove is required"))
    :type (common-lisp:or logins-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unlink-identity-input 'make-unlink-identity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unlink-identity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Logins"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logins)))
    (aws-sdk/generator/shape::to-query-params "LoginsToRemove"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logins-to-remove))))))
(common-lisp:progn
 (common-lisp:defstruct (unprocessed-identity-id (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unprocessed-identity-id 'make-unprocessed-identity-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unprocessed-identity-id))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code))))))
(common-lisp:progn
 (common-lisp:deftype unprocessed-identity-id-list ()
   '(trivial-types:proper-list unprocessed-identity-id))
 (common-lisp:defun |make-unprocessed-identity-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list unprocessed-identity-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun create-identity-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-name
                     allow-unauthenticated-identities supported-login-providers
                     developer-provider-name open-id-connect-provider-arns
                     cognito-identity-providers saml-provider-arns)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-name allow-unauthenticated-identities
     supported-login-providers developer-provider-name
     open-id-connect-provider-arns cognito-identity-providers
     saml-provider-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-identity-pool-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateIdentityPool")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IdentityPool" common-lisp:nil)))
 (common-lisp:export 'create-identity-pool))
(common-lisp:progn
 (common-lisp:defun delete-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-ids-to-delete)
   (common-lisp:declare (common-lisp:ignorable identity-ids-to-delete))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-identities-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIdentities")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteIdentitiesResponse" common-lisp:nil)))
 (common-lisp:export 'delete-identities))
(common-lisp:progn
 (common-lisp:defun delete-identity-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-identity-pool-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIdentityPool")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-identity-pool))
(common-lisp:progn
 (common-lisp:defun describe-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-id)
   (common-lisp:declare (common-lisp:ignorable identity-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-identity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeIdentity")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IdentityDescription" common-lisp:nil)))
 (common-lisp:export 'describe-identity))
(common-lisp:progn
 (common-lisp:defun describe-identity-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-identity-pool-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeIdentityPool")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IdentityPool" common-lisp:nil)))
 (common-lisp:export 'describe-identity-pool))
(common-lisp:progn
 (common-lisp:defun get-credentials-for-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-id logins custom-role-arn)
   (common-lisp:declare
    (common-lisp:ignorable identity-id logins custom-role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-credentials-for-identity-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetCredentialsForIdentity")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCredentialsForIdentityResponse" common-lisp:nil)))
 (common-lisp:export 'get-credentials-for-identity))
(common-lisp:progn
 (common-lisp:defun get-id
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id identity-pool-id logins)
   (common-lisp:declare
    (common-lisp:ignorable account-id identity-pool-id logins))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-id-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetId")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdResponse" common-lisp:nil)))
 (common-lisp:export 'get-id))
(common-lisp:progn
 (common-lisp:defun get-identity-pool-roles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-identity-pool-roles-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetIdentityPoolRoles")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityPoolRolesResponse" common-lisp:nil)))
 (common-lisp:export 'get-identity-pool-roles))
(common-lisp:progn
 (common-lisp:defun get-open-id-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-id logins)
   (common-lisp:declare (common-lisp:ignorable identity-id logins))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-open-id-token-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetOpenIdToken")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetOpenIdTokenResponse" common-lisp:nil)))
 (common-lisp:export 'get-open-id-token))
(common-lisp:progn
 (common-lisp:defun get-open-id-token-for-developer-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id logins
                     token-duration)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id logins token-duration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-open-id-token-for-developer-identity-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetOpenIdTokenForDeveloperIdentity")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetOpenIdTokenForDeveloperIdentityResponse" common-lisp:nil)))
 (common-lisp:export 'get-open-id-token-for-developer-identity))
(common-lisp:progn
 (common-lisp:defun list-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id max-results next-token
                     hide-disabled)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id max-results next-token
     hide-disabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-identities-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIdentities")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIdentitiesResponse" common-lisp:nil)))
 (common-lisp:export 'list-identities))
(common-lisp:progn
 (common-lisp:defun list-identity-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-identity-pools-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIdentityPools")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIdentityPoolsResponse" common-lisp:nil)))
 (common-lisp:export 'list-identity-pools))
(common-lisp:progn
 (common-lisp:defun lookup-developer-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id
                     developer-user-identifier max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id
     developer-user-identifier max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-lookup-developer-identity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"LookupDeveloperIdentity")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "LookupDeveloperIdentityResponse" common-lisp:nil)))
 (common-lisp:export 'lookup-developer-identity))
(common-lisp:progn
 (common-lisp:defun merge-developer-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-user-identifier
                     destination-user-identifier developer-provider-name
                     identity-pool-id)
   (common-lisp:declare
    (common-lisp:ignorable source-user-identifier destination-user-identifier
     developer-provider-name identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-merge-developer-identities-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"MergeDeveloperIdentities")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "MergeDeveloperIdentitiesResponse" common-lisp:nil)))
 (common-lisp:export 'merge-developer-identities))
(common-lisp:progn
 (common-lisp:defun set-identity-pool-roles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id roles role-mappings)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id roles role-mappings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-identity-pool-roles-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetIdentityPoolRoles")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-identity-pool-roles))
(common-lisp:progn
 (common-lisp:defun unlink-developer-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-id identity-pool-id
                     developer-provider-name developer-user-identifier)
   (common-lisp:declare
    (common-lisp:ignorable identity-id identity-pool-id developer-provider-name
     developer-user-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unlink-developer-identity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UnlinkDeveloperIdentity")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'unlink-developer-identity))
(common-lisp:progn
 (common-lisp:defun unlink-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-id logins logins-to-remove)
   (common-lisp:declare
    (common-lisp:ignorable identity-id logins logins-to-remove))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unlink-identity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UnlinkIdentity")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'unlink-identity))
(common-lisp:progn
 (common-lisp:defun update-identity-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-pool-name
                     allow-unauthenticated-identities supported-login-providers
                     developer-provider-name open-id-connect-provider-arns
                     cognito-identity-providers saml-provider-arns)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-pool-name
     allow-unauthenticated-identities supported-login-providers
     developer-provider-name open-id-connect-provider-arns
     cognito-identity-providers saml-provider-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-identity-pool
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "cognito-identity")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateIdentityPool")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IdentityPool" common-lisp:nil)))
 (common-lisp:export 'update-identity-pool))