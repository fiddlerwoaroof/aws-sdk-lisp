;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/elasticloadbalancingv2
  (:use)
  (:nicknames #:aws/elasticloadbalancingv2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/elasticloadbalancingv2)

(common-lisp:progn
 (common-lisp:defstruct (action (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or action-type-enum common-lisp:null))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn))))))
(common-lisp:deftype action-type-enum () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype actions () '(trivial-types:proper-list action))
 (common-lisp:defun |make-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-input (:copier common-lisp:nil))
   (resource-arns
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-arns is required"))
    :type (common-lisp:or resource-arns common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'add-tags-input 'make-add-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arns)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-output (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'add-tags-output 'make-add-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (availability-zone (:copier common-lisp:nil))
   (zone-name common-lisp:nil :type
    (common-lisp:or zone-name common-lisp:null))
   (subnet-id common-lisp:nil :type
    (common-lisp:or subnet-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'availability-zone 'make-availability-zone))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape availability-zone))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ZoneName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'zone-name)))
    (aws-sdk/generator/shape::to-query-params "SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-id))))))
(common-lisp:progn
 (common-lisp:deftype availability-zones ()
   '(trivial-types:proper-list availability-zone))
 (common-lisp:defun |make-availability-zones|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:deftype canonical-hosted-zone-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (certificate (:copier common-lisp:nil))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or certificate-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'certificate 'make-certificate))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape certificate))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CertificateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-arn))))))
(common-lisp:deftype certificate-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype certificate-list ()
   '(trivial-types:proper-list certificate))
 (common-lisp:defun |make-certificate-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list certificate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (certificate-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'certificate-not-found-exception
                    'make-certificate-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          certificate-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (cipher (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or cipher-name common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or cipher-priority common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cipher 'make-cipher))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cipher))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority))))))
(common-lisp:deftype cipher-name () 'common-lisp:string)
(common-lisp:deftype cipher-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype ciphers () '(trivial-types:proper-list cipher))
 (common-lisp:defun |make-ciphers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cipher))
   aws-sdk/generator/shape::members))
(common-lisp:deftype condition-field-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-listener-input (:copier common-lisp:nil))
   (load-balancer-arn
    (common-lisp:error
     #A((30) common-lisp:base-char . ":load-balancer-arn is required"))
    :type (common-lisp:or load-balancer-arn common-lisp:null))
   (protocol
    (common-lisp:error
     #A((21) common-lisp:base-char . ":protocol is required"))
    :type (common-lisp:or protocol-enum common-lisp:null))
   (port
    (common-lisp:error #A((17) common-lisp:base-char . ":port is required"))
    :type (common-lisp:or port common-lisp:null))
   (ssl-policy common-lisp:nil :type
    (common-lisp:or ssl-policy-name common-lisp:null))
   (certificates common-lisp:nil :type
    (common-lisp:or certificate-list common-lisp:null))
   (default-actions
    (common-lisp:error
     #A((28) common-lisp:base-char . ":default-actions is required"))
    :type (common-lisp:or actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-listener-input 'make-create-listener-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-listener-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "SslPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-policy)))
    (aws-sdk/generator/shape::to-query-params "Certificates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificates)))
    (aws-sdk/generator/shape::to-query-params "DefaultActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-actions))))))
(common-lisp:progn
 (common-lisp:defstruct (create-listener-output (:copier common-lisp:nil))
   (listeners common-lisp:nil :type
    (common-lisp:or listeners common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-listener-output 'make-create-listener-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-listener-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Listeners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listeners))))))
(common-lisp:progn
 (common-lisp:defstruct (create-load-balancer-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or load-balancer-name common-lisp:null))
   (subnets
    (common-lisp:error #A((20) common-lisp:base-char . ":subnets is required"))
    :type (common-lisp:or subnets common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null))
   (scheme common-lisp:nil :type
    (common-lisp:or load-balancer-scheme-enum common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (ip-address-type common-lisp:nil :type
    (common-lisp:or ip-address-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-load-balancer-input
                    'make-create-load-balancer-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-load-balancer-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups)))
    (aws-sdk/generator/shape::to-query-params "Scheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheme)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "IpAddressType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address-type))))))
(common-lisp:progn
 (common-lisp:defstruct (create-load-balancer-output (:copier common-lisp:nil))
   (load-balancers common-lisp:nil :type
    (common-lisp:or load-balancers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-load-balancer-output
                    'make-create-load-balancer-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-load-balancer-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancers))))))
(common-lisp:progn
 (common-lisp:defstruct (create-rule-input (:copier common-lisp:nil))
   (listener-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":listener-arn is required"))
    :type (common-lisp:or listener-arn common-lisp:null))
   (conditions
    (common-lisp:error
     #A((23) common-lisp:base-char . ":conditions is required"))
    :type (common-lisp:or rule-condition-list common-lisp:null))
   (priority
    (common-lisp:error
     #A((21) common-lisp:base-char . ":priority is required"))
    :type (common-lisp:or rule-priority common-lisp:null))
   (actions
    (common-lisp:error #A((20) common-lisp:base-char . ":actions is required"))
    :type (common-lisp:or actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rule-input 'make-create-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-rule-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ListenerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener-arn)))
    (aws-sdk/generator/shape::to-query-params "Conditions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditions)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "Actions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'actions))))))
(common-lisp:progn
 (common-lisp:defstruct (create-rule-output (:copier common-lisp:nil))
   (rules common-lisp:nil :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rule-output 'make-create-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-rule-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (create-target-group-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or target-group-name common-lisp:null))
   (protocol
    (common-lisp:error
     #A((21) common-lisp:base-char . ":protocol is required"))
    :type (common-lisp:or protocol-enum common-lisp:null))
   (port
    (common-lisp:error #A((17) common-lisp:base-char . ":port is required"))
    :type (common-lisp:or port common-lisp:null))
   (vpc-id
    (common-lisp:error #A((19) common-lisp:base-char . ":vpc-id is required"))
    :type (common-lisp:or vpc-id common-lisp:null))
   (health-check-protocol common-lisp:nil :type
    (common-lisp:or protocol-enum common-lisp:null))
   (health-check-port common-lisp:nil :type
    (common-lisp:or health-check-port common-lisp:null))
   (health-check-path common-lisp:nil :type
    (common-lisp:or path common-lisp:null))
   (health-check-interval-seconds common-lisp:nil :type
    (common-lisp:or health-check-interval-seconds common-lisp:null))
   (health-check-timeout-seconds common-lisp:nil :type
    (common-lisp:or health-check-timeout-seconds common-lisp:null))
   (healthy-threshold-count common-lisp:nil :type
    (common-lisp:or health-check-threshold-count common-lisp:null))
   (unhealthy-threshold-count common-lisp:nil :type
    (common-lisp:or health-check-threshold-count common-lisp:null))
   (matcher common-lisp:nil :type (common-lisp:or matcher common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-target-group-input
                    'make-create-target-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-target-group-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckProtocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-protocol)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-port)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-path)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckIntervalSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-interval-seconds)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "HealthyThresholdCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'healthy-threshold-count)))
    (aws-sdk/generator/shape::to-query-params "UnhealthyThresholdCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unhealthy-threshold-count)))
    (aws-sdk/generator/shape::to-query-params "Matcher"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'matcher))))))
(common-lisp:progn
 (common-lisp:defstruct (create-target-group-output (:copier common-lisp:nil))
   (target-groups common-lisp:nil :type
    (common-lisp:or target-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-target-group-output
                    'make-create-target-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-target-group-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-groups))))))
(common-lisp:deftype created-time () 'common-lisp:string)
(common-lisp:deftype dnsname () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-listener-input (:copier common-lisp:nil))
   (listener-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":listener-arn is required"))
    :type (common-lisp:or listener-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-listener-input 'make-delete-listener-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-listener-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ListenerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-listener-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-listener-output 'make-delete-listener-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-listener-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-load-balancer-input (:copier common-lisp:nil))
   (load-balancer-arn
    (common-lisp:error
     #A((30) common-lisp:base-char . ":load-balancer-arn is required"))
    :type (common-lisp:or load-balancer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-load-balancer-input
                    'make-delete-load-balancer-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-load-balancer-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-load-balancer-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-load-balancer-output
                    'make-delete-load-balancer-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-load-balancer-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-rule-input (:copier common-lisp:nil))
   (rule-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":rule-arn is required"))
    :type (common-lisp:or rule-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rule-input 'make-delete-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-rule-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-rule-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-rule-output 'make-delete-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-rule-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-target-group-input (:copier common-lisp:nil))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-target-group-input
                    'make-delete-target-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-target-group-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-target-group-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-target-group-output
                    'make-delete-target-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-target-group-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (deregister-targets-input (:copier common-lisp:nil))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null))
   (targets
    (common-lisp:error #A((20) common-lisp:base-char . ":targets is required"))
    :type (common-lisp:or target-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-targets-input 'make-deregister-targets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-targets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-targets-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deregister-targets-output
                    'make-deregister-targets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-targets-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-limits-input (:copier common-lisp:nil))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-limits-input
                    'make-describe-account-limits-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-account-limits-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-limits-output (:copier common-lisp:nil))
   (limits common-lisp:nil :type (common-lisp:or limits common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-limits-output
                    'make-describe-account-limits-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-account-limits-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-listeners-input (:copier common-lisp:nil))
   (load-balancer-arn common-lisp:nil :type
    (common-lisp:or load-balancer-arn common-lisp:null))
   (listener-arns common-lisp:nil :type
    (common-lisp:or listener-arns common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-listeners-input 'make-describe-listeners-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-listeners-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "ListenerArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener-arns)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-listeners-output (:copier common-lisp:nil))
   (listeners common-lisp:nil :type
    (common-lisp:or listeners common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-listeners-output
                    'make-describe-listeners-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-listeners-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Listeners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listeners)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-attributes-input (:copier common-lisp:nil))
   (load-balancer-arn
    (common-lisp:error
     #A((30) common-lisp:base-char . ":load-balancer-arn is required"))
    :type (common-lisp:or load-balancer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-attributes-input
                    'make-describe-load-balancer-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-attributes-output (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or load-balancer-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-attributes-output
                    'make-describe-load-balancer-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancers-input (:copier common-lisp:nil))
   (load-balancer-arns common-lisp:nil :type
    (common-lisp:or load-balancer-arns common-lisp:null))
   (names common-lisp:nil :type
    (common-lisp:or load-balancer-names common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancers-input
                    'make-describe-load-balancers-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancers-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arns)))
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancers-output (:copier common-lisp:nil))
   (load-balancers common-lisp:nil :type
    (common-lisp:or load-balancers common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancers-output
                    'make-describe-load-balancers-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancers-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancers)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-rules-input (:copier common-lisp:nil))
   (listener-arn common-lisp:nil :type
    (common-lisp:or listener-arn common-lisp:null))
   (rule-arns common-lisp:nil :type
    (common-lisp:or rule-arns common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rules-input 'make-describe-rules-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-rules-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ListenerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener-arn)))
    (aws-sdk/generator/shape::to-query-params "RuleArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-arns)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-rules-output (:copier common-lisp:nil))
   (rules common-lisp:nil :type (common-lisp:or rules common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rules-output 'make-describe-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-rules-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-sslpolicies-input (:copier common-lisp:nil))
   (names common-lisp:nil :type
    (common-lisp:or ssl-policy-names common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-sslpolicies-input
                    'make-describe-sslpolicies-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-sslpolicies-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-sslpolicies-output (:copier common-lisp:nil))
   (ssl-policies common-lisp:nil :type
    (common-lisp:or ssl-policies common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-sslpolicies-output
                    'make-describe-sslpolicies-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-sslpolicies-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SslPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-policies)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-input (:copier common-lisp:nil))
   (resource-arns
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-arns is required"))
    :type (common-lisp:or resource-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-input 'make-describe-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arns))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-output (:copier common-lisp:nil))
   (tag-descriptions common-lisp:nil :type
    (common-lisp:or tag-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-output 'make-describe-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-descriptions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-target-group-attributes-input (:copier common-lisp:nil))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-target-group-attributes-input
                    'make-describe-target-group-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-target-group-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-target-group-attributes-output (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or target-group-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-target-group-attributes-output
                    'make-describe-target-group-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-target-group-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-target-groups-input (:copier common-lisp:nil))
   (load-balancer-arn common-lisp:nil :type
    (common-lisp:or load-balancer-arn common-lisp:null))
   (target-group-arns common-lisp:nil :type
    (common-lisp:or target-group-arns common-lisp:null))
   (names common-lisp:nil :type
    (common-lisp:or target-group-names common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-target-groups-input
                    'make-describe-target-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-target-groups-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arns)))
    (aws-sdk/generator/shape::to-query-params "Names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-target-groups-output (:copier common-lisp:nil))
   (target-groups common-lisp:nil :type
    (common-lisp:or target-groups common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-target-groups-output
                    'make-describe-target-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-target-groups-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-groups)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-target-health-input (:copier common-lisp:nil))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null))
   (targets common-lisp:nil :type
    (common-lisp:or target-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-target-health-input
                    'make-describe-target-health-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-target-health-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-target-health-output (:copier common-lisp:nil))
   (target-health-descriptions common-lisp:nil :type
    (common-lisp:or target-health-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-target-health-output
                    'make-describe-target-health-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-target-health-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetHealthDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-health-descriptions))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-listener-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-listener-exception
                    'make-duplicate-listener-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-listener-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-load-balancer-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-load-balancer-name-exception
                    'make-duplicate-load-balancer-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-load-balancer-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-tag-keys-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-tag-keys-exception
                    'make-duplicate-tag-keys-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-tag-keys-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-target-group-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-target-group-name-exception
                    'make-duplicate-target-group-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-target-group-name-exception))
   (common-lisp:append)))
(common-lisp:deftype health-check-interval-seconds () 'common-lisp:integer)
(common-lisp:deftype health-check-port () 'common-lisp:string)
(common-lisp:deftype health-check-threshold-count () 'common-lisp:integer)
(common-lisp:deftype health-check-timeout-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (health-unavailable-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'health-unavailable-exception
                    'make-health-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          health-unavailable-exception))
   (common-lisp:append)))
(common-lisp:deftype http-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (incompatible-protocols-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'incompatible-protocols-exception
                    'make-incompatible-protocols-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          incompatible-protocols-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-configuration-request-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-configuration-request-exception
                    'make-invalid-configuration-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-configuration-request-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-scheme-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-scheme-exception 'make-invalid-scheme-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-scheme-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-security-group-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-security-group-exception
                    'make-invalid-security-group-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-security-group-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-subnet-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-subnet-exception 'make-invalid-subnet-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-subnet-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-target-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-target-exception 'make-invalid-target-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-target-exception))
   (common-lisp:append)))
(common-lisp:deftype ip-address-type () 'common-lisp:string)
(common-lisp:deftype is-default () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (limit (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (max common-lisp:nil :type (common-lisp:or max common-lisp:null)))
 (common-lisp:export (common-lisp:list 'limit 'make-limit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape limit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Max"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max))))))
(common-lisp:progn
 (common-lisp:deftype limits () '(trivial-types:proper-list limit))
 (common-lisp:defun |make-limits|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list limit))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string ()
   '(trivial-types:proper-list string-value))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (listener (:copier common-lisp:nil))
   (listener-arn common-lisp:nil :type
    (common-lisp:or listener-arn common-lisp:null))
   (load-balancer-arn common-lisp:nil :type
    (common-lisp:or load-balancer-arn common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or protocol-enum common-lisp:null))
   (certificates common-lisp:nil :type
    (common-lisp:or certificate-list common-lisp:null))
   (ssl-policy common-lisp:nil :type
    (common-lisp:or ssl-policy-name common-lisp:null))
   (default-actions common-lisp:nil :type
    (common-lisp:or actions common-lisp:null)))
 (common-lisp:export (common-lisp:list 'listener 'make-listener))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape listener))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ListenerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener-arn)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "Certificates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificates)))
    (aws-sdk/generator/shape::to-query-params "SslPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-policy)))
    (aws-sdk/generator/shape::to-query-params "DefaultActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-actions))))))
(common-lisp:deftype listener-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype listener-arns ()
   '(trivial-types:proper-list listener-arn))
 (common-lisp:defun |make-listener-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list listener-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (listener-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'listener-not-found-exception
                    'make-listener-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          listener-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype listeners () '(trivial-types:proper-list listener))
 (common-lisp:defun |make-listeners|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list listener))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (load-balancer (:copier common-lisp:nil))
   (load-balancer-arn common-lisp:nil :type
    (common-lisp:or load-balancer-arn common-lisp:null))
   (dnsname common-lisp:nil :type (common-lisp:or dnsname common-lisp:null))
   (canonical-hosted-zone-id common-lisp:nil :type
    (common-lisp:or canonical-hosted-zone-id common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or created-time common-lisp:null))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or load-balancer-name common-lisp:null))
   (scheme common-lisp:nil :type
    (common-lisp:or load-balancer-scheme-enum common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or load-balancer-state common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or load-balancer-type-enum common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null))
   (ip-address-type common-lisp:nil :type
    (common-lisp:or ip-address-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'load-balancer 'make-load-balancer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape load-balancer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "DNSName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dnsname)))
    (aws-sdk/generator/shape::to-query-params "CanonicalHostedZoneId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'canonical-hosted-zone-id)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Scheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheme)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups)))
    (aws-sdk/generator/shape::to-query-params "IpAddressType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address-type))))))
(common-lisp:deftype load-balancer-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype load-balancer-arns ()
   '(trivial-types:proper-list load-balancer-arn))
 (common-lisp:defun |make-load-balancer-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-balancer-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (load-balancer-attribute (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or load-balancer-attribute-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or load-balancer-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-attribute 'make-load-balancer-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-balancer-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype load-balancer-attribute-key () 'common-lisp:string)
(common-lisp:deftype load-balancer-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype load-balancer-attributes ()
   '(trivial-types:proper-list load-balancer-attribute))
 (common-lisp:defun |make-load-balancer-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-balancer-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype load-balancer-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype load-balancer-names ()
   '(trivial-types:proper-list load-balancer-name))
 (common-lisp:defun |make-load-balancer-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-balancer-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (load-balancer-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-not-found-exception
                    'make-load-balancer-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-balancer-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype load-balancer-scheme-enum () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (load-balancer-state (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or load-balancer-state-enum common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or state-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-state 'make-load-balancer-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape load-balancer-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:deftype load-balancer-state-enum () 'common-lisp:string)
(common-lisp:deftype load-balancer-type-enum () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype load-balancers ()
   '(trivial-types:proper-list load-balancer))
 (common-lisp:defun |make-load-balancers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-balancer))
   aws-sdk/generator/shape::members))
(common-lisp:deftype marker () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (matcher (:copier common-lisp:nil))
   (http-code
    (common-lisp:error
     #A((22) common-lisp:base-char . ":http-code is required"))
    :type (common-lisp:or http-code common-lisp:null)))
 (common-lisp:export (common-lisp:list 'matcher 'make-matcher))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape matcher))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HttpCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-code))))))
(common-lisp:deftype max () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (modify-listener-input (:copier common-lisp:nil))
   (listener-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":listener-arn is required"))
    :type (common-lisp:or listener-arn common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or protocol-enum common-lisp:null))
   (ssl-policy common-lisp:nil :type
    (common-lisp:or ssl-policy-name common-lisp:null))
   (certificates common-lisp:nil :type
    (common-lisp:or certificate-list common-lisp:null))
   (default-actions common-lisp:nil :type
    (common-lisp:or actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-listener-input 'make-modify-listener-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-listener-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ListenerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener-arn)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "SslPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-policy)))
    (aws-sdk/generator/shape::to-query-params "Certificates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificates)))
    (aws-sdk/generator/shape::to-query-params "DefaultActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-actions))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-listener-output (:copier common-lisp:nil))
   (listeners common-lisp:nil :type
    (common-lisp:or listeners common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-listener-output 'make-modify-listener-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-listener-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Listeners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listeners))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-load-balancer-attributes-input (:copier common-lisp:nil))
   (load-balancer-arn
    (common-lisp:error
     #A((30) common-lisp:base-char . ":load-balancer-arn is required"))
    :type (common-lisp:or load-balancer-arn common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or load-balancer-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-load-balancer-attributes-input
                    'make-modify-load-balancer-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-load-balancer-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-load-balancer-attributes-output (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or load-balancer-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-load-balancer-attributes-output
                    'make-modify-load-balancer-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-load-balancer-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-rule-input (:copier common-lisp:nil))
   (rule-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":rule-arn is required"))
    :type (common-lisp:or rule-arn common-lisp:null))
   (conditions common-lisp:nil :type
    (common-lisp:or rule-condition-list common-lisp:null))
   (actions common-lisp:nil :type (common-lisp:or actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-rule-input 'make-modify-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape modify-rule-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-arn)))
    (aws-sdk/generator/shape::to-query-params "Conditions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditions)))
    (aws-sdk/generator/shape::to-query-params "Actions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'actions))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-rule-output (:copier common-lisp:nil))
   (rules common-lisp:nil :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-rule-output 'make-modify-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape modify-rule-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-target-group-attributes-input (:copier common-lisp:nil))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or target-group-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-target-group-attributes-input
                    'make-modify-target-group-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-target-group-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-target-group-attributes-output (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or target-group-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-target-group-attributes-output
                    'make-modify-target-group-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-target-group-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-target-group-input (:copier common-lisp:nil))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null))
   (health-check-protocol common-lisp:nil :type
    (common-lisp:or protocol-enum common-lisp:null))
   (health-check-port common-lisp:nil :type
    (common-lisp:or health-check-port common-lisp:null))
   (health-check-path common-lisp:nil :type
    (common-lisp:or path common-lisp:null))
   (health-check-interval-seconds common-lisp:nil :type
    (common-lisp:or health-check-interval-seconds common-lisp:null))
   (health-check-timeout-seconds common-lisp:nil :type
    (common-lisp:or health-check-timeout-seconds common-lisp:null))
   (healthy-threshold-count common-lisp:nil :type
    (common-lisp:or health-check-threshold-count common-lisp:null))
   (unhealthy-threshold-count common-lisp:nil :type
    (common-lisp:or health-check-threshold-count common-lisp:null))
   (matcher common-lisp:nil :type (common-lisp:or matcher common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-target-group-input
                    'make-modify-target-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-target-group-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckProtocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-protocol)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-port)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-path)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckIntervalSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-interval-seconds)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "HealthyThresholdCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'healthy-threshold-count)))
    (aws-sdk/generator/shape::to-query-params "UnhealthyThresholdCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unhealthy-threshold-count)))
    (aws-sdk/generator/shape::to-query-params "Matcher"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'matcher))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-target-group-output (:copier common-lisp:nil))
   (target-groups common-lisp:nil :type
    (common-lisp:or target-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-target-group-output
                    'make-modify-target-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-target-group-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-groups))))))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-not-permitted-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'operation-not-permitted-exception
                    'make-operation-not-permitted-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-not-permitted-exception))
   (common-lisp:append)))
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:deftype port () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (priority-in-use-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'priority-in-use-exception
                    'make-priority-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          priority-in-use-exception))
   (common-lisp:append)))
(common-lisp:deftype protocol-enum () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (register-targets-input (:copier common-lisp:nil))
   (target-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-group-arn is required"))
    :type (common-lisp:or target-group-arn common-lisp:null))
   (targets
    (common-lisp:error #A((20) common-lisp:base-char . ":targets is required"))
    :type (common-lisp:or target-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-targets-input 'make-register-targets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-targets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets))))))
(common-lisp:progn
 (common-lisp:defstruct (register-targets-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'register-targets-output 'make-register-targets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-targets-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (remove-tags-input (:copier common-lisp:nil))
   (resource-arns
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-arns is required"))
    :type (common-lisp:or resource-arns common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-input 'make-remove-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape remove-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arns)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (remove-tags-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-output 'make-remove-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape remove-tags-output))
   (common-lisp:append)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-arns ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-resource-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (rule (:copier common-lisp:nil))
   (rule-arn common-lisp:nil :type (common-lisp:or rule-arn common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (conditions common-lisp:nil :type
    (common-lisp:or rule-condition-list common-lisp:null))
   (actions common-lisp:nil :type (common-lisp:or actions common-lisp:null))
   (is-default common-lisp:nil :type
    (common-lisp:or is-default common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-arn)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "Conditions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditions)))
    (aws-sdk/generator/shape::to-query-params "Actions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'actions)))
    (aws-sdk/generator/shape::to-query-params "IsDefault"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-default))))))
(common-lisp:deftype rule-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rule-arns () '(trivial-types:proper-list rule-arn))
 (common-lisp:defun |make-rule-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rule-condition (:copier common-lisp:nil))
   (field common-lisp:nil :type
    (common-lisp:or condition-field-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-condition 'make-rule-condition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule-condition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Field"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:progn
 (common-lisp:deftype rule-condition-list ()
   '(trivial-types:proper-list rule-condition))
 (common-lisp:defun |make-rule-condition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-condition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rule-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'rule-not-found-exception 'make-rule-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rule-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype rule-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype rule-priority-list ()
   '(trivial-types:proper-list rule-priority-pair))
 (common-lisp:defun |make-rule-priority-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-priority-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rule-priority-pair (:copier common-lisp:nil))
   (rule-arn common-lisp:nil :type (common-lisp:or rule-arn common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or rule-priority common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rule-priority-pair 'make-rule-priority-pair))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule-priority-pair))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-arn)))
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority))))))
(common-lisp:progn
 (common-lisp:deftype rules () '(trivial-types:proper-list rule))
 (common-lisp:defun |make-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (sslpolicy-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'sslpolicy-not-found-exception
                    'make-sslpolicy-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sslpolicy-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-groups ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (set-ip-address-type-input (:copier common-lisp:nil))
   (load-balancer-arn
    (common-lisp:error
     #A((30) common-lisp:base-char . ":load-balancer-arn is required"))
    :type (common-lisp:or load-balancer-arn common-lisp:null))
   (ip-address-type
    (common-lisp:error
     #A((28) common-lisp:base-char . ":ip-address-type is required"))
    :type (common-lisp:or ip-address-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-ip-address-type-input
                    'make-set-ip-address-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-ip-address-type-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "IpAddressType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address-type))))))
(common-lisp:progn
 (common-lisp:defstruct (set-ip-address-type-output (:copier common-lisp:nil))
   (ip-address-type common-lisp:nil :type
    (common-lisp:or ip-address-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-ip-address-type-output
                    'make-set-ip-address-type-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-ip-address-type-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IpAddressType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address-type))))))
(common-lisp:progn
 (common-lisp:defstruct (set-rule-priorities-input (:copier common-lisp:nil))
   (rule-priorities
    (common-lisp:error
     #A((28) common-lisp:base-char . ":rule-priorities is required"))
    :type (common-lisp:or rule-priority-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-rule-priorities-input
                    'make-set-rule-priorities-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-rule-priorities-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RulePriorities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-priorities))))))
(common-lisp:progn
 (common-lisp:defstruct (set-rule-priorities-output (:copier common-lisp:nil))
   (rules common-lisp:nil :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-rule-priorities-output
                    'make-set-rule-priorities-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-rule-priorities-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (set-security-groups-input (:copier common-lisp:nil))
   (load-balancer-arn
    (common-lisp:error
     #A((30) common-lisp:base-char . ":load-balancer-arn is required"))
    :type (common-lisp:or load-balancer-arn common-lisp:null))
   (security-groups
    (common-lisp:error
     #A((28) common-lisp:base-char . ":security-groups is required"))
    :type (common-lisp:or security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-security-groups-input
                    'make-set-security-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-security-groups-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups))))))
(common-lisp:progn
 (common-lisp:defstruct (set-security-groups-output (:copier common-lisp:nil))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-security-groups-output
                    'make-set-security-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-security-groups-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (set-subnets-input (:copier common-lisp:nil))
   (load-balancer-arn
    (common-lisp:error
     #A((30) common-lisp:base-char . ":load-balancer-arn is required"))
    :type (common-lisp:or load-balancer-arn common-lisp:null))
   (subnets
    (common-lisp:error #A((20) common-lisp:base-char . ":subnets is required"))
    :type (common-lisp:or subnets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-subnets-input 'make-set-subnets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape set-subnets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arn)))
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets))))))
(common-lisp:progn
 (common-lisp:defstruct (set-subnets-output (:copier common-lisp:nil))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-subnets-output 'make-set-subnets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape set-subnets-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:deftype ssl-policies () '(trivial-types:proper-list ssl-policy))
 (common-lisp:defun |make-ssl-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ssl-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ssl-policy (:copier common-lisp:nil))
   (ssl-protocols common-lisp:nil :type
    (common-lisp:or ssl-protocols common-lisp:null))
   (ciphers common-lisp:nil :type (common-lisp:or ciphers common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or ssl-policy-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ssl-policy 'make-ssl-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ssl-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SslProtocols"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-protocols)))
    (aws-sdk/generator/shape::to-query-params "Ciphers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ciphers)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype ssl-policy-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ssl-policy-names ()
   '(trivial-types:proper-list ssl-policy-name))
 (common-lisp:defun |make-ssl-policy-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ssl-policy-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ssl-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ssl-protocols ()
   '(trivial-types:proper-list ssl-protocol))
 (common-lisp:defun |make-ssl-protocols|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ssl-protocol))
   aws-sdk/generator/shape::members))
(common-lisp:deftype state-reason () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string-value () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (subnet-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subnet-not-found-exception
                    'make-subnet-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype subnets () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-description (:copier common-lisp:nil))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-description 'make-tag-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:deftype tag-descriptions ()
   '(trivial-types:proper-list tag-description))
 (common-lisp:defun |make-tag-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (target-description (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or target-id common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-description 'make-target-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port))))))
(common-lisp:progn
 (common-lisp:deftype target-descriptions ()
   '(trivial-types:proper-list target-description))
 (common-lisp:defun |make-target-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (target-group (:copier common-lisp:nil))
   (target-group-arn common-lisp:nil :type
    (common-lisp:or target-group-arn common-lisp:null))
   (target-group-name common-lisp:nil :type
    (common-lisp:or target-group-name common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or protocol-enum common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null))
   (health-check-protocol common-lisp:nil :type
    (common-lisp:or protocol-enum common-lisp:null))
   (health-check-port common-lisp:nil :type
    (common-lisp:or health-check-port common-lisp:null))
   (health-check-interval-seconds common-lisp:nil :type
    (common-lisp:or health-check-interval-seconds common-lisp:null))
   (health-check-timeout-seconds common-lisp:nil :type
    (common-lisp:or health-check-timeout-seconds common-lisp:null))
   (healthy-threshold-count common-lisp:nil :type
    (common-lisp:or health-check-threshold-count common-lisp:null))
   (unhealthy-threshold-count common-lisp:nil :type
    (common-lisp:or health-check-threshold-count common-lisp:null))
   (health-check-path common-lisp:nil :type
    (common-lisp:or path common-lisp:null))
   (matcher common-lisp:nil :type (common-lisp:or matcher common-lisp:null))
   (load-balancer-arns common-lisp:nil :type
    (common-lisp:or load-balancer-arns common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-group 'make-target-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arn)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-name)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckProtocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-protocol)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-port)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckIntervalSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-interval-seconds)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckTimeoutSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-timeout-seconds)))
    (aws-sdk/generator/shape::to-query-params "HealthyThresholdCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'healthy-threshold-count)))
    (aws-sdk/generator/shape::to-query-params "UnhealthyThresholdCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unhealthy-threshold-count)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-path)))
    (aws-sdk/generator/shape::to-query-params "Matcher"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'matcher)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-arns))))))
(common-lisp:deftype target-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-group-arns ()
   '(trivial-types:proper-list target-group-arn))
 (common-lisp:defun |make-target-group-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (target-group-association-limit-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'target-group-association-limit-exception
                    'make-target-group-association-limit-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-group-association-limit-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (target-group-attribute (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or target-group-attribute-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or target-group-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-group-attribute 'make-target-group-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-group-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype target-group-attribute-key () 'common-lisp:string)
(common-lisp:deftype target-group-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-group-attributes ()
   '(trivial-types:proper-list target-group-attribute))
 (common-lisp:defun |make-target-group-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-group-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-group-names ()
   '(trivial-types:proper-list target-group-name))
 (common-lisp:defun |make-target-group-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-group-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (target-group-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'target-group-not-found-exception
                    'make-target-group-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-group-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype target-groups ()
   '(trivial-types:proper-list target-group))
 (common-lisp:defun |make-target-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (target-health (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or target-health-state-enum common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or target-health-reason-enum common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-health 'make-target-health))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target-health))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (target-health-description (:copier common-lisp:nil))
   (target common-lisp:nil :type
    (common-lisp:or target-description common-lisp:null))
   (health-check-port common-lisp:nil :type
    (common-lisp:or health-check-port common-lisp:null))
   (target-health common-lisp:nil :type
    (common-lisp:or target-health common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-health-description
                    'make-target-health-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-health-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Target"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-port)))
    (aws-sdk/generator/shape::to-query-params "TargetHealth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-health))))))
(common-lisp:progn
 (common-lisp:deftype target-health-descriptions ()
   '(trivial-types:proper-list target-health-description))
 (common-lisp:defun |make-target-health-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            target-health-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-health-reason-enum () 'common-lisp:string)
(common-lisp:deftype target-health-state-enum () 'common-lisp:string)
(common-lisp:deftype target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-certificates-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-certificates-exception
                    'make-too-many-certificates-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-certificates-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-listeners-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-listeners-exception
                    'make-too-many-listeners-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-listeners-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-load-balancers-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-load-balancers-exception
                    'make-too-many-load-balancers-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-load-balancers-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-registrations-for-target-id-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-registrations-for-target-id-exception
                    'make-too-many-registrations-for-target-id-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-registrations-for-target-id-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (too-many-rules-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-rules-exception 'make-too-many-rules-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-rules-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (too-many-tags-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-tags-exception 'make-too-many-tags-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-tags-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-target-groups-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-target-groups-exception
                    'make-too-many-target-groups-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-target-groups-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (too-many-targets-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-targets-exception
                    'make-too-many-targets-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-targets-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-protocol-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'unsupported-protocol-exception
                    'make-unsupported-protocol-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-protocol-exception))
   (common-lisp:append)))
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:deftype zone-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arns tags)
   (common-lisp:declare (common-lisp:ignorable resource-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddTags")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddTagsOutput" "AddTagsResult")))
 (common-lisp:export 'add-tags))
(common-lisp:progn
 (common-lisp:defun create-listener
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn protocol port
                     ssl-policy certificates default-actions)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-arn protocol port ssl-policy
     certificates default-actions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-listener-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateListener")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateListenerOutput" "CreateListenerResult")))
 (common-lisp:export 'create-listener))
(common-lisp:progn
 (common-lisp:defun create-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name subnets security-groups scheme tags
                     ip-address-type)
   (common-lisp:declare
    (common-lisp:ignorable name subnets security-groups scheme tags
     ip-address-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-load-balancer-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLoadBalancer")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateLoadBalancerOutput" "CreateLoadBalancerResult")))
 (common-lisp:export 'create-load-balancer))
(common-lisp:progn
 (common-lisp:defun create-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key listener-arn conditions priority actions)
   (common-lisp:declare
    (common-lisp:ignorable listener-arn conditions priority actions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRule")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateRuleOutput" "CreateRuleResult")))
 (common-lisp:export 'create-rule))
(common-lisp:progn
 (common-lisp:defun create-target-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name protocol port vpc-id
                     health-check-protocol health-check-port health-check-path
                     health-check-interval-seconds health-check-timeout-seconds
                     healthy-threshold-count unhealthy-threshold-count matcher)
   (common-lisp:declare
    (common-lisp:ignorable name protocol port vpc-id health-check-protocol
     health-check-port health-check-path health-check-interval-seconds
     health-check-timeout-seconds healthy-threshold-count
     unhealthy-threshold-count matcher))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-target-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateTargetGroup")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateTargetGroupOutput" "CreateTargetGroupResult")))
 (common-lisp:export 'create-target-group))
(common-lisp:progn
 (common-lisp:defun delete-listener
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key listener-arn)
   (common-lisp:declare (common-lisp:ignorable listener-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-listener-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteListener")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteListenerOutput" "DeleteListenerResult")))
 (common-lisp:export 'delete-listener))
(common-lisp:progn
 (common-lisp:defun delete-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn)
   (common-lisp:declare (common-lisp:ignorable load-balancer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-load-balancer-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLoadBalancer")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteLoadBalancerOutput" "DeleteLoadBalancerResult")))
 (common-lisp:export 'delete-load-balancer))
(common-lisp:progn
 (common-lisp:defun delete-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-arn)
   (common-lisp:declare (common-lisp:ignorable rule-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRule")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRuleOutput" "DeleteRuleResult")))
 (common-lisp:export 'delete-rule))
(common-lisp:progn
 (common-lisp:defun delete-target-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-group-arn)
   (common-lisp:declare (common-lisp:ignorable target-group-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-target-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteTargetGroup")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteTargetGroupOutput" "DeleteTargetGroupResult")))
 (common-lisp:export 'delete-target-group))
(common-lisp:progn
 (common-lisp:defun deregister-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-group-arn targets)
   (common-lisp:declare (common-lisp:ignorable target-group-arn targets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deregister-targets-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterTargets")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterTargetsOutput" "DeregisterTargetsResult")))
 (common-lisp:export 'deregister-targets))
(common-lisp:progn
 (common-lisp:defun describe-account-limits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker page-size)
   (common-lisp:declare (common-lisp:ignorable marker page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-account-limits-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAccountLimits")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAccountLimitsOutput" "DescribeAccountLimitsResult")))
 (common-lisp:export 'describe-account-limits))
(common-lisp:progn
 (common-lisp:defun describe-listeners
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn listener-arns marker
                     page-size)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-arn listener-arns marker page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-listeners-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeListeners")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeListenersOutput" "DescribeListenersResult")))
 (common-lisp:export 'describe-listeners))
(common-lisp:progn
 (common-lisp:defun describe-load-balancer-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn)
   (common-lisp:declare (common-lisp:ignorable load-balancer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-load-balancer-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLoadBalancerAttributes")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBalancerAttributesOutput"
      "DescribeLoadBalancerAttributesResult")))
 (common-lisp:export 'describe-load-balancer-attributes))
(common-lisp:progn
 (common-lisp:defun describe-load-balancers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arns names marker
                     page-size)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-arns names marker page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-load-balancers-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLoadBalancers")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBalancersOutput" "DescribeLoadBalancersResult")))
 (common-lisp:export 'describe-load-balancers))
(common-lisp:progn
 (common-lisp:defun describe-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key listener-arn rule-arns marker page-size)
   (common-lisp:declare
    (common-lisp:ignorable listener-arn rule-arns marker page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-rules-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRules")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRulesOutput" "DescribeRulesResult")))
 (common-lisp:export 'describe-rules))
(common-lisp:progn
 (common-lisp:defun describe-sslpolicies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names marker page-size)
   (common-lisp:declare (common-lisp:ignorable names marker page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-sslpolicies-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeSSLPolicies")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSSLPoliciesOutput" "DescribeSSLPoliciesResult")))
 (common-lisp:export 'describe-sslpolicies))
(common-lisp:progn
 (common-lisp:defun describe-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arns)
   (common-lisp:declare (common-lisp:ignorable resource-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTags")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTagsOutput" "DescribeTagsResult")))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun describe-target-group-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-group-arn)
   (common-lisp:declare (common-lisp:ignorable target-group-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-target-group-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTargetGroupAttributes")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTargetGroupAttributesOutput"
      "DescribeTargetGroupAttributesResult")))
 (common-lisp:export 'describe-target-group-attributes))
(common-lisp:progn
 (common-lisp:defun describe-target-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn target-group-arns names
                     marker page-size)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-arn target-group-arns names marker
     page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-target-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTargetGroups")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTargetGroupsOutput" "DescribeTargetGroupsResult")))
 (common-lisp:export 'describe-target-groups))
(common-lisp:progn
 (common-lisp:defun describe-target-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-group-arn targets)
   (common-lisp:declare (common-lisp:ignorable target-group-arn targets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-target-health-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTargetHealth")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTargetHealthOutput" "DescribeTargetHealthResult")))
 (common-lisp:export 'describe-target-health))
(common-lisp:progn
 (common-lisp:defun modify-listener
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key listener-arn port protocol ssl-policy
                     certificates default-actions)
   (common-lisp:declare
    (common-lisp:ignorable listener-arn port protocol ssl-policy certificates
     default-actions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-listener-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyListener")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyListenerOutput" "ModifyListenerResult")))
 (common-lisp:export 'modify-listener))
(common-lisp:progn
 (common-lisp:defun modify-load-balancer-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn attributes)
   (common-lisp:declare (common-lisp:ignorable load-balancer-arn attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-load-balancer-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyLoadBalancerAttributes")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyLoadBalancerAttributesOutput"
      "ModifyLoadBalancerAttributesResult")))
 (common-lisp:export 'modify-load-balancer-attributes))
(common-lisp:progn
 (common-lisp:defun modify-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-arn conditions actions)
   (common-lisp:declare (common-lisp:ignorable rule-arn conditions actions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyRule")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyRuleOutput" "ModifyRuleResult")))
 (common-lisp:export 'modify-rule))
(common-lisp:progn
 (common-lisp:defun modify-target-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-group-arn health-check-protocol
                     health-check-port health-check-path
                     health-check-interval-seconds health-check-timeout-seconds
                     healthy-threshold-count unhealthy-threshold-count matcher)
   (common-lisp:declare
    (common-lisp:ignorable target-group-arn health-check-protocol
     health-check-port health-check-path health-check-interval-seconds
     health-check-timeout-seconds healthy-threshold-count
     unhealthy-threshold-count matcher))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-target-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyTargetGroup")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyTargetGroupOutput" "ModifyTargetGroupResult")))
 (common-lisp:export 'modify-target-group))
(common-lisp:progn
 (common-lisp:defun modify-target-group-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-group-arn attributes)
   (common-lisp:declare (common-lisp:ignorable target-group-arn attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-target-group-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyTargetGroupAttributes")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyTargetGroupAttributesOutput"
      "ModifyTargetGroupAttributesResult")))
 (common-lisp:export 'modify-target-group-attributes))
(common-lisp:progn
 (common-lisp:defun register-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-group-arn targets)
   (common-lisp:declare (common-lisp:ignorable target-group-arn targets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-targets-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterTargets")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterTargetsOutput" "RegisterTargetsResult")))
 (common-lisp:export 'register-targets))
(common-lisp:progn
 (common-lisp:defun remove-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arns tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arns tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveTags")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveTagsOutput" "RemoveTagsResult")))
 (common-lisp:export 'remove-tags))
(common-lisp:progn
 (common-lisp:defun set-ip-address-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn ip-address-type)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-arn ip-address-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-ip-address-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetIpAddressType")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetIpAddressTypeOutput" "SetIpAddressTypeResult")))
 (common-lisp:export 'set-ip-address-type))
(common-lisp:progn
 (common-lisp:defun set-rule-priorities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-priorities)
   (common-lisp:declare (common-lisp:ignorable rule-priorities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-rule-priorities-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetRulePriorities")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetRulePrioritiesOutput" "SetRulePrioritiesResult")))
 (common-lisp:export 'set-rule-priorities))
(common-lisp:progn
 (common-lisp:defun set-security-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn security-groups)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-arn security-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-security-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetSecurityGroups")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetSecurityGroupsOutput" "SetSecurityGroupsResult")))
 (common-lisp:export 'set-security-groups))
(common-lisp:progn
 (common-lisp:defun set-subnets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-arn subnets)
   (common-lisp:declare (common-lisp:ignorable load-balancer-arn subnets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-subnets-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((22) common-lisp:base-char
                                  . "elasticloadbalancingv2")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetSubnets")
                                  ("Version" ,@"2015-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetSubnetsOutput" "SetSubnetsResult")))
 (common-lisp:export 'set-subnets))