;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/codecommit
  (:use)
  (:nicknames #:aws/codecommit)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/codecommit)

(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:deftype additional-data () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-repositories-input (:copier common-lisp:nil))
   (repository-names
    (common-lisp:error
     #A((28) common-lisp:base-char . ":repositorynames is required"))
    :type (common-lisp:or repository-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-repositories-input
                    'make-batch-get-repositories-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-repositories-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-repositories-output (:copier common-lisp:nil))
   (repositories common-lisp:nil :type
    (common-lisp:or repository-metadata-list common-lisp:null))
   (repositories-not-found common-lisp:nil :type
    (common-lisp:or repository-not-found-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-repositories-output
                    'make-batch-get-repositories-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-repositories-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositories"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repositories)))
    (aws-sdk/generator/shape::to-query-params "repositoriesNotFound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repositories-not-found))))))
(common-lisp:progn
 (common-lisp:defstruct
     (blob-id-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'blob-id-does-not-exist-exception
                    'make-blob-id-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          blob-id-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (blob-id-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'blob-id-required-exception
                    'make-blob-id-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          blob-id-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (blob-metadata (:copier common-lisp:nil))
   (blob-id common-lisp:nil :type (common-lisp:or object-id common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or path common-lisp:null))
   (mode common-lisp:nil :type (common-lisp:or mode common-lisp:null)))
 (common-lisp:export (common-lisp:list 'blob-metadata 'make-blob-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape blob-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "blobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'blob-id)))
    (aws-sdk/generator/shape::to-query-params "path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "mode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mode))))))
(common-lisp:progn
 (common-lisp:defstruct
     (branch-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'branch-does-not-exist-exception
                    'make-branch-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          branch-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (branch-info (:copier common-lisp:nil))
   (branch-name common-lisp:nil :type
    (common-lisp:or branch-name common-lisp:null))
   (commit-id common-lisp:nil :type
    (common-lisp:or commit-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'branch-info 'make-branch-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape branch-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "branchName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'branch-name)))
    (aws-sdk/generator/shape::to-query-params "commitId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'commit-id))))))
(common-lisp:deftype branch-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (branch-name-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'branch-name-exists-exception
                    'make-branch-name-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          branch-name-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype branch-name-list ()
   '(trivial-types:proper-list branch-name))
 (common-lisp:defun |make-branch-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list branch-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (branch-name-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'branch-name-required-exception
                    'make-branch-name-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          branch-name-required-exception))
   (common-lisp:append)))
(common-lisp:deftype change-type-enum () 'common-lisp:string)
(common-lisp:deftype clone-url-http () 'common-lisp:string)
(common-lisp:deftype clone-url-ssh () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (commit (:copier common-lisp:nil))
   (tree-id common-lisp:nil :type (common-lisp:or object-id common-lisp:null))
   (parents common-lisp:nil :type
    (common-lisp:or parent-list common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (author common-lisp:nil :type (common-lisp:or user-info common-lisp:null))
   (committer common-lisp:nil :type
    (common-lisp:or user-info common-lisp:null))
   (additional-data common-lisp:nil :type
    (common-lisp:or additional-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'commit 'make-commit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape commit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "treeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tree-id)))
    (aws-sdk/generator/shape::to-query-params "parents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parents)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "author"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'author)))
    (aws-sdk/generator/shape::to-query-params "committer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'committer)))
    (aws-sdk/generator/shape::to-query-params "additionalData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-data))))))
(common-lisp:progn
 (common-lisp:defstruct
     (commit-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'commit-does-not-exist-exception
                    'make-commit-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          commit-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:deftype commit-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (commit-id-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'commit-id-does-not-exist-exception
                    'make-commit-id-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          commit-id-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (commit-id-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'commit-id-required-exception
                    'make-commit-id-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          commit-id-required-exception))
   (common-lisp:append)))
(common-lisp:deftype commit-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (commit-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'commit-required-exception
                    'make-commit-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          commit-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-branch-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (branch-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":branchname is required"))
    :type (common-lisp:or branch-name common-lisp:null))
   (commit-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":commitid is required"))
    :type (common-lisp:or commit-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-branch-input 'make-create-branch-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-branch-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "branchName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'branch-name)))
    (aws-sdk/generator/shape::to-query-params "commitId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'commit-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-repository-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (repository-description common-lisp:nil :type
    (common-lisp:or repository-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-repository-input 'make-create-repository-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-repository-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "repositoryDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-description))))))
(common-lisp:progn
 (common-lisp:defstruct (create-repository-output (:copier common-lisp:nil))
   (repository-metadata common-lisp:nil :type
    (common-lisp:or repository-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-repository-output 'make-create-repository-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-repository-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-metadata))))))
(common-lisp:deftype creation-date () 'common-lisp:string)
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-repository-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-repository-input 'make-delete-repository-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-repository-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-repository-output (:copier common-lisp:nil))
   (repository-id common-lisp:nil :type
    (common-lisp:or repository-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-repository-output 'make-delete-repository-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-repository-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-id))))))
(common-lisp:progn
 (common-lisp:defstruct (difference (:copier common-lisp:nil))
   (before-blob common-lisp:nil :type
    (common-lisp:or blob-metadata common-lisp:null))
   (after-blob common-lisp:nil :type
    (common-lisp:or blob-metadata common-lisp:null))
   (change-type common-lisp:nil :type
    (common-lisp:or change-type-enum common-lisp:null)))
 (common-lisp:export (common-lisp:list 'difference 'make-difference))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape difference))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "beforeBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'before-blob)))
    (aws-sdk/generator/shape::to-query-params "afterBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'after-blob)))
    (aws-sdk/generator/shape::to-query-params "changeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-type))))))
(common-lisp:progn
 (common-lisp:deftype difference-list ()
   '(trivial-types:proper-list difference))
 (common-lisp:defun |make-difference-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list difference))
   aws-sdk/generator/shape::members))
(common-lisp:deftype email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-integrity-checks-failed-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'encryption-integrity-checks-failed-exception
                    'make-encryption-integrity-checks-failed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          encryption-integrity-checks-failed-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-key-access-denied-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'encryption-key-access-denied-exception
                    'make-encryption-key-access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          encryption-key-access-denied-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-key-disabled-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'encryption-key-disabled-exception
                    'make-encryption-key-disabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          encryption-key-disabled-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-key-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'encryption-key-not-found-exception
                    'make-encryption-key-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          encryption-key-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-key-unavailable-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'encryption-key-unavailable-exception
                    'make-encryption-key-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          encryption-key-unavailable-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (file-too-large-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'file-too-large-exception 'make-file-too-large-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          file-too-large-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (get-blob-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (blob-id
    (common-lisp:error #A((19) common-lisp:base-char . ":blobid is required"))
    :type (common-lisp:or object-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-blob-input 'make-get-blob-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-blob-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "blobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'blob-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-blob-output (:copier common-lisp:nil))
   (content
    (common-lisp:error #A((20) common-lisp:base-char . ":content is required"))
    :type
    (common-lisp:or
     (common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*))
     common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-blob-output 'make-get-blob-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-blob-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content))))))
(common-lisp:progn
 (common-lisp:defstruct (get-branch-input (:copier common-lisp:nil))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (branch-name common-lisp:nil :type
    (common-lisp:or branch-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-branch-input 'make-get-branch-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-branch-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "branchName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'branch-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-branch-output (:copier common-lisp:nil))
   (branch common-lisp:nil :type
    (common-lisp:or branch-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-branch-output 'make-get-branch-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-branch-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "branch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'branch))))))
(common-lisp:progn
 (common-lisp:defstruct (get-commit-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (commit-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":commitid is required"))
    :type (common-lisp:or object-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-commit-input 'make-get-commit-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-commit-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "commitId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'commit-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-commit-output (:copier common-lisp:nil))
   (commit
    (common-lisp:error #A((19) common-lisp:base-char . ":commit is required"))
    :type (common-lisp:or commit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-commit-output 'make-get-commit-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-commit-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "commit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'commit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-differences-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (before-commit-specifier common-lisp:nil :type
    (common-lisp:or commit-name common-lisp:null))
   (after-commit-specifier
    (common-lisp:error
     #A((33) common-lisp:base-char . ":aftercommitspecifier is required"))
    :type (common-lisp:or commit-name common-lisp:null))
   (before-path common-lisp:nil :type (common-lisp:or path common-lisp:null))
   (after-path common-lisp:nil :type (common-lisp:or path common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-differences-input 'make-get-differences-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-differences-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "beforeCommitSpecifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'before-commit-specifier)))
    (aws-sdk/generator/shape::to-query-params "afterCommitSpecifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'after-commit-specifier)))
    (aws-sdk/generator/shape::to-query-params "beforePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'before-path)))
    (aws-sdk/generator/shape::to-query-params "afterPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'after-path)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-differences-output (:copier common-lisp:nil))
   (differences common-lisp:nil :type
    (common-lisp:or difference-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-differences-output 'make-get-differences-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-differences-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "differences"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'differences)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-repository-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-repository-input 'make-get-repository-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-repository-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-repository-output (:copier common-lisp:nil))
   (repository-metadata common-lisp:nil :type
    (common-lisp:or repository-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-repository-output 'make-get-repository-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-repository-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-repository-triggers-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-repository-triggers-input
                    'make-get-repository-triggers-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-repository-triggers-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-repository-triggers-output (:copier common-lisp:nil))
   (configuration-id common-lisp:nil :type
    (common-lisp:or repository-triggers-configuration-id common-lisp:null))
   (triggers common-lisp:nil :type
    (common-lisp:or repository-triggers-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-repository-triggers-output
                    'make-get-repository-triggers-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-repository-triggers-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-id)))
    (aws-sdk/generator/shape::to-query-params "triggers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'triggers))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-blob-id-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-blob-id-exception
                    'make-invalid-blob-id-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-blob-id-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-branch-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-branch-name-exception
                    'make-invalid-branch-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-branch-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-commit-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-commit-exception 'make-invalid-commit-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-commit-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-commit-id-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-commit-id-exception
                    'make-invalid-commit-id-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-commit-id-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-continuation-token-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-continuation-token-exception
                    'make-invalid-continuation-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-continuation-token-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-max-results-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-max-results-exception
                    'make-invalid-max-results-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-max-results-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-order-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-order-exception 'make-invalid-order-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-order-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-path-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-path-exception 'make-invalid-path-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-path-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-description-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-description-exception
                    'make-invalid-repository-description-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-description-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-name-exception
                    'make-invalid-repository-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-trigger-branch-name-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-trigger-branch-name-exception
                    'make-invalid-repository-trigger-branch-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-trigger-branch-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-trigger-custom-data-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-trigger-custom-data-exception
                    'make-invalid-repository-trigger-custom-data-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-trigger-custom-data-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-trigger-destination-arn-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-trigger-destination-arn-exception
                    'make-invalid-repository-trigger-destination-arn-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-trigger-destination-arn-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-trigger-events-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-trigger-events-exception
                    'make-invalid-repository-trigger-events-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-trigger-events-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-trigger-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-trigger-name-exception
                    'make-invalid-repository-trigger-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-trigger-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-repository-trigger-region-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-repository-trigger-region-exception
                    'make-invalid-repository-trigger-region-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-repository-trigger-region-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-sort-by-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-sort-by-exception
                    'make-invalid-sort-by-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-sort-by-exception))
   (common-lisp:append)))
(common-lisp:deftype last-modified-date () 'common-lisp:string)
(common-lisp:deftype limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (list-branches-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-branches-input 'make-list-branches-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-branches-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-branches-output (:copier common-lisp:nil))
   (branches common-lisp:nil :type
    (common-lisp:or branch-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-branches-output 'make-list-branches-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-branches-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "branches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'branches)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-repositories-input (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (sort-by common-lisp:nil :type
    (common-lisp:or sort-by-enum common-lisp:null))
   (order common-lisp:nil :type (common-lisp:or order-enum common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-repositories-input 'make-list-repositories-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-repositories-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "sortBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-by)))
    (aws-sdk/generator/shape::to-query-params "order"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'order))))))
(common-lisp:progn
 (common-lisp:defstruct (list-repositories-output (:copier common-lisp:nil))
   (repositories common-lisp:nil :type
    (common-lisp:or repository-name-id-pair-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-repositories-output 'make-list-repositories-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-repositories-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositories"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repositories)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (maximum-branches-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'maximum-branches-exceeded-exception
                    'make-maximum-branches-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maximum-branches-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (maximum-repository-names-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'maximum-repository-names-exceeded-exception
                    'make-maximum-repository-names-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maximum-repository-names-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (maximum-repository-triggers-exceeded-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'maximum-repository-triggers-exceeded-exception
                    'make-maximum-repository-triggers-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          maximum-repository-triggers-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype mode () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype object-id () 'common-lisp:string)
(common-lisp:deftype order-enum () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parent-list () '(trivial-types:proper-list object-id))
 (common-lisp:defun |make-parent-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list object-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (path-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'path-does-not-exist-exception
                    'make-path-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          path-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (put-repository-triggers-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (triggers
    (common-lisp:error
     #A((21) common-lisp:base-char . ":triggers is required"))
    :type (common-lisp:or repository-triggers-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-repository-triggers-input
                    'make-put-repository-triggers-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-repository-triggers-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "triggers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'triggers))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-repository-triggers-output (:copier common-lisp:nil))
   (configuration-id common-lisp:nil :type
    (common-lisp:or repository-triggers-configuration-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-repository-triggers-output
                    'make-put-repository-triggers-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-repository-triggers-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "configurationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-id))))))
(common-lisp:deftype repository-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (repository-does-not-exist-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-does-not-exist-exception
                    'make-repository-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-does-not-exist-exception))
   (common-lisp:append)))
(common-lisp:deftype repository-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (repository-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-limit-exceeded-exception
                    'make-repository-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (repository-metadata (:copier common-lisp:nil))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (repository-id common-lisp:nil :type
    (common-lisp:or repository-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (repository-description common-lisp:nil :type
    (common-lisp:or repository-description common-lisp:null))
   (default-branch common-lisp:nil :type
    (common-lisp:or branch-name common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or last-modified-date common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null))
   (clone-url-http common-lisp:nil :type
    (common-lisp:or clone-url-http common-lisp:null))
   (clone-url-ssh common-lisp:nil :type
    (common-lisp:or clone-url-ssh common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-metadata 'make-repository-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape repository-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "repositoryDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-description)))
    (aws-sdk/generator/shape::to-query-params "defaultBranch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-branch)))
    (aws-sdk/generator/shape::to-query-params "lastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "cloneUrlHttp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clone-url-http)))
    (aws-sdk/generator/shape::to-query-params "cloneUrlSsh"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clone-url-ssh)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:deftype repository-metadata-list ()
   '(trivial-types:proper-list repository-metadata))
 (common-lisp:defun |make-repository-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype repository-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (repository-name-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-name-exists-exception
                    'make-repository-name-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-name-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (repository-name-id-pair (:copier common-lisp:nil))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (repository-id common-lisp:nil :type
    (common-lisp:or repository-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-name-id-pair 'make-repository-name-id-pair))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-name-id-pair))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "repositoryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-id))))))
(common-lisp:progn
 (common-lisp:deftype repository-name-id-pair-list ()
   '(trivial-types:proper-list repository-name-id-pair))
 (common-lisp:defun |make-repository-name-id-pair-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository-name-id-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype repository-name-list ()
   '(trivial-types:proper-list repository-name))
 (common-lisp:defun |make-repository-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-name-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-name-required-exception
                    'make-repository-name-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-name-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-names-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-names-required-exception
                    'make-repository-names-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-names-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype repository-not-found-list ()
   '(trivial-types:proper-list repository-name))
 (common-lisp:defun |make-repository-not-found-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (repository-trigger (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or repository-trigger-name common-lisp:null))
   (destination-arn
    (common-lisp:error
     #A((27) common-lisp:base-char . ":destinationarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (custom-data common-lisp:nil :type
    (common-lisp:or repository-trigger-custom-data common-lisp:null))
   (branches common-lisp:nil :type
    (common-lisp:or branch-name-list common-lisp:null))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or repository-trigger-event-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-trigger 'make-repository-trigger))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape repository-trigger))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "destinationArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-arn)))
    (aws-sdk/generator/shape::to-query-params "customData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-data)))
    (aws-sdk/generator/shape::to-query-params "branches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'branches)))
    (aws-sdk/generator/shape::to-query-params "events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events))))))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-trigger-branch-name-list-required-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-trigger-branch-name-list-required-exception
                    'make-repository-trigger-branch-name-list-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-trigger-branch-name-list-required-exception))
   (common-lisp:append)))
(common-lisp:deftype repository-trigger-custom-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (repository-trigger-destination-arn-required-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-trigger-destination-arn-required-exception
                    'make-repository-trigger-destination-arn-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-trigger-destination-arn-required-exception))
   (common-lisp:append)))
(common-lisp:deftype repository-trigger-event-enum () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype repository-trigger-event-list ()
   '(trivial-types:proper-list repository-trigger-event-enum))
 (common-lisp:defun |make-repository-trigger-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            repository-trigger-event-enum))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-trigger-events-list-required-exception
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-trigger-events-list-required-exception
                    'make-repository-trigger-events-list-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-trigger-events-list-required-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-trigger-execution-failure (:copier common-lisp:nil))
   (trigger common-lisp:nil :type
    (common-lisp:or repository-trigger-name common-lisp:null))
   (failure-message common-lisp:nil :type
    (common-lisp:or repository-trigger-execution-failure-message
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-trigger-execution-failure
                    'make-repository-trigger-execution-failure))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-trigger-execution-failure))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "trigger"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trigger)))
    (aws-sdk/generator/shape::to-query-params "failureMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-message))))))
(common-lisp:progn
 (common-lisp:deftype repository-trigger-execution-failure-list ()
   '(trivial-types:proper-list repository-trigger-execution-failure))
 (common-lisp:defun |make-repository-trigger-execution-failure-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            repository-trigger-execution-failure))
   aws-sdk/generator/shape::members))
(common-lisp:deftype repository-trigger-execution-failure-message ()
  'common-lisp:string)
(common-lisp:deftype repository-trigger-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype repository-trigger-name-list ()
   '(trivial-types:proper-list repository-trigger-name))
 (common-lisp:defun |make-repository-trigger-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository-trigger-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-trigger-name-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-trigger-name-required-exception
                    'make-repository-trigger-name-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-trigger-name-required-exception))
   (common-lisp:append)))
(common-lisp:deftype repository-triggers-configuration-id ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype repository-triggers-list ()
   '(trivial-types:proper-list repository-trigger))
 (common-lisp:defun |make-repository-triggers-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository-trigger))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-triggers-list-required-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'repository-triggers-list-required-exception
                    'make-repository-triggers-list-required-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-triggers-list-required-exception))
   (common-lisp:append)))
(common-lisp:deftype sort-by-enum () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (test-repository-triggers-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (triggers
    (common-lisp:error
     #A((21) common-lisp:base-char . ":triggers is required"))
    :type (common-lisp:or repository-triggers-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-repository-triggers-input
                    'make-test-repository-triggers-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-repository-triggers-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "triggers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'triggers))))))
(common-lisp:progn
 (common-lisp:defstruct
     (test-repository-triggers-output (:copier common-lisp:nil))
   (successful-executions common-lisp:nil :type
    (common-lisp:or repository-trigger-name-list common-lisp:null))
   (failed-executions common-lisp:nil :type
    (common-lisp:or repository-trigger-execution-failure-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-repository-triggers-output
                    'make-test-repository-triggers-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-repository-triggers-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "successfulExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'successful-executions)))
    (aws-sdk/generator/shape::to-query-params "failedExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-executions))))))
(common-lisp:progn
 (common-lisp:defstruct (update-default-branch-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (default-branch-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":defaultbranchname is required"))
    :type (common-lisp:or branch-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-default-branch-input
                    'make-update-default-branch-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-default-branch-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "defaultBranchName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-branch-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-repository-description-input (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (repository-description common-lisp:nil :type
    (common-lisp:or repository-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-repository-description-input
                    'make-update-repository-description-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-repository-description-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "repositoryDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-repository-name-input (:copier common-lisp:nil))
   (old-name
    (common-lisp:error #A((20) common-lisp:base-char . ":oldname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (new-name
    (common-lisp:error #A((20) common-lisp:base-char . ":newname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-repository-name-input
                    'make-update-repository-name-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-repository-name-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "oldName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'old-name)))
    (aws-sdk/generator/shape::to-query-params "newName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-name))))))
(common-lisp:progn
 (common-lisp:defstruct (user-info (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (email common-lisp:nil :type (common-lisp:or email common-lisp:null))
   (date common-lisp:nil :type (common-lisp:or date common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-info 'make-user-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "email"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email)))
    (aws-sdk/generator/shape::to-query-params "date"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date))))))
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun batch-get-repositories
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-names)
   (common-lisp:declare (common-lisp:ignorable repository-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-repositories-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetRepositories")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetRepositoriesOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-repositories))
(common-lisp:progn
 (common-lisp:defun create-branch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name branch-name commit-id)
   (common-lisp:declare
    (common-lisp:ignorable repository-name branch-name commit-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-branch-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateBranch")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-branch))
(common-lisp:progn
 (common-lisp:defun create-repository
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name repository-description)
   (common-lisp:declare
    (common-lisp:ignorable repository-name repository-description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-repository-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRepository")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateRepositoryOutput" common-lisp:nil)))
 (common-lisp:export 'create-repository))
(common-lisp:progn
 (common-lisp:defun delete-repository
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name)
   (common-lisp:declare (common-lisp:ignorable repository-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-repository-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRepository")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRepositoryOutput" common-lisp:nil)))
 (common-lisp:export 'delete-repository))
(common-lisp:progn
 (common-lisp:defun get-blob
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name blob-id)
   (common-lisp:declare (common-lisp:ignorable repository-name blob-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-blob-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetBlob")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBlobOutput" common-lisp:nil)))
 (common-lisp:export 'get-blob))
(common-lisp:progn
 (common-lisp:defun get-branch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name branch-name)
   (common-lisp:declare (common-lisp:ignorable repository-name branch-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-branch-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetBranch")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBranchOutput" common-lisp:nil)))
 (common-lisp:export 'get-branch))
(common-lisp:progn
 (common-lisp:defun get-commit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name commit-id)
   (common-lisp:declare (common-lisp:ignorable repository-name commit-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-commit-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetCommit")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCommitOutput" common-lisp:nil)))
 (common-lisp:export 'get-commit))
(common-lisp:progn
 (common-lisp:defun get-differences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name before-commit-specifier
                     after-commit-specifier before-path after-path max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable repository-name before-commit-specifier
     after-commit-specifier before-path after-path max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-differences-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDifferences")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDifferencesOutput" common-lisp:nil)))
 (common-lisp:export 'get-differences))
(common-lisp:progn
 (common-lisp:defun get-repository
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name)
   (common-lisp:declare (common-lisp:ignorable repository-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-repository-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRepository")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRepositoryOutput" common-lisp:nil)))
 (common-lisp:export 'get-repository))
(common-lisp:progn
 (common-lisp:defun get-repository-triggers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name)
   (common-lisp:declare (common-lisp:ignorable repository-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-repository-triggers-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRepositoryTriggers")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRepositoryTriggersOutput" common-lisp:nil)))
 (common-lisp:export 'get-repository-triggers))
(common-lisp:progn
 (common-lisp:defun list-branches
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name next-token)
   (common-lisp:declare (common-lisp:ignorable repository-name next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-branches-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListBranches")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBranchesOutput" common-lisp:nil)))
 (common-lisp:export 'list-branches))
(common-lisp:progn
 (common-lisp:defun list-repositories
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token sort-by order)
   (common-lisp:declare (common-lisp:ignorable next-token sort-by order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-repositories-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRepositories")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRepositoriesOutput" common-lisp:nil)))
 (common-lisp:export 'list-repositories))
(common-lisp:progn
 (common-lisp:defun put-repository-triggers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name triggers)
   (common-lisp:declare (common-lisp:ignorable repository-name triggers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-repository-triggers-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutRepositoryTriggers")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutRepositoryTriggersOutput" common-lisp:nil)))
 (common-lisp:export 'put-repository-triggers))
(common-lisp:progn
 (common-lisp:defun test-repository-triggers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name triggers)
   (common-lisp:declare (common-lisp:ignorable repository-name triggers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-repository-triggers-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TestRepositoryTriggers")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TestRepositoryTriggersOutput" common-lisp:nil)))
 (common-lisp:export 'test-repository-triggers))
(common-lisp:progn
 (common-lisp:defun update-default-branch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name default-branch-name)
   (common-lisp:declare
    (common-lisp:ignorable repository-name default-branch-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-default-branch-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDefaultBranch")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-default-branch))
(common-lisp:progn
 (common-lisp:defun update-repository-description
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name repository-description)
   (common-lisp:declare
    (common-lisp:ignorable repository-name repository-description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-repository-description-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRepositoryDescription")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-repository-description))
(common-lisp:progn
 (common-lisp:defun update-repository-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key old-name new-name)
   (common-lisp:declare (common-lisp:ignorable old-name new-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-repository-name-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "codecommit")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRepositoryName")
                                  ("Version" ,@"2015-04-13"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-repository-name))