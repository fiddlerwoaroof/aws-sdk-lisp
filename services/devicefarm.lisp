;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/devicefarm
  (:use)
  (:nicknames #:aws/devicefarm)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/devicefarm)

(common-lisp:deftype awsaccount-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (account-settings (:copier common-lisp:nil))
   (aws-account-number common-lisp:nil :type
    (common-lisp:or awsaccount-number common-lisp:null))
   (unmetered-devices common-lisp:nil :type
    (common-lisp:or purchased-devices-map common-lisp:null))
   (unmetered-remote-access-devices common-lisp:nil :type
    (common-lisp:or purchased-devices-map common-lisp:null))
   (max-job-timeout-minutes common-lisp:nil :type
    (common-lisp:or job-timeout-minutes common-lisp:null))
   (trial-minutes common-lisp:nil :type
    (common-lisp:or trial-minutes common-lisp:null))
   (max-slots common-lisp:nil :type
    (common-lisp:or max-slot-map common-lisp:null))
   (default-job-timeout-minutes common-lisp:nil :type
    (common-lisp:or job-timeout-minutes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-settings 'make-account-settings))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape account-settings))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "awsAccountNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'aws-account-number)))
    (aws-sdk/generator/shape::to-query-params "unmeteredDevices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unmetered-devices)))
    (aws-sdk/generator/shape::to-query-params "unmeteredRemoteAccessDevices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unmetered-remote-access-devices)))
    (aws-sdk/generator/shape::to-query-params "maxJobTimeoutMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-job-timeout-minutes)))
    (aws-sdk/generator/shape::to-query-params "trialMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'trial-minutes)))
    (aws-sdk/generator/shape::to-query-params "maxSlots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-slots)))
    (aws-sdk/generator/shape::to-query-params "defaultJobTimeoutMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-job-timeout-minutes))))))
(common-lisp:deftype accounts-cleanup () 'common-lisp:boolean)
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype amazon-resource-names ()
   '(trivial-types:proper-list amazon-resource-name))
 (common-lisp:defun |make-amazon-resource-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list amazon-resource-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype app-packages-cleanup () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (argument-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'argument-exception 'make-argument-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape argument-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (artifact (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or artifact-type common-lisp:null))
   (extension common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or url common-lisp:null)))
 (common-lisp:export (common-lisp:list 'artifact 'make-artifact))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape artifact))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "extension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'extension)))
    (aws-sdk/generator/shape::to-query-params "url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:deftype artifact-category () 'common-lisp:string)
(common-lisp:deftype artifact-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype artifacts () '(trivial-types:proper-list artifact))
 (common-lisp:defun |make-artifacts|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list artifact))
   aws-sdk/generator/shape::members))
(common-lisp:deftype billing-method () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (cpu (:copier common-lisp:nil))
   (frequency common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (architecture common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (clock common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cpu 'make-cpu))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cpu))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "frequency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frequency)))
    (aws-sdk/generator/shape::to-query-params "architecture"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'architecture)))
    (aws-sdk/generator/shape::to-query-params "clock"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clock))))))
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (counters (:copier common-lisp:nil))
   (total common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (passed common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (failed common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (warned common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (errored common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (stopped common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (skipped common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'counters 'make-counters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape counters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "total"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total)))
    (aws-sdk/generator/shape::to-query-params "passed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'passed)))
    (aws-sdk/generator/shape::to-query-params "failed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed)))
    (aws-sdk/generator/shape::to-query-params "warned"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warned)))
    (aws-sdk/generator/shape::to-query-params "errored"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'errored)))
    (aws-sdk/generator/shape::to-query-params "stopped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped)))
    (aws-sdk/generator/shape::to-query-params "skipped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'skipped))))))
(common-lisp:progn
 (common-lisp:defstruct (create-device-pool-request (:copier common-lisp:nil))
   (project-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projectarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (rules
    (common-lisp:error #A((18) common-lisp:base-char . ":rules is required"))
    :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-device-pool-request
                    'make-create-device-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-device-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (create-device-pool-result (:copier common-lisp:nil))
   (device-pool common-lisp:nil :type
    (common-lisp:or device-pool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-device-pool-result
                    'make-create-device-pool-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-device-pool-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "devicePool"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-pool))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-network-profile-request (:copier common-lisp:nil))
   (project-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projectarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or network-profile-type common-lisp:null))
   (uplink-bandwidth-bits common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-bandwidth-bits common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-delay-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-delay-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-jitter-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-jitter-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-loss-percent common-lisp:nil :type
    (common-lisp:or percent-integer common-lisp:null))
   (downlink-loss-percent common-lisp:nil :type
    (common-lisp:or percent-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-network-profile-request
                    'make-create-network-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-network-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "uplinkBandwidthBits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-bandwidth-bits)))
    (aws-sdk/generator/shape::to-query-params "downlinkBandwidthBits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-bandwidth-bits)))
    (aws-sdk/generator/shape::to-query-params "uplinkDelayMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-delay-ms)))
    (aws-sdk/generator/shape::to-query-params "downlinkDelayMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-delay-ms)))
    (aws-sdk/generator/shape::to-query-params "uplinkJitterMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-jitter-ms)))
    (aws-sdk/generator/shape::to-query-params "downlinkJitterMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-jitter-ms)))
    (aws-sdk/generator/shape::to-query-params "uplinkLossPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-loss-percent)))
    (aws-sdk/generator/shape::to-query-params "downlinkLossPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-loss-percent))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-network-profile-result (:copier common-lisp:nil))
   (network-profile common-lisp:nil :type
    (common-lisp:or network-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-network-profile-result
                    'make-create-network-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-network-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "networkProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'network-profile))))))
(common-lisp:progn
 (common-lisp:defstruct (create-project-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (default-job-timeout-minutes common-lisp:nil :type
    (common-lisp:or job-timeout-minutes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-request 'make-create-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "defaultJobTimeoutMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-job-timeout-minutes))))))
(common-lisp:progn
 (common-lisp:defstruct (create-project-result (:copier common-lisp:nil))
   (project common-lisp:nil :type (common-lisp:or project common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-result 'make-create-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-project-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "project"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-remote-access-session-configuration (:copier common-lisp:nil))
   (billing-method common-lisp:nil :type
    (common-lisp:or billing-method common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-remote-access-session-configuration
                    'make-create-remote-access-session-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-remote-access-session-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "billingMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'billing-method))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-remote-access-session-request (:copier common-lisp:nil))
   (project-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projectarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (device-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":devicearn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or create-remote-access-session-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-remote-access-session-request
                    'make-create-remote-access-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-remote-access-session-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-arn)))
    (aws-sdk/generator/shape::to-query-params "deviceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-remote-access-session-result (:copier common-lisp:nil))
   (remote-access-session common-lisp:nil :type
    (common-lisp:or remote-access-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-remote-access-session-result
                    'make-create-remote-access-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-remote-access-session-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "remoteAccessSession"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-session))))))
(common-lisp:progn
 (common-lisp:defstruct (create-upload-request (:copier common-lisp:nil))
   (project-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projectarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or upload-type common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or content-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-upload-request 'make-create-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type))))))
(common-lisp:progn
 (common-lisp:defstruct (create-upload-result (:copier common-lisp:nil))
   (upload common-lisp:nil :type (common-lisp:or upload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-upload-result 'make-create-upload-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-upload-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "upload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload))))))
(common-lisp:deftype currency-code () 'common-lisp:string)
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-device-pool-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-device-pool-request
                    'make-delete-device-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-device-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-device-pool-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-device-pool-result
                    'make-delete-device-pool-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-device-pool-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-network-profile-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-network-profile-request
                    'make-delete-network-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-network-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-network-profile-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-network-profile-result
                    'make-delete-network-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-network-profile-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-project-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-project-request 'make-delete-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-project-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-project-result 'make-delete-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-project-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-remote-access-session-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-remote-access-session-request
                    'make-delete-remote-access-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-remote-access-session-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-remote-access-session-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-remote-access-session-result
                    'make-delete-remote-access-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-remote-access-session-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-run-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-run-request 'make-delete-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-run-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-run-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-run-result 'make-delete-run-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-run-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-upload-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-upload-request 'make-delete-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-upload-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-upload-result 'make-delete-upload-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-upload-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (device (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (manufacturer common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (model common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (form-factor common-lisp:nil :type
    (common-lisp:or device-form-factor common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or device-platform common-lisp:null))
   (os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cpu common-lisp:nil :type (common-lisp:or cpu common-lisp:null))
   (resolution common-lisp:nil :type
    (common-lisp:or resolution common-lisp:null))
   (heap-size common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (memory common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (image common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (carrier common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (radio common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (remote-access-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (fleet-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fleet-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'device 'make-device))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape device))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "manufacturer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'manufacturer)))
    (aws-sdk/generator/shape::to-query-params "model"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model)))
    (aws-sdk/generator/shape::to-query-params "formFactor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'form-factor)))
    (aws-sdk/generator/shape::to-query-params "platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "os"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'os)))
    (aws-sdk/generator/shape::to-query-params "cpu"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cpu)))
    (aws-sdk/generator/shape::to-query-params "resolution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resolution)))
    (aws-sdk/generator/shape::to-query-params "heapSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'heap-size)))
    (aws-sdk/generator/shape::to-query-params "memory"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory)))
    (aws-sdk/generator/shape::to-query-params "image"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image)))
    (aws-sdk/generator/shape::to-query-params "carrier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'carrier)))
    (aws-sdk/generator/shape::to-query-params "radio"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'radio)))
    (aws-sdk/generator/shape::to-query-params "remoteAccessEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-enabled)))
    (aws-sdk/generator/shape::to-query-params "fleetType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-type)))
    (aws-sdk/generator/shape::to-query-params "fleetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fleet-name))))))
(common-lisp:deftype device-attribute () 'common-lisp:string)
(common-lisp:deftype device-form-factor () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (device-minutes (:copier common-lisp:nil))
   (total common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (metered common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (unmetered common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'device-minutes 'make-device-minutes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape device-minutes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "total"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total)))
    (aws-sdk/generator/shape::to-query-params "metered"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metered)))
    (aws-sdk/generator/shape::to-query-params "unmetered"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unmetered))))))
(common-lisp:deftype device-platform () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (device-pool (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or device-pool-type common-lisp:null))
   (rules common-lisp:nil :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export (common-lisp:list 'device-pool 'make-device-pool))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape device-pool))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct
     (device-pool-compatibility-result (:copier common-lisp:nil))
   (device common-lisp:nil :type (common-lisp:or device common-lisp:null))
   (compatible common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (incompatibility-messages common-lisp:nil :type
    (common-lisp:or incompatibility-messages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'device-pool-compatibility-result
                    'make-device-pool-compatibility-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          device-pool-compatibility-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device)))
    (aws-sdk/generator/shape::to-query-params "compatible"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compatible)))
    (aws-sdk/generator/shape::to-query-params "incompatibilityMessages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'incompatibility-messages))))))
(common-lisp:progn
 (common-lisp:deftype device-pool-compatibility-results ()
   '(trivial-types:proper-list device-pool-compatibility-result))
 (common-lisp:defun |make-device-pool-compatibility-results|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            device-pool-compatibility-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype device-pool-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype device-pools () '(trivial-types:proper-list device-pool))
 (common-lisp:defun |make-device-pools|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-pool))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype devices () '(trivial-types:proper-list device))
 (common-lisp:defun |make-devices|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (execution-configuration (:copier common-lisp:nil))
   (job-timeout-minutes common-lisp:nil :type
    (common-lisp:or job-timeout-minutes common-lisp:null))
   (accounts-cleanup common-lisp:nil :type
    (common-lisp:or accounts-cleanup common-lisp:null))
   (app-packages-cleanup common-lisp:nil :type
    (common-lisp:or app-packages-cleanup common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-configuration 'make-execution-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobTimeoutMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-timeout-minutes)))
    (aws-sdk/generator/shape::to-query-params "accountsCleanup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accounts-cleanup)))
    (aws-sdk/generator/shape::to-query-params "appPackagesCleanup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-packages-cleanup))))))
(common-lisp:deftype execution-result () 'common-lisp:string)
(common-lisp:deftype execution-status () 'common-lisp:string)
(common-lisp:deftype filter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-settings-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-request
                    'make-get-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-account-settings-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (get-account-settings-result (:copier common-lisp:nil))
   (account-settings common-lisp:nil :type
    (common-lisp:or account-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-result
                    'make-get-account-settings-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-account-settings-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-settings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-pool-compatibility-request (:copier common-lisp:nil))
   (device-pool-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":devicepoolarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (app-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (test-type common-lisp:nil :type
    (common-lisp:or test-type common-lisp:null))
   (test common-lisp:nil :type
    (common-lisp:or schedule-run-test common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-pool-compatibility-request
                    'make-get-device-pool-compatibility-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-device-pool-compatibility-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "devicePoolArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-pool-arn)))
    (aws-sdk/generator/shape::to-query-params "appArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-arn)))
    (aws-sdk/generator/shape::to-query-params "testType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test-type)))
    (aws-sdk/generator/shape::to-query-params "test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-pool-compatibility-result (:copier common-lisp:nil))
   (compatible-devices common-lisp:nil :type
    (common-lisp:or device-pool-compatibility-results common-lisp:null))
   (incompatible-devices common-lisp:nil :type
    (common-lisp:or device-pool-compatibility-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-pool-compatibility-result
                    'make-get-device-pool-compatibility-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-device-pool-compatibility-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "compatibleDevices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compatible-devices)))
    (aws-sdk/generator/shape::to-query-params "incompatibleDevices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'incompatible-devices))))))
(common-lisp:progn
 (common-lisp:defstruct (get-device-pool-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-pool-request 'make-get-device-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-device-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-device-pool-result (:copier common-lisp:nil))
   (device-pool common-lisp:nil :type
    (common-lisp:or device-pool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-pool-result 'make-get-device-pool-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-device-pool-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "devicePool"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-pool))))))
(common-lisp:progn
 (common-lisp:defstruct (get-device-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-request 'make-get-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-device-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-device-result (:copier common-lisp:nil))
   (device common-lisp:nil :type (common-lisp:or device common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-result 'make-get-device-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-device-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device))))))
(common-lisp:progn
 (common-lisp:defstruct (get-job-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-job-request 'make-get-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-job-result (:copier common-lisp:nil))
   (job common-lisp:nil :type (common-lisp:or job common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-job-result 'make-get-job-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-job-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "job"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job))))))
(common-lisp:progn
 (common-lisp:defstruct (get-network-profile-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-network-profile-request
                    'make-get-network-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-network-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-network-profile-result (:copier common-lisp:nil))
   (network-profile common-lisp:nil :type
    (common-lisp:or network-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-network-profile-result
                    'make-get-network-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-network-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "networkProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'network-profile))))))
(common-lisp:progn
 (common-lisp:defstruct (get-offering-status-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-offering-status-request
                    'make-get-offering-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-offering-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-offering-status-result (:copier common-lisp:nil))
   (current common-lisp:nil :type
    (common-lisp:or offering-status-map common-lisp:null))
   (next-period common-lisp:nil :type
    (common-lisp:or offering-status-map common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-offering-status-result
                    'make-get-offering-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-offering-status-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "current"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current)))
    (aws-sdk/generator/shape::to-query-params "nextPeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-period)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-project-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-project-request 'make-get-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-project-result (:copier common-lisp:nil))
   (project common-lisp:nil :type (common-lisp:or project common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-project-result 'make-get-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-project-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "project"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-remote-access-session-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-remote-access-session-request
                    'make-get-remote-access-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-remote-access-session-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-remote-access-session-result (:copier common-lisp:nil))
   (remote-access-session common-lisp:nil :type
    (common-lisp:or remote-access-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-remote-access-session-result
                    'make-get-remote-access-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-remote-access-session-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "remoteAccessSession"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-session))))))
(common-lisp:progn
 (common-lisp:defstruct (get-run-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-run-request 'make-get-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-run-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-run-result (:copier common-lisp:nil))
   (run common-lisp:nil :type (common-lisp:or run common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-run-result 'make-get-run-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-run-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "run"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-suite-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-request 'make-get-suite-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-suite-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-suite-result (:copier common-lisp:nil))
   (suite common-lisp:nil :type (common-lisp:or suite common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-result 'make-get-suite-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-suite-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "suite"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suite))))))
(common-lisp:progn
 (common-lisp:defstruct (get-test-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-test-request 'make-get-test-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-test-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-test-result (:copier common-lisp:nil))
   (test common-lisp:nil :type (common-lisp:or test common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-test-result 'make-get-test-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-test-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test))))))
(common-lisp:progn
 (common-lisp:defstruct (get-upload-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-upload-request 'make-get-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-upload-result (:copier common-lisp:nil))
   (upload common-lisp:nil :type (common-lisp:or upload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-upload-result 'make-get-upload-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-upload-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "upload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload))))))
(common-lisp:progn
 (common-lisp:defstruct (idempotency-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'idempotency-exception 'make-idempotency-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          idempotency-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (incompatibility-message (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or device-attribute common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'incompatibility-message 'make-incompatibility-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          incompatibility-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype incompatibility-messages ()
   '(trivial-types:proper-list incompatibility-message))
 (common-lisp:defun |make-incompatibility-messages|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list incompatibility-message))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (install-to-remote-access-session-request (:copier common-lisp:nil))
   (remote-access-session-arn
    (common-lisp:error
     #A((35) common-lisp:base-char . ":remoteaccesssessionarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (app-arn
    (common-lisp:error #A((19) common-lisp:base-char . ":apparn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'install-to-remote-access-session-request
                    'make-install-to-remote-access-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          install-to-remote-access-session-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "remoteAccessSessionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-session-arn)))
    (aws-sdk/generator/shape::to-query-params "appArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (install-to-remote-access-session-result (:copier common-lisp:nil))
   (app-upload common-lisp:nil :type (common-lisp:or upload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'install-to-remote-access-session-result
                    'make-install-to-remote-access-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          install-to-remote-access-session-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "appUpload"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-upload))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (job (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or test-type common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or execution-status common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or execution-result common-lisp:null))
   (started common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (stopped common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (counters common-lisp:nil :type (common-lisp:or counters common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (device common-lisp:nil :type (common-lisp:or device common-lisp:null))
   (device-minutes common-lisp:nil :type
    (common-lisp:or device-minutes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job 'make-job))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "started"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started)))
    (aws-sdk/generator/shape::to-query-params "stopped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped)))
    (aws-sdk/generator/shape::to-query-params "counters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'counters)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device)))
    (aws-sdk/generator/shape::to-query-params "deviceMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-minutes))))))
(common-lisp:deftype job-timeout-minutes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype jobs () '(trivial-types:proper-list job))
 (common-lisp:defun |make-jobs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-artifacts-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or artifact-category common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-artifacts-request 'make-list-artifacts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-artifacts-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-artifacts-result (:copier common-lisp:nil))
   (artifacts common-lisp:nil :type
    (common-lisp:or artifacts common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-artifacts-result 'make-list-artifacts-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-artifacts-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "artifacts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artifacts)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-device-pools-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or device-pool-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-device-pools-request
                    'make-list-device-pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-device-pools-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-device-pools-result (:copier common-lisp:nil))
   (device-pools common-lisp:nil :type
    (common-lisp:or device-pools common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-device-pools-result 'make-list-device-pools-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-device-pools-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "devicePools"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-pools)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-devices-request (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-request 'make-list-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-devices-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-devices-result (:copier common-lisp:nil))
   (devices common-lisp:nil :type (common-lisp:or devices common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-result 'make-list-devices-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-devices-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "devices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'devices)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-request 'make-list-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-result (:copier common-lisp:nil))
   (jobs common-lisp:nil :type (common-lisp:or jobs common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-result 'make-list-jobs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jobs)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-network-profiles-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or network-profile-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-network-profiles-request
                    'make-list-network-profiles-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-network-profiles-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-network-profiles-result (:copier common-lisp:nil))
   (network-profiles common-lisp:nil :type
    (common-lisp:or network-profiles common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-network-profiles-result
                    'make-list-network-profiles-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-network-profiles-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "networkProfiles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'network-profiles)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-offering-promotions-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offering-promotions-request
                    'make-list-offering-promotions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-offering-promotions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-offering-promotions-result (:copier common-lisp:nil))
   (offering-promotions common-lisp:nil :type
    (common-lisp:or offering-promotions common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offering-promotions-result
                    'make-list-offering-promotions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-offering-promotions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offeringPromotions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-promotions)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-offering-transactions-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offering-transactions-request
                    'make-list-offering-transactions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-offering-transactions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-offering-transactions-result (:copier common-lisp:nil))
   (offering-transactions common-lisp:nil :type
    (common-lisp:or offering-transactions common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offering-transactions-result
                    'make-list-offering-transactions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-offering-transactions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offeringTransactions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-transactions)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-offerings-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offerings-request 'make-list-offerings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-offerings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-offerings-result (:copier common-lisp:nil))
   (offerings common-lisp:nil :type
    (common-lisp:or offerings common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offerings-result 'make-list-offerings-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-offerings-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offerings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offerings)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-projects-request (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-request 'make-list-projects-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-projects-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-projects-result (:copier common-lisp:nil))
   (projects common-lisp:nil :type (common-lisp:or projects common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-result 'make-list-projects-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-projects-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projects"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projects)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-remote-access-sessions-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-remote-access-sessions-request
                    'make-list-remote-access-sessions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-remote-access-sessions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-remote-access-sessions-result (:copier common-lisp:nil))
   (remote-access-sessions common-lisp:nil :type
    (common-lisp:or remote-access-sessions common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-remote-access-sessions-result
                    'make-list-remote-access-sessions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-remote-access-sessions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "remoteAccessSessions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-sessions)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-runs-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-runs-request 'make-list-runs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-runs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-runs-result (:copier common-lisp:nil))
   (runs common-lisp:nil :type (common-lisp:or runs common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-runs-result 'make-list-runs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-runs-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "runs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'runs)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-samples-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-samples-request 'make-list-samples-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-samples-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-samples-result (:copier common-lisp:nil))
   (samples common-lisp:nil :type (common-lisp:or samples common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-samples-result 'make-list-samples-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-samples-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "samples"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'samples)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-suites-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suites-request 'make-list-suites-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-suites-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-suites-result (:copier common-lisp:nil))
   (suites common-lisp:nil :type (common-lisp:or suites common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suites-result 'make-list-suites-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-suites-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "suites"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suites)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tests-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tests-request 'make-list-tests-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tests-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tests-result (:copier common-lisp:nil))
   (tests common-lisp:nil :type (common-lisp:or tests common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tests-result 'make-list-tests-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tests-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tests)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-unique-problems-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-unique-problems-request
                    'make-list-unique-problems-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-unique-problems-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-unique-problems-result (:copier common-lisp:nil))
   (unique-problems common-lisp:nil :type
    (common-lisp:or unique-problems-by-execution-result-map common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-unique-problems-result
                    'make-list-unique-problems-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-unique-problems-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "uniqueProblems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unique-problems)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-uploads-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-uploads-request 'make-list-uploads-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-uploads-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-uploads-result (:copier common-lisp:nil))
   (uploads common-lisp:nil :type (common-lisp:or uploads common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-uploads-result 'make-list-uploads-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-uploads-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "uploads"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uploads)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (location (:copier common-lisp:nil))
   (latitude
    (common-lisp:error
     #A((21) common-lisp:base-char . ":latitude is required"))
    :type (common-lisp:or double common-lisp:null))
   (longitude
    (common-lisp:error
     #A((22) common-lisp:base-char . ":longitude is required"))
    :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'location 'make-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "latitude"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latitude)))
    (aws-sdk/generator/shape::to-query-params "longitude"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'longitude))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:defstruct
    (max-slot-map
     (:constructor |make-max-slot-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype metadata () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (monetary-amount (:copier common-lisp:nil))
   (amount common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (currency-code common-lisp:nil :type
    (common-lisp:or currency-code common-lisp:null)))
 (common-lisp:export (common-lisp:list 'monetary-amount 'make-monetary-amount))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape monetary-amount))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "amount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'amount)))
    (aws-sdk/generator/shape::to-query-params "currencyCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'currency-code))))))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (network-profile (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or network-profile-type common-lisp:null))
   (uplink-bandwidth-bits common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-bandwidth-bits common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-delay-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-delay-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-jitter-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-jitter-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-loss-percent common-lisp:nil :type
    (common-lisp:or percent-integer common-lisp:null))
   (downlink-loss-percent common-lisp:nil :type
    (common-lisp:or percent-integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-profile 'make-network-profile))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape network-profile))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "uplinkBandwidthBits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-bandwidth-bits)))
    (aws-sdk/generator/shape::to-query-params "downlinkBandwidthBits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-bandwidth-bits)))
    (aws-sdk/generator/shape::to-query-params "uplinkDelayMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-delay-ms)))
    (aws-sdk/generator/shape::to-query-params "downlinkDelayMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-delay-ms)))
    (aws-sdk/generator/shape::to-query-params "uplinkJitterMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-jitter-ms)))
    (aws-sdk/generator/shape::to-query-params "downlinkJitterMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-jitter-ms)))
    (aws-sdk/generator/shape::to-query-params "uplinkLossPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-loss-percent)))
    (aws-sdk/generator/shape::to-query-params "downlinkLossPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-loss-percent))))))
(common-lisp:deftype network-profile-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype network-profiles ()
   '(trivial-types:proper-list network-profile))
 (common-lisp:defun |make-network-profiles|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-profile))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (not-eligible-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-eligible-exception 'make-not-eligible-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          not-eligible-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (offering (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or offering-identifier common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or offering-type common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or device-platform common-lisp:null))
   (recurring-charges common-lisp:nil :type
    (common-lisp:or recurring-charges common-lisp:null)))
 (common-lisp:export (common-lisp:list 'offering 'make-offering))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape offering))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "recurringCharges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recurring-charges))))))
(common-lisp:deftype offering-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (offering-promotion (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or offering-promotion-identifier common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'offering-promotion 'make-offering-promotion))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape offering-promotion))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:deftype offering-promotion-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype offering-promotions ()
   '(trivial-types:proper-list offering-promotion))
 (common-lisp:defun |make-offering-promotions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list offering-promotion))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (offering-status (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or offering-transaction-type common-lisp:null))
   (offering common-lisp:nil :type (common-lisp:or offering common-lisp:null))
   (quantity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (effective-on common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'offering-status 'make-offering-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape offering-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "offering"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering)))
    (aws-sdk/generator/shape::to-query-params "quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "effectiveOn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'effective-on))))))
(common-lisp:defstruct
    (offering-status-map
     (:constructor |make-offering-status-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (offering-transaction (:copier common-lisp:nil))
   (offering-status common-lisp:nil :type
    (common-lisp:or offering-status common-lisp:null))
   (transaction-id common-lisp:nil :type
    (common-lisp:or transaction-identifier common-lisp:null))
   (offering-promotion-id common-lisp:nil :type
    (common-lisp:or offering-promotion-identifier common-lisp:null))
   (created-on common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (cost common-lisp:nil :type
    (common-lisp:or monetary-amount common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'offering-transaction 'make-offering-transaction))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape offering-transaction))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offeringStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-status)))
    (aws-sdk/generator/shape::to-query-params "transactionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'transaction-id)))
    (aws-sdk/generator/shape::to-query-params "offeringPromotionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-promotion-id)))
    (aws-sdk/generator/shape::to-query-params "createdOn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-on)))
    (aws-sdk/generator/shape::to-query-params "cost"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cost))))))
(common-lisp:deftype offering-transaction-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype offering-transactions ()
   '(trivial-types:proper-list offering-transaction))
 (common-lisp:defun |make-offering-transactions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list offering-transaction))
   aws-sdk/generator/shape::members))
(common-lisp:deftype offering-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype offerings () '(trivial-types:proper-list offering))
 (common-lisp:defun |make-offerings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list offering))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:deftype percent-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (problem (:copier common-lisp:nil))
   (run common-lisp:nil :type (common-lisp:or problem-detail common-lisp:null))
   (job common-lisp:nil :type (common-lisp:or problem-detail common-lisp:null))
   (suite common-lisp:nil :type
    (common-lisp:or problem-detail common-lisp:null))
   (test common-lisp:nil :type
    (common-lisp:or problem-detail common-lisp:null))
   (device common-lisp:nil :type (common-lisp:or device common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or execution-result common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'problem 'make-problem))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape problem))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "run"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run)))
    (aws-sdk/generator/shape::to-query-params "job"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job)))
    (aws-sdk/generator/shape::to-query-params "suite"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suite)))
    (aws-sdk/generator/shape::to-query-params "test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test)))
    (aws-sdk/generator/shape::to-query-params "device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (problem-detail (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'problem-detail 'make-problem-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape problem-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype problems () '(trivial-types:proper-list problem))
 (common-lisp:defun |make-problems|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list problem))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (project (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (default-job-timeout-minutes common-lisp:nil :type
    (common-lisp:or job-timeout-minutes common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'project 'make-project))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape project))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "defaultJobTimeoutMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-job-timeout-minutes)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created))))))
(common-lisp:progn
 (common-lisp:deftype projects () '(trivial-types:proper-list project))
 (common-lisp:defun |make-projects|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list project))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (purchase-offering-request (:copier common-lisp:nil))
   (offering-id common-lisp:nil :type
    (common-lisp:or offering-identifier common-lisp:null))
   (quantity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (offering-promotion-id common-lisp:nil :type
    (common-lisp:or offering-promotion-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-offering-request
                    'make-purchase-offering-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          purchase-offering-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offeringId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-id)))
    (aws-sdk/generator/shape::to-query-params "quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity)))
    (aws-sdk/generator/shape::to-query-params "offeringPromotionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-promotion-id))))))
(common-lisp:progn
 (common-lisp:defstruct (purchase-offering-result (:copier common-lisp:nil))
   (offering-transaction common-lisp:nil :type
    (common-lisp:or offering-transaction common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-offering-result 'make-purchase-offering-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          purchase-offering-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offeringTransaction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-transaction))))))
(common-lisp:defstruct
    (purchased-devices-map
     (:constructor |make-purchased-devices-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (radios (:copier common-lisp:nil))
   (wifi common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (bluetooth common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (nfc common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (gps common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'radios 'make-radios))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape radios))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "wifi"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'wifi)))
    (aws-sdk/generator/shape::to-query-params "bluetooth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bluetooth)))
    (aws-sdk/generator/shape::to-query-params "nfc"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'nfc)))
    (aws-sdk/generator/shape::to-query-params "gps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gps))))))
(common-lisp:progn
 (common-lisp:defstruct (recurring-charge (:copier common-lisp:nil))
   (cost common-lisp:nil :type
    (common-lisp:or monetary-amount common-lisp:null))
   (frequency common-lisp:nil :type
    (common-lisp:or recurring-charge-frequency common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recurring-charge 'make-recurring-charge))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape recurring-charge))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cost"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cost)))
    (aws-sdk/generator/shape::to-query-params "frequency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frequency))))))
(common-lisp:deftype recurring-charge-frequency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recurring-charges ()
   '(trivial-types:proper-list recurring-charge))
 (common-lisp:defun |make-recurring-charges|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recurring-charge))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (remote-access-session (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or execution-status common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or execution-result common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (started common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (stopped common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (device common-lisp:nil :type (common-lisp:or device common-lisp:null))
   (billing-method common-lisp:nil :type
    (common-lisp:or billing-method common-lisp:null))
   (device-minutes common-lisp:nil :type
    (common-lisp:or device-minutes common-lisp:null))
   (endpoint common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remote-access-session 'make-remote-access-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remote-access-session))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "started"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started)))
    (aws-sdk/generator/shape::to-query-params "stopped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped)))
    (aws-sdk/generator/shape::to-query-params "device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device)))
    (aws-sdk/generator/shape::to-query-params "billingMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'billing-method)))
    (aws-sdk/generator/shape::to-query-params "deviceMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-minutes)))
    (aws-sdk/generator/shape::to-query-params "endpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint))))))
(common-lisp:progn
 (common-lisp:deftype remote-access-sessions ()
   '(trivial-types:proper-list remote-access-session))
 (common-lisp:defun |make-remote-access-sessions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list remote-access-session))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (renew-offering-request (:copier common-lisp:nil))
   (offering-id common-lisp:nil :type
    (common-lisp:or offering-identifier common-lisp:null))
   (quantity common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'renew-offering-request 'make-renew-offering-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          renew-offering-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offeringId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-id)))
    (aws-sdk/generator/shape::to-query-params "quantity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quantity))))))
(common-lisp:progn
 (common-lisp:defstruct (renew-offering-result (:copier common-lisp:nil))
   (offering-transaction common-lisp:nil :type
    (common-lisp:or offering-transaction common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'renew-offering-result 'make-renew-offering-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          renew-offering-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "offeringTransaction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offering-transaction))))))
(common-lisp:progn
 (common-lisp:defstruct (resolution (:copier common-lisp:nil))
   (width common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (height common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resolution 'make-resolution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resolution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "width"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'width)))
    (aws-sdk/generator/shape::to-query-params "height"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'height))))))
(common-lisp:progn
 (common-lisp:defstruct (rule (:copier common-lisp:nil))
   (attribute common-lisp:nil :type
    (common-lisp:or device-attribute common-lisp:null))
   (operator common-lisp:nil :type
    (common-lisp:or rule-operator common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attribute"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute)))
    (aws-sdk/generator/shape::to-query-params "operator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operator)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype rule-operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rules () '(trivial-types:proper-list rule))
 (common-lisp:defun |make-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (run (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or test-type common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or device-platform common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or execution-status common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or execution-result common-lisp:null))
   (started common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (stopped common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (counters common-lisp:nil :type (common-lisp:or counters common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (total-jobs common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (completed-jobs common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (billing-method common-lisp:nil :type
    (common-lisp:or billing-method common-lisp:null))
   (device-minutes common-lisp:nil :type
    (common-lisp:or device-minutes common-lisp:null))
   (network-profile common-lisp:nil :type
    (common-lisp:or network-profile common-lisp:null)))
 (common-lisp:export (common-lisp:list 'run 'make-run))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape run))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "started"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started)))
    (aws-sdk/generator/shape::to-query-params "stopped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped)))
    (aws-sdk/generator/shape::to-query-params "counters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'counters)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "totalJobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-jobs)))
    (aws-sdk/generator/shape::to-query-params "completedJobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed-jobs)))
    (aws-sdk/generator/shape::to-query-params "billingMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'billing-method)))
    (aws-sdk/generator/shape::to-query-params "deviceMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-minutes)))
    (aws-sdk/generator/shape::to-query-params "networkProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'network-profile))))))
(common-lisp:progn
 (common-lisp:deftype runs () '(trivial-types:proper-list run))
 (common-lisp:defun |make-runs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list run))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (sample (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or sample-type common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or url common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sample 'make-sample))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape sample))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:deftype sample-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype samples () '(trivial-types:proper-list sample))
 (common-lisp:defun |make-samples|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sample))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (schedule-run-configuration (:copier common-lisp:nil))
   (extra-data-package-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (network-profile-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (location common-lisp:nil :type (common-lisp:or location common-lisp:null))
   (radios common-lisp:nil :type (common-lisp:or radios common-lisp:null))
   (auxiliary-apps common-lisp:nil :type
    (common-lisp:or amazon-resource-names common-lisp:null))
   (billing-method common-lisp:nil :type
    (common-lisp:or billing-method common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-run-configuration
                    'make-schedule-run-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schedule-run-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "extraDataPackageArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'extra-data-package-arn)))
    (aws-sdk/generator/shape::to-query-params "networkProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'network-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "radios"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'radios)))
    (aws-sdk/generator/shape::to-query-params "auxiliaryApps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auxiliary-apps)))
    (aws-sdk/generator/shape::to-query-params "billingMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'billing-method))))))
(common-lisp:progn
 (common-lisp:defstruct (schedule-run-request (:copier common-lisp:nil))
   (project-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projectarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (app-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (device-pool-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":devicepoolarn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (test
    (common-lisp:error #A((17) common-lisp:base-char . ":test is required"))
    :type (common-lisp:or schedule-run-test common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or schedule-run-configuration common-lisp:null))
   (execution-configuration common-lisp:nil :type
    (common-lisp:or execution-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-run-request 'make-schedule-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape schedule-run-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-arn)))
    (aws-sdk/generator/shape::to-query-params "appArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-arn)))
    (aws-sdk/generator/shape::to-query-params "devicePoolArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-pool-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test)))
    (aws-sdk/generator/shape::to-query-params "configuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration)))
    (aws-sdk/generator/shape::to-query-params "executionConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (schedule-run-result (:copier common-lisp:nil))
   (run common-lisp:nil :type (common-lisp:or run common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-run-result 'make-schedule-run-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape schedule-run-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "run"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run))))))
(common-lisp:progn
 (common-lisp:defstruct (schedule-run-test (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or test-type common-lisp:null))
   (test-package-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (filter common-lisp:nil :type (common-lisp:or filter common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or test-parameters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-run-test 'make-schedule-run-test))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape schedule-run-test))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "testPackageArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test-package-arn)))
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (service-account-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-account-exception
                    'make-service-account-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          service-account-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-remote-access-session-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-remote-access-session-request
                    'make-stop-remote-access-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-remote-access-session-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-remote-access-session-result (:copier common-lisp:nil))
   (remote-access-session common-lisp:nil :type
    (common-lisp:or remote-access-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-remote-access-session-result
                    'make-stop-remote-access-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-remote-access-session-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "remoteAccessSession"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-session))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-run-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-run-request 'make-stop-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-run-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-run-result (:copier common-lisp:nil))
   (run common-lisp:nil :type (common-lisp:or run common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stop-run-result 'make-stop-run-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-run-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "run"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (suite (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or test-type common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or execution-status common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or execution-result common-lisp:null))
   (started common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (stopped common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (counters common-lisp:nil :type (common-lisp:or counters common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (device-minutes common-lisp:nil :type
    (common-lisp:or device-minutes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'suite 'make-suite))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape suite))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "started"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started)))
    (aws-sdk/generator/shape::to-query-params "stopped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped)))
    (aws-sdk/generator/shape::to-query-params "counters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'counters)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "deviceMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-minutes))))))
(common-lisp:progn
 (common-lisp:deftype suites () '(trivial-types:proper-list suite))
 (common-lisp:defun |make-suites|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list suite))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (test (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or test-type common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or execution-status common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or execution-result common-lisp:null))
   (started common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (stopped common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (counters common-lisp:nil :type (common-lisp:or counters common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (device-minutes common-lisp:nil :type
    (common-lisp:or device-minutes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'test 'make-test))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape test))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "started"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started)))
    (aws-sdk/generator/shape::to-query-params "stopped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped)))
    (aws-sdk/generator/shape::to-query-params "counters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'counters)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "deviceMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-minutes))))))
(common-lisp:defstruct
    (test-parameters
     (:constructor |make-test-parameters|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype test-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tests () '(trivial-types:proper-list test))
 (common-lisp:defun |make-tests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list test))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transaction-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (trial-minutes (:copier common-lisp:nil))
   (total common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (remaining common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'trial-minutes 'make-trial-minutes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape trial-minutes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "total"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total)))
    (aws-sdk/generator/shape::to-query-params "remaining"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remaining))))))
(common-lisp:deftype url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (unique-problem (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (problems common-lisp:nil :type (common-lisp:or problems common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unique-problem 'make-unique-problem))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape unique-problem))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "problems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'problems))))))
(common-lisp:progn
 (common-lisp:deftype unique-problems ()
   '(trivial-types:proper-list unique-problem))
 (common-lisp:defun |make-unique-problems|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list unique-problem))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (unique-problems-by-execution-result-map
     (:constructor |make-unique-problems-by-execution-result-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (update-device-pool-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (rules common-lisp:nil :type (common-lisp:or rules common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-device-pool-request
                    'make-update-device-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-device-pool-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (update-device-pool-result (:copier common-lisp:nil))
   (device-pool common-lisp:nil :type
    (common-lisp:or device-pool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-device-pool-result
                    'make-update-device-pool-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-device-pool-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "devicePool"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-pool))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-network-profile-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or network-profile-type common-lisp:null))
   (uplink-bandwidth-bits common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-bandwidth-bits common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-delay-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-delay-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-jitter-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (downlink-jitter-ms common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (uplink-loss-percent common-lisp:nil :type
    (common-lisp:or percent-integer common-lisp:null))
   (downlink-loss-percent common-lisp:nil :type
    (common-lisp:or percent-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-network-profile-request
                    'make-update-network-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-network-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "uplinkBandwidthBits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-bandwidth-bits)))
    (aws-sdk/generator/shape::to-query-params "downlinkBandwidthBits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-bandwidth-bits)))
    (aws-sdk/generator/shape::to-query-params "uplinkDelayMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-delay-ms)))
    (aws-sdk/generator/shape::to-query-params "downlinkDelayMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-delay-ms)))
    (aws-sdk/generator/shape::to-query-params "uplinkJitterMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-jitter-ms)))
    (aws-sdk/generator/shape::to-query-params "downlinkJitterMs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-jitter-ms)))
    (aws-sdk/generator/shape::to-query-params "uplinkLossPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uplink-loss-percent)))
    (aws-sdk/generator/shape::to-query-params "downlinkLossPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'downlink-loss-percent))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-network-profile-result (:copier common-lisp:nil))
   (network-profile common-lisp:nil :type
    (common-lisp:or network-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-network-profile-result
                    'make-update-network-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-network-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "networkProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'network-profile))))))
(common-lisp:progn
 (common-lisp:defstruct (update-project-request (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (default-job-timeout-minutes common-lisp:nil :type
    (common-lisp:or job-timeout-minutes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-project-request 'make-update-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "defaultJobTimeoutMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-job-timeout-minutes))))))
(common-lisp:progn
 (common-lisp:defstruct (update-project-result (:copier common-lisp:nil))
   (project common-lisp:nil :type (common-lisp:or project common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-project-result 'make-update-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-project-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "project"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project))))))
(common-lisp:progn
 (common-lisp:defstruct (upload (:copier common-lisp:nil))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or upload-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or upload-status common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or url common-lisp:null))
   (metadata common-lisp:nil :type (common-lisp:or metadata common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or content-type common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'upload 'make-upload))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape upload))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url)))
    (aws-sdk/generator/shape::to-query-params "metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype upload-status () 'common-lisp:string)
(common-lisp:deftype upload-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype uploads () '(trivial-types:proper-list upload))
 (common-lisp:defun |make-uploads|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list upload))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun create-device-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-arn name description rules)
   (common-lisp:declare
    (common-lisp:ignorable project-arn name description rules))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-device-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDevicePool")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDevicePoolResult" common-lisp:nil)))
 (common-lisp:export 'create-device-pool))
(common-lisp:progn
 (common-lisp:defun create-network-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-arn name description type
                     uplink-bandwidth-bits downlink-bandwidth-bits
                     uplink-delay-ms downlink-delay-ms uplink-jitter-ms
                     downlink-jitter-ms uplink-loss-percent
                     downlink-loss-percent)
   (common-lisp:declare
    (common-lisp:ignorable project-arn name description type
     uplink-bandwidth-bits downlink-bandwidth-bits uplink-delay-ms
     downlink-delay-ms uplink-jitter-ms downlink-jitter-ms uplink-loss-percent
     downlink-loss-percent))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-network-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateNetworkProfile")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateNetworkProfileResult" common-lisp:nil)))
 (common-lisp:export 'create-network-profile))
(common-lisp:progn
 (common-lisp:defun create-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name default-job-timeout-minutes)
   (common-lisp:declare
    (common-lisp:ignorable name default-job-timeout-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateProject")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateProjectResult" common-lisp:nil)))
 (common-lisp:export 'create-project))
(common-lisp:progn
 (common-lisp:defun create-remote-access-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-arn device-arn name
                     configuration)
   (common-lisp:declare
    (common-lisp:ignorable project-arn device-arn name configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-remote-access-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRemoteAccessSession")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateRemoteAccessSessionResult" common-lisp:nil)))
 (common-lisp:export 'create-remote-access-session))
(common-lisp:progn
 (common-lisp:defun create-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-arn name type content-type)
   (common-lisp:declare
    (common-lisp:ignorable project-arn name type content-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-upload-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUpload")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUploadResult" common-lisp:nil)))
 (common-lisp:export 'create-upload))
(common-lisp:progn
 (common-lisp:defun delete-device-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-device-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDevicePool")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDevicePoolResult" common-lisp:nil)))
 (common-lisp:export 'delete-device-pool))
(common-lisp:progn
 (common-lisp:defun delete-network-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-network-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteNetworkProfile")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteNetworkProfileResult" common-lisp:nil)))
 (common-lisp:export 'delete-network-profile))
(common-lisp:progn
 (common-lisp:defun delete-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteProject")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteProjectResult" common-lisp:nil)))
 (common-lisp:export 'delete-project))
(common-lisp:progn
 (common-lisp:defun delete-remote-access-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-remote-access-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRemoteAccessSession")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRemoteAccessSessionResult" common-lisp:nil)))
 (common-lisp:export 'delete-remote-access-session))
(common-lisp:progn
 (common-lisp:defun delete-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRun")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRunResult" common-lisp:nil)))
 (common-lisp:export 'delete-run))
(common-lisp:progn
 (common-lisp:defun delete-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-upload-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUpload")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteUploadResult" common-lisp:nil)))
 (common-lisp:export 'delete-upload))
(common-lisp:progn
 (common-lisp:defun get-account-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((10) common-lisp:base-char . "devicefarm")
                             :method :post :params
                             (common-lisp:cons "Action" "GetAccountSettings"))
    "GetAccountSettingsResult" common-lisp:nil))
 (common-lisp:export 'get-account-settings))
(common-lisp:progn
 (common-lisp:defun get-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDevice")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDeviceResult" common-lisp:nil)))
 (common-lisp:export 'get-device))
(common-lisp:progn
 (common-lisp:defun get-device-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDevicePool")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDevicePoolResult" common-lisp:nil)))
 (common-lisp:export 'get-device-pool))
(common-lisp:progn
 (common-lisp:defun get-device-pool-compatibility
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-pool-arn app-arn test-type test)
   (common-lisp:declare
    (common-lisp:ignorable device-pool-arn app-arn test-type test))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-device-pool-compatibility-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDevicePoolCompatibility")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDevicePoolCompatibilityResult" common-lisp:nil)))
 (common-lisp:export 'get-device-pool-compatibility))
(common-lisp:progn
 (common-lisp:defun get-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetJob")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetJobResult" common-lisp:nil)))
 (common-lisp:export 'get-job))
(common-lisp:progn
 (common-lisp:defun get-network-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-network-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetNetworkProfile")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetNetworkProfileResult" common-lisp:nil)))
 (common-lisp:export 'get-network-profile))
(common-lisp:progn
 (common-lisp:defun get-offering-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-offering-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetOfferingStatus")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetOfferingStatusResult" common-lisp:nil)))
 (common-lisp:export 'get-offering-status))
(common-lisp:progn
 (common-lisp:defun get-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetProject")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetProjectResult" common-lisp:nil)))
 (common-lisp:export 'get-project))
(common-lisp:progn
 (common-lisp:defun get-remote-access-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-remote-access-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRemoteAccessSession")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRemoteAccessSessionResult" common-lisp:nil)))
 (common-lisp:export 'get-remote-access-session))
(common-lisp:progn
 (common-lisp:defun get-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRun")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRunResult" common-lisp:nil)))
 (common-lisp:export 'get-run))
(common-lisp:progn
 (common-lisp:defun get-suite
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-suite-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetSuite")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSuiteResult" common-lisp:nil)))
 (common-lisp:export 'get-suite))
(common-lisp:progn
 (common-lisp:defun get-test
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-test-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetTest")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetTestResult" common-lisp:nil)))
 (common-lisp:export 'get-test))
(common-lisp:progn
 (common-lisp:defun get-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-upload-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetUpload")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetUploadResult" common-lisp:nil)))
 (common-lisp:export 'get-upload))
(common-lisp:progn
 (common-lisp:defun install-to-remote-access-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key remote-access-session-arn app-arn)
   (common-lisp:declare
    (common-lisp:ignorable remote-access-session-arn app-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-install-to-remote-access-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"InstallToRemoteAccessSession")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InstallToRemoteAccessSessionResult" common-lisp:nil)))
 (common-lisp:export 'install-to-remote-access-session))
(common-lisp:progn
 (common-lisp:defun list-artifacts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn type next-token)
   (common-lisp:declare (common-lisp:ignorable arn type next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-artifacts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListArtifacts")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListArtifactsResult" common-lisp:nil)))
 (common-lisp:export 'list-artifacts))
(common-lisp:progn
 (common-lisp:defun list-device-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn type next-token)
   (common-lisp:declare (common-lisp:ignorable arn type next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-device-pools-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDevicePools")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDevicePoolsResult" common-lisp:nil)))
 (common-lisp:export 'list-device-pools))
(common-lisp:progn
 (common-lisp:defun list-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDevices")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDevicesResult" common-lisp:nil)))
 (common-lisp:export 'list-devices))
(common-lisp:progn
 (common-lisp:defun list-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListJobs")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListJobsResult" common-lisp:nil)))
 (common-lisp:export 'list-jobs))
(common-lisp:progn
 (common-lisp:defun list-network-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn type next-token)
   (common-lisp:declare (common-lisp:ignorable arn type next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-network-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListNetworkProfiles")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListNetworkProfilesResult" common-lisp:nil)))
 (common-lisp:export 'list-network-profiles))
(common-lisp:progn
 (common-lisp:defun list-offering-promotions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-offering-promotions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListOfferingPromotions")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListOfferingPromotionsResult" common-lisp:nil)))
 (common-lisp:export 'list-offering-promotions))
(common-lisp:progn
 (common-lisp:defun list-offering-transactions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-offering-transactions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListOfferingTransactions")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListOfferingTransactionsResult" common-lisp:nil)))
 (common-lisp:export 'list-offering-transactions))
(common-lisp:progn
 (common-lisp:defun list-offerings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-offerings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListOfferings")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListOfferingsResult" common-lisp:nil)))
 (common-lisp:export 'list-offerings))
(common-lisp:progn
 (common-lisp:defun list-projects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-projects-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListProjects")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListProjectsResult" common-lisp:nil)))
 (common-lisp:export 'list-projects))
(common-lisp:progn
 (common-lisp:defun list-remote-access-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-remote-access-sessions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRemoteAccessSessions")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRemoteAccessSessionsResult" common-lisp:nil)))
 (common-lisp:export 'list-remote-access-sessions))
(common-lisp:progn
 (common-lisp:defun list-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRuns")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRunsResult" common-lisp:nil)))
 (common-lisp:export 'list-runs))
(common-lisp:progn
 (common-lisp:defun list-samples
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-samples-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListSamples")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListSamplesResult" common-lisp:nil)))
 (common-lisp:export 'list-samples))
(common-lisp:progn
 (common-lisp:defun list-suites
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-suites-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListSuites")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListSuitesResult" common-lisp:nil)))
 (common-lisp:export 'list-suites))
(common-lisp:progn
 (common-lisp:defun list-tests
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tests-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTests")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTestsResult" common-lisp:nil)))
 (common-lisp:export 'list-tests))
(common-lisp:progn
 (common-lisp:defun list-unique-problems
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-unique-problems-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUniqueProblems")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUniqueProblemsResult" common-lisp:nil)))
 (common-lisp:export 'list-unique-problems))
(common-lisp:progn
 (common-lisp:defun list-uploads
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn next-token)
   (common-lisp:declare (common-lisp:ignorable arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-uploads-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUploads")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUploadsResult" common-lisp:nil)))
 (common-lisp:export 'list-uploads))
(common-lisp:progn
 (common-lisp:defun purchase-offering
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key offering-id quantity
                     offering-promotion-id)
   (common-lisp:declare
    (common-lisp:ignorable offering-id quantity offering-promotion-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-purchase-offering-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PurchaseOffering")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PurchaseOfferingResult" common-lisp:nil)))
 (common-lisp:export 'purchase-offering))
(common-lisp:progn
 (common-lisp:defun renew-offering
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key offering-id quantity)
   (common-lisp:declare (common-lisp:ignorable offering-id quantity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-renew-offering-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RenewOffering")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RenewOfferingResult" common-lisp:nil)))
 (common-lisp:export 'renew-offering))
(common-lisp:progn
 (common-lisp:defun schedule-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-arn app-arn device-pool-arn name
                     test configuration execution-configuration)
   (common-lisp:declare
    (common-lisp:ignorable project-arn app-arn device-pool-arn name test
     configuration execution-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-schedule-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ScheduleRun")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ScheduleRunResult" common-lisp:nil)))
 (common-lisp:export 'schedule-run))
(common-lisp:progn
 (common-lisp:defun stop-remote-access-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-remote-access-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopRemoteAccessSession")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopRemoteAccessSessionResult" common-lisp:nil)))
 (common-lisp:export 'stop-remote-access-session))
(common-lisp:progn
 (common-lisp:defun stop-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopRun")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopRunResult" common-lisp:nil)))
 (common-lisp:export 'stop-run))
(common-lisp:progn
 (common-lisp:defun update-device-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description rules)
   (common-lisp:declare (common-lisp:ignorable arn name description rules))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-device-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDevicePool")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDevicePoolResult" common-lisp:nil)))
 (common-lisp:export 'update-device-pool))
(common-lisp:progn
 (common-lisp:defun update-network-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description type
                     uplink-bandwidth-bits downlink-bandwidth-bits
                     uplink-delay-ms downlink-delay-ms uplink-jitter-ms
                     downlink-jitter-ms uplink-loss-percent
                     downlink-loss-percent)
   (common-lisp:declare
    (common-lisp:ignorable arn name description type uplink-bandwidth-bits
     downlink-bandwidth-bits uplink-delay-ms downlink-delay-ms uplink-jitter-ms
     downlink-jitter-ms uplink-loss-percent downlink-loss-percent))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-network-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateNetworkProfile")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateNetworkProfileResult" common-lisp:nil)))
 (common-lisp:export 'update-network-profile))
(common-lisp:progn
 (common-lisp:defun update-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name default-job-timeout-minutes)
   (common-lisp:declare
    (common-lisp:ignorable arn name default-job-timeout-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "devicefarm")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateProject")
                                  ("Version" ,@"2015-06-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateProjectResult" common-lisp:nil)))
 (common-lisp:export 'update-project))