;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/email
  (:use)
  (:nicknames #:aws/email)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/email)

(common-lisp:progn
 (common-lisp:defstruct (add-header-action (:copier common-lisp:nil))
   (header-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":header-name is required"))
    :type (common-lisp:or header-name common-lisp:null))
   (header-value
    (common-lisp:error
     #A((25) common-lisp:base-char . ":header-value is required"))
    :type (common-lisp:or header-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-header-action 'make-add-header-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-header-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HeaderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'header-name)))
    (aws-sdk/generator/shape::to-query-params "HeaderValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'header-value))))))
(common-lisp:deftype address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype address-list () '(trivial-types:proper-list address))
 (common-lisp:defun |make-address-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (already-exists-exception (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or rule-or-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'already-exists-exception 'make-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:deftype arrival-date () 'common-lisp:string)
(common-lisp:deftype behavior-on-mxfailure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (body (:copier common-lisp:nil))
   (text common-lisp:nil :type (common-lisp:or content common-lisp:null))
   (html common-lisp:nil :type (common-lisp:or content common-lisp:null)))
 (common-lisp:export (common-lisp:list 'body 'make-body))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape body))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Text"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text)))
    (aws-sdk/generator/shape::to-query-params "Html"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'html))))))
(common-lisp:progn
 (common-lisp:defstruct (bounce-action (:copier common-lisp:nil))
   (topic-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (smtp-reply-code
    (common-lisp:error
     #A((28) common-lisp:base-char . ":smtp-reply-code is required"))
    :type (common-lisp:or bounce-smtp-reply-code common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or bounce-status-code common-lisp:null))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or bounce-message common-lisp:null))
   (sender
    (common-lisp:error #A((19) common-lisp:base-char . ":sender is required"))
    :type (common-lisp:or address common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bounce-action 'make-bounce-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape bounce-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "SmtpReplyCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smtp-reply-code)))
    (aws-sdk/generator/shape::to-query-params "StatusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Sender"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sender))))))
(common-lisp:deftype bounce-message () 'common-lisp:string)
(common-lisp:deftype bounce-smtp-reply-code () 'common-lisp:string)
(common-lisp:deftype bounce-status-code () 'common-lisp:string)
(common-lisp:deftype bounce-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (bounced-recipient-info (:copier common-lisp:nil))
   (recipient
    (common-lisp:error
     #A((22) common-lisp:base-char . ":recipient is required"))
    :type (common-lisp:or address common-lisp:null))
   (recipient-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (bounce-type common-lisp:nil :type
    (common-lisp:or bounce-type common-lisp:null))
   (recipient-dsn-fields common-lisp:nil :type
    (common-lisp:or recipient-dsn-fields common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bounced-recipient-info 'make-bounced-recipient-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bounced-recipient-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Recipient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipient)))
    (aws-sdk/generator/shape::to-query-params "RecipientArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipient-arn)))
    (aws-sdk/generator/shape::to-query-params "BounceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bounce-type)))
    (aws-sdk/generator/shape::to-query-params "RecipientDsnFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipient-dsn-fields))))))
(common-lisp:progn
 (common-lisp:deftype bounced-recipient-info-list ()
   '(trivial-types:proper-list bounced-recipient-info))
 (common-lisp:defun |make-bounced-recipient-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bounced-recipient-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cannot-delete-exception (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or rule-or-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cannot-delete-exception 'make-cannot-delete-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cannot-delete-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype charset () 'common-lisp:string)
(common-lisp:deftype cidr () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (clone-receipt-rule-set-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null))
   (original-rule-set-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":original-rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clone-receipt-rule-set-request
                    'make-clone-receipt-rule-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          clone-receipt-rule-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "OriginalRuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'original-rule-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (clone-receipt-rule-set-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'clone-receipt-rule-set-response
                    'make-clone-receipt-rule-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          clone-receipt-rule-set-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (cloud-watch-destination (:copier common-lisp:nil))
   (dimension-configurations
    (common-lisp:error
     #A((37) common-lisp:base-char . ":dimension-configurations is required"))
    :type
    (common-lisp:or cloud-watch-dimension-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-destination 'make-cloud-watch-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DimensionConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimension-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-dimension-configuration (:copier common-lisp:nil))
   (dimension-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":dimension-name is required"))
    :type (common-lisp:or dimension-name common-lisp:null))
   (dimension-value-source
    (common-lisp:error
     #A((35) common-lisp:base-char . ":dimension-value-source is required"))
    :type (common-lisp:or dimension-value-source common-lisp:null))
   (default-dimension-value
    (common-lisp:error
     #A((36) common-lisp:base-char . ":default-dimension-value is required"))
    :type (common-lisp:or default-dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-dimension-configuration
                    'make-cloud-watch-dimension-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-dimension-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DimensionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimension-name)))
    (aws-sdk/generator/shape::to-query-params "DimensionValueSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimension-value-source)))
    (aws-sdk/generator/shape::to-query-params "DefaultDimensionValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-dimension-value))))))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-dimension-configurations ()
   '(trivial-types:proper-list cloud-watch-dimension-configuration))
 (common-lisp:defun |make-cloud-watch-dimension-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-dimension-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (configuration-set (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-set 'make-configuration-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape configuration-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-set-already-exists-exception (:copier common-lisp:nil))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-set-already-exists-exception
                    'make-configuration-set-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-set-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name))))))
(common-lisp:deftype configuration-set-attribute () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-set-attribute-list ()
   '(trivial-types:proper-list configuration-set-attribute))
 (common-lisp:defun |make-configuration-set-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configuration-set-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-set-does-not-exist-exception (:copier common-lisp:nil))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-set-does-not-exist-exception
                    'make-configuration-set-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configuration-set-does-not-exist-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name))))))
(common-lisp:deftype configuration-set-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-sets ()
   '(trivial-types:proper-list configuration-set))
 (common-lisp:defun |make-configuration-sets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-set))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (content (:copier common-lisp:nil))
   (data
    (common-lisp:error #A((17) common-lisp:base-char . ":data is required"))
    :type (common-lisp:or message-data common-lisp:null))
   (charset common-lisp:nil :type (common-lisp:or charset common-lisp:null)))
 (common-lisp:export (common-lisp:list 'content 'make-content))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape content))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data)))
    (aws-sdk/generator/shape::to-query-params "Charset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'charset))))))
(common-lisp:deftype counter () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-request
      (:copier common-lisp:nil))
   (configuration-set-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":configuration-set-name is required"))
    :type (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination
    (common-lisp:error
     #A((30) common-lisp:base-char . ":event-destination is required"))
    :type (common-lisp:or event-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-request
                    'make-create-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-configuration-set-event-destination-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-response
                    'make-create-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-configuration-set-event-destination-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-request (:copier common-lisp:nil))
   (configuration-set
    (common-lisp:error
     #A((30) common-lisp:base-char . ":configuration-set is required"))
    :type (common-lisp:or configuration-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-request
                    'make-create-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-configuration-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-response
                    'make-create-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-configuration-set-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-receipt-filter-request (:copier common-lisp:nil))
   (filter
    (common-lisp:error #A((19) common-lisp:base-char . ":filter is required"))
    :type (common-lisp:or receipt-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-receipt-filter-request
                    'make-create-receipt-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-receipt-filter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-receipt-filter-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-receipt-filter-response
                    'make-create-receipt-filter-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-receipt-filter-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-receipt-rule-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null))
   (after common-lisp:nil :type
    (common-lisp:or receipt-rule-name common-lisp:null))
   (rule
    (common-lisp:error #A((17) common-lisp:base-char . ":rule is required"))
    :type (common-lisp:or receipt-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-receipt-rule-request
                    'make-create-receipt-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-receipt-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "After"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'after)))
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-receipt-rule-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-receipt-rule-response
                    'make-create-receipt-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-receipt-rule-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-receipt-rule-set-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-receipt-rule-set-request
                    'make-create-receipt-rule-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-receipt-rule-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-receipt-rule-set-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-receipt-rule-set-response
                    'make-create-receipt-rule-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-receipt-rule-set-response))
   (common-lisp:append)))
(common-lisp:deftype custom-mail-from-status () 'common-lisp:string)
(common-lisp:deftype default-dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-request
      (:copier common-lisp:nil))
   (configuration-set-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":configuration-set-name is required"))
    :type (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":event-destination-name is required"))
    :type (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-request
                    'make-delete-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-configuration-set-event-destination-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-response
                    'make-delete-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-configuration-set-event-destination-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-request (:copier common-lisp:nil))
   (configuration-set-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":configuration-set-name is required"))
    :type (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-request
                    'make-delete-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-configuration-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-response
                    'make-delete-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-configuration-set-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-identity-policy-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-identity-policy-request
                    'make-delete-identity-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identity-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-identity-policy-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-identity-policy-response
                    'make-delete-identity-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identity-policy-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-identity-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-identity-request 'make-delete-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-identity-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-identity-response 'make-delete-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-identity-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-receipt-filter-request (:copier common-lisp:nil))
   (filter-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":filter-name is required"))
    :type (common-lisp:or receipt-filter-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-receipt-filter-request
                    'make-delete-receipt-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-receipt-filter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FilterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-receipt-filter-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-receipt-filter-response
                    'make-delete-receipt-filter-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-receipt-filter-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-receipt-rule-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null))
   (rule-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":rule-name is required"))
    :type (common-lisp:or receipt-rule-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-receipt-rule-request
                    'make-delete-receipt-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-receipt-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "RuleName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-receipt-rule-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-receipt-rule-response
                    'make-delete-receipt-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-receipt-rule-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-receipt-rule-set-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-receipt-rule-set-request
                    'make-delete-receipt-rule-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-receipt-rule-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-receipt-rule-set-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-receipt-rule-set-response
                    'make-delete-receipt-rule-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-receipt-rule-set-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-verified-email-address-request (:copier common-lisp:nil))
   (email-address
    (common-lisp:error
     #A((26) common-lisp:base-char . ":email-address is required"))
    :type (common-lisp:or address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-verified-email-address-request
                    'make-delete-verified-email-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-verified-email-address-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-active-receipt-rule-set-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-active-receipt-rule-set-request
                    'make-describe-active-receipt-rule-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-active-receipt-rule-set-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-active-receipt-rule-set-response (:copier common-lisp:nil))
   (metadata common-lisp:nil :type
    (common-lisp:or receipt-rule-set-metadata common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or receipt-rules-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-active-receipt-rule-set-response
                    'make-describe-active-receipt-rule-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-active-receipt-rule-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-set-request (:copier common-lisp:nil))
   (configuration-set-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":configuration-set-name is required"))
    :type (common-lisp:or configuration-set-name common-lisp:null))
   (configuration-set-attribute-names common-lisp:nil :type
    (common-lisp:or configuration-set-attribute-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-set-request
                    'make-describe-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-configuration-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-attribute-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-set-response (:copier common-lisp:nil))
   (configuration-set common-lisp:nil :type
    (common-lisp:or configuration-set common-lisp:null))
   (event-destinations common-lisp:nil :type
    (common-lisp:or event-destinations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-set-response
                    'make-describe-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-configuration-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set)))
    (aws-sdk/generator/shape::to-query-params "EventDestinations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destinations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-receipt-rule-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null))
   (rule-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":rule-name is required"))
    :type (common-lisp:or receipt-rule-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-receipt-rule-request
                    'make-describe-receipt-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-receipt-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "RuleName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-receipt-rule-response (:copier common-lisp:nil))
   (rule common-lisp:nil :type (common-lisp:or receipt-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-receipt-rule-response
                    'make-describe-receipt-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-receipt-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-receipt-rule-set-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-receipt-rule-set-request
                    'make-describe-receipt-rule-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-receipt-rule-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-receipt-rule-set-response (:copier common-lisp:nil))
   (metadata common-lisp:nil :type
    (common-lisp:or receipt-rule-set-metadata common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or receipt-rules-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-receipt-rule-set-response
                    'make-describe-receipt-rule-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-receipt-rule-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (destination (:copier common-lisp:nil))
   (to-addresses common-lisp:nil :type
    (common-lisp:or address-list common-lisp:null))
   (cc-addresses common-lisp:nil :type
    (common-lisp:or address-list common-lisp:null))
   (bcc-addresses common-lisp:nil :type
    (common-lisp:or address-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ToAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'to-addresses)))
    (aws-sdk/generator/shape::to-query-params "CcAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cc-addresses)))
    (aws-sdk/generator/shape::to-query-params "BccAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bcc-addresses))))))
(common-lisp:deftype diagnostic-code () 'common-lisp:string)
(common-lisp:deftype dimension-name () 'common-lisp:string)
(common-lisp:deftype dimension-value-source () 'common-lisp:string)
(common-lisp:defstruct
    (dkim-attributes
     (:constructor |make-dkim-attributes|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype domain () 'common-lisp:string)
(common-lisp:deftype dsn-action () 'common-lisp:string)
(common-lisp:deftype dsn-status () 'common-lisp:string)
(common-lisp:deftype enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (event-destination (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or event-destination-name common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (matching-event-types
    (common-lisp:error
     #A((33) common-lisp:base-char . ":matching-event-types is required"))
    :type (common-lisp:or event-types common-lisp:null))
   (kinesis-firehose-destination common-lisp:nil :type
    (common-lisp:or kinesis-firehose-destination common-lisp:null))
   (cloud-watch-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-destination common-lisp:null))
   (snsdestination common-lisp:nil :type
    (common-lisp:or snsdestination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination 'make-event-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape event-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "MatchingEventTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'matching-event-types)))
    (aws-sdk/generator/shape::to-query-params "KinesisFirehoseDestination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-firehose-destination)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchDestination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-destination)))
    (aws-sdk/generator/shape::to-query-params "SNSDestination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snsdestination))))))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination-already-exists-exception (:copier common-lisp:nil))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name common-lisp:nil :type
    (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination-already-exists-exception
                    'make-event-destination-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          event-destination-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination-does-not-exist-exception (:copier common-lisp:nil))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name common-lisp:nil :type
    (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination-does-not-exist-exception
                    'make-event-destination-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          event-destination-does-not-exist-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination-name))))))
(common-lisp:deftype event-destination-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-destinations ()
   '(trivial-types:proper-list event-destination))
 (common-lisp:defun |make-event-destinations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-types () '(trivial-types:proper-list event-type))
 (common-lisp:defun |make-event-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype explanation () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (extension-field (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or extension-field-name common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or extension-field-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'extension-field 'make-extension-field))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape extension-field))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype extension-field-list ()
   '(trivial-types:proper-list extension-field))
 (common-lisp:defun |make-extension-field-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list extension-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype extension-field-name () 'common-lisp:string)
(common-lisp:deftype extension-field-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-dkim-attributes-request (:copier common-lisp:nil))
   (identities
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identities is required"))
    :type (common-lisp:or identity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-dkim-attributes-request
                    'make-get-identity-dkim-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-dkim-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identities))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-dkim-attributes-response (:copier common-lisp:nil))
   (dkim-attributes
    (common-lisp:error
     #A((28) common-lisp:base-char . ":dkim-attributes is required"))
    :type (common-lisp:or dkim-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-dkim-attributes-response
                    'make-get-identity-dkim-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-dkim-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DkimAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dkim-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-mail-from-domain-attributes-request
      (:copier common-lisp:nil))
   (identities
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identities is required"))
    :type (common-lisp:or identity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-mail-from-domain-attributes-request
                    'make-get-identity-mail-from-domain-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-mail-from-domain-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identities))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-mail-from-domain-attributes-response
      (:copier common-lisp:nil))
   (mail-from-domain-attributes
    (common-lisp:error
     #A((40) common-lisp:base-char
        . ":mail-from-domain-attributes is required"))
    :type (common-lisp:or mail-from-domain-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-mail-from-domain-attributes-response
                    'make-get-identity-mail-from-domain-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-mail-from-domain-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MailFromDomainAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mail-from-domain-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-notification-attributes-request (:copier common-lisp:nil))
   (identities
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identities is required"))
    :type (common-lisp:or identity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-notification-attributes-request
                    'make-get-identity-notification-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-notification-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identities))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-notification-attributes-response (:copier common-lisp:nil))
   (notification-attributes
    (common-lisp:error
     #A((36) common-lisp:base-char . ":notification-attributes is required"))
    :type (common-lisp:or notification-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-notification-attributes-response
                    'make-get-identity-notification-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-notification-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NotificationAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-policies-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (policy-names
    (common-lisp:error
     #A((25) common-lisp:base-char . ":policy-names is required"))
    :type (common-lisp:or policy-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-policies-request
                    'make-get-identity-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-policies-response (:copier common-lisp:nil))
   (policies
    (common-lisp:error
     #A((21) common-lisp:base-char . ":policies is required"))
    :type (common-lisp:or policy-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-policies-response
                    'make-get-identity-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-verification-attributes-request (:copier common-lisp:nil))
   (identities
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identities is required"))
    :type (common-lisp:or identity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-verification-attributes-request
                    'make-get-identity-verification-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-verification-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identities))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-verification-attributes-response (:copier common-lisp:nil))
   (verification-attributes
    (common-lisp:error
     #A((36) common-lisp:base-char . ":verification-attributes is required"))
    :type (common-lisp:or verification-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-verification-attributes-response
                    'make-get-identity-verification-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-verification-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VerificationAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verification-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (get-send-quota-response (:copier common-lisp:nil))
   (max24hour-send common-lisp:nil :type
    (common-lisp:or max24hour-send common-lisp:null))
   (max-send-rate common-lisp:nil :type
    (common-lisp:or max-send-rate common-lisp:null))
   (sent-last24hours common-lisp:nil :type
    (common-lisp:or sent-last24hours common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-send-quota-response 'make-get-send-quota-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-send-quota-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Max24HourSend"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max24hour-send)))
    (aws-sdk/generator/shape::to-query-params "MaxSendRate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-send-rate)))
    (aws-sdk/generator/shape::to-query-params "SentLast24Hours"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sent-last24hours))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-send-statistics-response (:copier common-lisp:nil))
   (send-data-points common-lisp:nil :type
    (common-lisp:or send-data-point-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-send-statistics-response
                    'make-get-send-statistics-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-send-statistics-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SendDataPoints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'send-data-points))))))
(common-lisp:deftype header-name () 'common-lisp:string)
(common-lisp:deftype header-value () 'common-lisp:string)
(common-lisp:deftype identity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (identity-dkim-attributes (:copier common-lisp:nil))
   (dkim-enabled
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dkim-enabled is required"))
    :type (common-lisp:or enabled common-lisp:null))
   (dkim-verification-status
    (common-lisp:error
     #A((37) common-lisp:base-char . ":dkim-verification-status is required"))
    :type (common-lisp:or verification-status common-lisp:null))
   (dkim-tokens common-lisp:nil :type
    (common-lisp:or verification-token-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-dkim-attributes 'make-identity-dkim-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          identity-dkim-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DkimEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dkim-enabled)))
    (aws-sdk/generator/shape::to-query-params "DkimVerificationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dkim-verification-status)))
    (aws-sdk/generator/shape::to-query-params "DkimTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dkim-tokens))))))
(common-lisp:progn
 (common-lisp:deftype identity-list () '(trivial-types:proper-list identity))
 (common-lisp:defun |make-identity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (identity-mail-from-domain-attributes (:copier common-lisp:nil))
   (mail-from-domain
    (common-lisp:error
     #A((29) common-lisp:base-char . ":mail-from-domain is required"))
    :type (common-lisp:or mail-from-domain-name common-lisp:null))
   (mail-from-domain-status
    (common-lisp:error
     #A((36) common-lisp:base-char . ":mail-from-domain-status is required"))
    :type (common-lisp:or custom-mail-from-status common-lisp:null))
   (behavior-on-mxfailure
    (common-lisp:error
     #A((34) common-lisp:base-char . ":behavior-on-mxfailure is required"))
    :type (common-lisp:or behavior-on-mxfailure common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-mail-from-domain-attributes
                    'make-identity-mail-from-domain-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          identity-mail-from-domain-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MailFromDomain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mail-from-domain)))
    (aws-sdk/generator/shape::to-query-params "MailFromDomainStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mail-from-domain-status)))
    (aws-sdk/generator/shape::to-query-params "BehaviorOnMXFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'behavior-on-mxfailure))))))
(common-lisp:progn
 (common-lisp:defstruct
     (identity-notification-attributes (:copier common-lisp:nil))
   (bounce-topic
    (common-lisp:error
     #A((25) common-lisp:base-char . ":bounce-topic is required"))
    :type (common-lisp:or notification-topic common-lisp:null))
   (complaint-topic
    (common-lisp:error
     #A((28) common-lisp:base-char . ":complaint-topic is required"))
    :type (common-lisp:or notification-topic common-lisp:null))
   (delivery-topic
    (common-lisp:error
     #A((27) common-lisp:base-char . ":delivery-topic is required"))
    :type (common-lisp:or notification-topic common-lisp:null))
   (forwarding-enabled
    (common-lisp:error
     #A((31) common-lisp:base-char . ":forwarding-enabled is required"))
    :type (common-lisp:or enabled common-lisp:null))
   (headers-in-bounce-notifications-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (headers-in-complaint-notifications-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (headers-in-delivery-notifications-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-notification-attributes
                    'make-identity-notification-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          identity-notification-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BounceTopic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bounce-topic)))
    (aws-sdk/generator/shape::to-query-params "ComplaintTopic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'complaint-topic)))
    (aws-sdk/generator/shape::to-query-params "DeliveryTopic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delivery-topic)))
    (aws-sdk/generator/shape::to-query-params "ForwardingEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-enabled)))
    (aws-sdk/generator/shape::to-query-params
     "HeadersInBounceNotificationsEnabled"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'headers-in-bounce-notifications-enabled)))
    (aws-sdk/generator/shape::to-query-params
     "HeadersInComplaintNotificationsEnabled"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'headers-in-complaint-notifications-enabled)))
    (aws-sdk/generator/shape::to-query-params
     "HeadersInDeliveryNotificationsEnabled"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'headers-in-delivery-notifications-enabled))))))
(common-lisp:deftype identity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (identity-verification-attributes (:copier common-lisp:nil))
   (verification-status
    (common-lisp:error
     #A((32) common-lisp:base-char . ":verification-status is required"))
    :type (common-lisp:or verification-status common-lisp:null))
   (verification-token common-lisp:nil :type
    (common-lisp:or verification-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-verification-attributes
                    'make-identity-verification-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          identity-verification-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VerificationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verification-status)))
    (aws-sdk/generator/shape::to-query-params "VerificationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verification-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-cloud-watch-destination-exception (:copier common-lisp:nil))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name common-lisp:nil :type
    (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-cloud-watch-destination-exception
                    'make-invalid-cloud-watch-destination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-cloud-watch-destination-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-configuration-set-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-configuration-set-exception
                    'make-invalid-configuration-set-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-configuration-set-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-firehose-destination-exception (:copier common-lisp:nil))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name common-lisp:nil :type
    (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-firehose-destination-exception
                    'make-invalid-firehose-destination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-firehose-destination-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-lambda-function-exception (:copier common-lisp:nil))
   (function-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-lambda-function-exception
                    'make-invalid-lambda-function-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-lambda-function-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FunctionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-policy-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-policy-exception 'make-invalid-policy-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-policy-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-s3configuration-exception (:copier common-lisp:nil))
   (bucket common-lisp:nil :type
    (common-lisp:or s3bucket-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-s3configuration-exception
                    'make-invalid-s3configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-s3configuration-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bucket"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-snsdestination-exception (:copier common-lisp:nil))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name common-lisp:nil :type
    (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-snsdestination-exception
                    'make-invalid-snsdestination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-snsdestination-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination-name))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-sns-topic-exception (:copier common-lisp:nil))
   (topic common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-sns-topic-exception
                    'make-invalid-sns-topic-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-sns-topic-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Topic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic))))))
(common-lisp:deftype invocation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-destination (:copier common-lisp:nil))
   (iamrole-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":iamrole-arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (delivery-stream-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":delivery-stream-arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-destination
                    'make-kinesis-firehose-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-firehose-destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IAMRoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iamrole-arn)))
    (aws-sdk/generator/shape::to-query-params "DeliveryStreamARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delivery-stream-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (lambda-action (:copier common-lisp:nil))
   (topic-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (function-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":function-arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (invocation-type common-lisp:nil :type
    (common-lisp:or invocation-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lambda-action 'make-lambda-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lambda-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "FunctionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'function-arn)))
    (aws-sdk/generator/shape::to-query-params "InvocationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invocation-type))))))
(common-lisp:deftype last-attempt-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-sets-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-request
                    'make-list-configuration-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-configuration-sets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-sets-response (:copier common-lisp:nil))
   (configuration-sets common-lisp:nil :type
    (common-lisp:or configuration-sets common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-response
                    'make-list-configuration-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-configuration-sets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-sets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-identities-request (:copier common-lisp:nil))
   (identity-type common-lisp:nil :type
    (common-lisp:or identity-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identities-request 'make-list-identities-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identities-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-type)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct (list-identities-response (:copier common-lisp:nil))
   (identities
    (common-lisp:error
     #A((23) common-lisp:base-char . ":identities is required"))
    :type (common-lisp:or identity-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identities-response 'make-list-identities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-policies-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-policies-request
                    'make-list-identity-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-policies-response (:copier common-lisp:nil))
   (policy-names
    (common-lisp:error
     #A((25) common-lisp:base-char . ":policy-names is required"))
    :type (common-lisp:or policy-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-policies-response
                    'make-list-identity-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-receipt-filters-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-receipt-filters-request
                    'make-list-receipt-filters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-receipt-filters-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-receipt-filters-response (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or receipt-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-receipt-filters-response
                    'make-list-receipt-filters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-receipt-filters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-receipt-rule-sets-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-receipt-rule-sets-request
                    'make-list-receipt-rule-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-receipt-rule-sets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-receipt-rule-sets-response (:copier common-lisp:nil))
   (rule-sets common-lisp:nil :type
    (common-lisp:or receipt-rule-sets-lists common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-receipt-rule-sets-response
                    'make-list-receipt-rule-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-receipt-rule-sets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-sets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-verified-email-addresses-response (:copier common-lisp:nil))
   (verified-email-addresses common-lisp:nil :type
    (common-lisp:or address-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-verified-email-addresses-response
                    'make-list-verified-email-addresses-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-verified-email-addresses-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VerifiedEmailAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verified-email-addresses))))))
(common-lisp:defstruct
    (mail-from-domain-attributes
     (:constructor |make-mail-from-domain-attributes|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype mail-from-domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mail-from-domain-not-verified-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'mail-from-domain-not-verified-exception
                    'make-mail-from-domain-not-verified-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          mail-from-domain-not-verified-exception))
   (common-lisp:append)))
(common-lisp:deftype max24hour-send () 'common-lisp:double-float)
(common-lisp:deftype max-items () 'common-lisp:integer)
(common-lisp:deftype max-send-rate () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (message (:copier common-lisp:nil))
   (subject
    (common-lisp:error #A((20) common-lisp:base-char . ":subject is required"))
    :type (common-lisp:or content common-lisp:null))
   (body
    (common-lisp:error #A((17) common-lisp:base-char . ":body is required"))
    :type (common-lisp:or body common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Subject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject)))
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:deftype message-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (message-dsn (:copier common-lisp:nil))
   (reporting-mta
    (common-lisp:error
     #A((26) common-lisp:base-char . ":reporting-mta is required"))
    :type (common-lisp:or reporting-mta common-lisp:null))
   (arrival-date common-lisp:nil :type
    (common-lisp:or arrival-date common-lisp:null))
   (extension-fields common-lisp:nil :type
    (common-lisp:or extension-field-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-dsn 'make-message-dsn))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message-dsn))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReportingMta"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reporting-mta)))
    (aws-sdk/generator/shape::to-query-params "ArrivalDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arrival-date)))
    (aws-sdk/generator/shape::to-query-params "ExtensionFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'extension-fields))))))
(common-lisp:deftype message-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (message-rejected (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'message-rejected 'make-message-rejected))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message-rejected))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (message-tag (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or message-tag-name common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or message-tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-tag 'make-message-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message-tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype message-tag-list ()
   '(trivial-types:proper-list message-tag))
 (common-lisp:defun |make-message-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message-tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message-tag-name () 'common-lisp:string)
(common-lisp:deftype message-tag-value () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:defstruct
    (notification-attributes
     (:constructor |make-notification-attributes|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype notification-topic () 'common-lisp:string)
(common-lisp:deftype notification-type () 'common-lisp:string)
(common-lisp:deftype policy () 'common-lisp:string)
(common-lisp:defstruct
    (policy-map
     (:constructor |make-policy-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype policy-name-list ()
   '(trivial-types:proper-list policy-name))
 (common-lisp:defun |make-policy-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (put-identity-policy-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null))
   (policy
    (common-lisp:error #A((19) common-lisp:base-char . ":policy is required"))
    :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-identity-policy-request
                    'make-put-identity-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-identity-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-identity-policy-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-identity-policy-response
                    'make-put-identity-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-identity-policy-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (raw-message (:copier common-lisp:nil))
   (data
    (common-lisp:error #A((17) common-lisp:base-char . ":data is required"))
    :type (common-lisp:or raw-message-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'raw-message 'make-raw-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape raw-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data))))))
(common-lisp:deftype raw-message-data ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct (receipt-action (:copier common-lisp:nil))
   (s3action common-lisp:nil :type (common-lisp:or s3action common-lisp:null))
   (bounce-action common-lisp:nil :type
    (common-lisp:or bounce-action common-lisp:null))
   (workmail-action common-lisp:nil :type
    (common-lisp:or workmail-action common-lisp:null))
   (lambda-action common-lisp:nil :type
    (common-lisp:or lambda-action common-lisp:null))
   (stop-action common-lisp:nil :type
    (common-lisp:or stop-action common-lisp:null))
   (add-header-action common-lisp:nil :type
    (common-lisp:or add-header-action common-lisp:null))
   (snsaction common-lisp:nil :type
    (common-lisp:or snsaction common-lisp:null)))
 (common-lisp:export (common-lisp:list 'receipt-action 'make-receipt-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape receipt-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S3Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3action)))
    (aws-sdk/generator/shape::to-query-params "BounceAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bounce-action)))
    (aws-sdk/generator/shape::to-query-params "WorkmailAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workmail-action)))
    (aws-sdk/generator/shape::to-query-params "LambdaAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lambda-action)))
    (aws-sdk/generator/shape::to-query-params "StopAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stop-action)))
    (aws-sdk/generator/shape::to-query-params "AddHeaderAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'add-header-action)))
    (aws-sdk/generator/shape::to-query-params "SNSAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snsaction))))))
(common-lisp:progn
 (common-lisp:deftype receipt-actions-list ()
   '(trivial-types:proper-list receipt-action))
 (common-lisp:defun |make-receipt-actions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list receipt-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (receipt-filter (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or receipt-filter-name common-lisp:null))
   (ip-filter
    (common-lisp:error
     #A((22) common-lisp:base-char . ":ip-filter is required"))
    :type (common-lisp:or receipt-ip-filter common-lisp:null)))
 (common-lisp:export (common-lisp:list 'receipt-filter 'make-receipt-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape receipt-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "IpFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-filter))))))
(common-lisp:progn
 (common-lisp:deftype receipt-filter-list ()
   '(trivial-types:proper-list receipt-filter))
 (common-lisp:defun |make-receipt-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list receipt-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype receipt-filter-name () 'common-lisp:string)
(common-lisp:deftype receipt-filter-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (receipt-ip-filter (:copier common-lisp:nil))
   (policy
    (common-lisp:error #A((19) common-lisp:base-char . ":policy is required"))
    :type (common-lisp:or receipt-filter-policy common-lisp:null))
   (cidr
    (common-lisp:error #A((17) common-lisp:base-char . ":cidr is required"))
    :type (common-lisp:or cidr common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'receipt-ip-filter 'make-receipt-ip-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape receipt-ip-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "Cidr"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cidr))))))
(common-lisp:progn
 (common-lisp:defstruct (receipt-rule (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or receipt-rule-name common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (tls-policy common-lisp:nil :type
    (common-lisp:or tls-policy common-lisp:null))
   (recipients common-lisp:nil :type
    (common-lisp:or recipients-list common-lisp:null))
   (actions common-lisp:nil :type
    (common-lisp:or receipt-actions-list common-lisp:null))
   (scan-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export (common-lisp:list 'receipt-rule 'make-receipt-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape receipt-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "TlsPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tls-policy)))
    (aws-sdk/generator/shape::to-query-params "Recipients"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipients)))
    (aws-sdk/generator/shape::to-query-params "Actions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'actions)))
    (aws-sdk/generator/shape::to-query-params "ScanEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scan-enabled))))))
(common-lisp:deftype receipt-rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype receipt-rule-names-list ()
   '(trivial-types:proper-list receipt-rule-name))
 (common-lisp:defun |make-receipt-rule-names-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list receipt-rule-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (receipt-rule-set-metadata (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or receipt-rule-set-name common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'receipt-rule-set-metadata
                    'make-receipt-rule-set-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          receipt-rule-set-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "CreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp))))))
(common-lisp:deftype receipt-rule-set-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype receipt-rule-sets-lists ()
   '(trivial-types:proper-list receipt-rule-set-metadata))
 (common-lisp:defun |make-receipt-rule-sets-lists|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            receipt-rule-set-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype receipt-rules-list ()
   '(trivial-types:proper-list receipt-rule))
 (common-lisp:defun |make-receipt-rules-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list receipt-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype recipient () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (recipient-dsn-fields (:copier common-lisp:nil))
   (final-recipient common-lisp:nil :type
    (common-lisp:or address common-lisp:null))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or dsn-action common-lisp:null))
   (remote-mta common-lisp:nil :type
    (common-lisp:or remote-mta common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or dsn-status common-lisp:null))
   (diagnostic-code common-lisp:nil :type
    (common-lisp:or diagnostic-code common-lisp:null))
   (last-attempt-date common-lisp:nil :type
    (common-lisp:or last-attempt-date common-lisp:null))
   (extension-fields common-lisp:nil :type
    (common-lisp:or extension-field-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recipient-dsn-fields 'make-recipient-dsn-fields))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape recipient-dsn-fields))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FinalRecipient"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'final-recipient)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "RemoteMta"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-mta)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "DiagnosticCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'diagnostic-code)))
    (aws-sdk/generator/shape::to-query-params "LastAttemptDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-attempt-date)))
    (aws-sdk/generator/shape::to-query-params "ExtensionFields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'extension-fields))))))
(common-lisp:progn
 (common-lisp:deftype recipients-list ()
   '(trivial-types:proper-list recipient))
 (common-lisp:defun |make-recipients-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recipient))
   aws-sdk/generator/shape::members))
(common-lisp:deftype remote-mta () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reorder-receipt-rule-set-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null))
   (rule-names
    (common-lisp:error
     #A((23) common-lisp:base-char . ":rule-names is required"))
    :type (common-lisp:or receipt-rule-names-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reorder-receipt-rule-set-request
                    'make-reorder-receipt-rule-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reorder-receipt-rule-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "RuleNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (reorder-receipt-rule-set-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'reorder-receipt-rule-set-response
                    'make-reorder-receipt-rule-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reorder-receipt-rule-set-response))
   (common-lisp:append)))
(common-lisp:deftype reporting-mta () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (rule-does-not-exist-exception (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or rule-or-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rule-does-not-exist-exception
                    'make-rule-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rule-does-not-exist-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype rule-or-rule-set-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (rule-set-does-not-exist-exception (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or rule-or-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rule-set-does-not-exist-exception
                    'make-rule-set-does-not-exist-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rule-set-does-not-exist-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (s3action (:copier common-lisp:nil))
   (topic-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (bucket-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":bucket-name is required"))
    :type (common-lisp:or s3bucket-name common-lisp:null))
   (object-key-prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3action 'make-s3action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-name)))
    (aws-sdk/generator/shape::to-query-params "ObjectKeyPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-key-prefix)))
    (aws-sdk/generator/shape::to-query-params "KmsKeyArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kms-key-arn))))))
(common-lisp:deftype s3bucket-name () 'common-lisp:string)
(common-lisp:deftype s3key-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (snsaction (:copier common-lisp:nil))
   (topic-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":topic-arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null))
   (encoding common-lisp:nil :type
    (common-lisp:or snsaction-encoding common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snsaction 'make-snsaction))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape snsaction))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "Encoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding))))))
(common-lisp:deftype snsaction-encoding () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (snsdestination (:copier common-lisp:nil))
   (topic-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":topic-arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snsdestination 'make-snsdestination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape snsdestination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (send-bounce-request (:copier common-lisp:nil))
   (original-message-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":original-message-id is required"))
    :type (common-lisp:or message-id common-lisp:null))
   (bounce-sender
    (common-lisp:error
     #A((26) common-lisp:base-char . ":bounce-sender is required"))
    :type (common-lisp:or address common-lisp:null))
   (explanation common-lisp:nil :type
    (common-lisp:or explanation common-lisp:null))
   (message-dsn common-lisp:nil :type
    (common-lisp:or message-dsn common-lisp:null))
   (bounced-recipient-info-list
    (common-lisp:error
     #A((40) common-lisp:base-char
        . ":bounced-recipient-info-list is required"))
    :type (common-lisp:or bounced-recipient-info-list common-lisp:null))
   (bounce-sender-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-bounce-request 'make-send-bounce-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-bounce-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OriginalMessageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'original-message-id)))
    (aws-sdk/generator/shape::to-query-params "BounceSender"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bounce-sender)))
    (aws-sdk/generator/shape::to-query-params "Explanation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'explanation)))
    (aws-sdk/generator/shape::to-query-params "MessageDsn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-dsn)))
    (aws-sdk/generator/shape::to-query-params "BouncedRecipientInfoList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bounced-recipient-info-list)))
    (aws-sdk/generator/shape::to-query-params "BounceSenderArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bounce-sender-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (send-bounce-response (:copier common-lisp:nil))
   (message-id common-lisp:nil :type
    (common-lisp:or message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-bounce-response 'make-send-bounce-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-bounce-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MessageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-id))))))
(common-lisp:progn
 (common-lisp:defstruct (send-data-point (:copier common-lisp:nil))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (delivery-attempts common-lisp:nil :type
    (common-lisp:or counter common-lisp:null))
   (bounces common-lisp:nil :type (common-lisp:or counter common-lisp:null))
   (complaints common-lisp:nil :type (common-lisp:or counter common-lisp:null))
   (rejects common-lisp:nil :type (common-lisp:or counter common-lisp:null)))
 (common-lisp:export (common-lisp:list 'send-data-point 'make-send-data-point))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-data-point))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "DeliveryAttempts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delivery-attempts)))
    (aws-sdk/generator/shape::to-query-params "Bounces"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bounces)))
    (aws-sdk/generator/shape::to-query-params "Complaints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'complaints)))
    (aws-sdk/generator/shape::to-query-params "Rejects"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejects))))))
(common-lisp:progn
 (common-lisp:deftype send-data-point-list ()
   '(trivial-types:proper-list send-data-point))
 (common-lisp:defun |make-send-data-point-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list send-data-point))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (send-email-request (:copier common-lisp:nil))
   (source
    (common-lisp:error #A((19) common-lisp:base-char . ":source is required"))
    :type (common-lisp:or address common-lisp:null))
   (destination
    (common-lisp:error
     #A((24) common-lisp:base-char . ":destination is required"))
    :type (common-lisp:or destination common-lisp:null))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or message common-lisp:null))
   (reply-to-addresses common-lisp:nil :type
    (common-lisp:or address-list common-lisp:null))
   (return-path common-lisp:nil :type
    (common-lisp:or address common-lisp:null))
   (source-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (return-path-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or message-tag-list common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-email-request 'make-send-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-email-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ReplyToAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reply-to-addresses)))
    (aws-sdk/generator/shape::to-query-params "ReturnPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-path)))
    (aws-sdk/generator/shape::to-query-params "SourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-arn)))
    (aws-sdk/generator/shape::to-query-params "ReturnPathArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-path-arn)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct (send-email-response (:copier common-lisp:nil))
   (message-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":message-id is required"))
    :type (common-lisp:or message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-email-response 'make-send-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-email-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MessageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-id))))))
(common-lisp:progn
 (common-lisp:defstruct (send-raw-email-request (:copier common-lisp:nil))
   (source common-lisp:nil :type (common-lisp:or address common-lisp:null))
   (destinations common-lisp:nil :type
    (common-lisp:or address-list common-lisp:null))
   (raw-message
    (common-lisp:error
     #A((24) common-lisp:base-char . ":raw-message is required"))
    :type (common-lisp:or raw-message common-lisp:null))
   (from-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (source-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (return-path-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or message-tag-list common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-raw-email-request 'make-send-raw-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-raw-email-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "Destinations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destinations)))
    (aws-sdk/generator/shape::to-query-params "RawMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raw-message)))
    (aws-sdk/generator/shape::to-query-params "FromArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-arn)))
    (aws-sdk/generator/shape::to-query-params "SourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-arn)))
    (aws-sdk/generator/shape::to-query-params "ReturnPathArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-path-arn)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct (send-raw-email-response (:copier common-lisp:nil))
   (message-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":message-id is required"))
    :type (common-lisp:or message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-raw-email-response 'make-send-raw-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-raw-email-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MessageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-id))))))
(common-lisp:deftype sent-last24hours () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (set-active-receipt-rule-set-request (:copier common-lisp:nil))
   (rule-set-name common-lisp:nil :type
    (common-lisp:or receipt-rule-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-active-receipt-rule-set-request
                    'make-set-active-receipt-rule-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-active-receipt-rule-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-active-receipt-rule-set-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-active-receipt-rule-set-response
                    'make-set-active-receipt-rule-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-active-receipt-rule-set-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-dkim-enabled-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (dkim-enabled
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dkim-enabled is required"))
    :type (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-dkim-enabled-request
                    'make-set-identity-dkim-enabled-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-dkim-enabled-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "DkimEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dkim-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-dkim-enabled-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-identity-dkim-enabled-response
                    'make-set-identity-dkim-enabled-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-dkim-enabled-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-feedback-forwarding-enabled-request
      (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (forwarding-enabled
    (common-lisp:error
     #A((31) common-lisp:base-char . ":forwarding-enabled is required"))
    :type (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-feedback-forwarding-enabled-request
                    'make-set-identity-feedback-forwarding-enabled-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-feedback-forwarding-enabled-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "ForwardingEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'forwarding-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-feedback-forwarding-enabled-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-identity-feedback-forwarding-enabled-response
                    'make-set-identity-feedback-forwarding-enabled-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-feedback-forwarding-enabled-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-headers-in-notifications-enabled-request
      (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (notification-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":notification-type is required"))
    :type (common-lisp:or notification-type common-lisp:null))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-headers-in-notifications-enabled-request
                    'make-set-identity-headers-in-notifications-enabled-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-headers-in-notifications-enabled-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "NotificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-type)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-headers-in-notifications-enabled-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-identity-headers-in-notifications-enabled-response
                    'make-set-identity-headers-in-notifications-enabled-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-headers-in-notifications-enabled-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-mail-from-domain-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (mail-from-domain common-lisp:nil :type
    (common-lisp:or mail-from-domain-name common-lisp:null))
   (behavior-on-mxfailure common-lisp:nil :type
    (common-lisp:or behavior-on-mxfailure common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-mail-from-domain-request
                    'make-set-identity-mail-from-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-mail-from-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "MailFromDomain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mail-from-domain)))
    (aws-sdk/generator/shape::to-query-params "BehaviorOnMXFailure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'behavior-on-mxfailure))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-mail-from-domain-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-identity-mail-from-domain-response
                    'make-set-identity-mail-from-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-mail-from-domain-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-notification-topic-request (:copier common-lisp:nil))
   (identity
    (common-lisp:error
     #A((21) common-lisp:base-char . ":identity is required"))
    :type (common-lisp:or identity common-lisp:null))
   (notification-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":notification-type is required"))
    :type (common-lisp:or notification-type common-lisp:null))
   (sns-topic common-lisp:nil :type
    (common-lisp:or notification-topic common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-notification-topic-request
                    'make-set-identity-notification-topic-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-notification-topic-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "NotificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-type)))
    (aws-sdk/generator/shape::to-query-params "SnsTopic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sns-topic))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-notification-topic-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-identity-notification-topic-response
                    'make-set-identity-notification-topic-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-notification-topic-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-receipt-rule-position-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null))
   (rule-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":rule-name is required"))
    :type (common-lisp:or receipt-rule-name common-lisp:null))
   (after common-lisp:nil :type
    (common-lisp:or receipt-rule-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-receipt-rule-position-request
                    'make-set-receipt-rule-position-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-receipt-rule-position-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "RuleName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-name)))
    (aws-sdk/generator/shape::to-query-params "After"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'after))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-receipt-rule-position-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-receipt-rule-position-response
                    'make-set-receipt-rule-position-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-receipt-rule-position-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (stop-action (:copier common-lisp:nil))
   (scope
    (common-lisp:error #A((18) common-lisp:base-char . ":scope is required"))
    :type (common-lisp:or stop-scope common-lisp:null))
   (topic-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stop-action 'make-stop-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Scope"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scope)))
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn))))))
(common-lisp:deftype stop-scope () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype tls-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-request
      (:copier common-lisp:nil))
   (configuration-set-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":configuration-set-name is required"))
    :type (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination
    (common-lisp:error
     #A((30) common-lisp:base-char . ":event-destination is required"))
    :type (common-lisp:or event-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-request
                    'make-update-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-configuration-set-event-destination-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConfigurationSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-set-name)))
    (aws-sdk/generator/shape::to-query-params "EventDestination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-destination))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-response
                    'make-update-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-configuration-set-event-destination-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-receipt-rule-request (:copier common-lisp:nil))
   (rule-set-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rule-set-name is required"))
    :type (common-lisp:or receipt-rule-set-name common-lisp:null))
   (rule
    (common-lisp:error #A((17) common-lisp:base-char . ":rule is required"))
    :type (common-lisp:or receipt-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-receipt-rule-request
                    'make-update-receipt-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-receipt-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleSetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-set-name)))
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-receipt-rule-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-receipt-rule-response
                    'make-update-receipt-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-receipt-rule-response))
   (common-lisp:append)))
(common-lisp:defstruct
    (verification-attributes
     (:constructor |make-verification-attributes|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype verification-status () 'common-lisp:string)
(common-lisp:deftype verification-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype verification-token-list ()
   '(trivial-types:proper-list verification-token))
 (common-lisp:defun |make-verification-token-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list verification-token))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (verify-domain-dkim-request (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-domain-dkim-request
                    'make-verify-domain-dkim-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-domain-dkim-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain))))))
(common-lisp:progn
 (common-lisp:defstruct (verify-domain-dkim-response (:copier common-lisp:nil))
   (dkim-tokens
    (common-lisp:error
     #A((24) common-lisp:base-char . ":dkim-tokens is required"))
    :type (common-lisp:or verification-token-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-domain-dkim-response
                    'make-verify-domain-dkim-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-domain-dkim-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DkimTokens"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dkim-tokens))))))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-domain-identity-request (:copier common-lisp:nil))
   (domain
    (common-lisp:error #A((19) common-lisp:base-char . ":domain is required"))
    :type (common-lisp:or domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-domain-identity-request
                    'make-verify-domain-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-domain-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain))))))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-domain-identity-response (:copier common-lisp:nil))
   (verification-token
    (common-lisp:error
     #A((31) common-lisp:base-char . ":verification-token is required"))
    :type (common-lisp:or verification-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-domain-identity-response
                    'make-verify-domain-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-domain-identity-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VerificationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verification-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-email-address-request (:copier common-lisp:nil))
   (email-address
    (common-lisp:error
     #A((26) common-lisp:base-char . ":email-address is required"))
    :type (common-lisp:or address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-email-address-request
                    'make-verify-email-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-email-address-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address))))))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-email-identity-request (:copier common-lisp:nil))
   (email-address
    (common-lisp:error
     #A((26) common-lisp:base-char . ":email-address is required"))
    :type (common-lisp:or address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-email-identity-request
                    'make-verify-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-email-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address))))))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-email-identity-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'verify-email-identity-response
                    'make-verify-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          verify-email-identity-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (workmail-action (:copier common-lisp:nil))
   (topic-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (organization-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":organization-arn is required"))
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'workmail-action 'make-workmail-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workmail-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "OrganizationArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-arn))))))
(common-lisp:progn
 (common-lisp:defun clone-receipt-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name original-rule-set-name)
   (common-lisp:declare
    (common-lisp:ignorable rule-set-name original-rule-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-clone-receipt-rule-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CloneReceiptRuleSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CloneReceiptRuleSetResponse" "CloneReceiptRuleSetResult")))
 (common-lisp:export 'clone-receipt-rule-set))
(common-lisp:progn
 (common-lisp:defun create-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set)
   (common-lisp:declare (common-lisp:ignorable configuration-set))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateConfigurationSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateConfigurationSetResponse" "CreateConfigurationSetResult")))
 (common-lisp:export 'create-configuration-set))
(common-lisp:progn
 (common-lisp:defun create-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"CreateConfigurationSetEventDestination")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateConfigurationSetEventDestinationResponse"
      "CreateConfigurationSetEventDestinationResult")))
 (common-lisp:export 'create-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun create-receipt-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter)
   (common-lisp:declare (common-lisp:ignorable filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-receipt-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateReceiptFilter")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateReceiptFilterResponse" "CreateReceiptFilterResult")))
 (common-lisp:export 'create-receipt-filter))
(common-lisp:progn
 (common-lisp:defun create-receipt-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name after rule)
   (common-lisp:declare (common-lisp:ignorable rule-set-name after rule))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-receipt-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateReceiptRule")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateReceiptRuleResponse" "CreateReceiptRuleResult")))
 (common-lisp:export 'create-receipt-rule))
(common-lisp:progn
 (common-lisp:defun create-receipt-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name)
   (common-lisp:declare (common-lisp:ignorable rule-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-receipt-rule-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateReceiptRuleSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateReceiptRuleSetResponse" "CreateReceiptRuleSetResult")))
 (common-lisp:export 'create-receipt-rule-set))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteConfigurationSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteConfigurationSetResponse" "DeleteConfigurationSetResult")))
 (common-lisp:export 'delete-configuration-set))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteConfigurationSetEventDestination")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteConfigurationSetEventDestinationResponse"
      "DeleteConfigurationSetEventDestinationResult")))
 (common-lisp:export 'delete-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun delete-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity)
   (common-lisp:declare (common-lisp:ignorable identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIdentity")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteIdentityResponse" "DeleteIdentityResult")))
 (common-lisp:export 'delete-identity))
(common-lisp:progn
 (common-lisp:defun delete-identity-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity policy-name)
   (common-lisp:declare (common-lisp:ignorable identity policy-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-identity-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIdentityPolicy")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteIdentityPolicyResponse" "DeleteIdentityPolicyResult")))
 (common-lisp:export 'delete-identity-policy))
(common-lisp:progn
 (common-lisp:defun delete-receipt-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-name)
   (common-lisp:declare (common-lisp:ignorable filter-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-receipt-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteReceiptFilter")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteReceiptFilterResponse" "DeleteReceiptFilterResult")))
 (common-lisp:export 'delete-receipt-filter))
(common-lisp:progn
 (common-lisp:defun delete-receipt-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name rule-name)
   (common-lisp:declare (common-lisp:ignorable rule-set-name rule-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-receipt-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteReceiptRule")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteReceiptRuleResponse" "DeleteReceiptRuleResult")))
 (common-lisp:export 'delete-receipt-rule))
(common-lisp:progn
 (common-lisp:defun delete-receipt-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name)
   (common-lisp:declare (common-lisp:ignorable rule-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-receipt-rule-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteReceiptRuleSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteReceiptRuleSetResponse" "DeleteReceiptRuleSetResult")))
 (common-lisp:export 'delete-receipt-rule-set))
(common-lisp:progn
 (common-lisp:defun delete-verified-email-address
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-address)
   (common-lisp:declare (common-lisp:ignorable email-address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-verified-email-address-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteVerifiedEmailAddress")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-verified-email-address))
(common-lisp:progn
 (common-lisp:defun describe-active-receipt-rule-set ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeActiveReceiptRuleSet"))
    "DescribeActiveReceiptRuleSetResponse"
    "DescribeActiveReceiptRuleSetResult"))
 (common-lisp:export 'describe-active-receipt-rule-set))
(common-lisp:progn
 (common-lisp:defun describe-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     configuration-set-attribute-names)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name
     configuration-set-attribute-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-configuration-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeConfigurationSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeConfigurationSetResponse" "DescribeConfigurationSetResult")))
 (common-lisp:export 'describe-configuration-set))
(common-lisp:progn
 (common-lisp:defun describe-receipt-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name rule-name)
   (common-lisp:declare (common-lisp:ignorable rule-set-name rule-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-receipt-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeReceiptRule")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeReceiptRuleResponse" "DescribeReceiptRuleResult")))
 (common-lisp:export 'describe-receipt-rule))
(common-lisp:progn
 (common-lisp:defun describe-receipt-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name)
   (common-lisp:declare (common-lisp:ignorable rule-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-receipt-rule-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeReceiptRuleSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeReceiptRuleSetResponse" "DescribeReceiptRuleSetResult")))
 (common-lisp:export 'describe-receipt-rule-set))
(common-lisp:progn
 (common-lisp:defun get-identity-dkim-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identities)
   (common-lisp:declare (common-lisp:ignorable identities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-identity-dkim-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetIdentityDkimAttributes")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityDkimAttributesResponse" "GetIdentityDkimAttributesResult")))
 (common-lisp:export 'get-identity-dkim-attributes))
(common-lisp:progn
 (common-lisp:defun get-identity-mail-from-domain-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identities)
   (common-lisp:declare (common-lisp:ignorable identities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-identity-mail-from-domain-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetIdentityMailFromDomainAttributes")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityMailFromDomainAttributesResponse"
      "GetIdentityMailFromDomainAttributesResult")))
 (common-lisp:export 'get-identity-mail-from-domain-attributes))
(common-lisp:progn
 (common-lisp:defun get-identity-notification-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identities)
   (common-lisp:declare (common-lisp:ignorable identities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-identity-notification-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetIdentityNotificationAttributes")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityNotificationAttributesResponse"
      "GetIdentityNotificationAttributesResult")))
 (common-lisp:export 'get-identity-notification-attributes))
(common-lisp:progn
 (common-lisp:defun get-identity-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity policy-names)
   (common-lisp:declare (common-lisp:ignorable identity policy-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-identity-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetIdentityPolicies")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityPoliciesResponse" "GetIdentityPoliciesResult")))
 (common-lisp:export 'get-identity-policies))
(common-lisp:progn
 (common-lisp:defun get-identity-verification-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identities)
   (common-lisp:declare (common-lisp:ignorable identities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-identity-verification-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"GetIdentityVerificationAttributes")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityVerificationAttributesResponse"
      "GetIdentityVerificationAttributesResult")))
 (common-lisp:export 'get-identity-verification-attributes))
(common-lisp:progn
 (common-lisp:defun get-send-quota ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                             :method :post :params
                             (common-lisp:cons "Action" "GetSendQuota"))
    "GetSendQuotaResponse" "GetSendQuotaResult"))
 (common-lisp:export 'get-send-quota))
(common-lisp:progn
 (common-lisp:defun get-send-statistics ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                             :method :post :params
                             (common-lisp:cons "Action" "GetSendStatistics"))
    "GetSendStatisticsResponse" "GetSendStatisticsResult"))
 (common-lisp:export 'get-send-statistics))
(common-lisp:progn
 (common-lisp:defun list-configuration-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-items)
   (common-lisp:declare (common-lisp:ignorable next-token max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configuration-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListConfigurationSets")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListConfigurationSetsResponse" "ListConfigurationSetsResult")))
 (common-lisp:export 'list-configuration-sets))
(common-lisp:progn
 (common-lisp:defun list-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-type next-token max-items)
   (common-lisp:declare
    (common-lisp:ignorable identity-type next-token max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-identities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIdentities")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIdentitiesResponse" "ListIdentitiesResult")))
 (common-lisp:export 'list-identities))
(common-lisp:progn
 (common-lisp:defun list-identity-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity)
   (common-lisp:declare (common-lisp:ignorable identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-identity-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIdentityPolicies")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIdentityPoliciesResponse" "ListIdentityPoliciesResult")))
 (common-lisp:export 'list-identity-policies))
(common-lisp:progn
 (common-lisp:defun list-receipt-filters ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                             :method :post :params
                             (common-lisp:cons "Action" "ListReceiptFilters"))
    "ListReceiptFiltersResponse" "ListReceiptFiltersResult"))
 (common-lisp:export 'list-receipt-filters))
(common-lisp:progn
 (common-lisp:defun list-receipt-rule-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-receipt-rule-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListReceiptRuleSets")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListReceiptRuleSetsResponse" "ListReceiptRuleSetsResult")))
 (common-lisp:export 'list-receipt-rule-sets))
(common-lisp:progn
 (common-lisp:defun list-verified-email-addresses ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "ListVerifiedEmailAddresses"))
    "ListVerifiedEmailAddressesResponse" "ListVerifiedEmailAddressesResult"))
 (common-lisp:export 'list-verified-email-addresses))
(common-lisp:progn
 (common-lisp:defun put-identity-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity policy-name policy)
   (common-lisp:declare (common-lisp:ignorable identity policy-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-identity-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutIdentityPolicy")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutIdentityPolicyResponse" "PutIdentityPolicyResult")))
 (common-lisp:export 'put-identity-policy))
(common-lisp:progn
 (common-lisp:defun reorder-receipt-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name rule-names)
   (common-lisp:declare (common-lisp:ignorable rule-set-name rule-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reorder-receipt-rule-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ReorderReceiptRuleSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ReorderReceiptRuleSetResponse" "ReorderReceiptRuleSetResult")))
 (common-lisp:export 'reorder-receipt-rule-set))
(common-lisp:progn
 (common-lisp:defun send-bounce
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key original-message-id bounce-sender
                     explanation message-dsn bounced-recipient-info-list
                     bounce-sender-arn)
   (common-lisp:declare
    (common-lisp:ignorable original-message-id bounce-sender explanation
     message-dsn bounced-recipient-info-list bounce-sender-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-bounce-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendBounce")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendBounceResponse" "SendBounceResult")))
 (common-lisp:export 'send-bounce))
(common-lisp:progn
 (common-lisp:defun send-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source destination message
                     reply-to-addresses return-path source-arn return-path-arn
                     tags configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable source destination message reply-to-addresses
     return-path source-arn return-path-arn tags configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-email-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendEmail")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendEmailResponse" "SendEmailResult")))
 (common-lisp:export 'send-email))
(common-lisp:progn
 (common-lisp:defun send-raw-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source destinations raw-message from-arn
                     source-arn return-path-arn tags configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable source destinations raw-message from-arn source-arn
     return-path-arn tags configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-raw-email-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendRawEmail")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendRawEmailResponse" "SendRawEmailResult")))
 (common-lisp:export 'send-raw-email))
(common-lisp:progn
 (common-lisp:defun set-active-receipt-rule-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name)
   (common-lisp:declare (common-lisp:ignorable rule-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-active-receipt-rule-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetActiveReceiptRuleSet")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetActiveReceiptRuleSetResponse" "SetActiveReceiptRuleSetResult")))
 (common-lisp:export 'set-active-receipt-rule-set))
(common-lisp:progn
 (common-lisp:defun set-identity-dkim-enabled
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity dkim-enabled)
   (common-lisp:declare (common-lisp:ignorable identity dkim-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-identity-dkim-enabled-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetIdentityDkimEnabled")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetIdentityDkimEnabledResponse" "SetIdentityDkimEnabledResult")))
 (common-lisp:export 'set-identity-dkim-enabled))
(common-lisp:progn
 (common-lisp:defun set-identity-feedback-forwarding-enabled
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity forwarding-enabled)
   (common-lisp:declare (common-lisp:ignorable identity forwarding-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-identity-feedback-forwarding-enabled-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"SetIdentityFeedbackForwardingEnabled")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetIdentityFeedbackForwardingEnabledResponse"
      "SetIdentityFeedbackForwardingEnabledResult")))
 (common-lisp:export 'set-identity-feedback-forwarding-enabled))
(common-lisp:progn
 (common-lisp:defun set-identity-headers-in-notifications-enabled
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity notification-type enabled)
   (common-lisp:declare
    (common-lisp:ignorable identity notification-type enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-identity-headers-in-notifications-enabled-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"SetIdentityHeadersInNotificationsEnabled")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetIdentityHeadersInNotificationsEnabledResponse"
      "SetIdentityHeadersInNotificationsEnabledResult")))
 (common-lisp:export 'set-identity-headers-in-notifications-enabled))
(common-lisp:progn
 (common-lisp:defun set-identity-mail-from-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity mail-from-domain
                     behavior-on-mxfailure)
   (common-lisp:declare
    (common-lisp:ignorable identity mail-from-domain behavior-on-mxfailure))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-identity-mail-from-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetIdentityMailFromDomain")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetIdentityMailFromDomainResponse" "SetIdentityMailFromDomainResult")))
 (common-lisp:export 'set-identity-mail-from-domain))
(common-lisp:progn
 (common-lisp:defun set-identity-notification-topic
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity notification-type sns-topic)
   (common-lisp:declare
    (common-lisp:ignorable identity notification-type sns-topic))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-identity-notification-topic-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetIdentityNotificationTopic")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetIdentityNotificationTopicResponse"
      "SetIdentityNotificationTopicResult")))
 (common-lisp:export 'set-identity-notification-topic))
(common-lisp:progn
 (common-lisp:defun set-receipt-rule-position
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name rule-name after)
   (common-lisp:declare (common-lisp:ignorable rule-set-name rule-name after))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-receipt-rule-position-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetReceiptRulePosition")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetReceiptRulePositionResponse" "SetReceiptRulePositionResult")))
 (common-lisp:export 'set-receipt-rule-position))
(common-lisp:progn
 (common-lisp:defun update-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"UpdateConfigurationSetEventDestination")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateConfigurationSetEventDestinationResponse"
      "UpdateConfigurationSetEventDestinationResult")))
 (common-lisp:export 'update-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun update-receipt-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-set-name rule)
   (common-lisp:declare (common-lisp:ignorable rule-set-name rule))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-receipt-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateReceiptRule")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateReceiptRuleResponse" "UpdateReceiptRuleResult")))
 (common-lisp:export 'update-receipt-rule))
(common-lisp:progn
 (common-lisp:defun verify-domain-dkim
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain)
   (common-lisp:declare (common-lisp:ignorable domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-verify-domain-dkim-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"VerifyDomainDkim")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "VerifyDomainDkimResponse" "VerifyDomainDkimResult")))
 (common-lisp:export 'verify-domain-dkim))
(common-lisp:progn
 (common-lisp:defun verify-domain-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain)
   (common-lisp:declare (common-lisp:ignorable domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-verify-domain-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"VerifyDomainIdentity")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "VerifyDomainIdentityResponse" "VerifyDomainIdentityResult")))
 (common-lisp:export 'verify-domain-identity))
(common-lisp:progn
 (common-lisp:defun verify-email-address
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-address)
   (common-lisp:declare (common-lisp:ignorable email-address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-verify-email-address-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"VerifyEmailAddress")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'verify-email-address))
(common-lisp:progn
 (common-lisp:defun verify-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-address)
   (common-lisp:declare (common-lisp:ignorable email-address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-verify-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "email")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"VerifyEmailIdentity")
                                  ("Version" ,@"2010-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "VerifyEmailIdentityResponse" "VerifyEmailIdentityResult")))
 (common-lisp:export 'verify-email-identity))