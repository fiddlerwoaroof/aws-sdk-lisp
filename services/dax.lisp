;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/dax
  (:use)
  (:nicknames #:aws/dax)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/dax)

(common-lisp:progn
 (common-lisp:deftype availability-zone-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-availability-zone-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype aws-query-error-message () 'common-lisp:string)
(common-lisp:deftype change-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cluster (:copier common-lisp:nil))
   (cluster-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cluster-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (total-nodes common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (active-nodes common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (node-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cluster-discovery-endpoint common-lisp:nil :type
    (common-lisp:or endpoint common-lisp:null))
   (node-ids-to-remove common-lisp:nil :type
    (common-lisp:or node-identifier-list common-lisp:null))
   (nodes common-lisp:nil :type (common-lisp:or node-list common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-configuration common-lisp:nil :type
    (common-lisp:or notification-configuration common-lisp:null))
   (subnet-group common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-group-membership-list common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-group common-lisp:nil :type
    (common-lisp:or parameter-group-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cluster 'make-cluster))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cluster))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ClusterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-arn)))
    (aws-sdk/generator/shape::to-query-params "TotalNodes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-nodes)))
    (aws-sdk/generator/shape::to-query-params "ActiveNodes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active-nodes)))
    (aws-sdk/generator/shape::to-query-params "NodeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-type)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "ClusterDiscoveryEndpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-discovery-endpoint)))
    (aws-sdk/generator/shape::to-query-params "NodeIdsToRemove"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-ids-to-remove)))
    (aws-sdk/generator/shape::to-query-params "Nodes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'nodes)))
    (aws-sdk/generator/shape::to-query-params "PreferredMaintenanceWindow"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preferred-maintenance-window)))
    (aws-sdk/generator/shape::to-query-params "NotificationConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-configuration)))
    (aws-sdk/generator/shape::to-query-params "SubnetGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups)))
    (aws-sdk/generator/shape::to-query-params "IamRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-role-arn)))
    (aws-sdk/generator/shape::to-query-params "ParameterGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cluster-already-exists-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cluster-already-exists-fault
                    'make-cluster-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cluster-already-exists-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype cluster-list () '(trivial-types:proper-list cluster))
 (common-lisp:defun |make-cluster-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cluster))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cluster-name-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-cluster-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cluster-not-found-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cluster-not-found-fault 'make-cluster-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cluster-not-found-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (cluster-quota-for-customer-exceeded-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cluster-quota-for-customer-exceeded-fault
                    'make-cluster-quota-for-customer-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cluster-quota-for-customer-exceeded-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-cluster-request (:copier common-lisp:nil))
   (cluster-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":cluster-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (node-type
    (common-lisp:error
     #A((22) common-lisp:base-char . ":node-type is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (replication-factor
    (common-lisp:error
     #A((31) common-lisp:base-char . ":replication-factor is required"))
    :type (common-lisp:or integer common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zone-list common-lisp:null))
   (subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-identifier-list common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (iam-role-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":iam-role-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cluster-request 'make-create-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-name)))
    (aws-sdk/generator/shape::to-query-params "NodeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-type)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ReplicationFactor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replication-factor)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "SubnetGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group-name)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids)))
    (aws-sdk/generator/shape::to-query-params "PreferredMaintenanceWindow"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preferred-maintenance-window)))
    (aws-sdk/generator/shape::to-query-params "NotificationTopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-topic-arn)))
    (aws-sdk/generator/shape::to-query-params "IamRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-role-arn)))
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-cluster-response (:copier common-lisp:nil))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cluster-response 'make-create-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-cluster-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Cluster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-parameter-group-request (:copier common-lisp:nil))
   (parameter-group-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":parameter-group-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-parameter-group-request
                    'make-create-parameter-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-parameter-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-parameter-group-response (:copier common-lisp:nil))
   (parameter-group common-lisp:nil :type
    (common-lisp:or parameter-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-parameter-group-response
                    'make-create-parameter-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-parameter-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group))))))
(common-lisp:progn
 (common-lisp:defstruct (create-subnet-group-request (:copier common-lisp:nil))
   (subnet-group-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":subnet-group-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-ids
    (common-lisp:error
     #A((23) common-lisp:base-char . ":subnet-ids is required"))
    :type (common-lisp:or subnet-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-subnet-group-request
                    'make-create-subnet-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-subnet-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-subnet-group-response (:copier common-lisp:nil))
   (subnet-group common-lisp:nil :type
    (common-lisp:or subnet-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-subnet-group-response
                    'make-create-subnet-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-subnet-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decrease-replication-factor-request (:copier common-lisp:nil))
   (cluster-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":cluster-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (new-replication-factor
    (common-lisp:error
     #A((35) common-lisp:base-char . ":new-replication-factor is required"))
    :type (common-lisp:or integer common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zone-list common-lisp:null))
   (node-ids-to-remove common-lisp:nil :type
    (common-lisp:or node-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decrease-replication-factor-request
                    'make-decrease-replication-factor-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decrease-replication-factor-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-name)))
    (aws-sdk/generator/shape::to-query-params "NewReplicationFactor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-replication-factor)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "NodeIdsToRemove"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-ids-to-remove))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decrease-replication-factor-response (:copier common-lisp:nil))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decrease-replication-factor-response
                    'make-decrease-replication-factor-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decrease-replication-factor-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Cluster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-cluster-request (:copier common-lisp:nil))
   (cluster-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":cluster-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cluster-request 'make-delete-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-cluster-response (:copier common-lisp:nil))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cluster-response 'make-delete-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-cluster-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Cluster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-parameter-group-request (:copier common-lisp:nil))
   (parameter-group-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":parameter-group-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-parameter-group-request
                    'make-delete-parameter-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-parameter-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-parameter-group-response (:copier common-lisp:nil))
   (deletion-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-parameter-group-response
                    'make-delete-parameter-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-parameter-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeletionMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deletion-message))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-subnet-group-request (:copier common-lisp:nil))
   (subnet-group-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":subnet-group-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-subnet-group-request
                    'make-delete-subnet-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-subnet-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-subnet-group-response (:copier common-lisp:nil))
   (deletion-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-subnet-group-response
                    'make-delete-subnet-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-subnet-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeletionMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deletion-message))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-clusters-request (:copier common-lisp:nil))
   (cluster-names common-lisp:nil :type
    (common-lisp:or cluster-name-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-clusters-request
                    'make-describe-clusters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-clusters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-names)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-clusters-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (clusters common-lisp:nil :type
    (common-lisp:or cluster-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-clusters-response
                    'make-describe-clusters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-clusters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Clusters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clusters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-default-parameters-request (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-default-parameters-request
                    'make-describe-default-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-default-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-default-parameters-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-default-parameters-response
                    'make-describe-default-parameters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-default-parameters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-events-request (:copier common-lisp:nil))
   (source-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-type common-lisp:nil :type
    (common-lisp:or source-type common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or tstamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or tstamp common-lisp:null))
   (duration common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-events-request 'make-describe-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-events-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-name)))
    (aws-sdk/generator/shape::to-query-params "SourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-type)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-events-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (events common-lisp:nil :type (common-lisp:or event-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-events-response 'make-describe-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-events-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-parameter-groups-request (:copier common-lisp:nil))
   (parameter-group-names common-lisp:nil :type
    (common-lisp:or parameter-group-name-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-parameter-groups-request
                    'make-describe-parameter-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-parameter-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroupNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-names)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-parameter-groups-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parameter-groups common-lisp:nil :type
    (common-lisp:or parameter-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-parameter-groups-response
                    'make-describe-parameter-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-parameter-groups-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "ParameterGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-groups))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-parameters-request (:copier common-lisp:nil))
   (parameter-group-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":parameter-group-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-parameters-request
                    'make-describe-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name)))
    (aws-sdk/generator/shape::to-query-params "Source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-parameters-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-parameters-response
                    'make-describe-parameters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-parameters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subnet-groups-request (:copier common-lisp:nil))
   (subnet-group-names common-lisp:nil :type
    (common-lisp:or subnet-group-name-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-subnet-groups-request
                    'make-describe-subnet-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-subnet-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetGroupNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group-names)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subnet-groups-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-groups common-lisp:nil :type
    (common-lisp:or subnet-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-subnet-groups-response
                    'make-describe-subnet-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-subnet-groups-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "SubnetGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-groups))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint (:copier common-lisp:nil))
   (address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'endpoint 'make-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape endpoint))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address)))
    (aws-sdk/generator/shape::to-query-params "Port"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'port))))))
(common-lisp:progn
 (common-lisp:defstruct (event (:copier common-lisp:nil))
   (source-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-type common-lisp:nil :type
    (common-lisp:or source-type common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (date common-lisp:nil :type (common-lisp:or tstamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-name)))
    (aws-sdk/generator/shape::to-query-params "SourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Date"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date))))))
(common-lisp:progn
 (common-lisp:deftype event-list () '(trivial-types:proper-list event))
 (common-lisp:defun |make-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (increase-replication-factor-request (:copier common-lisp:nil))
   (cluster-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":cluster-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (new-replication-factor
    (common-lisp:error
     #A((35) common-lisp:base-char . ":new-replication-factor is required"))
    :type (common-lisp:or integer common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zone-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'increase-replication-factor-request
                    'make-increase-replication-factor-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          increase-replication-factor-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-name)))
    (aws-sdk/generator/shape::to-query-params "NewReplicationFactor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'new-replication-factor)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct
     (increase-replication-factor-response (:copier common-lisp:nil))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'increase-replication-factor-response
                    'make-increase-replication-factor-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          increase-replication-factor-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Cluster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster))))))
(common-lisp:progn
 (common-lisp:defstruct
     (insufficient-cluster-capacity-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'insufficient-cluster-capacity-fault
                    'make-insufficient-cluster-capacity-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          insufficient-cluster-capacity-fault))
   (common-lisp:append)))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype integer-optional () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (invalid-arnfault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-arnfault 'make-invalid-arnfault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-arnfault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-cluster-state-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-cluster-state-fault
                    'make-invalid-cluster-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-cluster-state-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-combination-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or aws-query-error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-combination-exception
                    'make-invalid-parameter-combination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-combination-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-group-state-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-group-state-fault
                    'make-invalid-parameter-group-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-group-state-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-value-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or aws-query-error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'make-invalid-parameter-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-value-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-subnet (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'invalid-subnet 'make-invalid-subnet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-subnet))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-vpcnetwork-state-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-vpcnetwork-state-fault
                    'make-invalid-vpcnetwork-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-vpcnetwork-state-fault))
   (common-lisp:append)))
(common-lisp:deftype is-modifiable () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype key-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-request (:copier common-lisp:nil))
   (resource-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-request 'make-list-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-response 'make-list-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (node (:copier common-lisp:nil))
   (node-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (endpoint common-lisp:nil :type (common-lisp:or endpoint common-lisp:null))
   (node-create-time common-lisp:nil :type
    (common-lisp:or tstamp common-lisp:null))
   (availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (node-status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parameter-group-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'node 'make-node))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape node))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NodeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-id)))
    (aws-sdk/generator/shape::to-query-params "Endpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint)))
    (aws-sdk/generator/shape::to-query-params "NodeCreateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-create-time)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "NodeStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-status)))
    (aws-sdk/generator/shape::to-query-params "ParameterGroupStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-status))))))
(common-lisp:progn
 (common-lisp:deftype node-identifier-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-node-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype node-list () '(trivial-types:proper-list node))
 (common-lisp:defun |make-node-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list node))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (node-not-found-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'node-not-found-fault 'make-node-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape node-not-found-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (node-quota-for-cluster-exceeded-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'node-quota-for-cluster-exceeded-fault
                    'make-node-quota-for-cluster-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          node-quota-for-cluster-exceeded-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (node-quota-for-customer-exceeded-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'node-quota-for-customer-exceeded-fault
                    'make-node-quota-for-customer-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          node-quota-for-customer-exceeded-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (node-type-specific-value (:copier common-lisp:nil))
   (node-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'node-type-specific-value 'make-node-type-specific-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          node-type-specific-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NodeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-type)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype node-type-specific-value-list ()
   '(trivial-types:proper-list node-type-specific-value))
 (common-lisp:defun |make-node-type-specific-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            node-type-specific-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (notification-configuration (:copier common-lisp:nil))
   (topic-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (topic-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-configuration
                    'make-notification-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notification-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "TopicStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-status))))))
(common-lisp:progn
 (common-lisp:defstruct (parameter (:copier common-lisp:nil))
   (parameter-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-type common-lisp:nil :type
    (common-lisp:or parameter-type common-lisp:null))
   (parameter-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (node-type-specific-values common-lisp:nil :type
    (common-lisp:or node-type-specific-value-list common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (data-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (allowed-values common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (is-modifiable common-lisp:nil :type
    (common-lisp:or is-modifiable common-lisp:null))
   (change-type common-lisp:nil :type
    (common-lisp:or change-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'parameter 'make-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-name)))
    (aws-sdk/generator/shape::to-query-params "ParameterType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-type)))
    (aws-sdk/generator/shape::to-query-params "ParameterValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-value)))
    (aws-sdk/generator/shape::to-query-params "NodeTypeSpecificValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-type-specific-values)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "DataType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-type)))
    (aws-sdk/generator/shape::to-query-params "AllowedValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-values)))
    (aws-sdk/generator/shape::to-query-params "IsModifiable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-modifiable)))
    (aws-sdk/generator/shape::to-query-params "ChangeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-type))))))
(common-lisp:progn
 (common-lisp:defstruct (parameter-group (:copier common-lisp:nil))
   (parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'parameter-group 'make-parameter-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (parameter-group-already-exists-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'parameter-group-already-exists-fault
                    'make-parameter-group-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-group-already-exists-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype parameter-group-list ()
   '(trivial-types:proper-list parameter-group))
 (common-lisp:defun |make-parameter-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype parameter-group-name-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-parameter-group-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (parameter-group-not-found-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'parameter-group-not-found-fault
                    'make-parameter-group-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-group-not-found-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (parameter-group-quota-exceeded-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'parameter-group-quota-exceeded-fault
                    'make-parameter-group-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-group-quota-exceeded-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (parameter-group-status (:copier common-lisp:nil))
   (parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-apply-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (node-ids-to-reboot common-lisp:nil :type
    (common-lisp:or node-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-group-status 'make-parameter-group-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-group-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name)))
    (aws-sdk/generator/shape::to-query-params "ParameterApplyStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-apply-status)))
    (aws-sdk/generator/shape::to-query-params "NodeIdsToReboot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-ids-to-reboot))))))
(common-lisp:progn
 (common-lisp:deftype parameter-list () '(trivial-types:proper-list parameter))
 (common-lisp:defun |make-parameter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (parameter-name-value (:copier common-lisp:nil))
   (parameter-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-name-value 'make-parameter-name-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter-name-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-name)))
    (aws-sdk/generator/shape::to-query-params "ParameterValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-value))))))
(common-lisp:progn
 (common-lisp:deftype parameter-name-value-list ()
   '(trivial-types:proper-list parameter-name-value))
 (common-lisp:defun |make-parameter-name-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-name-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parameter-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reboot-node-request (:copier common-lisp:nil))
   (cluster-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":cluster-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (node-id
    (common-lisp:error #A((20) common-lisp:base-char . ":node-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-node-request 'make-reboot-node-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape reboot-node-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-name)))
    (aws-sdk/generator/shape::to-query-params "NodeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'node-id))))))
(common-lisp:progn
 (common-lisp:defstruct (reboot-node-response (:copier common-lisp:nil))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-node-response 'make-reboot-node-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape reboot-node-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Cluster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster))))))
(common-lisp:progn
 (common-lisp:deftype security-group-identifier-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-security-group-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (security-group-membership (:copier common-lisp:nil))
   (security-group-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-group-membership
                    'make-security-group-membership))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          security-group-membership))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-identifier)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype security-group-membership-list ()
   '(trivial-types:proper-list security-group-membership))
 (common-lisp:defun |make-security-group-membership-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            security-group-membership))
   aws-sdk/generator/shape::members))
(common-lisp:deftype source-type () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (subnet (:copier common-lisp:nil))
   (subnet-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (subnet-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet 'make-subnet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape subnet))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-identifier)))
    (aws-sdk/generator/shape::to-query-params "SubnetAvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-availability-zone))))))
(common-lisp:progn
 (common-lisp:defstruct (subnet-group (:copier common-lisp:nil))
   (subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnets common-lisp:nil :type
    (common-lisp:or subnet-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet-group 'make-subnet-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape subnet-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets))))))
(common-lisp:progn
 (common-lisp:defstruct
     (subnet-group-already-exists-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subnet-group-already-exists-fault
                    'make-subnet-group-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-group-already-exists-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (subnet-group-in-use-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subnet-group-in-use-fault
                    'make-subnet-group-in-use-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-group-in-use-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype subnet-group-list ()
   '(trivial-types:proper-list subnet-group))
 (common-lisp:defun |make-subnet-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype subnet-group-name-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-subnet-group-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (subnet-group-not-found-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subnet-group-not-found-fault
                    'make-subnet-group-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-group-not-found-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (subnet-group-quota-exceeded-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subnet-group-quota-exceeded-fault
                    'make-subnet-group-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-group-quota-exceeded-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype subnet-identifier-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-subnet-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (subnet-in-use (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'subnet-in-use 'make-subnet-in-use))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape subnet-in-use))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype subnet-list () '(trivial-types:proper-list subnet))
 (common-lisp:defun |make-subnet-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (subnet-quota-exceeded-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subnet-quota-exceeded-fault
                    'make-subnet-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-quota-exceeded-fault))
   (common-lisp:append)))
(common-lisp:deftype tstamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-not-found-fault (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-not-found-fault 'make-tag-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-not-found-fault))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-quota-per-resource-exceeded (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-quota-per-resource-exceeded
                    'make-tag-quota-per-resource-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-quota-per-resource-exceeded))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-request (:copier common-lisp:nil))
   (resource-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-name)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-resource-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-request (:copier common-lisp:nil))
   (resource-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-name)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (update-cluster-request (:copier common-lisp:nil))
   (cluster-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":cluster-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-topic-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-cluster-request 'make-update-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "PreferredMaintenanceWindow"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preferred-maintenance-window)))
    (aws-sdk/generator/shape::to-query-params "NotificationTopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-topic-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationTopicStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-topic-status)))
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (update-cluster-response (:copier common-lisp:nil))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-cluster-response 'make-update-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-cluster-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Cluster"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-parameter-group-request (:copier common-lisp:nil))
   (parameter-group-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":parameter-group-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (parameter-name-values
    (common-lisp:error
     #A((34) common-lisp:base-char . ":parameter-name-values is required"))
    :type (common-lisp:or parameter-name-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-parameter-group-request
                    'make-update-parameter-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-parameter-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group-name)))
    (aws-sdk/generator/shape::to-query-params "ParameterNameValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-name-values))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-parameter-group-response (:copier common-lisp:nil))
   (parameter-group common-lisp:nil :type
    (common-lisp:or parameter-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-parameter-group-response
                    'make-update-parameter-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-parameter-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-group))))))
(common-lisp:progn
 (common-lisp:defstruct (update-subnet-group-request (:copier common-lisp:nil))
   (subnet-group-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":subnet-group-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-subnet-group-request
                    'make-update-subnet-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-subnet-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-subnet-group-response (:copier common-lisp:nil))
   (subnet-group common-lisp:nil :type
    (common-lisp:or subnet-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-subnet-group-response
                    'make-update-subnet-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-subnet-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubnetGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-group))))))
(common-lisp:progn
 (common-lisp:defun create-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-name node-type description
                     replication-factor availability-zones subnet-group-name
                     security-group-ids preferred-maintenance-window
                     notification-topic-arn iam-role-arn parameter-group-name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable cluster-name node-type description
     replication-factor availability-zones subnet-group-name security-group-ids
     preferred-maintenance-window notification-topic-arn iam-role-arn
     parameter-group-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateCluster")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateClusterResponse" common-lisp:nil)))
 (common-lisp:export 'create-cluster))
(common-lisp:progn
 (common-lisp:defun create-parameter-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parameter-group-name description)
   (common-lisp:declare
    (common-lisp:ignorable parameter-group-name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-parameter-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateParameterGroup")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateParameterGroupResponse" common-lisp:nil)))
 (common-lisp:export 'create-parameter-group))
(common-lisp:progn
 (common-lisp:defun create-subnet-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subnet-group-name description subnet-ids)
   (common-lisp:declare
    (common-lisp:ignorable subnet-group-name description subnet-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-subnet-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSubnetGroup")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSubnetGroupResponse" common-lisp:nil)))
 (common-lisp:export 'create-subnet-group))
(common-lisp:progn
 (common-lisp:defun decrease-replication-factor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-name new-replication-factor
                     availability-zones node-ids-to-remove)
   (common-lisp:declare
    (common-lisp:ignorable cluster-name new-replication-factor
     availability-zones node-ids-to-remove))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-decrease-replication-factor-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DecreaseReplicationFactor")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DecreaseReplicationFactorResponse" common-lisp:nil)))
 (common-lisp:export 'decrease-replication-factor))
(common-lisp:progn
 (common-lisp:defun delete-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-name)
   (common-lisp:declare (common-lisp:ignorable cluster-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteCluster")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteClusterResponse" common-lisp:nil)))
 (common-lisp:export 'delete-cluster))
(common-lisp:progn
 (common-lisp:defun delete-parameter-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parameter-group-name)
   (common-lisp:declare (common-lisp:ignorable parameter-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-parameter-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteParameterGroup")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteParameterGroupResponse" common-lisp:nil)))
 (common-lisp:export 'delete-parameter-group))
(common-lisp:progn
 (common-lisp:defun delete-subnet-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subnet-group-name)
   (common-lisp:declare (common-lisp:ignorable subnet-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-subnet-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSubnetGroup")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSubnetGroupResponse" common-lisp:nil)))
 (common-lisp:export 'delete-subnet-group))
(common-lisp:progn
 (common-lisp:defun describe-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-names max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable cluster-names max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-clusters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeClusters")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeClustersResponse" common-lisp:nil)))
 (common-lisp:export 'describe-clusters))
(common-lisp:progn
 (common-lisp:defun describe-default-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-default-parameters-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDefaultParameters")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDefaultParametersResponse" common-lisp:nil)))
 (common-lisp:export 'describe-default-parameters))
(common-lisp:progn
 (common-lisp:defun describe-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-name source-type start-time
                     end-time duration max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable source-name source-type start-time end-time duration
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEvents")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEventsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-events))
(common-lisp:progn
 (common-lisp:defun describe-parameter-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parameter-group-names max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable parameter-group-names max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-parameter-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeParameterGroups")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeParameterGroupsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-parameter-groups))
(common-lisp:progn
 (common-lisp:defun describe-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parameter-group-name source max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable parameter-group-name source max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-parameters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeParameters")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeParametersResponse" common-lisp:nil)))
 (common-lisp:export 'describe-parameters))
(common-lisp:progn
 (common-lisp:defun describe-subnet-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subnet-group-names max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable subnet-group-names max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-subnet-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeSubnetGroups")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSubnetGroupsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-subnet-groups))
(common-lisp:progn
 (common-lisp:defun increase-replication-factor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-name new-replication-factor
                     availability-zones)
   (common-lisp:declare
    (common-lisp:ignorable cluster-name new-replication-factor
     availability-zones))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-increase-replication-factor-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"IncreaseReplicationFactor")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IncreaseReplicationFactorResponse" common-lisp:nil)))
 (common-lisp:export 'increase-replication-factor))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name next-token)
   (common-lisp:declare (common-lisp:ignorable resource-name next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTags")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsResponse" common-lisp:nil)))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun reboot-node
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-name node-id)
   (common-lisp:declare (common-lisp:ignorable cluster-name node-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-node-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RebootNode")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RebootNodeResponse" common-lisp:nil)))
 (common-lisp:export 'reboot-node))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name tags)
   (common-lisp:declare (common-lisp:ignorable resource-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TagResource")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TagResourceResponse" common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-name tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UntagResource")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UntagResourceResponse" common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-name description
                     preferred-maintenance-window notification-topic-arn
                     notification-topic-status parameter-group-name
                     security-group-ids)
   (common-lisp:declare
    (common-lisp:ignorable cluster-name description
     preferred-maintenance-window notification-topic-arn
     notification-topic-status parameter-group-name security-group-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateCluster")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateClusterResponse" common-lisp:nil)))
 (common-lisp:export 'update-cluster))
(common-lisp:progn
 (common-lisp:defun update-parameter-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key parameter-group-name
                     parameter-name-values)
   (common-lisp:declare
    (common-lisp:ignorable parameter-group-name parameter-name-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-parameter-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateParameterGroup")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateParameterGroupResponse" common-lisp:nil)))
 (common-lisp:export 'update-parameter-group))
(common-lisp:progn
 (common-lisp:defun update-subnet-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subnet-group-name description subnet-ids)
   (common-lisp:declare
    (common-lisp:ignorable subnet-group-name description subnet-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-subnet-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "dax")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateSubnetGroup")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateSubnetGroupResponse" common-lisp:nil)))
 (common-lisp:export 'update-subnet-group))