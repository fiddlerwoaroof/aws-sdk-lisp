;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/logs
  (:use)
  (:nicknames #:aws/logs)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/logs)

(common-lisp:deftype access-policy () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cancel-export-task-request (:copier common-lisp:nil))
   (task-id
    (common-lisp:error #A((19) common-lisp:base-char . ":taskid is required"))
    :type (common-lisp:or export-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-export-task-request
                    'make-cancel-export-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cancel-export-task-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-export-task-request (:copier common-lisp:nil))
   (task-name common-lisp:nil :type
    (common-lisp:or export-task-name common-lisp:null))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (log-stream-name-prefix common-lisp:nil :type
    (common-lisp:or log-stream-name common-lisp:null))
   (from
    (common-lisp:error #A((17) common-lisp:base-char . ":from is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (to (common-lisp:error #A((15) common-lisp:base-char . ":to is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (destination
    (common-lisp:error
     #A((24) common-lisp:base-char . ":destination is required"))
    :type (common-lisp:or export-destination-bucket common-lisp:null))
   (destination-prefix common-lisp:nil :type
    (common-lisp:or export-destination-prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-export-task-request
                    'make-create-export-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-export-task-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-name)))
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "logStreamNamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name-prefix)))
    (aws-sdk/generator/shape::to-query-params "from"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from)))
    (aws-sdk/generator/shape::to-query-params "to"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'to)))
    (aws-sdk/generator/shape::to-query-params "destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination)))
    (aws-sdk/generator/shape::to-query-params "destinationPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-prefix))))))
(common-lisp:progn
 (common-lisp:defstruct (create-export-task-response (:copier common-lisp:nil))
   (task-id common-lisp:nil :type
    (common-lisp:or export-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-export-task-response
                    'make-create-export-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-export-task-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-log-group-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-log-group-request 'make-create-log-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-log-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-log-stream-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (log-stream-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":logstreamname is required"))
    :type (common-lisp:or log-stream-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-log-stream-request
                    'make-create-log-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-log-stream-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (data-already-accepted-exception (:copier common-lisp:nil))
   (expected-sequence-token common-lisp:nil :type
    (common-lisp:or sequence-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'data-already-accepted-exception
                    'make-data-already-accepted-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          data-already-accepted-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "expectedSequenceToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expected-sequence-token))))))
(common-lisp:deftype days () 'common-lisp:integer)
(common-lisp:deftype default-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (delete-destination-request (:copier common-lisp:nil))
   (destination-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":destinationname is required"))
    :type (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-destination-request
                    'make-delete-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-destination-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "destinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-log-group-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-log-group-request 'make-delete-log-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-log-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-log-stream-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (log-stream-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":logstreamname is required"))
    :type (common-lisp:or log-stream-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-log-stream-request
                    'make-delete-log-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-log-stream-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-metric-filter-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (filter-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":filtername is required"))
    :type (common-lisp:or filter-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-metric-filter-request
                    'make-delete-metric-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-metric-filter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "filterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-retention-policy-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-retention-policy-request
                    'make-delete-retention-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-retention-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-subscription-filter-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (filter-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":filtername is required"))
    :type (common-lisp:or filter-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-subscription-filter-request
                    'make-delete-subscription-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-subscription-filter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "filterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name))))))
(common-lisp:deftype descending () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-destinations-request (:copier common-lisp:nil))
   (destination-name-prefix common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or describe-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-destinations-request
                    'make-describe-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-destinations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DestinationNamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-name-prefix)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-destinations-response (:copier common-lisp:nil))
   (destinations common-lisp:nil :type
    (common-lisp:or destinations common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-destinations-response
                    'make-describe-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-destinations-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "destinations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destinations)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-export-tasks-request (:copier common-lisp:nil))
   (task-id common-lisp:nil :type
    (common-lisp:or export-task-id common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or export-task-status-code common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or describe-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-export-tasks-request
                    'make-describe-export-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-export-tasks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-id)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-export-tasks-response (:copier common-lisp:nil))
   (export-tasks common-lisp:nil :type
    (common-lisp:or export-tasks common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-export-tasks-response
                    'make-describe-export-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-export-tasks-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "exportTasks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-tasks)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype describe-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-log-groups-request (:copier common-lisp:nil))
   (log-group-name-prefix common-lisp:nil :type
    (common-lisp:or log-group-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or describe-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-log-groups-request
                    'make-describe-log-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-log-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupNamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name-prefix)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-log-groups-response (:copier common-lisp:nil))
   (log-groups common-lisp:nil :type
    (common-lisp:or log-groups common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-log-groups-response
                    'make-describe-log-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-log-groups-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-groups)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-log-streams-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (log-stream-name-prefix common-lisp:nil :type
    (common-lisp:or log-stream-name common-lisp:null))
   (order-by common-lisp:nil :type (common-lisp:or order-by common-lisp:null))
   (descending common-lisp:nil :type
    (common-lisp:or descending common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or describe-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-log-streams-request
                    'make-describe-log-streams-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-log-streams-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "logStreamNamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name-prefix)))
    (aws-sdk/generator/shape::to-query-params "orderBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'order-by)))
    (aws-sdk/generator/shape::to-query-params "descending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'descending)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-log-streams-response (:copier common-lisp:nil))
   (log-streams common-lisp:nil :type
    (common-lisp:or log-streams common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-log-streams-response
                    'make-describe-log-streams-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-log-streams-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logStreams"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-streams)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-metric-filters-request (:copier common-lisp:nil))
   (log-group-name common-lisp:nil :type
    (common-lisp:or log-group-name common-lisp:null))
   (filter-name-prefix common-lisp:nil :type
    (common-lisp:or filter-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or describe-limit common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (metric-namespace common-lisp:nil :type
    (common-lisp:or metric-namespace common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-metric-filters-request
                    'make-describe-metric-filters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-metric-filters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "filterNamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name-prefix)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "metricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "metricNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-namespace))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-metric-filters-response (:copier common-lisp:nil))
   (metric-filters common-lisp:nil :type
    (common-lisp:or metric-filters common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-metric-filters-response
                    'make-describe-metric-filters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-metric-filters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "metricFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-filters)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subscription-filters-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (filter-name-prefix common-lisp:nil :type
    (common-lisp:or filter-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or describe-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-subscription-filters-request
                    'make-describe-subscription-filters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-subscription-filters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "filterNamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name-prefix)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subscription-filters-response (:copier common-lisp:nil))
   (subscription-filters common-lisp:nil :type
    (common-lisp:or subscription-filters common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-subscription-filters-response
                    'make-describe-subscription-filters-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-subscription-filters-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "subscriptionFilters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscription-filters)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (destination (:copier common-lisp:nil))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (access-policy common-lisp:nil :type
    (common-lisp:or access-policy common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape destination))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "destinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-name)))
    (aws-sdk/generator/shape::to-query-params "targetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-arn)))
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "accessPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policy)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "creationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time))))))
(common-lisp:deftype destination-arn () 'common-lisp:string)
(common-lisp:deftype destination-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype destinations () '(trivial-types:proper-list destination))
 (common-lisp:defun |make-destinations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype distribution () 'common-lisp:string)
(common-lisp:deftype event-id () 'common-lisp:string)
(common-lisp:deftype event-message () 'common-lisp:string)
(common-lisp:deftype event-number () 'common-lisp:integer)
(common-lisp:deftype events-limit () 'common-lisp:integer)
(common-lisp:deftype export-destination-bucket () 'common-lisp:string)
(common-lisp:deftype export-destination-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (export-task (:copier common-lisp:nil))
   (task-id common-lisp:nil :type
    (common-lisp:or export-task-id common-lisp:null))
   (task-name common-lisp:nil :type
    (common-lisp:or export-task-name common-lisp:null))
   (log-group-name common-lisp:nil :type
    (common-lisp:or log-group-name common-lisp:null))
   (from common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (to common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or export-destination-bucket common-lisp:null))
   (destination-prefix common-lisp:nil :type
    (common-lisp:or export-destination-prefix common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or export-task-status common-lisp:null))
   (execution-info common-lisp:nil :type
    (common-lisp:or export-task-execution-info common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-task 'make-export-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape export-task))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-id)))
    (aws-sdk/generator/shape::to-query-params "taskName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-name)))
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "from"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from)))
    (aws-sdk/generator/shape::to-query-params "to"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'to)))
    (aws-sdk/generator/shape::to-query-params "destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination)))
    (aws-sdk/generator/shape::to-query-params "destinationPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-prefix)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "executionInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-info))))))
(common-lisp:progn
 (common-lisp:defstruct (export-task-execution-info (:copier common-lisp:nil))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (completion-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-task-execution-info
                    'make-export-task-execution-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          export-task-execution-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "creationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "completionTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completion-time))))))
(common-lisp:deftype export-task-id () 'common-lisp:string)
(common-lisp:deftype export-task-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (export-task-status (:copier common-lisp:nil))
   (code common-lisp:nil :type
    (common-lisp:or export-task-status-code common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or export-task-status-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-task-status 'make-export-task-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape export-task-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype export-task-status-code () 'common-lisp:string)
(common-lisp:deftype export-task-status-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype export-tasks () '(trivial-types:proper-list export-task))
 (common-lisp:defun |make-export-tasks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list export-task))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (extracted-values
     (:constructor |make-extracted-values|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype filter-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (filter-log-events-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (log-stream-names common-lisp:nil :type
    (common-lisp:or input-log-stream-names common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (filter-pattern common-lisp:nil :type
    (common-lisp:or filter-pattern common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or events-limit common-lisp:null))
   (interleaved common-lisp:nil :type
    (common-lisp:or interleaved common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'filter-log-events-request
                    'make-filter-log-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          filter-log-events-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "logStreamNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-names)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "filterPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-pattern)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "interleaved"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'interleaved))))))
(common-lisp:progn
 (common-lisp:defstruct (filter-log-events-response (:copier common-lisp:nil))
   (events common-lisp:nil :type
    (common-lisp:or filtered-log-events common-lisp:null))
   (searched-log-streams common-lisp:nil :type
    (common-lisp:or searched-log-streams common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'filter-log-events-response
                    'make-filter-log-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          filter-log-events-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "searchedLogStreams"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'searched-log-streams)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype filter-name () 'common-lisp:string)
(common-lisp:deftype filter-pattern () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (filtered-log-event (:copier common-lisp:nil))
   (log-stream-name common-lisp:nil :type
    (common-lisp:or log-stream-name common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or event-message common-lisp:null))
   (ingestion-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (event-id common-lisp:nil :type (common-lisp:or event-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'filtered-log-event 'make-filtered-log-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape filtered-log-event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name)))
    (aws-sdk/generator/shape::to-query-params "timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ingestionTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ingestion-time)))
    (aws-sdk/generator/shape::to-query-params "eventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-id))))))
(common-lisp:progn
 (common-lisp:deftype filtered-log-events ()
   '(trivial-types:proper-list filtered-log-event))
 (common-lisp:defun |make-filtered-log-events|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filtered-log-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (get-log-events-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (log-stream-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":logstreamname is required"))
    :type (common-lisp:or log-stream-name common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or events-limit common-lisp:null))
   (start-from-head common-lisp:nil :type
    (common-lisp:or start-from-head common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-log-events-request 'make-get-log-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-log-events-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "startFromHead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-from-head))))))
(common-lisp:progn
 (common-lisp:defstruct (get-log-events-response (:copier common-lisp:nil))
   (events common-lisp:nil :type
    (common-lisp:or output-log-events common-lisp:null))
   (next-forward-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (next-backward-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-log-events-response 'make-get-log-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-log-events-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "nextForwardToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-forward-token)))
    (aws-sdk/generator/shape::to-query-params "nextBackwardToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-backward-token))))))
(common-lisp:progn
 (common-lisp:defstruct (input-log-event (:copier common-lisp:nil))
   (timestamp
    (common-lisp:error #A((19) common-lisp:base-char . ":string is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or event-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input-log-event 'make-input-log-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-log-event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype input-log-events ()
   '(trivial-types:proper-list input-log-event))
 (common-lisp:defun |make-input-log-events|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-log-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype input-log-stream-names ()
   '(trivial-types:proper-list log-stream-name))
 (common-lisp:defun |make-input-log-stream-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list log-stream-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype interleaved () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-operation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-operation-exception
                    'make-invalid-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-operation-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-sequence-token-exception (:copier common-lisp:nil))
   (expected-sequence-token common-lisp:nil :type
    (common-lisp:or sequence-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-sequence-token-exception
                    'make-invalid-sequence-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-sequence-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "expectedSequenceToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expected-sequence-token))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-log-group-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-log-group-request
                    'make-list-tags-log-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-log-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-log-group-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-log-group-response
                    'make-list-tags-log-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-log-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype log-event-index () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (log-group (:copier common-lisp:nil))
   (log-group-name common-lisp:nil :type
    (common-lisp:or log-group-name common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (retention-in-days common-lisp:nil :type
    (common-lisp:or days common-lisp:null))
   (metric-filter-count common-lisp:nil :type
    (common-lisp:or filter-count common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (stored-bytes common-lisp:nil :type
    (common-lisp:or stored-bytes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'log-group 'make-log-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape log-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "creationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "retentionInDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retention-in-days)))
    (aws-sdk/generator/shape::to-query-params "metricFilterCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-filter-count)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "storedBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stored-bytes))))))
(common-lisp:deftype log-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype log-groups () '(trivial-types:proper-list log-group))
 (common-lisp:defun |make-log-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list log-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (log-stream (:copier common-lisp:nil))
   (log-stream-name common-lisp:nil :type
    (common-lisp:or log-stream-name common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (first-event-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-event-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-ingestion-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (upload-sequence-token common-lisp:nil :type
    (common-lisp:or sequence-token common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (stored-bytes common-lisp:nil :type
    (common-lisp:or stored-bytes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'log-stream 'make-log-stream))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape log-stream))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name)))
    (aws-sdk/generator/shape::to-query-params "creationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "firstEventTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'first-event-timestamp)))
    (aws-sdk/generator/shape::to-query-params "lastEventTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-event-timestamp)))
    (aws-sdk/generator/shape::to-query-params "lastIngestionTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-ingestion-time)))
    (aws-sdk/generator/shape::to-query-params "uploadSequenceToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-sequence-token)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "storedBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stored-bytes))))))
(common-lisp:deftype log-stream-name () 'common-lisp:string)
(common-lisp:deftype log-stream-searched-completely () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype log-streams () '(trivial-types:proper-list log-stream))
 (common-lisp:defun |make-log-streams|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list log-stream))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (metric-filter (:copier common-lisp:nil))
   (filter-name common-lisp:nil :type
    (common-lisp:or filter-name common-lisp:null))
   (filter-pattern common-lisp:nil :type
    (common-lisp:or filter-pattern common-lisp:null))
   (metric-transformations common-lisp:nil :type
    (common-lisp:or metric-transformations common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (log-group-name common-lisp:nil :type
    (common-lisp:or log-group-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'metric-filter 'make-metric-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape metric-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "filterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name)))
    (aws-sdk/generator/shape::to-query-params "filterPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-pattern)))
    (aws-sdk/generator/shape::to-query-params "metricTransformations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-transformations)))
    (aws-sdk/generator/shape::to-query-params "creationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct (metric-filter-match-record (:copier common-lisp:nil))
   (event-number common-lisp:nil :type
    (common-lisp:or event-number common-lisp:null))
   (event-message common-lisp:nil :type
    (common-lisp:or event-message common-lisp:null))
   (extracted-values common-lisp:nil :type
    (common-lisp:or extracted-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-filter-match-record
                    'make-metric-filter-match-record))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          metric-filter-match-record))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "eventNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-number)))
    (aws-sdk/generator/shape::to-query-params "eventMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-message)))
    (aws-sdk/generator/shape::to-query-params "extractedValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'extracted-values))))))
(common-lisp:progn
 (common-lisp:deftype metric-filter-matches ()
   '(trivial-types:proper-list metric-filter-match-record))
 (common-lisp:defun |make-metric-filter-matches|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            metric-filter-match-record))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype metric-filters ()
   '(trivial-types:proper-list metric-filter))
 (common-lisp:defun |make-metric-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype metric-namespace () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (metric-transformation (:copier common-lisp:nil))
   (metric-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":metricname is required"))
    :type (common-lisp:or metric-name common-lisp:null))
   (metric-namespace
    (common-lisp:error
     #A((28) common-lisp:base-char . ":metricnamespace is required"))
    :type (common-lisp:or metric-namespace common-lisp:null))
   (metric-value
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metricvalue is required"))
    :type (common-lisp:or metric-value common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or default-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-transformation 'make-metric-transformation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          metric-transformation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "metricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "metricNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-namespace)))
    (aws-sdk/generator/shape::to-query-params "metricValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-value)))
    (aws-sdk/generator/shape::to-query-params "defaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value))))))
(common-lisp:progn
 (common-lisp:deftype metric-transformations ()
   '(trivial-types:proper-list metric-transformation))
 (common-lisp:defun |make-metric-transformations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-transformation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-value () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-aborted-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'operation-aborted-exception
                    'make-operation-aborted-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-aborted-exception))
   (common-lisp:append)))
(common-lisp:deftype order-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (output-log-event (:copier common-lisp:nil))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or event-message common-lisp:null))
   (ingestion-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-log-event 'make-output-log-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape output-log-event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ingestionTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ingestion-time))))))
(common-lisp:progn
 (common-lisp:deftype output-log-events ()
   '(trivial-types:proper-list output-log-event))
 (common-lisp:defun |make-output-log-events|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output-log-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (put-destination-policy-request (:copier common-lisp:nil))
   (destination-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":destinationname is required"))
    :type (common-lisp:or destination-name common-lisp:null))
   (access-policy
    (common-lisp:error
     #A((25) common-lisp:base-char . ":accesspolicy is required"))
    :type (common-lisp:or access-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-destination-policy-request
                    'make-put-destination-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-destination-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "destinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-name)))
    (aws-sdk/generator/shape::to-query-params "accessPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-policy))))))
(common-lisp:progn
 (common-lisp:defstruct (put-destination-request (:copier common-lisp:nil))
   (destination-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":destinationname is required"))
    :type (common-lisp:or destination-name common-lisp:null))
   (target-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":targetarn is required"))
    :type (common-lisp:or target-arn common-lisp:null))
   (role-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":rolearn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-destination-request 'make-put-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-destination-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "destinationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-name)))
    (aws-sdk/generator/shape::to-query-params "targetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-arn)))
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (put-destination-response (:copier common-lisp:nil))
   (destination common-lisp:nil :type
    (common-lisp:or destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-destination-response 'make-put-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-destination-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination))))))
(common-lisp:progn
 (common-lisp:defstruct (put-log-events-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (log-stream-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":logstreamname is required"))
    :type (common-lisp:or log-stream-name common-lisp:null))
   (log-events
    (common-lisp:error
     #A((22) common-lisp:base-char . ":logevents is required"))
    :type (common-lisp:or input-log-events common-lisp:null))
   (sequence-token common-lisp:nil :type
    (common-lisp:or sequence-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-log-events-request 'make-put-log-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-log-events-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name)))
    (aws-sdk/generator/shape::to-query-params "logEvents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-events)))
    (aws-sdk/generator/shape::to-query-params "sequenceToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sequence-token))))))
(common-lisp:progn
 (common-lisp:defstruct (put-log-events-response (:copier common-lisp:nil))
   (next-sequence-token common-lisp:nil :type
    (common-lisp:or sequence-token common-lisp:null))
   (rejected-log-events-info common-lisp:nil :type
    (common-lisp:or rejected-log-events-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-log-events-response 'make-put-log-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-log-events-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextSequenceToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-sequence-token)))
    (aws-sdk/generator/shape::to-query-params "rejectedLogEventsInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejected-log-events-info))))))
(common-lisp:progn
 (common-lisp:defstruct (put-metric-filter-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (filter-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":filtername is required"))
    :type (common-lisp:or filter-name common-lisp:null))
   (filter-pattern
    (common-lisp:error
     #A((26) common-lisp:base-char . ":filterpattern is required"))
    :type (common-lisp:or filter-pattern common-lisp:null))
   (metric-transformations
    (common-lisp:error
     #A((34) common-lisp:base-char . ":metrictransformations is required"))
    :type (common-lisp:or metric-transformations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-metric-filter-request
                    'make-put-metric-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-metric-filter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "filterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name)))
    (aws-sdk/generator/shape::to-query-params "filterPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-pattern)))
    (aws-sdk/generator/shape::to-query-params "metricTransformations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-transformations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-retention-policy-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (retention-in-days
    (common-lisp:error
     #A((28) common-lisp:base-char . ":retentionindays is required"))
    :type (common-lisp:or days common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-retention-policy-request
                    'make-put-retention-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-retention-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "retentionInDays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retention-in-days))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-subscription-filter-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (filter-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":filtername is required"))
    :type (common-lisp:or filter-name common-lisp:null))
   (filter-pattern
    (common-lisp:error
     #A((26) common-lisp:base-char . ":filterpattern is required"))
    :type (common-lisp:or filter-pattern common-lisp:null))
   (destination-arn
    (common-lisp:error
     #A((27) common-lisp:base-char . ":destinationarn is required"))
    :type (common-lisp:or destination-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (distribution common-lisp:nil :type
    (common-lisp:or distribution common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-subscription-filter-request
                    'make-put-subscription-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-subscription-filter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "filterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name)))
    (aws-sdk/generator/shape::to-query-params "filterPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-pattern)))
    (aws-sdk/generator/shape::to-query-params "destinationArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-arn)))
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "distribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution))))))
(common-lisp:progn
 (common-lisp:defstruct (rejected-log-events-info (:copier common-lisp:nil))
   (too-new-log-event-start-index common-lisp:nil :type
    (common-lisp:or log-event-index common-lisp:null))
   (too-old-log-event-end-index common-lisp:nil :type
    (common-lisp:or log-event-index common-lisp:null))
   (expired-log-event-end-index common-lisp:nil :type
    (common-lisp:or log-event-index common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rejected-log-events-info 'make-rejected-log-events-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rejected-log-events-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tooNewLogEventStartIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'too-new-log-event-start-index)))
    (aws-sdk/generator/shape::to-query-params "tooOldLogEventEndIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'too-old-log-event-end-index)))
    (aws-sdk/generator/shape::to-query-params "expiredLogEventEndIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expired-log-event-end-index))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'make-resource-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-already-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (searched-log-stream (:copier common-lisp:nil))
   (log-stream-name common-lisp:nil :type
    (common-lisp:or log-stream-name common-lisp:null))
   (searched-completely common-lisp:nil :type
    (common-lisp:or log-stream-searched-completely common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'searched-log-stream 'make-searched-log-stream))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape searched-log-stream))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name)))
    (aws-sdk/generator/shape::to-query-params "searchedCompletely"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'searched-completely))))))
(common-lisp:progn
 (common-lisp:deftype searched-log-streams ()
   '(trivial-types:proper-list searched-log-stream))
 (common-lisp:defun |make-searched-log-streams|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list searched-log-stream))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sequence-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (service-unavailable-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'make-service-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          service-unavailable-exception))
   (common-lisp:append)))
(common-lisp:deftype start-from-head () 'common-lisp:boolean)
(common-lisp:deftype stored-bytes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (subscription-filter (:copier common-lisp:nil))
   (filter-name common-lisp:nil :type
    (common-lisp:or filter-name common-lisp:null))
   (log-group-name common-lisp:nil :type
    (common-lisp:or log-group-name common-lisp:null))
   (filter-pattern common-lisp:nil :type
    (common-lisp:or filter-pattern common-lisp:null))
   (destination-arn common-lisp:nil :type
    (common-lisp:or destination-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (distribution common-lisp:nil :type
    (common-lisp:or distribution common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'subscription-filter 'make-subscription-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape subscription-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "filterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-name)))
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "filterPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-pattern)))
    (aws-sdk/generator/shape::to-query-params "destinationArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-arn)))
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "distribution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution)))
    (aws-sdk/generator/shape::to-query-params "creationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time))))))
(common-lisp:progn
 (common-lisp:deftype subscription-filters ()
   '(trivial-types:proper-list subscription-filter))
 (common-lisp:defun |make-subscription-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscription-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-log-group-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-log-group-request 'make-tag-log-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-log-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:defstruct
    (tags
     (:constructor |make-tags|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype target-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype test-event-messages ()
   '(trivial-types:proper-list event-message))
 (common-lisp:defun |make-test-event-messages|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-message))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (test-metric-filter-request (:copier common-lisp:nil))
   (filter-pattern
    (common-lisp:error
     #A((26) common-lisp:base-char . ":filterpattern is required"))
    :type (common-lisp:or filter-pattern common-lisp:null))
   (log-event-messages
    (common-lisp:error
     #A((29) common-lisp:base-char . ":logeventmessages is required"))
    :type (common-lisp:or test-event-messages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-metric-filter-request
                    'make-test-metric-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-metric-filter-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "filterPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-pattern)))
    (aws-sdk/generator/shape::to-query-params "logEventMessages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-event-messages))))))
(common-lisp:progn
 (common-lisp:defstruct (test-metric-filter-response (:copier common-lisp:nil))
   (matches common-lisp:nil :type
    (common-lisp:or metric-filter-matches common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-metric-filter-response
                    'make-test-metric-filter-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-metric-filter-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "matches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'matches))))))
(common-lisp:deftype timestamp () 'common-lisp:integer)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (untag-log-group-request (:copier common-lisp:nil))
   (log-group-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":loggroupname is required"))
    :type (common-lisp:or log-group-name common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-log-group-request 'make-untag-log-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-log-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "logGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun cancel-export-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-id)
   (common-lisp:declare (common-lisp:ignorable task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-export-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelExportTask")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'cancel-export-task))
(common-lisp:progn
 (common-lisp:defun create-export-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-name log-group-name
                     log-stream-name-prefix from to destination
                     destination-prefix)
   (common-lisp:declare
    (common-lisp:ignorable task-name log-group-name log-stream-name-prefix from
     to destination destination-prefix))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-export-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateExportTask")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateExportTaskResponse" common-lisp:nil)))
 (common-lisp:export 'create-export-task))
(common-lisp:progn
 (common-lisp:defun create-log-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name tags)
   (common-lisp:declare (common-lisp:ignorable log-group-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-log-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLogGroup")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-log-group))
(common-lisp:progn
 (common-lisp:defun create-log-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name log-stream-name)
   (common-lisp:declare (common-lisp:ignorable log-group-name log-stream-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-log-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLogStream")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-log-stream))
(common-lisp:progn
 (common-lisp:defun delete-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-name)
   (common-lisp:declare (common-lisp:ignorable destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDestination")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-destination))
(common-lisp:progn
 (common-lisp:defun delete-log-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name)
   (common-lisp:declare (common-lisp:ignorable log-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-log-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLogGroup")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-log-group))
(common-lisp:progn
 (common-lisp:defun delete-log-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name log-stream-name)
   (common-lisp:declare (common-lisp:ignorable log-group-name log-stream-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-log-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLogStream")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-log-stream))
(common-lisp:progn
 (common-lisp:defun delete-metric-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name filter-name)
   (common-lisp:declare (common-lisp:ignorable log-group-name filter-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-metric-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteMetricFilter")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-metric-filter))
(common-lisp:progn
 (common-lisp:defun delete-retention-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name)
   (common-lisp:declare (common-lisp:ignorable log-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-retention-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRetentionPolicy")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-retention-policy))
(common-lisp:progn
 (common-lisp:defun delete-subscription-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name filter-name)
   (common-lisp:declare (common-lisp:ignorable log-group-name filter-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-subscription-filter-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSubscriptionFilter")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-subscription-filter))
(common-lisp:progn
 (common-lisp:defun describe-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-name-prefix next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable destination-name-prefix next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-destinations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDestinations")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDestinationsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-destinations))
(common-lisp:progn
 (common-lisp:defun describe-export-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-id status-code next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable task-id status-code next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-export-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeExportTasks")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeExportTasksResponse" common-lisp:nil)))
 (common-lisp:export 'describe-export-tasks))
(common-lisp:progn
 (common-lisp:defun describe-log-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name-prefix next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name-prefix next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-log-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLogGroups")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLogGroupsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-log-groups))
(common-lisp:progn
 (common-lisp:defun describe-log-streams
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name log-stream-name-prefix
                     order-by descending next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name log-stream-name-prefix order-by
     descending next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-log-streams-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLogStreams")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLogStreamsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-log-streams))
(common-lisp:progn
 (common-lisp:defun describe-metric-filters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name filter-name-prefix
                     next-token limit metric-name metric-namespace)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name filter-name-prefix next-token limit
     metric-name metric-namespace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-metric-filters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeMetricFilters")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMetricFiltersResponse" common-lisp:nil)))
 (common-lisp:export 'describe-metric-filters))
(common-lisp:progn
 (common-lisp:defun describe-subscription-filters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name filter-name-prefix
                     next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name filter-name-prefix next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-subscription-filters-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeSubscriptionFilters")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeSubscriptionFiltersResponse" common-lisp:nil)))
 (common-lisp:export 'describe-subscription-filters))
(common-lisp:progn
 (common-lisp:defun filter-log-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name log-stream-names
                     start-time end-time filter-pattern next-token limit
                     interleaved)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name log-stream-names start-time end-time
     filter-pattern next-token limit interleaved))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-filter-log-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"FilterLogEvents")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "FilterLogEventsResponse" common-lisp:nil)))
 (common-lisp:export 'filter-log-events))
(common-lisp:progn
 (common-lisp:defun get-log-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name log-stream-name start-time
                     end-time next-token limit start-from-head)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name log-stream-name start-time end-time
     next-token limit start-from-head))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-log-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetLogEvents")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetLogEventsResponse" common-lisp:nil)))
 (common-lisp:export 'get-log-events))
(common-lisp:progn
 (common-lisp:defun list-tags-log-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name)
   (common-lisp:declare (common-lisp:ignorable log-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-log-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagsLogGroup")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsLogGroupResponse" common-lisp:nil)))
 (common-lisp:export 'list-tags-log-group))
(common-lisp:progn
 (common-lisp:defun put-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-name target-arn role-arn)
   (common-lisp:declare
    (common-lisp:ignorable destination-name target-arn role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutDestination")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutDestinationResponse" common-lisp:nil)))
 (common-lisp:export 'put-destination))
(common-lisp:progn
 (common-lisp:defun put-destination-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-name access-policy)
   (common-lisp:declare (common-lisp:ignorable destination-name access-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-destination-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutDestinationPolicy")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-destination-policy))
(common-lisp:progn
 (common-lisp:defun put-log-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name log-stream-name log-events
                     sequence-token)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name log-stream-name log-events
     sequence-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-log-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutLogEvents")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutLogEventsResponse" common-lisp:nil)))
 (common-lisp:export 'put-log-events))
(common-lisp:progn
 (common-lisp:defun put-metric-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name filter-name filter-pattern
                     metric-transformations)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name filter-name filter-pattern
     metric-transformations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-metric-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutMetricFilter")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-metric-filter))
(common-lisp:progn
 (common-lisp:defun put-retention-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name retention-in-days)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name retention-in-days))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-retention-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutRetentionPolicy")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-retention-policy))
(common-lisp:progn
 (common-lisp:defun put-subscription-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name filter-name filter-pattern
                     destination-arn role-arn distribution)
   (common-lisp:declare
    (common-lisp:ignorable log-group-name filter-name filter-pattern
     destination-arn role-arn distribution))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-subscription-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutSubscriptionFilter")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-subscription-filter))
(common-lisp:progn
 (common-lisp:defun tag-log-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name tags)
   (common-lisp:declare (common-lisp:ignorable log-group-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-log-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TagLogGroup")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'tag-log-group))
(common-lisp:progn
 (common-lisp:defun test-metric-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-pattern log-event-messages)
   (common-lisp:declare
    (common-lisp:ignorable filter-pattern log-event-messages))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-metric-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TestMetricFilter")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TestMetricFilterResponse" common-lisp:nil)))
 (common-lisp:export 'test-metric-filter))
(common-lisp:progn
 (common-lisp:defun untag-log-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-group-name tags)
   (common-lisp:declare (common-lisp:ignorable log-group-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-log-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((4) common-lisp:base-char . "logs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UntagLogGroup")
                                  ("Version" ,@"2014-03-28"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'untag-log-group))