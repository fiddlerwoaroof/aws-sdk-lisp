;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/codestar
  (:use)
  (:nicknames #:aws/codestar)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/codestar)

(common-lisp:progn
 (common-lisp:defstruct
     (associate-team-member-request (:copier common-lisp:nil))
   (project-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":projectid is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (project-role
    (common-lisp:error
     #A((24) common-lisp:base-char . ":projectrole is required"))
    :type (common-lisp:or role common-lisp:null))
   (remote-access-allowed common-lisp:nil :type
    (common-lisp:or remote-access-allowed common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-team-member-request
                    'make-associate-team-member-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-team-member-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-id)))
    (aws-sdk/generator/shape::to-query-params "clientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token)))
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "projectRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-role)))
    (aws-sdk/generator/shape::to-query-params "remoteAccessAllowed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-allowed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-team-member-result (:copier common-lisp:nil))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-team-member-result
                    'make-associate-team-member-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-team-member-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "clientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token))))))
(common-lisp:deftype client-request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-project-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or project-name common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or project-description common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-request 'make-create-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "clientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-project-result (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or project-arn common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (project-template-id common-lisp:nil :type
    (common-lisp:or project-template-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-result 'make-create-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-project-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "clientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token)))
    (aws-sdk/generator/shape::to-query-params "projectTemplateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-template-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-user-profile-request (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (display-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":displayname is required"))
    :type (common-lisp:or user-profile-display-name common-lisp:null))
   (email-address
    (common-lisp:error
     #A((25) common-lisp:base-char . ":emailaddress is required"))
    :type (common-lisp:or email common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or ssh-public-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-profile-request
                    'make-create-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "displayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "emailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "sshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key))))))
(common-lisp:progn
 (common-lisp:defstruct (create-user-profile-result (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or user-profile-display-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or ssh-public-key common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or created-timestamp common-lisp:null))
   (last-modified-timestamp common-lisp:nil :type
    (common-lisp:or last-modified-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-profile-result
                    'make-create-user-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "displayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "emailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "sshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key)))
    (aws-sdk/generator/shape::to-query-params "createdTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "lastModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-timestamp))))))
(common-lisp:deftype created-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-project-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (delete-stack common-lisp:nil :type
    (common-lisp:or delete-stack common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-project-request 'make-delete-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "clientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token)))
    (aws-sdk/generator/shape::to-query-params "deleteStack"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-stack))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-project-result (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or stack-id common-lisp:null))
   (project-arn common-lisp:nil :type
    (common-lisp:or project-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-project-result 'make-delete-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-project-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "projectArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-arn))))))
(common-lisp:deftype delete-stack () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (delete-user-profile-request (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-profile-request
                    'make-delete-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-user-profile-result (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-profile-result
                    'make-delete-user-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-project-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or project-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-project-request 'make-describe-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-project-result (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or project-name common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or project-id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or project-arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or project-description common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (created-time-stamp common-lisp:nil :type
    (common-lisp:or created-timestamp common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or stack-id common-lisp:null))
   (project-template-id common-lisp:nil :type
    (common-lisp:or project-template-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-project-result 'make-describe-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-project-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "clientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token)))
    (aws-sdk/generator/shape::to-query-params "createdTimeStamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time-stamp)))
    (aws-sdk/generator/shape::to-query-params "stackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "projectTemplateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-template-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-profile-request (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-profile-request
                    'make-describe-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-profile-result (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or user-profile-display-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or ssh-public-key common-lisp:null))
   (created-timestamp
    (common-lisp:error
     #A((29) common-lisp:base-char . ":createdtimestamp is required"))
    :type (common-lisp:or created-timestamp common-lisp:null))
   (last-modified-timestamp
    (common-lisp:error
     #A((34) common-lisp:base-char . ":lastmodifiedtimestamp is required"))
    :type (common-lisp:or last-modified-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-profile-result
                    'make-describe-user-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "displayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "emailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "sshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key)))
    (aws-sdk/generator/shape::to-query-params "createdTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "lastModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-timestamp))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-team-member-request (:copier common-lisp:nil))
   (project-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":projectid is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-team-member-request
                    'make-disassociate-team-member-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-team-member-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-id)))
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-team-member-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-team-member-result
                    'make-disassociate-team-member-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-team-member-result))
   (common-lisp:append)))
(common-lisp:deftype email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-next-token-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'make-invalid-next-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-next-token-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-service-role-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-service-role-exception
                    'make-invalid-service-role-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-service-role-exception))
   (common-lisp:append)))
(common-lisp:deftype last-modified-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (list-projects-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-request 'make-list-projects-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-projects-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-projects-result (:copier common-lisp:nil))
   (projects
    (common-lisp:error
     #A((21) common-lisp:base-char . ":projects is required"))
    :type (common-lisp:or projects-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-result 'make-list-projects-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-projects-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projects"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projects)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-resources-request (:copier common-lisp:nil))
   (project-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":projectid is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-request 'make-list-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resources-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-id)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-resources-result (:copier common-lisp:nil))
   (resources common-lisp:nil :type
    (common-lisp:or resources-result common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-result 'make-list-resources-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resources-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-team-members-request (:copier common-lisp:nil))
   (project-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":projectid is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-team-members-request
                    'make-list-team-members-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-team-members-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-id)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-team-members-result (:copier common-lisp:nil))
   (team-members
    (common-lisp:error
     #A((24) common-lisp:base-char . ":teammembers is required"))
    :type (common-lisp:or team-member-result common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-team-members-result 'make-list-team-members-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-team-members-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "teamMembers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'team-members)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-user-profiles-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-profiles-request
                    'make-list-user-profiles-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-profiles-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-user-profiles-result (:copier common-lisp:nil))
   (user-profiles
    (common-lisp:error
     #A((25) common-lisp:base-char . ":userprofiles is required"))
    :type (common-lisp:or user-profiles-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-profiles-result
                    'make-list-user-profiles-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-user-profiles-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userProfiles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-profiles)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (project-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'project-already-exists-exception
                    'make-project-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          project-already-exists-exception))
   (common-lisp:append)))
(common-lisp:deftype project-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (project-configuration-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'project-configuration-exception
                    'make-project-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          project-configuration-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (project-creation-failed-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'project-creation-failed-exception
                    'make-project-creation-failed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          project-creation-failed-exception))
   (common-lisp:append)))
(common-lisp:deftype project-description () 'common-lisp:string)
(common-lisp:deftype project-id () 'common-lisp:string)
(common-lisp:deftype project-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (project-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'project-not-found-exception
                    'make-project-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          project-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (project-summary (:copier common-lisp:nil))
   (project-id common-lisp:nil :type
    (common-lisp:or project-id common-lisp:null))
   (project-arn common-lisp:nil :type
    (common-lisp:or project-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'project-summary 'make-project-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape project-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-id)))
    (aws-sdk/generator/shape::to-query-params "projectArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-arn))))))
(common-lisp:deftype project-template-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype projects-list ()
   '(trivial-types:proper-list project-summary))
 (common-lisp:defun |make-projects-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list project-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype remote-access-allowed () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (resource (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resources-result ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-resources-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:deftype ssh-public-key () 'common-lisp:string)
(common-lisp:deftype stack-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (team-member (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (project-role
    (common-lisp:error
     #A((24) common-lisp:base-char . ":projectrole is required"))
    :type (common-lisp:or role common-lisp:null))
   (remote-access-allowed common-lisp:nil :type
    (common-lisp:or remote-access-allowed common-lisp:null)))
 (common-lisp:export (common-lisp:list 'team-member 'make-team-member))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape team-member))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "projectRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-role)))
    (aws-sdk/generator/shape::to-query-params "remoteAccessAllowed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-allowed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (team-member-already-associated-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'team-member-already-associated-exception
                    'make-team-member-already-associated-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          team-member-already-associated-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (team-member-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'team-member-not-found-exception
                    'make-team-member-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          team-member-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype team-member-result ()
   '(trivial-types:proper-list team-member))
 (common-lisp:defun |make-team-member-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list team-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (update-project-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or project-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or project-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-project-request 'make-update-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-project-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (update-project-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-project-result 'make-update-project-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-project-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-team-member-request (:copier common-lisp:nil))
   (project-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":projectid is required"))
    :type (common-lisp:or project-id common-lisp:null))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (project-role common-lisp:nil :type (common-lisp:or role common-lisp:null))
   (remote-access-allowed common-lisp:nil :type
    (common-lisp:or remote-access-allowed common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-team-member-request
                    'make-update-team-member-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-team-member-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-id)))
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "projectRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-role)))
    (aws-sdk/generator/shape::to-query-params "remoteAccessAllowed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-allowed))))))
(common-lisp:progn
 (common-lisp:defstruct (update-team-member-result (:copier common-lisp:nil))
   (user-arn common-lisp:nil :type (common-lisp:or user-arn common-lisp:null))
   (project-role common-lisp:nil :type (common-lisp:or role common-lisp:null))
   (remote-access-allowed common-lisp:nil :type
    (common-lisp:or remote-access-allowed common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-team-member-result
                    'make-update-team-member-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-team-member-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "projectRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-role)))
    (aws-sdk/generator/shape::to-query-params "remoteAccessAllowed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remote-access-allowed))))))
(common-lisp:progn
 (common-lisp:defstruct (update-user-profile-request (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or user-profile-display-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or ssh-public-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-profile-request
                    'make-update-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "displayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "emailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "sshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key))))))
(common-lisp:progn
 (common-lisp:defstruct (update-user-profile-result (:copier common-lisp:nil))
   (user-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":userarn is required"))
    :type (common-lisp:or user-arn common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or user-profile-display-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or ssh-public-key common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or created-timestamp common-lisp:null))
   (last-modified-timestamp common-lisp:nil :type
    (common-lisp:or last-modified-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-profile-result
                    'make-update-user-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "displayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "emailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "sshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key)))
    (aws-sdk/generator/shape::to-query-params "createdTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "lastModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-timestamp))))))
(common-lisp:deftype user-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (user-profile-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'user-profile-already-exists-exception
                    'make-user-profile-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-profile-already-exists-exception))
   (common-lisp:append)))
(common-lisp:deftype user-profile-display-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (user-profile-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'user-profile-not-found-exception
                    'make-user-profile-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-profile-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (user-profile-summary (:copier common-lisp:nil))
   (user-arn common-lisp:nil :type (common-lisp:or user-arn common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or user-profile-display-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or ssh-public-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-profile-summary 'make-user-profile-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-profile-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "userArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-arn)))
    (aws-sdk/generator/shape::to-query-params "displayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "emailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "sshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key))))))
(common-lisp:progn
 (common-lisp:deftype user-profiles-list ()
   '(trivial-types:proper-list user-profile-summary))
 (common-lisp:defun |make-user-profiles-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-profile-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (validation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'make-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape validation-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defun associate-team-member
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-id client-request-token user-arn
                     project-role remote-access-allowed)
   (common-lisp:declare
    (common-lisp:ignorable project-id client-request-token user-arn
     project-role remote-access-allowed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-team-member-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssociateTeamMember")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssociateTeamMemberResult" common-lisp:nil)))
 (common-lisp:export 'associate-team-member))
(common-lisp:progn
 (common-lisp:defun create-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name id description client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable name id description client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateProject")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateProjectResult" common-lisp:nil)))
 (common-lisp:export 'create-project))
(common-lisp:progn
 (common-lisp:defun create-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-arn display-name email-address
                     ssh-public-key)
   (common-lisp:declare
    (common-lisp:ignorable user-arn display-name email-address ssh-public-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUserProfile")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUserProfileResult" common-lisp:nil)))
 (common-lisp:export 'create-user-profile))
(common-lisp:progn
 (common-lisp:defun delete-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id client-request-token delete-stack)
   (common-lisp:declare
    (common-lisp:ignorable id client-request-token delete-stack))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteProject")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteProjectResult" common-lisp:nil)))
 (common-lisp:export 'delete-project))
(common-lisp:progn
 (common-lisp:defun delete-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-arn)
   (common-lisp:declare (common-lisp:ignorable user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUserProfile")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteUserProfileResult" common-lisp:nil)))
 (common-lisp:export 'delete-user-profile))
(common-lisp:progn
 (common-lisp:defun describe-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeProject")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeProjectResult" common-lisp:nil)))
 (common-lisp:export 'describe-project))
(common-lisp:progn
 (common-lisp:defun describe-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-arn)
   (common-lisp:declare (common-lisp:ignorable user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeUserProfile")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeUserProfileResult" common-lisp:nil)))
 (common-lisp:export 'describe-user-profile))
(common-lisp:progn
 (common-lisp:defun disassociate-team-member
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-id user-arn)
   (common-lisp:declare (common-lisp:ignorable project-id user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-team-member-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisassociateTeamMember")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisassociateTeamMemberResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-team-member))
(common-lisp:progn
 (common-lisp:defun list-projects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-projects-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListProjects")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListProjectsResult" common-lisp:nil)))
 (common-lisp:export 'list-projects))
(common-lisp:progn
 (common-lisp:defun list-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable project-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListResources")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListResourcesResult" common-lisp:nil)))
 (common-lisp:export 'list-resources))
(common-lisp:progn
 (common-lisp:defun list-team-members
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable project-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-team-members-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTeamMembers")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTeamMembersResult" common-lisp:nil)))
 (common-lisp:export 'list-team-members))
(common-lisp:progn
 (common-lisp:defun list-user-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-user-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListUserProfiles")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListUserProfilesResult" common-lisp:nil)))
 (common-lisp:export 'list-user-profiles))
(common-lisp:progn
 (common-lisp:defun update-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name description)
   (common-lisp:declare (common-lisp:ignorable id name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateProject")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateProjectResult" common-lisp:nil)))
 (common-lisp:export 'update-project))
(common-lisp:progn
 (common-lisp:defun update-team-member
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-id user-arn project-role
                     remote-access-allowed)
   (common-lisp:declare
    (common-lisp:ignorable project-id user-arn project-role
     remote-access-allowed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-team-member-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateTeamMember")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateTeamMemberResult" common-lisp:nil)))
 (common-lisp:export 'update-team-member))
(common-lisp:progn
 (common-lisp:defun update-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-arn display-name email-address
                     ssh-public-key)
   (common-lisp:declare
    (common-lisp:ignorable user-arn display-name email-address ssh-public-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "codestar")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUserProfile")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateUserProfileResult" common-lisp:nil)))
 (common-lisp:export 'update-user-profile))