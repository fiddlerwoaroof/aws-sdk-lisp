;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/workdocs
  (:use)
  (:nicknames #:aws/workdocs)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/workdocs)

(common-lisp:progn
 (common-lisp:defstruct
     (abort-document-version-upload-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":version-id is required"))
    :type (common-lisp:or document-version-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-document-version-upload-request
                    'make-abort-document-version-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          abort-document-version-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id))))))
(common-lisp:progn
 (common-lisp:defstruct (activate-user-request (:copier common-lisp:nil))
   (user-id
    (common-lisp:error #A((20) common-lisp:base-char . ":user-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activate-user-request 'make-activate-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activate-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token))))))
(common-lisp:progn
 (common-lisp:defstruct (activate-user-response (:copier common-lisp:nil))
   (user common-lisp:nil :type (common-lisp:or user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activate-user-response 'make-activate-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activate-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct (activity (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or activity-type common-lisp:null))
   (time-stamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (organization-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null))
   (initiator common-lisp:nil :type
    (common-lisp:or user-metadata common-lisp:null))
   (participants common-lisp:nil :type
    (common-lisp:or participants common-lisp:null))
   (resource-metadata common-lisp:nil :type
    (common-lisp:or resource-metadata common-lisp:null))
   (original-parent common-lisp:nil :type
    (common-lisp:or resource-metadata common-lisp:null))
   (comment-metadata common-lisp:nil :type
    (common-lisp:or comment-metadata common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activity 'make-activity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "TimeStamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-stamp)))
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id)))
    (aws-sdk/generator/shape::to-query-params "Initiator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiator)))
    (aws-sdk/generator/shape::to-query-params "Participants"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'participants)))
    (aws-sdk/generator/shape::to-query-params "ResourceMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-metadata)))
    (aws-sdk/generator/shape::to-query-params "OriginalParent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'original-parent)))
    (aws-sdk/generator/shape::to-query-params "CommentMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment-metadata))))))
(common-lisp:deftype activity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (add-resource-permissions-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (principals
    (common-lisp:error
     #A((23) common-lisp:base-char . ":principals is required"))
    :type (common-lisp:or share-principal-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-resource-permissions-request
                    'make-add-resource-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-resource-permissions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Principals"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principals))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-resource-permissions-response (:copier common-lisp:nil))
   (share-results common-lisp:nil :type
    (common-lisp:or share-results-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-resource-permissions-response
                    'make-add-resource-permissions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-resource-permissions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ShareResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'share-results))))))
(common-lisp:deftype authentication-header-type () 'common-lisp:string)
(common-lisp:deftype boolean-type () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (comment (:copier common-lisp:nil))
   (comment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":comment-id is required"))
    :type (common-lisp:or comment-id-type common-lisp:null))
   (parent-id common-lisp:nil :type
    (common-lisp:or comment-id-type common-lisp:null))
   (thread-id common-lisp:nil :type
    (common-lisp:or comment-id-type common-lisp:null))
   (text common-lisp:nil :type
    (common-lisp:or comment-text-type common-lisp:null))
   (contributor common-lisp:nil :type (common-lisp:or user common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or comment-status-type common-lisp:null))
   (visibility common-lisp:nil :type
    (common-lisp:or comment-visibility-type common-lisp:null))
   (recipient-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'comment 'make-comment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape comment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment-id)))
    (aws-sdk/generator/shape::to-query-params "ParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "ThreadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thread-id)))
    (aws-sdk/generator/shape::to-query-params "Text"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text)))
    (aws-sdk/generator/shape::to-query-params "Contributor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'contributor)))
    (aws-sdk/generator/shape::to-query-params "CreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Visibility"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'visibility)))
    (aws-sdk/generator/shape::to-query-params "RecipientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipient-id))))))
(common-lisp:deftype comment-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype comment-list () '(trivial-types:proper-list comment))
 (common-lisp:defun |make-comment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list comment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (comment-metadata (:copier common-lisp:nil))
   (comment-id common-lisp:nil :type
    (common-lisp:or comment-id-type common-lisp:null))
   (contributor common-lisp:nil :type (common-lisp:or user common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (comment-status common-lisp:nil :type
    (common-lisp:or comment-status-type common-lisp:null))
   (recipient-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'comment-metadata 'make-comment-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape comment-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment-id)))
    (aws-sdk/generator/shape::to-query-params "Contributor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'contributor)))
    (aws-sdk/generator/shape::to-query-params "CreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "CommentStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment-status)))
    (aws-sdk/generator/shape::to-query-params "RecipientId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipient-id))))))
(common-lisp:deftype comment-status-type () 'common-lisp:string)
(common-lisp:deftype comment-text-type () 'common-lisp:string)
(common-lisp:deftype comment-visibility-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (create-comment-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":version-id is required"))
    :type (common-lisp:or document-version-id-type common-lisp:null))
   (parent-id common-lisp:nil :type
    (common-lisp:or comment-id-type common-lisp:null))
   (thread-id common-lisp:nil :type
    (common-lisp:or comment-id-type common-lisp:null))
   (text
    (common-lisp:error #A((17) common-lisp:base-char . ":text is required"))
    :type (common-lisp:or comment-text-type common-lisp:null))
   (visibility common-lisp:nil :type
    (common-lisp:or comment-visibility-type common-lisp:null))
   (notify-collaborators common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-comment-request 'make-create-comment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-comment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "ParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "ThreadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thread-id)))
    (aws-sdk/generator/shape::to-query-params "Text"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text)))
    (aws-sdk/generator/shape::to-query-params "Visibility"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'visibility)))
    (aws-sdk/generator/shape::to-query-params "NotifyCollaborators"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notify-collaborators))))))
(common-lisp:progn
 (common-lisp:defstruct (create-comment-response (:copier common-lisp:nil))
   (comment common-lisp:nil :type (common-lisp:or comment common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-comment-response 'make-create-comment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-comment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-custom-metadata-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or document-version-id-type common-lisp:null))
   (custom-metadata
    (common-lisp:error
     #A((28) common-lisp:base-char . ":custom-metadata is required"))
    :type (common-lisp:or custom-metadata-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-custom-metadata-request
                    'make-create-custom-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-custom-metadata-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "CustomMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-custom-metadata-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-custom-metadata-response
                    'make-create-custom-metadata-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-custom-metadata-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-folder-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (parent-folder-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":parent-folder-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-folder-request 'make-create-folder-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-folder-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ParentFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-folder-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-folder-response (:copier common-lisp:nil))
   (metadata common-lisp:nil :type
    (common-lisp:or folder-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-folder-response 'make-create-folder-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-folder-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (create-labels-request (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (labels
    (common-lisp:error #A((19) common-lisp:base-char . ":labels is required"))
    :type (common-lisp:or labels common-lisp:null))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-labels-request 'make-create-labels-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-labels-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Labels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'labels)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-labels-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-labels-response 'make-create-labels-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-labels-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-notification-subscription-request (:copier common-lisp:nil))
   (organization-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":organization-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (endpoint
    (common-lisp:error
     #A((21) common-lisp:base-char . ":endpoint is required"))
    :type (common-lisp:or subscription-end-point-type common-lisp:null))
   (protocol
    (common-lisp:error
     #A((21) common-lisp:base-char . ":protocol is required"))
    :type (common-lisp:or subscription-protocol-type common-lisp:null))
   (subscription-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":subscription-type is required"))
    :type (common-lisp:or subscription-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-notification-subscription-request
                    'make-create-notification-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-notification-subscription-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id)))
    (aws-sdk/generator/shape::to-query-params "Endpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "SubscriptionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscription-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-notification-subscription-response (:copier common-lisp:nil))
   (subscription common-lisp:nil :type
    (common-lisp:or subscription common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-notification-subscription-response
                    'make-create-notification-subscription-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-notification-subscription-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Subscription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscription))))))
(common-lisp:progn
 (common-lisp:defstruct (create-user-request (:copier common-lisp:nil))
   (organization-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or username-type common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email-address-type common-lisp:null))
   (given-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":given-name is required"))
    :type (common-lisp:or user-attribute-value-type common-lisp:null))
   (surname
    (common-lisp:error #A((20) common-lisp:base-char . ":surname is required"))
    :type (common-lisp:or user-attribute-value-type common-lisp:null))
   (password
    (common-lisp:error
     #A((21) common-lisp:base-char . ":password is required"))
    :type (common-lisp:or password-type common-lisp:null))
   (time-zone-id common-lisp:nil :type
    (common-lisp:or time-zone-id-type common-lisp:null))
   (storage-rule common-lisp:nil :type
    (common-lisp:or storage-rule-type common-lisp:null))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-request 'make-create-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "EmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "GivenName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'given-name)))
    (aws-sdk/generator/shape::to-query-params "Surname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'surname)))
    (aws-sdk/generator/shape::to-query-params "Password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password)))
    (aws-sdk/generator/shape::to-query-params "TimeZoneId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-zone-id)))
    (aws-sdk/generator/shape::to-query-params "StorageRule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-rule)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-user-response (:copier common-lisp:nil))
   (user common-lisp:nil :type (common-lisp:or user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-response 'make-create-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:deftype custom-metadata-key-list ()
   '(trivial-types:proper-list custom-metadata-key-type))
 (common-lisp:defun |make-custom-metadata-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-metadata-key-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype custom-metadata-key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (custom-metadata-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-metadata-limit-exceeded-exception
                    'make-custom-metadata-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          custom-metadata-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:defstruct
    (custom-metadata-map
     (:constructor |make-custom-metadata-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype custom-metadata-value-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (deactivate-user-request (:copier common-lisp:nil))
   (user-id
    (common-lisp:error #A((20) common-lisp:base-char . ":user-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deactivate-user-request 'make-deactivate-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deactivate-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deactivating-last-system-user-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deactivating-last-system-user-exception
                    'make-deactivating-last-system-user-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deactivating-last-system-user-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-comment-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":version-id is required"))
    :type (common-lisp:or document-version-id-type common-lisp:null))
   (comment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":comment-id is required"))
    :type (common-lisp:or comment-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-comment-request 'make-delete-comment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-comment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "CommentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-metadata-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or document-version-id-type common-lisp:null))
   (keys common-lisp:nil :type
    (common-lisp:or custom-metadata-key-list common-lisp:null))
   (delete-all common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-custom-metadata-request
                    'make-delete-custom-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-custom-metadata-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "Keys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keys)))
    (aws-sdk/generator/shape::to-query-params "DeleteAll"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-all))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-metadata-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-custom-metadata-response
                    'make-delete-custom-metadata-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-custom-metadata-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-document-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-document-request 'make-delete-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-folder-contents-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (folder-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":folder-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-folder-contents-request
                    'make-delete-folder-contents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-folder-contents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "FolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folder-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-folder-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (folder-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":folder-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-folder-request 'make-delete-folder-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-folder-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "FolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folder-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-labels-request (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (labels common-lisp:nil :type (common-lisp:or labels common-lisp:null))
   (delete-all common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-labels-request 'make-delete-labels-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-labels-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "Labels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'labels)))
    (aws-sdk/generator/shape::to-query-params "DeleteAll"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-all))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-labels-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-labels-response 'make-delete-labels-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-labels-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-notification-subscription-request (:copier common-lisp:nil))
   (subscription-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":subscription-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (organization-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":organization-id is required"))
    :type (common-lisp:or id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-notification-subscription-request
                    'make-delete-notification-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-notification-subscription-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubscriptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscription-id)))
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-user-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (user-id
    (common-lisp:error #A((20) common-lisp:base-char . ":user-id is required"))
    :type (common-lisp:or id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-request 'make-delete-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-activities-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (organization-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null))
   (user-id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activities-request
                    'make-describe-activities-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activities-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id)))
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-activities-response (:copier common-lisp:nil))
   (user-activities common-lisp:nil :type
    (common-lisp:or user-activities common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activities-response
                    'make-describe-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserActivities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-activities)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-comments-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":version-id is required"))
    :type (common-lisp:or document-version-id-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-comments-request
                    'make-describe-comments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-comments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-comments-response (:copier common-lisp:nil))
   (comments common-lisp:nil :type
    (common-lisp:or comment-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-comments-response
                    'make-describe-comments-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-comments-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Comments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comments)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-versions-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (include common-lisp:nil :type
    (common-lisp:or field-names-type common-lisp:null))
   (fields common-lisp:nil :type
    (common-lisp:or field-names-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-versions-request
                    'make-describe-document-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-document-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Include"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include)))
    (aws-sdk/generator/shape::to-query-params "Fields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fields))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-versions-response (:copier common-lisp:nil))
   (document-versions common-lisp:nil :type
    (common-lisp:or document-version-metadata-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-versions-response
                    'make-describe-document-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-document-versions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DocumentVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-versions)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-folder-contents-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (folder-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":folder-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (sort common-lisp:nil :type
    (common-lisp:or resource-sort-type common-lisp:null))
   (order common-lisp:nil :type (common-lisp:or order-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or folder-content-type common-lisp:null))
   (include common-lisp:nil :type
    (common-lisp:or field-names-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-folder-contents-request
                    'make-describe-folder-contents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-folder-contents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "FolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folder-id)))
    (aws-sdk/generator/shape::to-query-params "Sort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort)))
    (aws-sdk/generator/shape::to-query-params "Order"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'order)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Include"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-folder-contents-response (:copier common-lisp:nil))
   (folders common-lisp:nil :type
    (common-lisp:or folder-metadata-list common-lisp:null))
   (documents common-lisp:nil :type
    (common-lisp:or document-metadata-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-folder-contents-response
                    'make-describe-folder-contents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-folder-contents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Folders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folders)))
    (aws-sdk/generator/shape::to-query-params "Documents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documents)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-notification-subscriptions-request (:copier common-lisp:nil))
   (organization-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":organization-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-notification-subscriptions-request
                    'make-describe-notification-subscriptions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-notification-subscriptions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-notification-subscriptions-response (:copier common-lisp:nil))
   (subscriptions common-lisp:nil :type
    (common-lisp:or subscription-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-notification-subscriptions-response
                    'make-describe-notification-subscriptions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-notification-subscriptions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Subscriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscriptions)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-permissions-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-permissions-request
                    'make-describe-resource-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-resource-permissions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-permissions-response (:copier common-lisp:nil))
   (principals common-lisp:nil :type
    (common-lisp:or principal-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-permissions-response
                    'make-describe-resource-permissions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-resource-permissions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Principals"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principals)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-root-folders-request (:copier common-lisp:nil))
   (authentication-token
    (common-lisp:error
     #A((33) common-lisp:base-char . ":authentication-token is required"))
    :type (common-lisp:or authentication-header-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-root-folders-request
                    'make-describe-root-folders-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-root-folders-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-root-folders-response (:copier common-lisp:nil))
   (folders common-lisp:nil :type
    (common-lisp:or folder-metadata-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-root-folders-response
                    'make-describe-root-folders-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-root-folders-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Folders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folders)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-users-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (organization-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null))
   (user-ids common-lisp:nil :type
    (common-lisp:or user-ids-type common-lisp:null))
   (query common-lisp:nil :type
    (common-lisp:or search-query-type common-lisp:null))
   (include common-lisp:nil :type
    (common-lisp:or user-filter-type common-lisp:null))
   (order common-lisp:nil :type (common-lisp:or order-type common-lisp:null))
   (sort common-lisp:nil :type
    (common-lisp:or user-sort-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (fields common-lisp:nil :type
    (common-lisp:or field-names-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-users-request 'make-describe-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-users-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id)))
    (aws-sdk/generator/shape::to-query-params "UserIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-ids)))
    (aws-sdk/generator/shape::to-query-params "Query"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query)))
    (aws-sdk/generator/shape::to-query-params "Include"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include)))
    (aws-sdk/generator/shape::to-query-params "Order"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'order)))
    (aws-sdk/generator/shape::to-query-params "Sort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Fields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fields))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-users-response (:copier common-lisp:nil))
   (users common-lisp:nil :type
    (common-lisp:or organization-user-list common-lisp:null))
   (total-number-of-users common-lisp:nil :type
    (common-lisp:or size-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-users-response 'make-describe-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-users-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Users"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'users)))
    (aws-sdk/generator/shape::to-query-params "TotalNumberOfUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-number-of-users)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:deftype document-content-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (document-locked-for-comments-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-locked-for-comments-exception
                    'make-document-locked-for-comments-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-locked-for-comments-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (document-metadata (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (creator-id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (parent-folder-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (latest-version-metadata common-lisp:nil :type
    (common-lisp:or document-version-metadata common-lisp:null))
   (resource-state common-lisp:nil :type
    (common-lisp:or resource-state-type common-lisp:null))
   (labels common-lisp:nil :type (common-lisp:or labels common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-metadata 'make-document-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape document-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "CreatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creator-id)))
    (aws-sdk/generator/shape::to-query-params "ParentFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-folder-id)))
    (aws-sdk/generator/shape::to-query-params "CreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'modified-timestamp)))
    (aws-sdk/generator/shape::to-query-params "LatestVersionMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-version-metadata)))
    (aws-sdk/generator/shape::to-query-params "ResourceState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-state)))
    (aws-sdk/generator/shape::to-query-params "Labels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'labels))))))
(common-lisp:progn
 (common-lisp:deftype document-metadata-list ()
   '(trivial-types:proper-list document-metadata))
 (common-lisp:defun |make-document-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-source-type () 'common-lisp:string)
(common-lisp:defstruct
    (document-source-url-map
     (:constructor |make-document-source-url-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype document-status-type () 'common-lisp:string)
(common-lisp:deftype document-thumbnail-type () 'common-lisp:string)
(common-lisp:defstruct
    (document-thumbnail-url-map
     (:constructor |make-document-thumbnail-url-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype document-version-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (document-version-metadata (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or document-version-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or document-content-type common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or size-type common-lisp:null))
   (signature common-lisp:nil :type
    (common-lisp:or hash-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or document-status-type common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (content-created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (content-modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (creator-id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (thumbnail common-lisp:nil :type
    (common-lisp:or document-thumbnail-url-map common-lisp:null))
   (source common-lisp:nil :type
    (common-lisp:or document-source-url-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-version-metadata
                    'make-document-version-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          document-version-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size)))
    (aws-sdk/generator/shape::to-query-params "Signature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "CreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'modified-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ContentCreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ContentModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-modified-timestamp)))
    (aws-sdk/generator/shape::to-query-params "CreatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creator-id)))
    (aws-sdk/generator/shape::to-query-params "Thumbnail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thumbnail)))
    (aws-sdk/generator/shape::to-query-params "Source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source))))))
(common-lisp:progn
 (common-lisp:deftype document-version-metadata-list ()
   '(trivial-types:proper-list document-version-metadata))
 (common-lisp:defun |make-document-version-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-version-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-version-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (draft-upload-out-of-sync-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'draft-upload-out-of-sync-exception
                    'make-draft-upload-out-of-sync-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          draft-upload-out-of-sync-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype email-address-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (entity-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-already-exists-exception
                    'make-entity-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          entity-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype entity-id-list () '(trivial-types:proper-list id-type))
 (common-lisp:defun |make-entity-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list id-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (entity-not-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null))
   (entity-ids common-lisp:nil :type
    (common-lisp:or entity-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-not-exists-exception
                    'make-entity-not-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          entity-not-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "EntityIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'entity-ids))))))
(common-lisp:deftype error-message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (failed-dependency-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-dependency-exception
                    'make-failed-dependency-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          failed-dependency-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype field-names-type () 'common-lisp:string)
(common-lisp:deftype folder-content-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (folder-metadata (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (creator-id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (parent-folder-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (resource-state common-lisp:nil :type
    (common-lisp:or resource-state-type common-lisp:null))
   (signature common-lisp:nil :type
    (common-lisp:or hash-type common-lisp:null))
   (labels common-lisp:nil :type (common-lisp:or labels common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or size-type common-lisp:null))
   (latest-version-size common-lisp:nil :type
    (common-lisp:or size-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'folder-metadata 'make-folder-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape folder-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "CreatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creator-id)))
    (aws-sdk/generator/shape::to-query-params "ParentFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-folder-id)))
    (aws-sdk/generator/shape::to-query-params "CreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'modified-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ResourceState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-state)))
    (aws-sdk/generator/shape::to-query-params "Signature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature)))
    (aws-sdk/generator/shape::to-query-params "Labels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'labels)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size)))
    (aws-sdk/generator/shape::to-query-params "LatestVersionSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-version-size))))))
(common-lisp:progn
 (common-lisp:deftype folder-metadata-list ()
   '(trivial-types:proper-list folder-metadata))
 (common-lisp:defun |make-folder-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list folder-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (get-current-user-request (:copier common-lisp:nil))
   (authentication-token
    (common-lisp:error
     #A((33) common-lisp:base-char . ":authentication-token is required"))
    :type (common-lisp:or authentication-header-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-current-user-request 'make-get-current-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-current-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-current-user-response (:copier common-lisp:nil))
   (user common-lisp:nil :type (common-lisp:or user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-current-user-response
                    'make-get-current-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-current-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct (get-document-path-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (fields common-lisp:nil :type
    (common-lisp:or field-names-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-path-request
                    'make-get-document-path-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-document-path-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Fields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fields)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (get-document-path-response (:copier common-lisp:nil))
   (path common-lisp:nil :type
    (common-lisp:or resource-path common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-path-response
                    'make-get-document-path-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-document-path-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path))))))
(common-lisp:progn
 (common-lisp:defstruct (get-document-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (include-custom-metadata common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-request 'make-get-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "IncludeCustomMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-custom-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (get-document-response (:copier common-lisp:nil))
   (metadata common-lisp:nil :type
    (common-lisp:or document-metadata common-lisp:null))
   (custom-metadata common-lisp:nil :type
    (common-lisp:or custom-metadata-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-response 'make-get-document-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-document-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "CustomMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-document-version-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":version-id is required"))
    :type (common-lisp:or document-version-id-type common-lisp:null))
   (fields common-lisp:nil :type
    (common-lisp:or field-names-type common-lisp:null))
   (include-custom-metadata common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-version-request
                    'make-get-document-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-document-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "Fields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fields)))
    (aws-sdk/generator/shape::to-query-params "IncludeCustomMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-custom-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-document-version-response (:copier common-lisp:nil))
   (metadata common-lisp:nil :type
    (common-lisp:or document-version-metadata common-lisp:null))
   (custom-metadata common-lisp:nil :type
    (common-lisp:or custom-metadata-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-document-version-response
                    'make-get-document-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-document-version-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "CustomMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (get-folder-path-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (folder-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":folder-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit-type common-lisp:null))
   (fields common-lisp:nil :type
    (common-lisp:or field-names-type common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or page-marker-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-folder-path-request 'make-get-folder-path-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-folder-path-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "FolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folder-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Fields"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fields)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (get-folder-path-response (:copier common-lisp:nil))
   (path common-lisp:nil :type
    (common-lisp:or resource-path common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-folder-path-response 'make-get-folder-path-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-folder-path-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path))))))
(common-lisp:progn
 (common-lisp:defstruct (get-folder-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (folder-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":folder-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (include-custom-metadata common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-folder-request 'make-get-folder-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-folder-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "FolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folder-id)))
    (aws-sdk/generator/shape::to-query-params "IncludeCustomMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-custom-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (get-folder-response (:copier common-lisp:nil))
   (metadata common-lisp:nil :type
    (common-lisp:or folder-metadata common-lisp:null))
   (custom-metadata common-lisp:nil :type
    (common-lisp:or custom-metadata-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-folder-response 'make-get-folder-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-folder-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "CustomMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (group-metadata (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or group-name-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'group-metadata 'make-group-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape group-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype group-metadata-list ()
   '(trivial-types:proper-list group-metadata))
 (common-lisp:defun |make-group-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype group-name-type () 'common-lisp:string)
(common-lisp:deftype hash-type () 'common-lisp:string)
(common-lisp:deftype header-name-type () 'common-lisp:string)
(common-lisp:deftype header-value-type () 'common-lisp:string)
(common-lisp:deftype id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (illegal-user-state-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'illegal-user-state-exception
                    'make-illegal-user-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          illegal-user-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-document-version-upload-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (content-created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (content-modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or document-content-type common-lisp:null))
   (document-size-in-bytes common-lisp:nil :type
    (common-lisp:or size-type common-lisp:null))
   (parent-folder-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":parent-folder-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-document-version-upload-request
                    'make-initiate-document-version-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-document-version-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ContentCreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ContentModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-modified-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ContentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "DocumentSizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "ParentFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-folder-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-document-version-upload-response (:copier common-lisp:nil))
   (metadata common-lisp:nil :type
    (common-lisp:or document-metadata common-lisp:null))
   (upload-metadata common-lisp:nil :type
    (common-lisp:or upload-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-document-version-upload-response
                    'make-initiate-document-version-upload-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-document-version-upload-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metadata)))
    (aws-sdk/generator/shape::to-query-params "UploadMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-argument-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-argument-exception
                    'make-invalid-argument-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-argument-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-operation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-operation-exception
                    'make-invalid-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-operation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype label () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype labels () '(trivial-types:proper-list label))
 (common-lisp:defun |make-labels|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list label))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype limit-type () 'common-lisp:integer)
(common-lisp:deftype locale-type () 'common-lisp:string)
(common-lisp:deftype marker-type () 'common-lisp:string)
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:deftype order-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype organization-user-list ()
   '(trivial-types:proper-list user))
 (common-lisp:defun |make-organization-user-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user))
   aws-sdk/generator/shape::members))
(common-lisp:deftype page-marker-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (participants (:copier common-lisp:nil))
   (users common-lisp:nil :type
    (common-lisp:or user-metadata-list common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or group-metadata-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'participants 'make-participants))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape participants))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Users"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'users)))
    (aws-sdk/generator/shape::to-query-params "Groups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'groups))))))
(common-lisp:deftype password-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (permission-info (:copier common-lisp:nil))
   (role common-lisp:nil :type (common-lisp:or role-type common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or role-permission-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'permission-info 'make-permission-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape permission-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype permission-info-list ()
   '(trivial-types:proper-list permission-info))
 (common-lisp:defun |make-permission-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permission-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype positive-size-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (principal (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null))
   (roles common-lisp:nil :type
    (common-lisp:or permission-info-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'principal 'make-principal))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape principal))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Roles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'roles))))))
(common-lisp:progn
 (common-lisp:deftype principal-list () '(trivial-types:proper-list principal))
 (common-lisp:defun |make-principal-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list principal))
   aws-sdk/generator/shape::members))
(common-lisp:deftype principal-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (prohibited-state-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'prohibited-state-exception
                    'make-prohibited-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          prohibited-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-all-resource-permissions-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-all-resource-permissions-request
                    'make-remove-all-resource-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-all-resource-permissions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-resource-permission-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (principal-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":principal-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (principal-type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-resource-permission-request
                    'make-remove-resource-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-resource-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "PrincipalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-id)))
    (aws-sdk/generator/shape::to-query-params "PrincipalType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-already-checked-out-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-already-checked-out-exception
                    'make-resource-already-checked-out-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-already-checked-out-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype resource-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-metadata (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or resource-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (original-name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or document-version-id-type common-lisp:null))
   (owner common-lisp:nil :type
    (common-lisp:or user-metadata common-lisp:null))
   (parent-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-metadata 'make-resource-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "OriginalName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'original-name)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "ParentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id))))))
(common-lisp:deftype resource-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-path (:copier common-lisp:nil))
   (components common-lisp:nil :type
    (common-lisp:or resource-path-component-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource-path 'make-resource-path))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-path))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Components"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'components))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-path-component (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-path-component 'make-resource-path-component))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-path-component))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype resource-path-component-list ()
   '(trivial-types:proper-list resource-path-component))
 (common-lisp:defun |make-resource-path-component-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-path-component))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-sort-type () 'common-lisp:string)
(common-lisp:deftype resource-state-type () 'common-lisp:string)
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype role-permission-type () 'common-lisp:string)
(common-lisp:deftype role-type () 'common-lisp:string)
(common-lisp:deftype search-query-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (service-unavailable-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'make-service-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          service-unavailable-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (share-principal (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or principal-type common-lisp:null))
   (role
    (common-lisp:error #A((17) common-lisp:base-char . ":role is required"))
    :type (common-lisp:or role-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'share-principal 'make-share-principal))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape share-principal))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role))))))
(common-lisp:progn
 (common-lisp:deftype share-principal-list ()
   '(trivial-types:proper-list share-principal))
 (common-lisp:defun |make-share-principal-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list share-principal))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (share-result (:copier common-lisp:nil))
   (principal-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or share-status-type common-lisp:null))
   (share-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'share-result 'make-share-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape share-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PrincipalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-id)))
    (aws-sdk/generator/shape::to-query-params "Role"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "ShareId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'share-id)))
    (aws-sdk/generator/shape::to-query-params "StatusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message))))))
(common-lisp:progn
 (common-lisp:deftype share-results-list ()
   '(trivial-types:proper-list share-result))
 (common-lisp:defun |make-share-results-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list share-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype share-status-type () 'common-lisp:string)
(common-lisp:defstruct
    (signed-header-map
     (:constructor |make-signed-header-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype size-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (storage-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-limit-exceeded-exception
                    'make-storage-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          storage-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (storage-limit-will-exceed-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-limit-will-exceed-exception
                    'make-storage-limit-will-exceed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          storage-limit-will-exceed-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (storage-rule-type (:copier common-lisp:nil))
   (storage-allocated-in-bytes common-lisp:nil :type
    (common-lisp:or positive-size-type common-lisp:null))
   (storage-type common-lisp:nil :type
    (common-lisp:or storage-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-rule-type 'make-storage-rule-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape storage-rule-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StorageAllocatedInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-allocated-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "StorageType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-type))))))
(common-lisp:deftype storage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (subscription (:copier common-lisp:nil))
   (subscription-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null))
   (end-point common-lisp:nil :type
    (common-lisp:or subscription-end-point-type common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or subscription-protocol-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape subscription))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SubscriptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscription-id)))
    (aws-sdk/generator/shape::to-query-params "EndPoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-point)))
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol))))))
(common-lisp:deftype subscription-end-point-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subscription-list ()
   '(trivial-types:proper-list subscription))
 (common-lisp:defun |make-subscription-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscription))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subscription-protocol-type () 'common-lisp:string)
(common-lisp:deftype subscription-type () 'common-lisp:string)
(common-lisp:deftype time-zone-id-type () 'common-lisp:string)
(common-lisp:deftype timestamp-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (too-many-labels-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-labels-exception
                    'make-too-many-labels-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-labels-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-subscriptions-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-subscriptions-exception
                    'make-too-many-subscriptions-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-subscriptions-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unauthorized-operation-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-operation-exception
                    'make-unauthorized-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unauthorized-operation-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (unauthorized-resource-access-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-resource-access-exception
                    'make-unauthorized-resource-access-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unauthorized-resource-access-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (update-document-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (parent-folder-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (resource-state common-lisp:nil :type
    (common-lisp:or resource-state-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-document-request 'make-update-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-document-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ParentFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-folder-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-state))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-document-version-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (document-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":document-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (version-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":version-id is required"))
    :type (common-lisp:or document-version-id-type common-lisp:null))
   (version-status common-lisp:nil :type
    (common-lisp:or document-version-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-document-version-request
                    'make-update-document-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-document-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "DocumentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document-id)))
    (aws-sdk/generator/shape::to-query-params "VersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-id)))
    (aws-sdk/generator/shape::to-query-params "VersionStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-status))))))
(common-lisp:progn
 (common-lisp:defstruct (update-folder-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (folder-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":folder-id is required"))
    :type (common-lisp:or resource-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-name-type common-lisp:null))
   (parent-folder-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (resource-state common-lisp:nil :type
    (common-lisp:or resource-state-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-folder-request 'make-update-folder-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-folder-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "FolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'folder-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ParentFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-folder-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-state))))))
(common-lisp:progn
 (common-lisp:defstruct (update-user-request (:copier common-lisp:nil))
   (authentication-token common-lisp:nil :type
    (common-lisp:or authentication-header-type common-lisp:null))
   (user-id
    (common-lisp:error #A((20) common-lisp:base-char . ":user-id is required"))
    :type (common-lisp:or id-type common-lisp:null))
   (given-name common-lisp:nil :type
    (common-lisp:or user-attribute-value-type common-lisp:null))
   (surname common-lisp:nil :type
    (common-lisp:or user-attribute-value-type common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or user-type common-lisp:null))
   (storage-rule common-lisp:nil :type
    (common-lisp:or storage-rule-type common-lisp:null))
   (time-zone-id common-lisp:nil :type
    (common-lisp:or time-zone-id-type common-lisp:null))
   (locale common-lisp:nil :type
    (common-lisp:or locale-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-request 'make-update-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-user-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AuthenticationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authentication-token)))
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "GivenName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'given-name)))
    (aws-sdk/generator/shape::to-query-params "Surname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'surname)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "StorageRule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-rule)))
    (aws-sdk/generator/shape::to-query-params "TimeZoneId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-zone-id)))
    (aws-sdk/generator/shape::to-query-params "Locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale))))))
(common-lisp:progn
 (common-lisp:defstruct (update-user-response (:copier common-lisp:nil))
   (user common-lisp:nil :type (common-lisp:or user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-response 'make-update-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-user-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-metadata (:copier common-lisp:nil))
   (upload-url common-lisp:nil :type
    (common-lisp:or url-type common-lisp:null))
   (signed-headers common-lisp:nil :type
    (common-lisp:or signed-header-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'upload-metadata 'make-upload-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape upload-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UploadUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-url)))
    (aws-sdk/generator/shape::to-query-params "SignedHeaders"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signed-headers))))))
(common-lisp:deftype url-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (user (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (username common-lisp:nil :type
    (common-lisp:or username-type common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email-address-type common-lisp:null))
   (given-name common-lisp:nil :type
    (common-lisp:or user-attribute-value-type common-lisp:null))
   (surname common-lisp:nil :type
    (common-lisp:or user-attribute-value-type common-lisp:null))
   (organization-id common-lisp:nil :type
    (common-lisp:or id-type common-lisp:null))
   (root-folder-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (recycle-bin-folder-id common-lisp:nil :type
    (common-lisp:or resource-id-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or user-status-type common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or user-type common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (time-zone-id common-lisp:nil :type
    (common-lisp:or time-zone-id-type common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale-type common-lisp:null))
   (storage common-lisp:nil :type
    (common-lisp:or user-storage-metadata common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user 'make-user))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "EmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address)))
    (aws-sdk/generator/shape::to-query-params "GivenName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'given-name)))
    (aws-sdk/generator/shape::to-query-params "Surname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'surname)))
    (aws-sdk/generator/shape::to-query-params "OrganizationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'organization-id)))
    (aws-sdk/generator/shape::to-query-params "RootFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-folder-id)))
    (aws-sdk/generator/shape::to-query-params "RecycleBinFolderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recycle-bin-folder-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "CreatedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-timestamp)))
    (aws-sdk/generator/shape::to-query-params "ModifiedTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'modified-timestamp)))
    (aws-sdk/generator/shape::to-query-params "TimeZoneId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-zone-id)))
    (aws-sdk/generator/shape::to-query-params "Locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "Storage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage))))))
(common-lisp:progn
 (common-lisp:deftype user-activities () '(trivial-types:proper-list activity))
 (common-lisp:defun |make-user-activities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-attribute-value-type () 'common-lisp:string)
(common-lisp:deftype user-filter-type () 'common-lisp:string)
(common-lisp:deftype user-ids-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (user-metadata (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id-type common-lisp:null))
   (username common-lisp:nil :type
    (common-lisp:or username-type common-lisp:null))
   (given-name common-lisp:nil :type
    (common-lisp:or user-attribute-value-type common-lisp:null))
   (surname common-lisp:nil :type
    (common-lisp:or user-attribute-value-type common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email-address-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-metadata 'make-user-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "GivenName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'given-name)))
    (aws-sdk/generator/shape::to-query-params "Surname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'surname)))
    (aws-sdk/generator/shape::to-query-params "EmailAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-address))))))
(common-lisp:progn
 (common-lisp:deftype user-metadata-list ()
   '(trivial-types:proper-list user-metadata))
 (common-lisp:defun |make-user-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-sort-type () 'common-lisp:string)
(common-lisp:deftype user-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (user-storage-metadata (:copier common-lisp:nil))
   (storage-utilized-in-bytes common-lisp:nil :type
    (common-lisp:or size-type common-lisp:null))
   (storage-rule common-lisp:nil :type
    (common-lisp:or storage-rule-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-storage-metadata 'make-user-storage-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          user-storage-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StorageUtilizedInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-utilized-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "StorageRule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'storage-rule))))))
(common-lisp:deftype user-type () 'common-lisp:string)
(common-lisp:deftype username-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun abort-document-version-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id
                     version-id)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-abort-document-version-upload-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/versions/~a"
                                                   documentid versionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"AbortDocumentVersionUpload")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'abort-document-version-upload))
(common-lisp:progn
 (common-lisp:defun activate-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-id authentication-token)
   (common-lisp:declare (common-lisp:ignorable user-id authentication-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-activate-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/users/~a/activation"
                                                   userid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ActivateUser")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ActivateUserResponse" common-lisp:nil)))
 (common-lisp:export 'activate-user))
(common-lisp:progn
 (common-lisp:defun add-resource-permissions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token resource-id
                     principals)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token resource-id principals))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-resource-permissions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/permissions"
                                                   resourceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"AddResourcePermissions")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddResourcePermissionsResponse" common-lisp:nil)))
 (common-lisp:export 'add-resource-permissions))
(common-lisp:progn
 (common-lisp:defun create-comment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id
                     version-id parent-id thread-id text visibility
                     notify-collaborators)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id version-id
     parent-id thread-id text visibility notify-collaborators))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-comment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/versions/~a/comment"
                                                   documentid versionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateComment")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateCommentResponse" common-lisp:nil)))
 (common-lisp:export 'create-comment))
(common-lisp:progn
 (common-lisp:defun create-custom-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token resource-id
                     version-id custom-metadata)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token resource-id version-id
     custom-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-custom-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/customMetadata"
                                                   resourceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateCustomMetadata")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateCustomMetadataResponse" common-lisp:nil)))
 (common-lisp:export 'create-custom-metadata))
(common-lisp:progn
 (common-lisp:defun create-folder
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token name
                     parent-folder-id)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token name parent-folder-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-folder-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateFolder")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateFolderResponse" common-lisp:nil)))
 (common-lisp:export 'create-folder))
(common-lisp:progn
 (common-lisp:defun create-labels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id labels authentication-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-id labels authentication-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-labels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/labels"
                                                   resourceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLabels")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateLabelsResponse" common-lisp:nil)))
 (common-lisp:export 'create-labels))
(common-lisp:progn
 (common-lisp:defun create-notification-subscription
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organization-id endpoint protocol
                     subscription-type)
   (common-lisp:declare
    (common-lisp:ignorable organization-id endpoint protocol
     subscription-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-notification-subscription-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/organizations/~a/subscriptions"
                                                   organizationid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateNotificationSubscription")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateNotificationSubscriptionResponse" common-lisp:nil)))
 (common-lisp:export 'create-notification-subscription))
(common-lisp:progn
 (common-lisp:defun create-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organization-id username email-address
                     given-name surname password time-zone-id storage-rule
                     authentication-token)
   (common-lisp:declare
    (common-lisp:ignorable organization-id username email-address given-name
     surname password time-zone-id storage-rule authentication-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUser")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUserResponse" common-lisp:nil)))
 (common-lisp:export 'create-user))
(common-lisp:progn
 (common-lisp:defun deactivate-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-id authentication-token)
   (common-lisp:declare (common-lisp:ignorable user-id authentication-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deactivate-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/users/~a/activation"
                                                   userid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeactivateUser")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deactivate-user))
(common-lisp:progn
 (common-lisp:defun delete-comment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id
                     version-id comment-id)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id version-id
     comment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-comment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/versions/~a/comment/~a"
                                                   documentid versionid
                                                   commentid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteComment")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-comment))
(common-lisp:progn
 (common-lisp:defun delete-custom-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token resource-id
                     version-id keys delete-all)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token resource-id version-id keys
     delete-all))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-custom-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/customMetadata"
                                                   resourceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteCustomMetadata")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteCustomMetadataResponse" common-lisp:nil)))
 (common-lisp:export 'delete-custom-metadata))
(common-lisp:progn
 (common-lisp:defun delete-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a"
                                                   documentid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDocument")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-document))
(common-lisp:progn
 (common-lisp:defun delete-folder
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token folder-id)
   (common-lisp:declare (common-lisp:ignorable authentication-token folder-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-folder-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/folders/~a"
                                                   folderid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteFolder")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-folder))
(common-lisp:progn
 (common-lisp:defun delete-folder-contents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token folder-id)
   (common-lisp:declare (common-lisp:ignorable authentication-token folder-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-folder-contents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/folders/~a/contents"
                                                   folderid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteFolderContents")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-folder-contents))
(common-lisp:progn
 (common-lisp:defun delete-labels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id authentication-token labels
                     delete-all)
   (common-lisp:declare
    (common-lisp:ignorable resource-id authentication-token labels delete-all))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-labels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/labels"
                                                   resourceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLabels")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteLabelsResponse" common-lisp:nil)))
 (common-lisp:export 'delete-labels))
(common-lisp:progn
 (common-lisp:defun delete-notification-subscription
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-id organization-id)
   (common-lisp:declare
    (common-lisp:ignorable subscription-id organization-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-notification-subscription-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/organizations/~a/subscriptions/~a"
                                                   organizationid
                                                   subscriptionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteNotificationSubscription")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-notification-subscription))
(common-lisp:progn
 (common-lisp:defun delete-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token user-id)
   (common-lisp:declare (common-lisp:ignorable authentication-token user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/users/~a" userid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUser")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-user))
(common-lisp:progn
 (common-lisp:defun describe-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token start-time end-time
                     organization-id user-id limit marker)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token start-time end-time
     organization-id user-id limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-activities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeActivities")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeActivitiesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-activities))
(common-lisp:progn
 (common-lisp:defun describe-comments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id
                     version-id limit marker)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id version-id limit
     marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-comments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/versions/~a/comments"
                                                   documentid versionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeComments")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeCommentsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-comments))
(common-lisp:progn
 (common-lisp:defun describe-document-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id marker
                     limit include fields)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id marker limit
     include fields))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-document-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/versions"
                                                   documentid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDocumentVersions")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDocumentVersionsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-document-versions))
(common-lisp:progn
 (common-lisp:defun describe-folder-contents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token folder-id sort order
                     limit marker type include)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token folder-id sort order limit
     marker type include))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-folder-contents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/folders/~a/contents"
                                                   folderid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFolderContents")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFolderContentsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-folder-contents))
(common-lisp:progn
 (common-lisp:defun describe-notification-subscriptions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organization-id marker limit)
   (common-lisp:declare (common-lisp:ignorable organization-id marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-notification-subscriptions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/organizations/~a/subscriptions"
                                                   organizationid)
                               :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeNotificationSubscriptions")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeNotificationSubscriptionsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-notification-subscriptions))
(common-lisp:progn
 (common-lisp:defun describe-resource-permissions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token resource-id limit
                     marker)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token resource-id limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-resource-permissions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/permissions"
                                                   resourceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeResourcePermissions")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeResourcePermissionsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-resource-permissions))
(common-lisp:progn
 (common-lisp:defun describe-root-folders
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token limit marker)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-root-folders-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRootFolders")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRootFoldersResponse" common-lisp:nil)))
 (common-lisp:export 'describe-root-folders))
(common-lisp:progn
 (common-lisp:defun describe-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token organization-id
                     user-ids query include order sort marker limit fields)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token organization-id user-ids query
     include order sort marker limit fields))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeUsers")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeUsersResponse" common-lisp:nil)))
 (common-lisp:export 'describe-users))
(common-lisp:progn
 (common-lisp:defun get-current-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token)
   (common-lisp:declare (common-lisp:ignorable authentication-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-current-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetCurrentUser")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCurrentUserResponse" common-lisp:nil)))
 (common-lisp:export 'get-current-user))
(common-lisp:progn
 (common-lisp:defun get-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id
                     include-custom-metadata)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id
     include-custom-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a"
                                                   documentid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocument")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDocumentResponse" common-lisp:nil)))
 (common-lisp:export 'get-document))
(common-lisp:progn
 (common-lisp:defun get-document-path
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id limit
                     fields marker)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id limit fields
     marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-document-path-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/path"
                                                   documentid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocumentPath")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDocumentPathResponse" common-lisp:nil)))
 (common-lisp:export 'get-document-path))
(common-lisp:progn
 (common-lisp:defun get-document-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id
                     version-id fields include-custom-metadata)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id version-id fields
     include-custom-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-document-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/versions/~a"
                                                   documentid versionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocumentVersion")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDocumentVersionResponse" common-lisp:nil)))
 (common-lisp:export 'get-document-version))
(common-lisp:progn
 (common-lisp:defun get-folder
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token folder-id
                     include-custom-metadata)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token folder-id
     include-custom-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-folder-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/folders/~a"
                                                   folderid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetFolder")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetFolderResponse" common-lisp:nil)))
 (common-lisp:export 'get-folder))
(common-lisp:progn
 (common-lisp:defun get-folder-path
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token folder-id limit
                     fields marker)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token folder-id limit fields marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-folder-path-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/folders/~a/path"
                                                   folderid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetFolderPath")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetFolderPathResponse" common-lisp:nil)))
 (common-lisp:export 'get-folder-path))
(common-lisp:progn
 (common-lisp:defun initiate-document-version-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token id name
                     content-created-timestamp content-modified-timestamp
                     content-type document-size-in-bytes parent-folder-id)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token id name
     content-created-timestamp content-modified-timestamp content-type
     document-size-in-bytes parent-folder-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-initiate-document-version-upload-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"InitiateDocumentVersionUpload")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InitiateDocumentVersionUploadResponse" common-lisp:nil)))
 (common-lisp:export 'initiate-document-version-upload))
(common-lisp:progn
 (common-lisp:defun remove-all-resource-permissions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token resource-id)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token resource-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-all-resource-permissions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/permissions"
                                                   resourceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveAllResourcePermissions")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-all-resource-permissions))
(common-lisp:progn
 (common-lisp:defun remove-resource-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token resource-id
                     principal-id principal-type)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token resource-id principal-id
     principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-resource-permission-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/resources/~a/permissions/~a"
                                                   resourceid principalid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveResourcePermission")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-resource-permission))
(common-lisp:progn
 (common-lisp:defun update-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id name
                     parent-folder-id resource-state)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id name
     parent-folder-id resource-state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a"
                                                   documentid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDocument")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-document))
(common-lisp:progn
 (common-lisp:defun update-document-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token document-id
                     version-id version-status)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token document-id version-id
     version-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-document-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/documents/~a/versions/~a"
                                                   documentid versionid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDocumentVersion")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-document-version))
(common-lisp:progn
 (common-lisp:defun update-folder
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token folder-id name
                     parent-folder-id resource-state)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token folder-id name parent-folder-id
     resource-state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-folder-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/folders/~a"
                                                   folderid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFolder")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-folder))
(common-lisp:progn
 (common-lisp:defun update-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-token user-id given-name
                     surname type storage-rule time-zone-id locale)
   (common-lisp:declare
    (common-lisp:ignorable authentication-token user-id given-name surname type
     storage-rule time-zone-id locale))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "workdocs")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/api/v1/users/~a" userid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUser")
                                  ("Version" ,@"2016-05-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateUserResponse" common-lisp:nil)))
 (common-lisp:export 'update-user))