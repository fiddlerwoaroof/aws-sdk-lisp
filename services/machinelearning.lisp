;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/machinelearning
  (:use)
  (:nicknames #:aws/machinelearning)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/machinelearning)

(common-lisp:progn
 (common-lisp:defstruct (add-tags-input (:copier common-lisp:nil))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or taggable-resource-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'add-tags-input 'make-add-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type))))))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-output (:copier common-lisp:nil))
   (resource-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or taggable-resource-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'add-tags-output 'make-add-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type))))))
(common-lisp:deftype algorithm () 'common-lisp:string)
(common-lisp:deftype aws-user-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (batch-prediction (:copier common-lisp:nil))
   (batch-prediction-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (batch-prediction-data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (input-data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or entity-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (output-uri common-lisp:nil :type (common-lisp:or s3url common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (total-record-count common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (invalid-record-count common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-prediction 'make-batch-prediction))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-prediction))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id)))
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "BatchPredictionDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "InputDataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "OutputUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-uri)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at)))
    (aws-sdk/generator/shape::to-query-params "TotalRecordCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-record-count)))
    (aws-sdk/generator/shape::to-query-params "InvalidRecordCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalid-record-count))))))
(common-lisp:deftype batch-prediction-filter-variable () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype batch-predictions ()
   '(trivial-types:proper-list batch-prediction))
 (common-lisp:defun |make-batch-predictions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-prediction))
   aws-sdk/generator/shape::members))
(common-lisp:deftype comparator-value () 'common-lisp:string)
(common-lisp:deftype compute-statistics () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (create-batch-prediction-input (:copier common-lisp:nil))
   (batch-prediction-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":batch-prediction-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (batch-prediction-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (batch-prediction-data-source-id
    (common-lisp:error
     #A((44) common-lisp:base-char
        . ":batch-prediction-data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (output-uri
    (common-lisp:error
     #A((23) common-lisp:base-char . ":output-uri is required"))
    :type (common-lisp:or s3url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-batch-prediction-input
                    'make-create-batch-prediction-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-batch-prediction-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id)))
    (aws-sdk/generator/shape::to-query-params "BatchPredictionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-name)))
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "BatchPredictionDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "OutputUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-uri))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-batch-prediction-output (:copier common-lisp:nil))
   (batch-prediction-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-batch-prediction-output
                    'make-create-batch-prediction-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-batch-prediction-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-source-from-rdsinput (:copier common-lisp:nil))
   (data-source-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (data-source-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (rdsdata
    (common-lisp:error #A((20) common-lisp:base-char . ":rdsdata is required"))
    :type (common-lisp:or rdsdata-spec common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null))
   (compute-statistics common-lisp:nil :type
    (common-lisp:or compute-statistics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-source-from-rdsinput
                    'make-create-data-source-from-rdsinput))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-data-source-from-rdsinput))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id)))
    (aws-sdk/generator/shape::to-query-params "DataSourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-name)))
    (aws-sdk/generator/shape::to-query-params "RDSData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rdsdata)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "ComputeStatistics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-statistics))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-source-from-rdsoutput (:copier common-lisp:nil))
   (data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-source-from-rdsoutput
                    'make-create-data-source-from-rdsoutput))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-data-source-from-rdsoutput))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-source-from-redshift-input (:copier common-lisp:nil))
   (data-source-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (data-source-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (data-spec
    (common-lisp:error
     #A((22) common-lisp:base-char . ":data-spec is required"))
    :type (common-lisp:or redshift-data-spec common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null))
   (compute-statistics common-lisp:nil :type
    (common-lisp:or compute-statistics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-source-from-redshift-input
                    'make-create-data-source-from-redshift-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-data-source-from-redshift-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id)))
    (aws-sdk/generator/shape::to-query-params "DataSourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-name)))
    (aws-sdk/generator/shape::to-query-params "DataSpec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-spec)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "ComputeStatistics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-statistics))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-source-from-redshift-output (:copier common-lisp:nil))
   (data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-source-from-redshift-output
                    'make-create-data-source-from-redshift-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-data-source-from-redshift-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-source-from-s3input (:copier common-lisp:nil))
   (data-source-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (data-source-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (data-spec
    (common-lisp:error
     #A((22) common-lisp:base-char . ":data-spec is required"))
    :type (common-lisp:or s3data-spec common-lisp:null))
   (compute-statistics common-lisp:nil :type
    (common-lisp:or compute-statistics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-source-from-s3input
                    'make-create-data-source-from-s3input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-data-source-from-s3input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id)))
    (aws-sdk/generator/shape::to-query-params "DataSourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-name)))
    (aws-sdk/generator/shape::to-query-params "DataSpec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-spec)))
    (aws-sdk/generator/shape::to-query-params "ComputeStatistics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-statistics))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-source-from-s3output (:copier common-lisp:nil))
   (data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-source-from-s3output
                    'make-create-data-source-from-s3output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-data-source-from-s3output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-evaluation-input (:copier common-lisp:nil))
   (evaluation-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":evaluation-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (evaluation-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (evaluation-data-source-id
    (common-lisp:error
     #A((38) common-lisp:base-char . ":evaluation-data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-evaluation-input 'make-create-evaluation-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-evaluation-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id)))
    (aws-sdk/generator/shape::to-query-params "EvaluationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-name)))
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "EvaluationDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-data-source-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-evaluation-output (:copier common-lisp:nil))
   (evaluation-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-evaluation-output 'make-create-evaluation-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-evaluation-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-mlmodel-input (:copier common-lisp:nil))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (mlmodel-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (mlmodel-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":mlmodel-type is required"))
    :type (common-lisp:or mlmodel-type common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or training-parameters common-lisp:null))
   (training-data-source-id
    (common-lisp:error
     #A((36) common-lisp:base-char . ":training-data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (recipe common-lisp:nil :type (common-lisp:or recipe common-lisp:null))
   (recipe-uri common-lisp:nil :type (common-lisp:or s3url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-mlmodel-input 'make-create-mlmodel-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-mlmodel-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "MLModelName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-name)))
    (aws-sdk/generator/shape::to-query-params "MLModelType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-type)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "TrainingDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'training-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "Recipe"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipe)))
    (aws-sdk/generator/shape::to-query-params "RecipeUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipe-uri))))))
(common-lisp:progn
 (common-lisp:defstruct (create-mlmodel-output (:copier common-lisp:nil))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-mlmodel-output 'make-create-mlmodel-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-mlmodel-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-realtime-endpoint-input (:copier common-lisp:nil))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-realtime-endpoint-input
                    'make-create-realtime-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-realtime-endpoint-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-realtime-endpoint-output (:copier common-lisp:nil))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (realtime-endpoint-info common-lisp:nil :type
    (common-lisp:or realtime-endpoint-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-realtime-endpoint-output
                    'make-create-realtime-endpoint-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-realtime-endpoint-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "RealtimeEndpointInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'realtime-endpoint-info))))))
(common-lisp:deftype data-rearrangement () 'common-lisp:string)
(common-lisp:deftype data-schema () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (data-source (:copier common-lisp:nil))
   (data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (data-rearrangement common-lisp:nil :type
    (common-lisp:or data-rearrangement common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (data-size-in-bytes common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (number-of-files common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or entity-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (redshift-metadata common-lisp:nil :type
    (common-lisp:or redshift-metadata common-lisp:null))
   (rdsmetadata common-lisp:nil :type
    (common-lisp:or rdsmetadata common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (compute-statistics common-lisp:nil :type
    (common-lisp:or compute-statistics common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'data-source 'make-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape data-source))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id)))
    (aws-sdk/generator/shape::to-query-params "DataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "DataRearrangement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-rearrangement)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "DataSizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "NumberOfFiles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-files)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RedshiftMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'redshift-metadata)))
    (aws-sdk/generator/shape::to-query-params "RDSMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rdsmetadata)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "ComputeStatistics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-statistics)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at))))))
(common-lisp:deftype data-source-filter-variable () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype data-sources () '(trivial-types:proper-list data-source))
 (common-lisp:defun |make-data-sources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-batch-prediction-input (:copier common-lisp:nil))
   (batch-prediction-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":batch-prediction-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-batch-prediction-input
                    'make-delete-batch-prediction-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-batch-prediction-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-batch-prediction-output (:copier common-lisp:nil))
   (batch-prediction-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-batch-prediction-output
                    'make-delete-batch-prediction-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-batch-prediction-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-data-source-input (:copier common-lisp:nil))
   (data-source-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-data-source-input 'make-delete-data-source-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-data-source-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-data-source-output (:copier common-lisp:nil))
   (data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-data-source-output
                    'make-delete-data-source-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-data-source-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-evaluation-input (:copier common-lisp:nil))
   (evaluation-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":evaluation-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-evaluation-input 'make-delete-evaluation-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-evaluation-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-evaluation-output (:copier common-lisp:nil))
   (evaluation-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-evaluation-output 'make-delete-evaluation-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-evaluation-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-mlmodel-input (:copier common-lisp:nil))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-mlmodel-input 'make-delete-mlmodel-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-mlmodel-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-mlmodel-output (:copier common-lisp:nil))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-mlmodel-output 'make-delete-mlmodel-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-mlmodel-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-realtime-endpoint-input (:copier common-lisp:nil))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-realtime-endpoint-input
                    'make-delete-realtime-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-realtime-endpoint-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-realtime-endpoint-output (:copier common-lisp:nil))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (realtime-endpoint-info common-lisp:nil :type
    (common-lisp:or realtime-endpoint-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-realtime-endpoint-output
                    'make-delete-realtime-endpoint-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-realtime-endpoint-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "RealtimeEndpointInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'realtime-endpoint-info))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-input (:copier common-lisp:nil))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-key-list common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or taggable-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-input 'make-delete-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-output (:copier common-lisp:nil))
   (resource-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or taggable-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-output 'make-delete-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-tags-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-batch-predictions-input (:copier common-lisp:nil))
   (filter-variable common-lisp:nil :type
    (common-lisp:or batch-prediction-filter-variable common-lisp:null))
   (eq common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (gt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (lt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ge common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (le common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ne common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or page-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-batch-predictions-input
                    'make-describe-batch-predictions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-batch-predictions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FilterVariable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-variable)))
    (aws-sdk/generator/shape::to-query-params "EQ"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'eq)))
    (aws-sdk/generator/shape::to-query-params "GT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gt)))
    (aws-sdk/generator/shape::to-query-params "LT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lt)))
    (aws-sdk/generator/shape::to-query-params "GE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ge)))
    (aws-sdk/generator/shape::to-query-params "LE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'le)))
    (aws-sdk/generator/shape::to-query-params "NE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ne)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "SortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-batch-predictions-output (:copier common-lisp:nil))
   (results common-lisp:nil :type
    (common-lisp:or batch-predictions common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-batch-predictions-output
                    'make-describe-batch-predictions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-batch-predictions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Results"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-data-sources-input (:copier common-lisp:nil))
   (filter-variable common-lisp:nil :type
    (common-lisp:or data-source-filter-variable common-lisp:null))
   (eq common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (gt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (lt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ge common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (le common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ne common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or page-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-data-sources-input
                    'make-describe-data-sources-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-data-sources-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FilterVariable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-variable)))
    (aws-sdk/generator/shape::to-query-params "EQ"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'eq)))
    (aws-sdk/generator/shape::to-query-params "GT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gt)))
    (aws-sdk/generator/shape::to-query-params "LT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lt)))
    (aws-sdk/generator/shape::to-query-params "GE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ge)))
    (aws-sdk/generator/shape::to-query-params "LE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'le)))
    (aws-sdk/generator/shape::to-query-params "NE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ne)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "SortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-data-sources-output (:copier common-lisp:nil))
   (results common-lisp:nil :type
    (common-lisp:or data-sources common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-data-sources-output
                    'make-describe-data-sources-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-data-sources-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Results"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-evaluations-input (:copier common-lisp:nil))
   (filter-variable common-lisp:nil :type
    (common-lisp:or evaluation-filter-variable common-lisp:null))
   (eq common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (gt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (lt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ge common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (le common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ne common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or page-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-evaluations-input
                    'make-describe-evaluations-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-evaluations-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FilterVariable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-variable)))
    (aws-sdk/generator/shape::to-query-params "EQ"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'eq)))
    (aws-sdk/generator/shape::to-query-params "GT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gt)))
    (aws-sdk/generator/shape::to-query-params "LT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lt)))
    (aws-sdk/generator/shape::to-query-params "GE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ge)))
    (aws-sdk/generator/shape::to-query-params "LE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'le)))
    (aws-sdk/generator/shape::to-query-params "NE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ne)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "SortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-evaluations-output (:copier common-lisp:nil))
   (results common-lisp:nil :type
    (common-lisp:or evaluations common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-evaluations-output
                    'make-describe-evaluations-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-evaluations-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Results"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-mlmodels-input (:copier common-lisp:nil))
   (filter-variable common-lisp:nil :type
    (common-lisp:or mlmodel-filter-variable common-lisp:null))
   (eq common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (gt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (lt common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ge common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (le common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (ne common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or comparator-value common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or page-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-mlmodels-input 'make-describe-mlmodels-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-mlmodels-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FilterVariable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-variable)))
    (aws-sdk/generator/shape::to-query-params "EQ"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'eq)))
    (aws-sdk/generator/shape::to-query-params "GT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gt)))
    (aws-sdk/generator/shape::to-query-params "LT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lt)))
    (aws-sdk/generator/shape::to-query-params "GE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ge)))
    (aws-sdk/generator/shape::to-query-params "LE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'le)))
    (aws-sdk/generator/shape::to-query-params "NE"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ne)))
    (aws-sdk/generator/shape::to-query-params "Prefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prefix)))
    (aws-sdk/generator/shape::to-query-params "SortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-mlmodels-output (:copier common-lisp:nil))
   (results common-lisp:nil :type (common-lisp:or mlmodels common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-mlmodels-output 'make-describe-mlmodels-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-mlmodels-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Results"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-input (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (resource-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-type is required"))
    :type (common-lisp:or taggable-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-input 'make-describe-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-output (:copier common-lisp:nil))
   (resource-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or taggable-resource-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-output 'make-describe-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype details-attributes () 'common-lisp:string)
(common-lisp:defstruct
    (details-map
     (:constructor |make-details-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype details-value () 'common-lisp:string)
(common-lisp:deftype edppipeline-id () 'common-lisp:string)
(common-lisp:deftype edpresource-role () 'common-lisp:string)
(common-lisp:deftype edpsecurity-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype edpsecurity-group-ids ()
   '(trivial-types:proper-list edpsecurity-group-id))
 (common-lisp:defun |make-edpsecurity-group-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list edpsecurity-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype edpservice-role () 'common-lisp:string)
(common-lisp:deftype edpsubnet-id () 'common-lisp:string)
(common-lisp:deftype entity-id () 'common-lisp:string)
(common-lisp:deftype entity-name () 'common-lisp:string)
(common-lisp:deftype entity-status () 'common-lisp:string)
(common-lisp:deftype epoch-time () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:integer)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (evaluation (:copier common-lisp:nil))
   (evaluation-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (evaluation-data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (input-data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or entity-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (performance-metrics common-lisp:nil :type
    (common-lisp:or performance-metrics common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'evaluation 'make-evaluation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape evaluation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id)))
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "EvaluationDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "InputDataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "PerformanceMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'performance-metrics)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at))))))
(common-lisp:deftype evaluation-filter-variable () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype evaluations () '(trivial-types:proper-list evaluation))
 (common-lisp:defun |make-evaluations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list evaluation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (get-batch-prediction-input (:copier common-lisp:nil))
   (batch-prediction-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":batch-prediction-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-batch-prediction-input
                    'make-get-batch-prediction-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-batch-prediction-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-batch-prediction-output (:copier common-lisp:nil))
   (batch-prediction-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (batch-prediction-data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (input-data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or entity-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (output-uri common-lisp:nil :type (common-lisp:or s3url common-lisp:null))
   (log-uri common-lisp:nil :type
    (common-lisp:or presigned-s3url common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (total-record-count common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (invalid-record-count common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-batch-prediction-output
                    'make-get-batch-prediction-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-batch-prediction-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id)))
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "BatchPredictionDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "InputDataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "OutputUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-uri)))
    (aws-sdk/generator/shape::to-query-params "LogUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-uri)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at)))
    (aws-sdk/generator/shape::to-query-params "TotalRecordCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-record-count)))
    (aws-sdk/generator/shape::to-query-params "InvalidRecordCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'invalid-record-count))))))
(common-lisp:progn
 (common-lisp:defstruct (get-data-source-input (:copier common-lisp:nil))
   (data-source-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (verbose common-lisp:nil :type (common-lisp:or verbose common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-source-input 'make-get-data-source-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-data-source-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id)))
    (aws-sdk/generator/shape::to-query-params "Verbose"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verbose))))))
(common-lisp:progn
 (common-lisp:defstruct (get-data-source-output (:copier common-lisp:nil))
   (data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (data-rearrangement common-lisp:nil :type
    (common-lisp:or data-rearrangement common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (data-size-in-bytes common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (number-of-files common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or entity-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (log-uri common-lisp:nil :type
    (common-lisp:or presigned-s3url common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (redshift-metadata common-lisp:nil :type
    (common-lisp:or redshift-metadata common-lisp:null))
   (rdsmetadata common-lisp:nil :type
    (common-lisp:or rdsmetadata common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (compute-statistics common-lisp:nil :type
    (common-lisp:or compute-statistics common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (data-source-schema common-lisp:nil :type
    (common-lisp:or data-schema common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-source-output 'make-get-data-source-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-data-source-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id)))
    (aws-sdk/generator/shape::to-query-params "DataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "DataRearrangement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-rearrangement)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "DataSizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "NumberOfFiles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-files)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "LogUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-uri)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RedshiftMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'redshift-metadata)))
    (aws-sdk/generator/shape::to-query-params "RDSMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rdsmetadata)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "ComputeStatistics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-statistics)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at)))
    (aws-sdk/generator/shape::to-query-params "DataSourceSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-schema))))))
(common-lisp:progn
 (common-lisp:defstruct (get-evaluation-input (:copier common-lisp:nil))
   (evaluation-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":evaluation-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-evaluation-input 'make-get-evaluation-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-evaluation-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-evaluation-output (:copier common-lisp:nil))
   (evaluation-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (evaluation-data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (input-data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or entity-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (performance-metrics common-lisp:nil :type
    (common-lisp:or performance-metrics common-lisp:null))
   (log-uri common-lisp:nil :type
    (common-lisp:or presigned-s3url common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-evaluation-output 'make-get-evaluation-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-evaluation-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id)))
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "EvaluationDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "InputDataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "PerformanceMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'performance-metrics)))
    (aws-sdk/generator/shape::to-query-params "LogUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-uri)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at))))))
(common-lisp:progn
 (common-lisp:defstruct (get-mlmodel-input (:copier common-lisp:nil))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (verbose common-lisp:nil :type (common-lisp:or verbose common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-mlmodel-input 'make-get-mlmodel-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-mlmodel-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "Verbose"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verbose))))))
(common-lisp:progn
 (common-lisp:defstruct (get-mlmodel-output (:copier common-lisp:nil))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (training-data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or mlmodel-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (size-in-bytes common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (endpoint-info common-lisp:nil :type
    (common-lisp:or realtime-endpoint-info common-lisp:null))
   (training-parameters common-lisp:nil :type
    (common-lisp:or training-parameters common-lisp:null))
   (input-data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (mlmodel-type common-lisp:nil :type
    (common-lisp:or mlmodel-type common-lisp:null))
   (score-threshold common-lisp:nil :type
    (common-lisp:or score-threshold common-lisp:null))
   (score-threshold-last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (log-uri common-lisp:nil :type
    (common-lisp:or presigned-s3url common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (recipe common-lisp:nil :type (common-lisp:or recipe common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or data-schema common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-mlmodel-output 'make-get-mlmodel-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-mlmodel-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "TrainingDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'training-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "SizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "EndpointInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-info)))
    (aws-sdk/generator/shape::to-query-params "TrainingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'training-parameters)))
    (aws-sdk/generator/shape::to-query-params "InputDataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "MLModelType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-type)))
    (aws-sdk/generator/shape::to-query-params "ScoreThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'score-threshold)))
    (aws-sdk/generator/shape::to-query-params "ScoreThresholdLastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'score-threshold-last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "LogUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-uri)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at)))
    (aws-sdk/generator/shape::to-query-params "Recipe"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recipe)))
    (aws-sdk/generator/shape::to-query-params "Schema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema))))))
(common-lisp:progn
 (common-lisp:defstruct
     (idempotent-parameter-mismatch-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'idempotent-parameter-mismatch-exception
                    'make-idempotent-parameter-mismatch-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          idempotent-parameter-mismatch-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code))))))
(common-lisp:deftype integer-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-server-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'make-internal-server-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-input-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'make-invalid-input-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-input-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-tag-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-tag-exception 'make-invalid-tag-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-tag-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype label () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code))))))
(common-lisp:deftype long-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (mlmodel (:copier common-lisp:nil))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (training-data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (created-by-iam-user common-lisp:nil :type
    (common-lisp:or aws-user-arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or mlmodel-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or entity-status common-lisp:null))
   (size-in-bytes common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (endpoint-info common-lisp:nil :type
    (common-lisp:or realtime-endpoint-info common-lisp:null))
   (training-parameters common-lisp:nil :type
    (common-lisp:or training-parameters common-lisp:null))
   (input-data-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (algorithm common-lisp:nil :type
    (common-lisp:or algorithm common-lisp:null))
   (mlmodel-type common-lisp:nil :type
    (common-lisp:or mlmodel-type common-lisp:null))
   (score-threshold common-lisp:nil :type
    (common-lisp:or score-threshold common-lisp:null))
   (score-threshold-last-updated-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (compute-time common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (finished-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mlmodel 'make-mlmodel))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape mlmodel))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "TrainingDataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'training-data-source-id)))
    (aws-sdk/generator/shape::to-query-params "CreatedByIamUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-by-iam-user)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "SizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "EndpointInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-info)))
    (aws-sdk/generator/shape::to-query-params "TrainingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'training-parameters)))
    (aws-sdk/generator/shape::to-query-params "InputDataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "Algorithm"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'algorithm)))
    (aws-sdk/generator/shape::to-query-params "MLModelType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-type)))
    (aws-sdk/generator/shape::to-query-params "ScoreThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'score-threshold)))
    (aws-sdk/generator/shape::to-query-params "ScoreThresholdLastUpdatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'score-threshold-last-updated-at)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ComputeTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-time)))
    (aws-sdk/generator/shape::to-query-params "FinishedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finished-at)))
    (aws-sdk/generator/shape::to-query-params "StartedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at))))))
(common-lisp:deftype mlmodel-filter-variable () 'common-lisp:string)
(common-lisp:deftype mlmodel-name () 'common-lisp:string)
(common-lisp:deftype mlmodel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype mlmodels () '(trivial-types:proper-list mlmodel))
 (common-lisp:defun |make-mlmodels|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mlmodel))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype page-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (performance-metrics (:copier common-lisp:nil))
   (properties common-lisp:nil :type
    (common-lisp:or performance-metrics-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'performance-metrics 'make-performance-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape performance-metrics))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Properties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'properties))))))
(common-lisp:defstruct
    (performance-metrics-properties
     (:constructor |make-performance-metrics-properties|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype performance-metrics-property-key () 'common-lisp:string)
(common-lisp:deftype performance-metrics-property-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (predict-input (:copier common-lisp:nil))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (record
    (common-lisp:error #A((19) common-lisp:base-char . ":record is required"))
    :type (common-lisp:or record common-lisp:null))
   (predict-endpoint
    (common-lisp:error
     #A((29) common-lisp:base-char . ":predict-endpoint is required"))
    :type (common-lisp:or vip-url common-lisp:null)))
 (common-lisp:export (common-lisp:list 'predict-input 'make-predict-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape predict-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "Record"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record)))
    (aws-sdk/generator/shape::to-query-params "PredictEndpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predict-endpoint))))))
(common-lisp:progn
 (common-lisp:defstruct (predict-output (:copier common-lisp:nil))
   (prediction common-lisp:nil :type
    (common-lisp:or prediction common-lisp:null)))
 (common-lisp:export (common-lisp:list 'predict-output 'make-predict-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape predict-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Prediction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prediction))))))
(common-lisp:progn
 (common-lisp:defstruct (prediction (:copier common-lisp:nil))
   (predicted-label common-lisp:nil :type
    (common-lisp:or label common-lisp:null))
   (predicted-value common-lisp:nil :type
    (common-lisp:or |floatLabel| common-lisp:null))
   (predicted-scores common-lisp:nil :type
    (common-lisp:or score-value-per-label-map common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or details-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'prediction 'make-prediction))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape prediction))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "predictedLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predicted-label)))
    (aws-sdk/generator/shape::to-query-params "predictedValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predicted-value)))
    (aws-sdk/generator/shape::to-query-params "predictedScores"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predicted-scores)))
    (aws-sdk/generator/shape::to-query-params "details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:defstruct
     (predictor-not-mounted-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'predictor-not-mounted-exception
                    'make-predictor-not-mounted-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          predictor-not-mounted-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype presigned-s3url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (rdsdata-spec (:copier common-lisp:nil))
   (database-information
    (common-lisp:error
     #A((33) common-lisp:base-char . ":database-information is required"))
    :type (common-lisp:or rdsdatabase common-lisp:null))
   (select-sql-query
    (common-lisp:error
     #A((29) common-lisp:base-char . ":select-sql-query is required"))
    :type (common-lisp:or rdsselect-sql-query common-lisp:null))
   (database-credentials
    (common-lisp:error
     #A((33) common-lisp:base-char . ":database-credentials is required"))
    :type (common-lisp:or rdsdatabase-credentials common-lisp:null))
   (s3staging-location
    (common-lisp:error
     #A((31) common-lisp:base-char . ":s3staging-location is required"))
    :type (common-lisp:or s3url common-lisp:null))
   (data-rearrangement common-lisp:nil :type
    (common-lisp:or data-rearrangement common-lisp:null))
   (data-schema common-lisp:nil :type
    (common-lisp:or data-schema common-lisp:null))
   (data-schema-uri common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null))
   (resource-role
    (common-lisp:error
     #A((26) common-lisp:base-char . ":resource-role is required"))
    :type (common-lisp:or edpresource-role common-lisp:null))
   (service-role
    (common-lisp:error
     #A((25) common-lisp:base-char . ":service-role is required"))
    :type (common-lisp:or edpservice-role common-lisp:null))
   (subnet-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":subnet-id is required"))
    :type (common-lisp:or edpsubnet-id common-lisp:null))
   (security-group-ids
    (common-lisp:error
     #A((31) common-lisp:base-char . ":security-group-ids is required"))
    :type (common-lisp:or edpsecurity-group-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rdsdata-spec 'make-rdsdata-spec))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rdsdata-spec))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DatabaseInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-information)))
    (aws-sdk/generator/shape::to-query-params "SelectSqlQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'select-sql-query)))
    (aws-sdk/generator/shape::to-query-params "DatabaseCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-credentials)))
    (aws-sdk/generator/shape::to-query-params "S3StagingLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3staging-location)))
    (aws-sdk/generator/shape::to-query-params "DataRearrangement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-rearrangement)))
    (aws-sdk/generator/shape::to-query-params "DataSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-schema)))
    (aws-sdk/generator/shape::to-query-params "DataSchemaUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-schema-uri)))
    (aws-sdk/generator/shape::to-query-params "ResourceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-role)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-id)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (rdsdatabase (:copier common-lisp:nil))
   (instance-identifier
    (common-lisp:error
     #A((32) common-lisp:base-char . ":instance-identifier is required"))
    :type (common-lisp:or rdsinstance-identifier common-lisp:null))
   (database-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":database-name is required"))
    :type (common-lisp:or rdsdatabase-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rdsdatabase 'make-rdsdatabase))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rdsdatabase))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-identifier)))
    (aws-sdk/generator/shape::to-query-params "DatabaseName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-name))))))
(common-lisp:progn
 (common-lisp:defstruct (rdsdatabase-credentials (:copier common-lisp:nil))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or rdsdatabase-username common-lisp:null))
   (password
    (common-lisp:error
     #A((21) common-lisp:base-char . ":password is required"))
    :type (common-lisp:or rdsdatabase-password common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rdsdatabase-credentials 'make-rdsdatabase-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rdsdatabase-credentials))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "Password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password))))))
(common-lisp:deftype rdsdatabase-name () 'common-lisp:string)
(common-lisp:deftype rdsdatabase-password () 'common-lisp:string)
(common-lisp:deftype rdsdatabase-username () 'common-lisp:string)
(common-lisp:deftype rdsinstance-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (rdsmetadata (:copier common-lisp:nil))
   (database common-lisp:nil :type
    (common-lisp:or rdsdatabase common-lisp:null))
   (database-user-name common-lisp:nil :type
    (common-lisp:or rdsdatabase-username common-lisp:null))
   (select-sql-query common-lisp:nil :type
    (common-lisp:or rdsselect-sql-query common-lisp:null))
   (resource-role common-lisp:nil :type
    (common-lisp:or edpresource-role common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or edpservice-role common-lisp:null))
   (data-pipeline-id common-lisp:nil :type
    (common-lisp:or edppipeline-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rdsmetadata 'make-rdsmetadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rdsmetadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Database"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database)))
    (aws-sdk/generator/shape::to-query-params "DatabaseUserName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-user-name)))
    (aws-sdk/generator/shape::to-query-params "SelectSqlQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'select-sql-query)))
    (aws-sdk/generator/shape::to-query-params "ResourceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-role)))
    (aws-sdk/generator/shape::to-query-params "ServiceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "DataPipelineId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-pipeline-id))))))
(common-lisp:deftype rdsselect-sql-query () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (realtime-endpoint-info (:copier common-lisp:nil))
   (peak-requests-per-second common-lisp:nil :type
    (common-lisp:or integer-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or epoch-time common-lisp:null))
   (endpoint-url common-lisp:nil :type
    (common-lisp:or vip-url common-lisp:null))
   (endpoint-status common-lisp:nil :type
    (common-lisp:or realtime-endpoint-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'realtime-endpoint-info 'make-realtime-endpoint-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          realtime-endpoint-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PeakRequestsPerSecond"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'peak-requests-per-second)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "EndpointUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-url)))
    (aws-sdk/generator/shape::to-query-params "EndpointStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-status))))))
(common-lisp:deftype realtime-endpoint-status () 'common-lisp:string)
(common-lisp:deftype recipe () 'common-lisp:string)
(common-lisp:defstruct
    (record
     (:constructor |make-record|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype redshift-cluster-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (redshift-data-spec (:copier common-lisp:nil))
   (database-information
    (common-lisp:error
     #A((33) common-lisp:base-char . ":database-information is required"))
    :type (common-lisp:or redshift-database common-lisp:null))
   (select-sql-query
    (common-lisp:error
     #A((29) common-lisp:base-char . ":select-sql-query is required"))
    :type (common-lisp:or redshift-select-sql-query common-lisp:null))
   (database-credentials
    (common-lisp:error
     #A((33) common-lisp:base-char . ":database-credentials is required"))
    :type (common-lisp:or redshift-database-credentials common-lisp:null))
   (s3staging-location
    (common-lisp:error
     #A((31) common-lisp:base-char . ":s3staging-location is required"))
    :type (common-lisp:or s3url common-lisp:null))
   (data-rearrangement common-lisp:nil :type
    (common-lisp:or data-rearrangement common-lisp:null))
   (data-schema common-lisp:nil :type
    (common-lisp:or data-schema common-lisp:null))
   (data-schema-uri common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redshift-data-spec 'make-redshift-data-spec))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape redshift-data-spec))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DatabaseInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-information)))
    (aws-sdk/generator/shape::to-query-params "SelectSqlQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'select-sql-query)))
    (aws-sdk/generator/shape::to-query-params "DatabaseCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-credentials)))
    (aws-sdk/generator/shape::to-query-params "S3StagingLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3staging-location)))
    (aws-sdk/generator/shape::to-query-params "DataRearrangement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-rearrangement)))
    (aws-sdk/generator/shape::to-query-params "DataSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-schema)))
    (aws-sdk/generator/shape::to-query-params "DataSchemaUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-schema-uri))))))
(common-lisp:progn
 (common-lisp:defstruct (redshift-database (:copier common-lisp:nil))
   (database-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":database-name is required"))
    :type (common-lisp:or redshift-database-name common-lisp:null))
   (cluster-identifier
    (common-lisp:error
     #A((31) common-lisp:base-char . ":cluster-identifier is required"))
    :type (common-lisp:or redshift-cluster-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redshift-database 'make-redshift-database))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape redshift-database))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DatabaseName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-name)))
    (aws-sdk/generator/shape::to-query-params "ClusterIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cluster-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct
     (redshift-database-credentials (:copier common-lisp:nil))
   (username
    (common-lisp:error
     #A((21) common-lisp:base-char . ":username is required"))
    :type (common-lisp:or redshift-database-username common-lisp:null))
   (password
    (common-lisp:error
     #A((21) common-lisp:base-char . ":password is required"))
    :type (common-lisp:or redshift-database-password common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redshift-database-credentials
                    'make-redshift-database-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          redshift-database-credentials))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "Password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password))))))
(common-lisp:deftype redshift-database-name () 'common-lisp:string)
(common-lisp:deftype redshift-database-password () 'common-lisp:string)
(common-lisp:deftype redshift-database-username () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (redshift-metadata (:copier common-lisp:nil))
   (redshift-database common-lisp:nil :type
    (common-lisp:or redshift-database common-lisp:null))
   (database-user-name common-lisp:nil :type
    (common-lisp:or redshift-database-username common-lisp:null))
   (select-sql-query common-lisp:nil :type
    (common-lisp:or redshift-select-sql-query common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redshift-metadata 'make-redshift-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape redshift-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RedshiftDatabase"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'redshift-database)))
    (aws-sdk/generator/shape::to-query-params "DatabaseUserName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-user-name)))
    (aws-sdk/generator/shape::to-query-params "SelectSqlQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'select-sql-query))))))
(common-lisp:deftype redshift-select-sql-query () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code))))))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (s3data-spec (:copier common-lisp:nil))
   (data-location-s3
    (common-lisp:error
     #A((29) common-lisp:base-char . ":data-location-s3 is required"))
    :type (common-lisp:or s3url common-lisp:null))
   (data-rearrangement common-lisp:nil :type
    (common-lisp:or data-rearrangement common-lisp:null))
   (data-schema common-lisp:nil :type
    (common-lisp:or data-schema common-lisp:null))
   (data-schema-location-s3 common-lisp:nil :type
    (common-lisp:or s3url common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3data-spec 'make-s3data-spec))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape s3data-spec))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-location-s3)))
    (aws-sdk/generator/shape::to-query-params "DataRearrangement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-rearrangement)))
    (aws-sdk/generator/shape::to-query-params "DataSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-schema)))
    (aws-sdk/generator/shape::to-query-params "DataSchemaLocationS3"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-schema-location-s3))))))
(common-lisp:deftype s3url () 'common-lisp:string)
(common-lisp:deftype score-threshold () 'common-lisp:single-float)
(common-lisp:deftype score-value () 'common-lisp:single-float)
(common-lisp:defstruct
    (score-value-per-label-map
     (:constructor |make-score-value-per-label-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:deftype string-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-limit-exceeded-exception
                    'make-tag-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype taggable-resource-type () 'common-lisp:string)
(common-lisp:defstruct
    (training-parameters
     (:constructor |make-training-parameters|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct
     (update-batch-prediction-input (:copier common-lisp:nil))
   (batch-prediction-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":batch-prediction-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (batch-prediction-name
    (common-lisp:error
     #A((34) common-lisp:base-char . ":batch-prediction-name is required"))
    :type (common-lisp:or entity-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-batch-prediction-input
                    'make-update-batch-prediction-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-batch-prediction-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id)))
    (aws-sdk/generator/shape::to-query-params "BatchPredictionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-batch-prediction-output (:copier common-lisp:nil))
   (batch-prediction-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-batch-prediction-output
                    'make-update-batch-prediction-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-batch-prediction-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BatchPredictionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-prediction-id))))))
(common-lisp:progn
 (common-lisp:defstruct (update-data-source-input (:copier common-lisp:nil))
   (data-source-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":data-source-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (data-source-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":data-source-name is required"))
    :type (common-lisp:or entity-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-data-source-input 'make-update-data-source-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-data-source-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id)))
    (aws-sdk/generator/shape::to-query-params "DataSourceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-name))))))
(common-lisp:progn
 (common-lisp:defstruct (update-data-source-output (:copier common-lisp:nil))
   (data-source-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-data-source-output
                    'make-update-data-source-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-data-source-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DataSourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-source-id))))))
(common-lisp:progn
 (common-lisp:defstruct (update-evaluation-input (:copier common-lisp:nil))
   (evaluation-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":evaluation-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (evaluation-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":evaluation-name is required"))
    :type (common-lisp:or entity-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-evaluation-input 'make-update-evaluation-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-evaluation-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id)))
    (aws-sdk/generator/shape::to-query-params "EvaluationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-name))))))
(common-lisp:progn
 (common-lisp:defstruct (update-evaluation-output (:copier common-lisp:nil))
   (evaluation-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-evaluation-output 'make-update-evaluation-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-evaluation-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EvaluationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'evaluation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (update-mlmodel-input (:copier common-lisp:nil))
   (mlmodel-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":mlmodel-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (mlmodel-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (score-threshold common-lisp:nil :type
    (common-lisp:or score-threshold common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-mlmodel-input 'make-update-mlmodel-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-mlmodel-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id)))
    (aws-sdk/generator/shape::to-query-params "MLModelName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-name)))
    (aws-sdk/generator/shape::to-query-params "ScoreThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'score-threshold))))))
(common-lisp:progn
 (common-lisp:defstruct (update-mlmodel-output (:copier common-lisp:nil))
   (mlmodel-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-mlmodel-output 'make-update-mlmodel-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-mlmodel-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MLModelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mlmodel-id))))))
(common-lisp:deftype variable-name () 'common-lisp:string)
(common-lisp:deftype variable-value () 'common-lisp:string)
(common-lisp:deftype verbose () 'common-lisp:boolean)
(common-lisp:deftype vip-url () 'common-lisp:string)
(common-lisp:deftype |floatLabel| () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:defun add-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tags resource-id resource-type)
   (common-lisp:declare (common-lisp:ignorable tags resource-id resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddTags")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddTagsOutput" common-lisp:nil)))
 (common-lisp:export 'add-tags))
(common-lisp:progn
 (common-lisp:defun create-batch-prediction
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key batch-prediction-id batch-prediction-name
                     mlmodel-id batch-prediction-data-source-id output-uri)
   (common-lisp:declare
    (common-lisp:ignorable batch-prediction-id batch-prediction-name mlmodel-id
     batch-prediction-data-source-id output-uri))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-batch-prediction-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateBatchPrediction")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateBatchPredictionOutput" common-lisp:nil)))
 (common-lisp:export 'create-batch-prediction))
(common-lisp:progn
 (common-lisp:defun create-data-source-from-rds
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-source-id data-source-name rdsdata
                     role-arn compute-statistics)
   (common-lisp:declare
    (common-lisp:ignorable data-source-id data-source-name rdsdata role-arn
     compute-statistics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-data-source-from-rdsinput
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDataSourceFromRDS")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDataSourceFromRDSOutput" common-lisp:nil)))
 (common-lisp:export 'create-data-source-from-rds))
(common-lisp:progn
 (common-lisp:defun create-data-source-from-redshift
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-source-id data-source-name data-spec
                     role-arn compute-statistics)
   (common-lisp:declare
    (common-lisp:ignorable data-source-id data-source-name data-spec role-arn
     compute-statistics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-data-source-from-redshift-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDataSourceFromRedshift")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDataSourceFromRedshiftOutput" common-lisp:nil)))
 (common-lisp:export 'create-data-source-from-redshift))
(common-lisp:progn
 (common-lisp:defun create-data-source-from-s3
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-source-id data-source-name data-spec
                     compute-statistics)
   (common-lisp:declare
    (common-lisp:ignorable data-source-id data-source-name data-spec
     compute-statistics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-data-source-from-s3input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDataSourceFromS3")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDataSourceFromS3Output" common-lisp:nil)))
 (common-lisp:export 'create-data-source-from-s3))
(common-lisp:progn
 (common-lisp:defun create-evaluation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key evaluation-id evaluation-name mlmodel-id
                     evaluation-data-source-id)
   (common-lisp:declare
    (common-lisp:ignorable evaluation-id evaluation-name mlmodel-id
     evaluation-data-source-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-evaluation-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateEvaluation")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateEvaluationOutput" common-lisp:nil)))
 (common-lisp:export 'create-evaluation))
(common-lisp:progn
 (common-lisp:defun create-mlmodel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mlmodel-id mlmodel-name mlmodel-type
                     parameters training-data-source-id recipe recipe-uri)
   (common-lisp:declare
    (common-lisp:ignorable mlmodel-id mlmodel-name mlmodel-type parameters
     training-data-source-id recipe recipe-uri))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-mlmodel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateMLModel")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateMLModelOutput" common-lisp:nil)))
 (common-lisp:export 'create-mlmodel))
(common-lisp:progn
 (common-lisp:defun create-realtime-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mlmodel-id)
   (common-lisp:declare (common-lisp:ignorable mlmodel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-realtime-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRealtimeEndpoint")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateRealtimeEndpointOutput" common-lisp:nil)))
 (common-lisp:export 'create-realtime-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-batch-prediction
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key batch-prediction-id)
   (common-lisp:declare (common-lisp:ignorable batch-prediction-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-batch-prediction-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBatchPrediction")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteBatchPredictionOutput" common-lisp:nil)))
 (common-lisp:export 'delete-batch-prediction))
(common-lisp:progn
 (common-lisp:defun delete-data-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-source-id)
   (common-lisp:declare (common-lisp:ignorable data-source-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-data-source-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDataSource")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDataSourceOutput" common-lisp:nil)))
 (common-lisp:export 'delete-data-source))
(common-lisp:progn
 (common-lisp:defun delete-evaluation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key evaluation-id)
   (common-lisp:declare (common-lisp:ignorable evaluation-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-evaluation-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteEvaluation")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteEvaluationOutput" common-lisp:nil)))
 (common-lisp:export 'delete-evaluation))
(common-lisp:progn
 (common-lisp:defun delete-mlmodel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mlmodel-id)
   (common-lisp:declare (common-lisp:ignorable mlmodel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-mlmodel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteMLModel")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteMLModelOutput" common-lisp:nil)))
 (common-lisp:export 'delete-mlmodel))
(common-lisp:progn
 (common-lisp:defun delete-realtime-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mlmodel-id)
   (common-lisp:declare (common-lisp:ignorable mlmodel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-realtime-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRealtimeEndpoint")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRealtimeEndpointOutput" common-lisp:nil)))
 (common-lisp:export 'delete-realtime-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tag-keys resource-id resource-type)
   (common-lisp:declare
    (common-lisp:ignorable tag-keys resource-id resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteTags")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteTagsOutput" common-lisp:nil)))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun describe-batch-predictions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-variable eq gt lt ge le ne prefix
                     sort-order next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable filter-variable eq gt lt ge le ne prefix sort-order
     next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-batch-predictions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeBatchPredictions")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeBatchPredictionsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-batch-predictions))
(common-lisp:progn
 (common-lisp:defun describe-data-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-variable eq gt lt ge le ne prefix
                     sort-order next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable filter-variable eq gt lt ge le ne prefix sort-order
     next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-data-sources-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDataSources")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDataSourcesOutput" common-lisp:nil)))
 (common-lisp:export 'describe-data-sources))
(common-lisp:progn
 (common-lisp:defun describe-evaluations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-variable eq gt lt ge le ne prefix
                     sort-order next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable filter-variable eq gt lt ge le ne prefix sort-order
     next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-evaluations-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEvaluations")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEvaluationsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-evaluations))
(common-lisp:progn
 (common-lisp:defun describe-mlmodels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-variable eq gt lt ge le ne prefix
                     sort-order next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable filter-variable eq gt lt ge le ne prefix sort-order
     next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-mlmodels-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeMLModels")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeMLModelsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-mlmodels))
(common-lisp:progn
 (common-lisp:defun describe-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id resource-type)
   (common-lisp:declare (common-lisp:ignorable resource-id resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTags")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTagsOutput" common-lisp:nil)))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun get-batch-prediction
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key batch-prediction-id)
   (common-lisp:declare (common-lisp:ignorable batch-prediction-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-batch-prediction-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetBatchPrediction")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBatchPredictionOutput" common-lisp:nil)))
 (common-lisp:export 'get-batch-prediction))
(common-lisp:progn
 (common-lisp:defun get-data-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-source-id verbose)
   (common-lisp:declare (common-lisp:ignorable data-source-id verbose))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-source-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDataSource")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDataSourceOutput" common-lisp:nil)))
 (common-lisp:export 'get-data-source))
(common-lisp:progn
 (common-lisp:defun get-evaluation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key evaluation-id)
   (common-lisp:declare (common-lisp:ignorable evaluation-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-evaluation-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetEvaluation")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetEvaluationOutput" common-lisp:nil)))
 (common-lisp:export 'get-evaluation))
(common-lisp:progn
 (common-lisp:defun get-mlmodel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mlmodel-id verbose)
   (common-lisp:declare (common-lisp:ignorable mlmodel-id verbose))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-mlmodel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetMLModel")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetMLModelOutput" common-lisp:nil)))
 (common-lisp:export 'get-mlmodel))
(common-lisp:progn
 (common-lisp:defun predict
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mlmodel-id record predict-endpoint)
   (common-lisp:declare
    (common-lisp:ignorable mlmodel-id record predict-endpoint))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-predict-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"Predict")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PredictOutput" common-lisp:nil)))
 (common-lisp:export 'predict))
(common-lisp:progn
 (common-lisp:defun update-batch-prediction
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key batch-prediction-id
                     batch-prediction-name)
   (common-lisp:declare
    (common-lisp:ignorable batch-prediction-id batch-prediction-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-batch-prediction-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateBatchPrediction")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateBatchPredictionOutput" common-lisp:nil)))
 (common-lisp:export 'update-batch-prediction))
(common-lisp:progn
 (common-lisp:defun update-data-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-source-id data-source-name)
   (common-lisp:declare
    (common-lisp:ignorable data-source-id data-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-data-source-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDataSource")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateDataSourceOutput" common-lisp:nil)))
 (common-lisp:export 'update-data-source))
(common-lisp:progn
 (common-lisp:defun update-evaluation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key evaluation-id evaluation-name)
   (common-lisp:declare (common-lisp:ignorable evaluation-id evaluation-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-evaluation-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateEvaluation")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateEvaluationOutput" common-lisp:nil)))
 (common-lisp:export 'update-evaluation))
(common-lisp:progn
 (common-lisp:defun update-mlmodel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mlmodel-id mlmodel-name score-threshold)
   (common-lisp:declare
    (common-lisp:ignorable mlmodel-id mlmodel-name score-threshold))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-mlmodel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "machinelearning")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMLModel")
                                  ("Version" ,@"2014-12-12"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateMLModelOutput" common-lisp:nil)))
 (common-lisp:export 'update-mlmodel))