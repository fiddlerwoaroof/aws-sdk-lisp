;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ec2
  (:use)
  (:nicknames #:aws/ec2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/ec2)
(common-lisp:progn
 (common-lisp:defstruct (accept-reserved-instances-exchange-quote-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (reserved-instance-ids (common-lisp:error ":reserved-instance-ids is required") :type (common-lisp:or reserved-instance-id-set common-lisp:null))
   (target-configurations common-lisp:nil :type (common-lisp:or target-configuration-request-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-reserved-instances-exchange-quote-request 'make-accept-reserved-instances-exchange-quote-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-reserved-instances-exchange-quote-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "TargetConfigurations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-reserved-instances-exchange-quote-result (:copier common-lisp:nil)) (exchange-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-reserved-instances-exchange-quote-result 'make-accept-reserved-instances-exchange-quote-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-reserved-instances-exchange-quote-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ExchangeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'exchange-id))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-transit-gateway-peering-attachment-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-transit-gateway-peering-attachment-request 'make-accept-transit-gateway-peering-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-transit-gateway-peering-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-transit-gateway-peering-attachment-result (:copier common-lisp:nil))
   (transit-gateway-peering-attachment common-lisp:nil :type (common-lisp:or transit-gateway-peering-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-transit-gateway-peering-attachment-result 'make-accept-transit-gateway-peering-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-transit-gateway-peering-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayPeeringAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-peering-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-transit-gateway-vpc-attachment-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-transit-gateway-vpc-attachment-request 'make-accept-transit-gateway-vpc-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-transit-gateway-vpc-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-transit-gateway-vpc-attachment-result (:copier common-lisp:nil)) (transit-gateway-vpc-attachment common-lisp:nil :type (common-lisp:or transit-gateway-vpc-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-transit-gateway-vpc-attachment-result 'make-accept-transit-gateway-vpc-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-transit-gateway-vpc-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayVpcAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-vpc-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-vpc-endpoint-connections-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-id (common-lisp:error ":service-id is required") :type (common-lisp:or vpc-endpoint-service-id common-lisp:null))
   (vpc-endpoint-ids (common-lisp:error ":vpc-endpoint-ids is required") :type (common-lisp:or vpc-endpoint-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-vpc-endpoint-connections-request 'make-accept-vpc-endpoint-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-vpc-endpoint-connections-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-vpc-endpoint-connections-result (:copier common-lisp:nil)) (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-vpc-endpoint-connections-result 'make-accept-vpc-endpoint-connections-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-vpc-endpoint-connections-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-vpc-peering-connection-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-peering-connection-id common-lisp:nil :type (common-lisp:or vpc-peering-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-vpc-peering-connection-request 'make-accept-vpc-peering-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-vpc-peering-connection-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (accept-vpc-peering-connection-result (:copier common-lisp:nil)) (vpc-peering-connection common-lisp:nil :type (common-lisp:or vpc-peering-connection common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accept-vpc-peering-connection-result 'make-accept-vpc-peering-connection-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape accept-vpc-peering-connection-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcPeeringConnection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection))))))
(common-lisp:progn
 (common-lisp:defstruct (account-attribute (:copier common-lisp:nil))
   (attribute-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attribute-values common-lisp:nil :type (common-lisp:or account-attribute-value-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account-attribute 'make-account-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape account-attribute))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttributeName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute-name)))
                       (aws-sdk/generator/shape::to-query-params "AttributeValues" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute-values))))))
(common-lisp:progn
 (common-lisp:deftype account-attribute-list () '(trivial-types:proper-list account-attribute))
 (common-lisp:defun |make-account-attribute-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list account-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-attribute-name-string-list () '(trivial-types:proper-list account-attribute-name))
 (common-lisp:defun |make-account-attribute-name-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list account-attribute-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (account-attribute-value (:copier common-lisp:nil)) (attribute-value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account-attribute-value 'make-account-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape account-attribute-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttributeValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute-value))))))
(common-lisp:progn
 (common-lisp:deftype account-attribute-value-list () '(trivial-types:proper-list account-attribute-value))
 (common-lisp:defun |make-account-attribute-value-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list account-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (active-instance (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-instance-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-health common-lisp:nil :type (common-lisp:or instance-health-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'active-instance 'make-active-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape active-instance))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-request-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceHealth" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-health))))))
(common-lisp:progn
 (common-lisp:deftype active-instance-set () '(trivial-types:proper-list active-instance))
 (common-lisp:defun |make-active-instance-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list active-instance))
   aws-sdk/generator/shape::members))
(common-lisp:deftype activity-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (address (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (allocation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or domain-type common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (public-ipv4pool common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-owned-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-owned-ipv4pool common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'address 'make-address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip)))
                       (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "Domain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'domain)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "PublicIpv4Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ipv4pool)))
                       (aws-sdk/generator/shape::to-query-params "NetworkBorderGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-border-group)))
                       (aws-sdk/generator/shape::to-query-params "CustomerOwnedIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-owned-ip)))
                       (aws-sdk/generator/shape::to-query-params "CustomerOwnedIpv4Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-owned-ipv4pool))))))
(common-lisp:progn
 (common-lisp:deftype address-list () '(trivial-types:proper-list address))
 (common-lisp:defun |make-address-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list address)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (advertise-byoip-cidr-request (:copier common-lisp:nil))
   (cidr (common-lisp:error ":cidr is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'advertise-byoip-cidr-request 'make-advertise-byoip-cidr-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape advertise-byoip-cidr-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (advertise-byoip-cidr-result (:copier common-lisp:nil)) (byoip-cidr common-lisp:nil :type (common-lisp:or byoip-cidr common-lisp:null)))
 (common-lisp:export (common-lisp:list 'advertise-byoip-cidr-result 'make-advertise-byoip-cidr-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape advertise-byoip-cidr-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ByoipCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'byoip-cidr))))))
(common-lisp:deftype affinity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (allocate-address-request (:copier common-lisp:nil))
   (domain common-lisp:nil :type (common-lisp:or domain-type common-lisp:null))
   (address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ipv4pool common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-owned-ipv4pool common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'allocate-address-request 'make-allocate-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape allocate-address-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Domain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'domain)))
                       (aws-sdk/generator/shape::to-query-params "Address" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'address)))
                       (aws-sdk/generator/shape::to-query-params "PublicIpv4Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ipv4pool)))
                       (aws-sdk/generator/shape::to-query-params "NetworkBorderGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-border-group)))
                       (aws-sdk/generator/shape::to-query-params "CustomerOwnedIpv4Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-owned-ipv4pool)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (allocate-address-result (:copier common-lisp:nil))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (allocation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ipv4pool common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or domain-type common-lisp:null))
   (customer-owned-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-owned-ipv4pool common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'allocate-address-result 'make-allocate-address-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape allocate-address-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip)))
                       (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "PublicIpv4Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ipv4pool)))
                       (aws-sdk/generator/shape::to-query-params "NetworkBorderGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-border-group)))
                       (aws-sdk/generator/shape::to-query-params "Domain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'domain)))
                       (aws-sdk/generator/shape::to-query-params "CustomerOwnedIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-owned-ip)))
                       (aws-sdk/generator/shape::to-query-params "CustomerOwnedIpv4Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-owned-ipv4pool))))))
(common-lisp:progn
 (common-lisp:defstruct (allocate-hosts-request (:copier common-lisp:nil))
   (auto-placement common-lisp:nil :type (common-lisp:or auto-placement common-lisp:null))
   (availability-zone (common-lisp:error ":availability-zone is required") :type (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (quantity (common-lisp:error ":quantity is required") :type (common-lisp:or integer common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (host-recovery common-lisp:nil :type (common-lisp:or host-recovery common-lisp:null)))
 (common-lisp:export (common-lisp:list 'allocate-hosts-request 'make-allocate-hosts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape allocate-hosts-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AutoPlacement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-placement)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family)))
                       (aws-sdk/generator/shape::to-query-params "Quantity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'quantity)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "HostRecovery" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-recovery))))))
(common-lisp:progn
 (common-lisp:defstruct (allocate-hosts-result (:copier common-lisp:nil)) (host-ids common-lisp:nil :type (common-lisp:or response-host-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'allocate-hosts-result 'make-allocate-hosts-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape allocate-hosts-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HostIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-ids))))))
(common-lisp:deftype allocation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype allocation-id-list () '(trivial-types:proper-list allocation-id))
 (common-lisp:defun |make-allocation-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list allocation-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype allocation-state () 'common-lisp:string)
(common-lisp:deftype allocation-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (allowed-principal (:copier common-lisp:nil))
   (principal-type common-lisp:nil :type (common-lisp:or principal-type common-lisp:null))
   (principal common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'allowed-principal 'make-allowed-principal))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape allowed-principal))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PrincipalType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'principal-type)))
                       (aws-sdk/generator/shape::to-query-params "Principal" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'principal))))))
(common-lisp:progn
 (common-lisp:deftype allowed-principal-set () '(trivial-types:proper-list allowed-principal))
 (common-lisp:defun |make-allowed-principal-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list allowed-principal))
   aws-sdk/generator/shape::members))
(common-lisp:deftype allows-multiple-instance-types () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (apply-security-groups-to-client-vpn-target-network-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (security-group-ids (common-lisp:error ":security-group-ids is required") :type (common-lisp:or client-vpn-security-group-id-set common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'apply-security-groups-to-client-vpn-target-network-request 'make-apply-security-groups-to-client-vpn-target-network-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape apply-security-groups-to-client-vpn-target-network-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (apply-security-groups-to-client-vpn-target-network-result (:copier common-lisp:nil)) (security-group-ids common-lisp:nil :type (common-lisp:or client-vpn-security-group-id-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'apply-security-groups-to-client-vpn-target-network-result 'make-apply-security-groups-to-client-vpn-target-network-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape apply-security-groups-to-client-vpn-target-network-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids))))))
(common-lisp:deftype architecture-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype architecture-type-list () '(trivial-types:proper-list architecture-type))
 (common-lisp:defun |make-architecture-type-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list architecture-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype architecture-values () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (assign-ipv6addresses-request (:copier common-lisp:nil))
   (ipv6address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or ipv6address-list common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assign-ipv6addresses-request 'make-assign-ipv6addresses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape assign-ipv6addresses-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address-count)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id))))))
(common-lisp:progn
 (common-lisp:defstruct (assign-ipv6addresses-result (:copier common-lisp:nil))
   (assigned-ipv6addresses common-lisp:nil :type (common-lisp:or ipv6address-list common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assign-ipv6addresses-result 'make-assign-ipv6addresses-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape assign-ipv6addresses-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssignedIpv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'assigned-ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id))))))
(common-lisp:progn
 (common-lisp:defstruct (assign-private-ip-addresses-request (:copier common-lisp:nil))
   (allow-reassignment common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null))
   (private-ip-addresses common-lisp:nil :type (common-lisp:or private-ip-address-string-list common-lisp:null))
   (secondary-private-ip-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assign-private-ip-addresses-request 'make-assign-private-ip-addresses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape assign-private-ip-addresses-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllowReassignment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-reassignment)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses)))
                       (aws-sdk/generator/shape::to-query-params "SecondaryPrivateIpAddressCount"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'secondary-private-ip-address-count))))))
(common-lisp:progn
 (common-lisp:defstruct (assign-private-ip-addresses-result (:copier common-lisp:nil))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (assigned-private-ip-addresses common-lisp:nil :type (common-lisp:or assigned-private-ip-address-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assign-private-ip-addresses-result 'make-assign-private-ip-addresses-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape assign-private-ip-addresses-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "AssignedPrivateIpAddresses"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'assigned-private-ip-addresses))))))
(common-lisp:progn
 (common-lisp:defstruct (assigned-private-ip-address (:copier common-lisp:nil)) (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assigned-private-ip-address 'make-assigned-private-ip-address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape assigned-private-ip-address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address))))))
(common-lisp:progn
 (common-lisp:deftype assigned-private-ip-address-list () '(trivial-types:proper-list assigned-private-ip-address))
 (common-lisp:defun |make-assigned-private-ip-address-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list assigned-private-ip-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (associate-address-request (:copier common-lisp:nil))
   (allocation-id common-lisp:nil :type (common-lisp:or allocation-id common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (allow-reassociation common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or network-interface-id common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-address-request 'make-associate-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-address-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip)))
                       (aws-sdk/generator/shape::to-query-params "AllowReassociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-reassociation)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-address-result (:copier common-lisp:nil)) (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-address-result 'make-associate-address-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-address-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-client-vpn-target-network-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type (common-lisp:or subnet-id common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-client-vpn-target-network-request 'make-associate-client-vpn-target-network-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-client-vpn-target-network-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-client-vpn-target-network-result (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or association-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-client-vpn-target-network-result 'make-associate-client-vpn-target-network-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-client-vpn-target-network-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-dhcp-options-request (:copier common-lisp:nil))
   (dhcp-options-id (common-lisp:error ":dhcp-options-id is required") :type (common-lisp:or defaulting-dhcp-options-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-dhcp-options-request 'make-associate-dhcp-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-dhcp-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DhcpOptionsId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-options-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-iam-instance-profile-request (:copier common-lisp:nil))
   (iam-instance-profile (common-lisp:error ":iam-instance-profile is required") :type (common-lisp:or iam-instance-profile-specification common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-iam-instance-profile-request 'make-associate-iam-instance-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-iam-instance-profile-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-iam-instance-profile-result (:copier common-lisp:nil)) (iam-instance-profile-association common-lisp:nil :type (common-lisp:or iam-instance-profile-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-iam-instance-profile-result 'make-associate-iam-instance-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-iam-instance-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamInstanceProfileAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile-association))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-route-table-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null))
   (gateway-id common-lisp:nil :type (common-lisp:or route-gateway-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-route-table-request 'make-associate-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-route-table-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-route-table-result (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (association-state common-lisp:nil :type (common-lisp:or route-table-association-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-route-table-result 'make-associate-route-table-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-route-table-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "AssociationState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-state))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-subnet-cidr-block-request (:copier common-lisp:nil))
   (ipv6cidr-block (common-lisp:error ":ipv6cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type (common-lisp:or subnet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-subnet-cidr-block-request 'make-associate-subnet-cidr-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-subnet-cidr-block-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-subnet-cidr-block-result (:copier common-lisp:nil))
   (ipv6cidr-block-association common-lisp:nil :type (common-lisp:or subnet-ipv6cidr-block-association common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-subnet-cidr-block-result 'make-associate-subnet-cidr-block-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-subnet-cidr-block-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-association)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-transit-gateway-multicast-domain-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (subnet-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-transit-gateway-multicast-domain-request 'make-associate-transit-gateway-multicast-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-transit-gateway-multicast-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "SubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-transit-gateway-multicast-domain-result (:copier common-lisp:nil)) (associations common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-associations common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-transit-gateway-multicast-domain-result 'make-associate-transit-gateway-multicast-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-transit-gateway-multicast-domain-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Associations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associations))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-transit-gateway-route-table-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-transit-gateway-route-table-request 'make-associate-transit-gateway-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-transit-gateway-route-table-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-transit-gateway-route-table-result (:copier common-lisp:nil)) (association common-lisp:nil :type (common-lisp:or transit-gateway-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-transit-gateway-route-table-result 'make-associate-transit-gateway-route-table-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-transit-gateway-route-table-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Association" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-vpc-cidr-block-request (:copier common-lisp:nil))
   (amazon-provided-ipv6cidr-block common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (ipv6cidr-block-network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6pool common-lisp:nil :type (common-lisp:or ipv6pool-ec2id common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-vpc-cidr-block-request 'make-associate-vpc-cidr-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-vpc-cidr-block-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AmazonProvidedIpv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amazon-provided-ipv6cidr-block)))
    (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
    (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockNetworkBorderGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-network-border-group)))
    (aws-sdk/generator/shape::to-query-params "Ipv6Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6pool)))
    (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block))))))
(common-lisp:progn
 (common-lisp:defstruct (associate-vpc-cidr-block-result (:copier common-lisp:nil))
   (ipv6cidr-block-association common-lisp:nil :type (common-lisp:or vpc-ipv6cidr-block-association common-lisp:null))
   (cidr-block-association common-lisp:nil :type (common-lisp:or vpc-cidr-block-association common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associate-vpc-cidr-block-result 'make-associate-vpc-cidr-block-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associate-vpc-cidr-block-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-association)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlockAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block-association)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:deftype associated-network-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (associated-target-network (:copier common-lisp:nil))
   (network-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-type common-lisp:nil :type (common-lisp:or associated-network-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'associated-target-network 'make-associated-target-network))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape associated-target-network))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-type))))))
(common-lisp:progn
 (common-lisp:deftype associated-target-network-set () '(trivial-types:proper-list associated-target-network))
 (common-lisp:defun |make-associated-target-network-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list associated-target-network))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype association-id-list () '(trivial-types:proper-list iam-instance-profile-association-id))
 (common-lisp:defun |make-association-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list iam-instance-profile-association-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (association-status (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or association-status-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'association-status 'make-association-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape association-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype association-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attach-classic-link-vpc-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (groups (common-lisp:error ":groups is required") :type (common-lisp:or group-id-string-list common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-classic-link-vpc-request 'make-attach-classic-link-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-classic-link-vpc-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-classic-link-vpc-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-classic-link-vpc-result 'make-attach-classic-link-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-classic-link-vpc-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-internet-gateway-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (internet-gateway-id (common-lisp:error ":internet-gateway-id is required") :type (common-lisp:or internet-gateway-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-internet-gateway-request 'make-attach-internet-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-internet-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InternetGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'internet-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-network-interface-request (:copier common-lisp:nil))
   (device-index (common-lisp:error ":device-index is required") :type (common-lisp:or integer common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-network-interface-request 'make-attach-network-interface-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-network-interface-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-index)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-network-interface-result (:copier common-lisp:nil)) (attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-network-interface-result 'make-attach-network-interface-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-network-interface-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-volume-request (:copier common-lisp:nil))
   (device (common-lisp:error ":device is required") :type (common-lisp:or string common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-volume-request 'make-attach-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-volume-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Device" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-vpn-gateway-request (:copier common-lisp:nil))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (vpn-gateway-id (common-lisp:error ":vpn-gateway-id is required") :type (common-lisp:or vpn-gateway-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-vpn-gateway-request 'make-attach-vpn-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-vpn-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "VpnGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-vpn-gateway-result (:copier common-lisp:nil)) (vpc-attachment common-lisp:nil :type (common-lisp:or vpc-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attach-vpn-gateway-result 'make-attach-vpn-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attach-vpn-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-attachment))))))
(common-lisp:deftype attachment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attribute-boolean-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-boolean-value 'make-attribute-boolean-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attribute-boolean-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:defstruct (attribute-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-value 'make-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape attribute-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:defstruct (authorization-rule (:copier common-lisp:nil))
   (client-vpn-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (access-all common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (destination-cidr common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or client-vpn-authorization-rule-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorization-rule 'make-authorization-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape authorization-rule))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "AccessAll" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'access-all)))
                       (aws-sdk/generator/shape::to-query-params "DestinationCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:deftype authorization-rule-set () '(trivial-types:proper-list authorization-rule))
 (common-lisp:defun |make-authorization-rule-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list authorization-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (authorize-client-vpn-ingress-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (target-network-cidr (common-lisp:error ":target-network-cidr is required") :type (common-lisp:or string common-lisp:null))
   (access-group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorize-all-groups common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorize-client-vpn-ingress-request 'make-authorize-client-vpn-ingress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape authorize-client-vpn-ingress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetNetworkCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-network-cidr)))
                       (aws-sdk/generator/shape::to-query-params "AccessGroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'access-group-id)))
                       (aws-sdk/generator/shape::to-query-params "AuthorizeAllGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'authorize-all-groups)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (authorize-client-vpn-ingress-result (:copier common-lisp:nil)) (status common-lisp:nil :type (common-lisp:or client-vpn-authorization-rule-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorize-client-vpn-ingress-result 'make-authorize-client-vpn-ingress-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape authorize-client-vpn-ingress-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (authorize-security-group-egress-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-id (common-lisp:error ":group-id is required") :type (common-lisp:or security-group-id common-lisp:null))
   (ip-permissions common-lisp:nil :type (common-lisp:or ip-permission-list common-lisp:null))
   (cidr-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ip-protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (source-security-group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-security-group-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorize-security-group-egress-request 'make-authorize-security-group-egress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape authorize-security-group-egress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions)))
                       (aws-sdk/generator/shape::to-query-params "CidrIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-ip)))
                       (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "IpProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-protocol)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-name)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupOwnerId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-owner-id))))))
(common-lisp:progn
 (common-lisp:defstruct (authorize-security-group-ingress-request (:copier common-lisp:nil))
   (cidr-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or security-group-id common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or security-group-name common-lisp:null))
   (ip-permissions common-lisp:nil :type (common-lisp:or ip-permission-list common-lisp:null))
   (ip-protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-security-group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-security-group-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorize-security-group-ingress-request 'make-authorize-security-group-ingress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape authorize-security-group-ingress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-ip)))
                       (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions)))
                       (aws-sdk/generator/shape::to-query-params "IpProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-protocol)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-name)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupOwnerId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:deftype auto-accept-shared-attachments-value () 'common-lisp:string)
(common-lisp:deftype auto-placement () 'common-lisp:string)
(common-lisp:deftype auto-recovery-flag () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (availability-zone (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or availability-zone-state common-lisp:null))
   (opt-in-status common-lisp:nil :type (common-lisp:or availability-zone-opt-in-status common-lisp:null))
   (messages common-lisp:nil :type (common-lisp:or availability-zone-message-list common-lisp:null))
   (region-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (zone-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (zone-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'availability-zone 'make-availability-zone))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape availability-zone))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "OptInStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'opt-in-status)))
                       (aws-sdk/generator/shape::to-query-params "Messages" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'messages)))
                       (aws-sdk/generator/shape::to-query-params "RegionName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'region-name)))
                       (aws-sdk/generator/shape::to-query-params "ZoneName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'zone-name)))
                       (aws-sdk/generator/shape::to-query-params "ZoneId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'zone-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "NetworkBorderGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-border-group))))))
(common-lisp:progn
 (common-lisp:deftype availability-zone-list () '(trivial-types:proper-list availability-zone))
 (common-lisp:defun |make-availability-zone-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (availability-zone-message (:copier common-lisp:nil)) (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'availability-zone-message 'make-availability-zone-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape availability-zone-message))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:deftype availability-zone-message-list () '(trivial-types:proper-list availability-zone-message))
 (common-lisp:defun |make-availability-zone-message-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list availability-zone-message))
   aws-sdk/generator/shape::members))
(common-lisp:deftype availability-zone-opt-in-status () 'common-lisp:string)
(common-lisp:deftype availability-zone-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype availability-zone-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-availability-zone-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (available-capacity (:copier common-lisp:nil))
   (available-instance-capacity common-lisp:nil :type (common-lisp:or available-instance-capacity-list common-lisp:null))
   (available-vcpus common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'available-capacity 'make-available-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape available-capacity))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailableInstanceCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-instance-capacity)))
                       (aws-sdk/generator/shape::to-query-params "AvailableVCpus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-vcpus))))))
(common-lisp:progn
 (common-lisp:deftype available-instance-capacity-list () '(trivial-types:proper-list instance-capacity))
 (common-lisp:defun |make-available-instance-capacity-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-capacity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bare-metal-flag () 'common-lisp:boolean)
(common-lisp:deftype batch-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype billing-product-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-billing-product-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype blob () '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct (blob-attribute-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export (common-lisp:list 'blob-attribute-value 'make-blob-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape blob-attribute-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:defstruct (block-device-mapping (:copier common-lisp:nil))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtual-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs common-lisp:nil :type (common-lisp:or ebs-block-device common-lisp:null))
   (no-device common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'block-device-mapping 'make-block-device-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape block-device-mapping))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "VirtualName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-name)))
                       (aws-sdk/generator/shape::to-query-params "Ebs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs)))
                       (aws-sdk/generator/shape::to-query-params "NoDevice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'no-device))))))
(common-lisp:progn
 (common-lisp:deftype block-device-mapping-list () '(trivial-types:proper-list block-device-mapping))
 (common-lisp:defun |make-block-device-mapping-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list block-device-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype block-device-mapping-request-list () '(trivial-types:proper-list block-device-mapping))
 (common-lisp:defun |make-block-device-mapping-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list block-device-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype bundle-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype bundle-id-string-list () '(trivial-types:proper-list bundle-id))
 (common-lisp:defun |make-bundle-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list bundle-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (bundle-instance-request (:copier common-lisp:nil))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (storage (common-lisp:error ":storage is required") :type (common-lisp:or storage common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bundle-instance-request 'make-bundle-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape bundle-instance-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Storage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'storage)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (bundle-instance-result (:copier common-lisp:nil)) (bundle-task common-lisp:nil :type (common-lisp:or bundle-task common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bundle-instance-result 'make-bundle-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape bundle-instance-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BundleTask" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bundle-task))))))
(common-lisp:progn
 (common-lisp:defstruct (bundle-task (:copier common-lisp:nil))
   (bundle-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (bundle-task-error common-lisp:nil :type (common-lisp:or bundle-task-error common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or bundle-task-state common-lisp:null))
   (storage common-lisp:nil :type (common-lisp:or storage common-lisp:null))
   (update-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bundle-task 'make-bundle-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape bundle-task))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BundleId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bundle-id)))
                       (aws-sdk/generator/shape::to-query-params "BundleTaskError" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bundle-task-error)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Storage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'storage)))
                       (aws-sdk/generator/shape::to-query-params "UpdateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'update-time))))))
(common-lisp:progn
 (common-lisp:defstruct (bundle-task-error (:copier common-lisp:nil)) (code common-lisp:nil :type (common-lisp:or string common-lisp:null)) (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bundle-task-error 'make-bundle-task-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape bundle-task-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:deftype bundle-task-list () '(trivial-types:proper-list bundle-task))
 (common-lisp:defun |make-bundle-task-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list bundle-task))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bundle-task-state () 'common-lisp:string)
(common-lisp:deftype burstable-performance-flag () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (byoip-cidr (:copier common-lisp:nil))
   (cidr common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or byoip-cidr-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'byoip-cidr 'make-byoip-cidr))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape byoip-cidr))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype byoip-cidr-set () '(trivial-types:proper-list byoip-cidr))
 (common-lisp:defun |make-byoip-cidr-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list byoip-cidr))
   aws-sdk/generator/shape::members))
(common-lisp:deftype byoip-cidr-state () 'common-lisp:string)
(common-lisp:deftype cancel-batch-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cancel-bundle-task-request (:copier common-lisp:nil))
   (bundle-id (common-lisp:error ":bundle-id is required") :type (common-lisp:or bundle-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-bundle-task-request 'make-cancel-bundle-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-bundle-task-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BundleId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bundle-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-bundle-task-result (:copier common-lisp:nil)) (bundle-task common-lisp:nil :type (common-lisp:or bundle-task common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-bundle-task-result 'make-cancel-bundle-task-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-bundle-task-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BundleTask" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bundle-task))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-capacity-reservation-request (:copier common-lisp:nil))
   (capacity-reservation-id (common-lisp:error ":capacity-reservation-id is required") :type (common-lisp:or capacity-reservation-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-capacity-reservation-request 'make-cancel-capacity-reservation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-capacity-reservation-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-capacity-reservation-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-capacity-reservation-result 'make-cancel-capacity-reservation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-capacity-reservation-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-conversion-request (:copier common-lisp:nil))
   (conversion-task-id (common-lisp:error ":conversion-task-id is required") :type (common-lisp:or conversion-task-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (reason-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-conversion-request 'make-cancel-conversion-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-conversion-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConversionTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'conversion-task-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ReasonMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reason-message))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-export-task-request (:copier common-lisp:nil)) (export-task-id (common-lisp:error ":export-task-id is required") :type (common-lisp:or export-vm-task-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-export-task-request 'make-cancel-export-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-export-task-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ExportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-task-id))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-import-task-request (:copier common-lisp:nil))
   (cancel-reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (import-task-id common-lisp:nil :type (common-lisp:or import-task-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-import-task-request 'make-cancel-import-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-import-task-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CancelReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cancel-reason)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ImportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-id))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-import-task-result (:copier common-lisp:nil))
   (import-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (previous-state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-import-task-result 'make-cancel-import-task-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-import-task-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-id)))
                       (aws-sdk/generator/shape::to-query-params "PreviousState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'previous-state)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-reserved-instances-listing-request (:copier common-lisp:nil))
   (reserved-instances-listing-id (common-lisp:error ":reserved-instances-listing-id is required") :type (common-lisp:or reserved-instances-listing-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-reserved-instances-listing-request 'make-cancel-reserved-instances-listing-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-reserved-instances-listing-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReservedInstancesListingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-listing-id))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-reserved-instances-listing-result (:copier common-lisp:nil)) (reserved-instances-listings common-lisp:nil :type (common-lisp:or reserved-instances-listing-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-reserved-instances-listing-result 'make-cancel-reserved-instances-listing-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-reserved-instances-listing-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesListings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-listings))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-spot-fleet-requests-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or cancel-batch-error-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-spot-fleet-requests-error 'make-cancel-spot-fleet-requests-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-spot-fleet-requests-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-spot-fleet-requests-error-item (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or cancel-spot-fleet-requests-error common-lisp:null))
   (spot-fleet-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-spot-fleet-requests-error-item 'make-cancel-spot-fleet-requests-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-spot-fleet-requests-error-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Error" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id))))))
(common-lisp:progn
 (common-lisp:deftype cancel-spot-fleet-requests-error-set () '(trivial-types:proper-list cancel-spot-fleet-requests-error-item))
 (common-lisp:defun |make-cancel-spot-fleet-requests-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list cancel-spot-fleet-requests-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cancel-spot-fleet-requests-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (spot-fleet-request-ids (common-lisp:error ":spot-fleet-request-ids is required") :type (common-lisp:or spot-fleet-request-id-list common-lisp:null))
   (terminate-instances (common-lisp:error ":terminate-instances is required") :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-spot-fleet-requests-request 'make-cancel-spot-fleet-requests-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-spot-fleet-requests-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-ids)))
                       (aws-sdk/generator/shape::to-query-params "TerminateInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'terminate-instances))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-spot-fleet-requests-response (:copier common-lisp:nil))
   (successful-fleet-requests common-lisp:nil :type (common-lisp:or cancel-spot-fleet-requests-success-set common-lisp:null))
   (unsuccessful-fleet-requests common-lisp:nil :type (common-lisp:or cancel-spot-fleet-requests-error-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-spot-fleet-requests-response 'make-cancel-spot-fleet-requests-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-spot-fleet-requests-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SuccessfulFleetRequests" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful-fleet-requests)))
                       (aws-sdk/generator/shape::to-query-params "UnsuccessfulFleetRequests" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful-fleet-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-spot-fleet-requests-success-item (:copier common-lisp:nil))
   (current-spot-fleet-request-state common-lisp:nil :type (common-lisp:or batch-state common-lisp:null))
   (previous-spot-fleet-request-state common-lisp:nil :type (common-lisp:or batch-state common-lisp:null))
   (spot-fleet-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-spot-fleet-requests-success-item 'make-cancel-spot-fleet-requests-success-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-spot-fleet-requests-success-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CurrentSpotFleetRequestState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'current-spot-fleet-request-state)))
    (aws-sdk/generator/shape::to-query-params "PreviousSpotFleetRequestState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'previous-spot-fleet-request-state)))
    (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id))))))
(common-lisp:progn
 (common-lisp:deftype cancel-spot-fleet-requests-success-set () '(trivial-types:proper-list cancel-spot-fleet-requests-success-item))
 (common-lisp:defun |make-cancel-spot-fleet-requests-success-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list cancel-spot-fleet-requests-success-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cancel-spot-instance-request-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cancel-spot-instance-requests-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (spot-instance-request-ids (common-lisp:error ":spot-instance-request-ids is required") :type (common-lisp:or spot-instance-request-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-spot-instance-requests-request 'make-cancel-spot-instance-requests-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-spot-instance-requests-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceRequestIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-request-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-spot-instance-requests-result (:copier common-lisp:nil)) (cancelled-spot-instance-requests common-lisp:nil :type (common-lisp:or cancelled-spot-instance-request-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancel-spot-instance-requests-result 'make-cancel-spot-instance-requests-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancel-spot-instance-requests-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CancelledSpotInstanceRequests" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cancelled-spot-instance-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (cancelled-spot-instance-request (:copier common-lisp:nil))
   (spot-instance-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or cancel-spot-instance-request-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cancelled-spot-instance-request 'make-cancelled-spot-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cancelled-spot-instance-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SpotInstanceRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-request-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype cancelled-spot-instance-request-list () '(trivial-types:proper-list cancelled-spot-instance-request))
 (common-lisp:defun |make-cancelled-spot-instance-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list cancelled-spot-instance-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (capacity-reservation (:copier common-lisp:nil))
   (capacity-reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (capacity-reservation-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-platform common-lisp:nil :type (common-lisp:or capacity-reservation-instance-platform common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or capacity-reservation-tenancy common-lisp:null))
   (total-instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (available-instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ephemeral-storage common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or capacity-reservation-state common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (end-date-type common-lisp:nil :type (common-lisp:or end-date-type common-lisp:null))
   (instance-match-criteria common-lisp:nil :type (common-lisp:or instance-match-criteria common-lisp:null))
   (create-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-reservation 'make-capacity-reservation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape capacity-reservation))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-arn)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZoneId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "InstancePlatform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-platform)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Tenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tenancy)))
                       (aws-sdk/generator/shape::to-query-params "TotalInstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-instance-count)))
                       (aws-sdk/generator/shape::to-query-params "AvailableInstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-instance-count)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "EphemeralStorage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ephemeral-storage)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "EndDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-date)))
                       (aws-sdk/generator/shape::to-query-params "EndDateType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-date-type)))
                       (aws-sdk/generator/shape::to-query-params "InstanceMatchCriteria" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-match-criteria)))
                       (aws-sdk/generator/shape::to-query-params "CreateDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-date)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype capacity-reservation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype capacity-reservation-id-set () '(trivial-types:proper-list capacity-reservation-id))
 (common-lisp:defun |make-capacity-reservation-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list capacity-reservation-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype capacity-reservation-instance-platform () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (capacity-reservation-options (:copier common-lisp:nil)) (usage-strategy common-lisp:nil :type (common-lisp:or fleet-capacity-reservation-usage-strategy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-reservation-options 'make-capacity-reservation-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape capacity-reservation-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "UsageStrategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'usage-strategy))))))
(common-lisp:progn
 (common-lisp:defstruct (capacity-reservation-options-request (:copier common-lisp:nil)) (usage-strategy common-lisp:nil :type (common-lisp:or fleet-capacity-reservation-usage-strategy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-reservation-options-request 'make-capacity-reservation-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape capacity-reservation-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "UsageStrategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'usage-strategy))))))
(common-lisp:deftype capacity-reservation-preference () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype capacity-reservation-set () '(trivial-types:proper-list capacity-reservation))
 (common-lisp:defun |make-capacity-reservation-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list capacity-reservation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (capacity-reservation-specification (:copier common-lisp:nil))
   (capacity-reservation-preference common-lisp:nil :type (common-lisp:or capacity-reservation-preference common-lisp:null))
   (capacity-reservation-target common-lisp:nil :type (common-lisp:or capacity-reservation-target common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-reservation-specification 'make-capacity-reservation-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape capacity-reservation-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CapacityReservationPreference" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-preference)))
    (aws-sdk/generator/shape::to-query-params "CapacityReservationTarget" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-target))))))
(common-lisp:progn
 (common-lisp:defstruct (capacity-reservation-specification-response (:copier common-lisp:nil))
   (capacity-reservation-preference common-lisp:nil :type (common-lisp:or capacity-reservation-preference common-lisp:null))
   (capacity-reservation-target common-lisp:nil :type (common-lisp:or capacity-reservation-target-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-reservation-specification-response 'make-capacity-reservation-specification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape capacity-reservation-specification-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CapacityReservationPreference" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-preference)))
    (aws-sdk/generator/shape::to-query-params "CapacityReservationTarget" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-target))))))
(common-lisp:deftype capacity-reservation-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (capacity-reservation-target (:copier common-lisp:nil)) (capacity-reservation-id common-lisp:nil :type (common-lisp:or capacity-reservation-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-reservation-target 'make-capacity-reservation-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape capacity-reservation-target))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id))))))
(common-lisp:progn
 (common-lisp:defstruct (capacity-reservation-target-response (:copier common-lisp:nil)) (capacity-reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-reservation-target-response 'make-capacity-reservation-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape capacity-reservation-target-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id))))))
(common-lisp:deftype capacity-reservation-tenancy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (certificate-authentication (:copier common-lisp:nil)) (client-root-certificate-chain common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'certificate-authentication 'make-certificate-authentication))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape certificate-authentication))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientRootCertificateChain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-root-certificate-chain))))))
(common-lisp:progn
 (common-lisp:defstruct (certificate-authentication-request (:copier common-lisp:nil)) (client-root-certificate-chain-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'certificate-authentication-request 'make-certificate-authentication-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape certificate-authentication-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientRootCertificateChainArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-root-certificate-chain-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (cidr-authorization-context (:copier common-lisp:nil))
   (message (common-lisp:error ":message is required") :type (common-lisp:or string common-lisp:null))
   (signature (common-lisp:error ":signature is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cidr-authorization-context 'make-cidr-authorization-context))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cidr-authorization-context))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message)))
                       (aws-sdk/generator/shape::to-query-params "Signature" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'signature))))))
(common-lisp:progn
 (common-lisp:defstruct (cidr-block (:copier common-lisp:nil)) (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cidr-block 'make-cidr-block))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cidr-block))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block))))))
(common-lisp:progn
 (common-lisp:deftype cidr-block-set () '(trivial-types:proper-list cidr-block))
 (common-lisp:defun |make-cidr-block-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list cidr-block))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (classic-link-dns-support (:copier common-lisp:nil))
   (classic-link-dns-supported common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'classic-link-dns-support 'make-classic-link-dns-support))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape classic-link-dns-support))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClassicLinkDnsSupported" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'classic-link-dns-supported)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:deftype classic-link-dns-support-list () '(trivial-types:proper-list classic-link-dns-support))
 (common-lisp:defun |make-classic-link-dns-support-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list classic-link-dns-support))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (classic-link-instance (:copier common-lisp:nil))
   (groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'classic-link-instance 'make-classic-link-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape classic-link-instance))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:deftype classic-link-instance-list () '(trivial-types:proper-list classic-link-instance))
 (common-lisp:defun |make-classic-link-instance-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list classic-link-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (classic-load-balancer (:copier common-lisp:nil)) (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'classic-load-balancer 'make-classic-load-balancer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape classic-load-balancer))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:progn
 (common-lisp:deftype classic-load-balancers () '(trivial-types:proper-list classic-load-balancer))
 (common-lisp:defun |make-classic-load-balancers| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list classic-load-balancer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (classic-load-balancers-config (:copier common-lisp:nil)) (classic-load-balancers common-lisp:nil :type (common-lisp:or classic-load-balancers common-lisp:null)))
 (common-lisp:export (common-lisp:list 'classic-load-balancers-config 'make-classic-load-balancers-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape classic-load-balancers-config))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClassicLoadBalancers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'classic-load-balancers))))))
(common-lisp:progn
 (common-lisp:defstruct (client-certificate-revocation-list-status (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or client-certificate-revocation-list-status-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-certificate-revocation-list-status 'make-client-certificate-revocation-list-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-certificate-revocation-list-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype client-certificate-revocation-list-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (client-data (:copier common-lisp:nil))
   (comment common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (upload-end common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (upload-size common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (upload-start common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-data 'make-client-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-data))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Comment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'comment)))
                       (aws-sdk/generator/shape::to-query-params "UploadEnd" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upload-end)))
                       (aws-sdk/generator/shape::to-query-params "UploadSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upload-size)))
                       (aws-sdk/generator/shape::to-query-params "UploadStart" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upload-start))))))
(common-lisp:deftype client-vpn-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-authentication (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or client-vpn-authentication-type common-lisp:null))
   (active-directory common-lisp:nil :type (common-lisp:or directory-service-authentication common-lisp:null))
   (mutual-authentication common-lisp:nil :type (common-lisp:or certificate-authentication common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-authentication 'make-client-vpn-authentication))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-authentication))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "ActiveDirectory" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'active-directory)))
                       (aws-sdk/generator/shape::to-query-params "MutualAuthentication" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'mutual-authentication))))))
(common-lisp:progn
 (common-lisp:deftype client-vpn-authentication-list () '(trivial-types:proper-list client-vpn-authentication))
 (common-lisp:defun |make-client-vpn-authentication-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list client-vpn-authentication))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-authentication-request (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or client-vpn-authentication-type common-lisp:null))
   (active-directory common-lisp:nil :type (common-lisp:or directory-service-authentication-request common-lisp:null))
   (mutual-authentication common-lisp:nil :type (common-lisp:or certificate-authentication-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-authentication-request 'make-client-vpn-authentication-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-authentication-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "ActiveDirectory" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'active-directory)))
                       (aws-sdk/generator/shape::to-query-params "MutualAuthentication" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'mutual-authentication))))))
(common-lisp:progn
 (common-lisp:deftype client-vpn-authentication-request-list () '(trivial-types:proper-list client-vpn-authentication-request))
 (common-lisp:defun |make-client-vpn-authentication-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list client-vpn-authentication-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-vpn-authentication-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-authorization-rule-status (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or client-vpn-authorization-rule-status-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-authorization-rule-status 'make-client-vpn-authorization-rule-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-authorization-rule-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype client-vpn-authorization-rule-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-connection (:copier common-lisp:nil))
   (client-vpn-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-established-time common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ingress-bytes common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (egress-bytes common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ingress-packets common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (egress-packets common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (common-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or client-vpn-connection-status common-lisp:null))
   (connection-end-time common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-connection 'make-client-vpn-connection))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-connection))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Timestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'timestamp)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-id)))
                       (aws-sdk/generator/shape::to-query-params "Username" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'username)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionEstablishedTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-established-time)))
                       (aws-sdk/generator/shape::to-query-params "IngressBytes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ingress-bytes)))
                       (aws-sdk/generator/shape::to-query-params "EgressBytes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-bytes)))
                       (aws-sdk/generator/shape::to-query-params "IngressPackets" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ingress-packets)))
                       (aws-sdk/generator/shape::to-query-params "EgressPackets" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-packets)))
                       (aws-sdk/generator/shape::to-query-params "ClientIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-ip)))
                       (aws-sdk/generator/shape::to-query-params "CommonName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'common-name)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionEndTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-end-time))))))
(common-lisp:progn
 (common-lisp:deftype client-vpn-connection-set () '(trivial-types:proper-list client-vpn-connection))
 (common-lisp:defun |make-client-vpn-connection-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list client-vpn-connection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-connection-status (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or client-vpn-connection-status-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-connection-status 'make-client-vpn-connection-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-connection-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype client-vpn-connection-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-endpoint (:copier common-lisp:nil))
   (client-vpn-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or client-vpn-endpoint-status common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deletion-time common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dns-servers common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (split-tunnel common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpn-protocol common-lisp:nil :type (common-lisp:or vpn-protocol common-lisp:null))
   (transport-protocol common-lisp:nil :type (common-lisp:or transport-protocol common-lisp:null))
   (vpn-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (associated-target-networks common-lisp:nil :type (common-lisp:or associated-target-network-set common-lisp:null))
   (server-certificate-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authentication-options common-lisp:nil :type (common-lisp:or client-vpn-authentication-list common-lisp:null))
   (connection-log-options common-lisp:nil :type (common-lisp:or connection-log-response-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or client-vpn-security-group-id-set common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-endpoint 'make-client-vpn-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-endpoint))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
                       (aws-sdk/generator/shape::to-query-params "DeletionTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deletion-time)))
                       (aws-sdk/generator/shape::to-query-params "DnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-name)))
                       (aws-sdk/generator/shape::to-query-params "ClientCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DnsServers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-servers)))
                       (aws-sdk/generator/shape::to-query-params "SplitTunnel" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'split-tunnel)))
                       (aws-sdk/generator/shape::to-query-params "VpnProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-protocol)))
                       (aws-sdk/generator/shape::to-query-params "TransportProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transport-protocol)))
                       (aws-sdk/generator/shape::to-query-params "VpnPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-port)))
                       (aws-sdk/generator/shape::to-query-params "AssociatedTargetNetworks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associated-target-networks)))
                       (aws-sdk/generator/shape::to-query-params "ServerCertificateArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'server-certificate-arn)))
                       (aws-sdk/generator/shape::to-query-params "AuthenticationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'authentication-options)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionLogOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-log-options)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:deftype client-vpn-endpoint-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-vpn-endpoint-id-list () '(trivial-types:proper-list client-vpn-endpoint-id))
 (common-lisp:defun |make-client-vpn-endpoint-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list client-vpn-endpoint-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-endpoint-status (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or client-vpn-endpoint-status-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-endpoint-status 'make-client-vpn-endpoint-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-endpoint-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype client-vpn-endpoint-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-route (:copier common-lisp:nil))
   (client-vpn-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-cidr common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-subnet common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or client-vpn-route-status common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-route 'make-client-vpn-route))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-route))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "DestinationCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr)))
                       (aws-sdk/generator/shape::to-query-params "TargetSubnet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-subnet)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "Origin" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'origin)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description))))))
(common-lisp:progn
 (common-lisp:deftype client-vpn-route-set () '(trivial-types:proper-list client-vpn-route))
 (common-lisp:defun |make-client-vpn-route-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list client-vpn-route))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (client-vpn-route-status (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or client-vpn-route-status-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'client-vpn-route-status 'make-client-vpn-route-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape client-vpn-route-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype client-vpn-route-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-vpn-security-group-id-set () '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-client-vpn-security-group-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (coip-address-usage (:copier common-lisp:nil))
   (allocation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (aws-account-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (aws-service common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (co-ip common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'coip-address-usage 'make-coip-address-usage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape coip-address-usage))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "AwsAccountId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'aws-account-id)))
                       (aws-sdk/generator/shape::to-query-params "AwsService" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'aws-service)))
                       (aws-sdk/generator/shape::to-query-params "CoIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'co-ip))))))
(common-lisp:progn
 (common-lisp:deftype coip-address-usage-set () '(trivial-types:proper-list coip-address-usage))
 (common-lisp:defun |make-coip-address-usage-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list coip-address-usage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (coip-pool (:copier common-lisp:nil))
   (pool-id common-lisp:nil :type (common-lisp:or coip-pool-id common-lisp:null))
   (pool-cidrs common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (local-gateway-route-table-id common-lisp:nil :type (common-lisp:or local-gateway-routetable-id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'coip-pool 'make-coip-pool))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape coip-pool))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-id)))
                       (aws-sdk/generator/shape::to-query-params "PoolCidrs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-cidrs)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype coip-pool-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype coip-pool-id-set () '(trivial-types:proper-list coip-pool-id))
 (common-lisp:defun |make-coip-pool-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list coip-pool-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype coip-pool-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype coip-pool-set () '(trivial-types:proper-list coip-pool))
 (common-lisp:defun |make-coip-pool-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list coip-pool))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (confirm-product-instance-request (:copier common-lisp:nil))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (product-code (common-lisp:error ":product-code is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'confirm-product-instance-request 'make-confirm-product-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape confirm-product-instance-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "ProductCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-code)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (confirm-product-instance-result (:copier common-lisp:nil))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'confirm-product-instance-result 'make-confirm-product-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape confirm-product-instance-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (connection-log-options (:copier common-lisp:nil))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (cloudwatch-log-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cloudwatch-log-stream common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'connection-log-options 'make-connection-log-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape connection-log-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled)))
                       (aws-sdk/generator/shape::to-query-params "CloudwatchLogGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cloudwatch-log-group)))
                       (aws-sdk/generator/shape::to-query-params "CloudwatchLogStream" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cloudwatch-log-stream))))))
(common-lisp:progn
 (common-lisp:defstruct (connection-log-response-options (:copier common-lisp:nil))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (cloudwatch-log-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cloudwatch-log-stream common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'connection-log-response-options 'make-connection-log-response-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape connection-log-response-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled)))
                       (aws-sdk/generator/shape::to-query-params "CloudwatchLogGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cloudwatch-log-group)))
                       (aws-sdk/generator/shape::to-query-params "CloudwatchLogStream" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cloudwatch-log-stream))))))
(common-lisp:progn
 (common-lisp:defstruct (connection-notification (:copier common-lisp:nil))
   (connection-notification-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-notification-type common-lisp:nil :type (common-lisp:or connection-notification-type common-lisp:null))
   (connection-notification-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-events common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (connection-notification-state common-lisp:nil :type (common-lisp:or connection-notification-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'connection-notification 'make-connection-notification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape connection-notification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConnectionNotificationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-id)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-type)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-arn)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionEvents" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-events)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationState"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-state))))))
(common-lisp:deftype connection-notification-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype connection-notification-set () '(trivial-types:proper-list connection-notification))
 (common-lisp:defun |make-connection-notification-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list connection-notification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype connection-notification-state () 'common-lisp:string)
(common-lisp:deftype connection-notification-type () 'common-lisp:string)
(common-lisp:deftype container-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype conversion-id-string-list () '(trivial-types:proper-list conversion-task-id))
 (common-lisp:defun |make-conversion-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list conversion-task-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (conversion-task (:copier common-lisp:nil))
   (conversion-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (expiration-time common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (import-instance common-lisp:nil :type (common-lisp:or import-instance-task-details common-lisp:null))
   (import-volume common-lisp:nil :type (common-lisp:or import-volume-task-details common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or conversion-task-state common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'conversion-task 'make-conversion-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape conversion-task))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConversionTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'conversion-task-id)))
                       (aws-sdk/generator/shape::to-query-params "ExpirationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'expiration-time)))
                       (aws-sdk/generator/shape::to-query-params "ImportInstance" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-instance)))
                       (aws-sdk/generator/shape::to-query-params "ImportVolume" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-volume)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype conversion-task-id () 'common-lisp:string)
(common-lisp:deftype conversion-task-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (copy-fpga-image-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (source-fpga-image-id (common-lisp:error ":source-fpga-image-id is required") :type (common-lisp:or fpga-image-id common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-region (common-lisp:error ":source-region is required") :type (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-fpga-image-request 'make-copy-fpga-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape copy-fpga-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "SourceFpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-fpga-image-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "SourceRegion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-region)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-fpga-image-result (:copier common-lisp:nil)) (fpga-image-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-fpga-image-result 'make-copy-fpga-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape copy-fpga-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-image-request (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or kms-key-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type (common-lisp:or string common-lisp:null))
   (source-image-id (common-lisp:error ":source-image-id is required") :type (common-lisp:or string common-lisp:null))
   (source-region (common-lisp:error ":source-region is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-image-request 'make-copy-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape copy-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "SourceImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-image-id)))
                       (aws-sdk/generator/shape::to-query-params "SourceRegion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-region)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-image-result (:copier common-lisp:nil)) (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-image-result 'make-copy-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape copy-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-snapshot-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or kms-key-id common-lisp:null))
   (presigned-url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-region (common-lisp:error ":source-region is required") :type (common-lisp:or string common-lisp:null))
   (source-snapshot-id (common-lisp:error ":source-snapshot-id is required") :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-snapshot-request 'make-copy-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape copy-snapshot-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DestinationRegion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-region)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "PresignedUrl" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'presigned-url)))
                       (aws-sdk/generator/shape::to-query-params "SourceRegion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-region)))
                       (aws-sdk/generator/shape::to-query-params "SourceSnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (copy-snapshot-result (:copier common-lisp:nil)) (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null)) (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-snapshot-result 'make-copy-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape copy-snapshot-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype copy-tags-from-source () 'common-lisp:string)
(common-lisp:deftype core-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype core-count-list () '(trivial-types:proper-list core-count))
 (common-lisp:defun |make-core-count-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list core-count))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (cpu-options (:copier common-lisp:nil))
   (core-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (threads-per-core common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cpu-options 'make-cpu-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cpu-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CoreCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'core-count)))
                       (aws-sdk/generator/shape::to-query-params "ThreadsPerCore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'threads-per-core))))))
(common-lisp:progn
 (common-lisp:defstruct (cpu-options-request (:copier common-lisp:nil))
   (core-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (threads-per-core common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cpu-options-request 'make-cpu-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape cpu-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CoreCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'core-count)))
                       (aws-sdk/generator/shape::to-query-params "ThreadsPerCore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'threads-per-core))))))
(common-lisp:progn
 (common-lisp:defstruct (create-capacity-reservation-request (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type (common-lisp:error ":instance-type is required") :type (common-lisp:or string common-lisp:null))
   (instance-platform (common-lisp:error ":instance-platform is required") :type (common-lisp:or capacity-reservation-instance-platform common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or capacity-reservation-tenancy common-lisp:null))
   (instance-count (common-lisp:error ":instance-count is required") :type (common-lisp:or integer common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ephemeral-storage common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (end-date-type common-lisp:nil :type (common-lisp:or end-date-type common-lisp:null))
   (instance-match-criteria common-lisp:nil :type (common-lisp:or instance-match-criteria common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-capacity-reservation-request 'make-create-capacity-reservation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-capacity-reservation-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "InstancePlatform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-platform)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZoneId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone-id)))
                       (aws-sdk/generator/shape::to-query-params "Tenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tenancy)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "EphemeralStorage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ephemeral-storage)))
                       (aws-sdk/generator/shape::to-query-params "EndDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-date)))
                       (aws-sdk/generator/shape::to-query-params "EndDateType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-date-type)))
                       (aws-sdk/generator/shape::to-query-params "InstanceMatchCriteria" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-match-criteria)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-capacity-reservation-result (:copier common-lisp:nil)) (capacity-reservation common-lisp:nil :type (common-lisp:or capacity-reservation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-capacity-reservation-result 'make-create-capacity-reservation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-capacity-reservation-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation))))))
(common-lisp:progn
 (common-lisp:defstruct (create-client-vpn-endpoint-request (:copier common-lisp:nil))
   (client-cidr-block (common-lisp:error ":client-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (server-certificate-arn (common-lisp:error ":server-certificate-arn is required") :type (common-lisp:or string common-lisp:null))
   (authentication-options (common-lisp:error ":authentication-options is required") :type (common-lisp:or client-vpn-authentication-request-list common-lisp:null))
   (connection-log-options (common-lisp:error ":connection-log-options is required") :type (common-lisp:or connection-log-options common-lisp:null))
   (dns-servers common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (transport-protocol common-lisp:nil :type (common-lisp:or transport-protocol common-lisp:null))
   (vpn-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (split-tunnel common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or client-vpn-security-group-id-set common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-client-vpn-endpoint-request 'make-create-client-vpn-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-client-vpn-endpoint-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "ServerCertificateArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'server-certificate-arn)))
                       (aws-sdk/generator/shape::to-query-params "AuthenticationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'authentication-options)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionLogOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-log-options)))
                       (aws-sdk/generator/shape::to-query-params "DnsServers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-servers)))
                       (aws-sdk/generator/shape::to-query-params "TransportProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transport-protocol)))
                       (aws-sdk/generator/shape::to-query-params "VpnPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-port)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "SplitTunnel" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'split-tunnel)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-client-vpn-endpoint-result (:copier common-lisp:nil))
   (client-vpn-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or client-vpn-endpoint-status common-lisp:null))
   (dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-client-vpn-endpoint-result 'make-create-client-vpn-endpoint-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-client-vpn-endpoint-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "DnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-client-vpn-route-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (target-vpc-subnet-id (common-lisp:error ":target-vpc-subnet-id is required") :type (common-lisp:or subnet-id common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-client-vpn-route-request 'make-create-client-vpn-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-client-vpn-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "TargetVpcSubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-vpc-subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-client-vpn-route-result (:copier common-lisp:nil)) (status common-lisp:nil :type (common-lisp:or client-vpn-route-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-client-vpn-route-result 'make-create-client-vpn-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-client-vpn-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (create-customer-gateway-request (:copier common-lisp:nil))
   (bgp-asn (common-lisp:error ":bgp-asn is required") :type (common-lisp:or integer common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (certificate-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type (common-lisp:error ":type is required") :type (common-lisp:or gateway-type common-lisp:null))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-customer-gateway-request 'make-create-customer-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-customer-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BgpAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bgp-asn)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip)))
                       (aws-sdk/generator/shape::to-query-params "CertificateArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'certificate-arn)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-customer-gateway-result (:copier common-lisp:nil)) (customer-gateway common-lisp:nil :type (common-lisp:or customer-gateway common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-customer-gateway-result 'make-create-customer-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-customer-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CustomerGateway" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway))))))
(common-lisp:progn
 (common-lisp:defstruct (create-default-subnet-request (:copier common-lisp:nil))
   (availability-zone (common-lisp:error ":availability-zone is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-default-subnet-request 'make-create-default-subnet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-default-subnet-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-default-subnet-result (:copier common-lisp:nil)) (subnet common-lisp:nil :type (common-lisp:or subnet common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-default-subnet-result 'make-create-default-subnet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-default-subnet-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Subnet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet))))))
(common-lisp:progn
 (common-lisp:defstruct (create-default-vpc-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-default-vpc-request 'make-create-default-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-default-vpc-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-default-vpc-result (:copier common-lisp:nil)) (vpc common-lisp:nil :type (common-lisp:or vpc common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-default-vpc-result 'make-create-default-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-default-vpc-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Vpc" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc))))))
(common-lisp:progn
 (common-lisp:defstruct (create-dhcp-options-request (:copier common-lisp:nil))
   (dhcp-configurations (common-lisp:error ":dhcp-configurations is required") :type (common-lisp:or new-dhcp-configuration-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-dhcp-options-request 'make-create-dhcp-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-dhcp-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DhcpConfigurations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-configurations)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-dhcp-options-result (:copier common-lisp:nil)) (dhcp-options common-lisp:nil :type (common-lisp:or dhcp-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-dhcp-options-result 'make-create-dhcp-options-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-dhcp-options-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DhcpOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-options))))))
(common-lisp:progn
 (common-lisp:defstruct (create-egress-only-internet-gateway-request (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-egress-only-internet-gateway-request 'make-create-egress-only-internet-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-egress-only-internet-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-egress-only-internet-gateway-result (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (egress-only-internet-gateway common-lisp:nil :type (common-lisp:or egress-only-internet-gateway common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-egress-only-internet-gateway-result 'make-create-egress-only-internet-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-egress-only-internet-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGateway"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateway))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-error (:copier common-lisp:nil))
   (launch-template-and-overrides common-lisp:nil :type (common-lisp:or launch-template-and-overrides-response common-lisp:null))
   (lifecycle common-lisp:nil :type (common-lisp:or instance-lifecycle common-lisp:null))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-fleet-error 'make-create-fleet-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-fleet-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateAndOverrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-and-overrides)))
    (aws-sdk/generator/shape::to-query-params "Lifecycle" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'lifecycle)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error-message))))))
(common-lisp:progn
 (common-lisp:deftype create-fleet-errors-set () '(trivial-types:proper-list create-fleet-error))
 (common-lisp:defun |make-create-fleet-errors-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list create-fleet-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-instance (:copier common-lisp:nil))
   (launch-template-and-overrides common-lisp:nil :type (common-lisp:or launch-template-and-overrides-response common-lisp:null))
   (lifecycle common-lisp:nil :type (common-lisp:or instance-lifecycle common-lisp:null))
   (instance-ids common-lisp:nil :type (common-lisp:or instance-ids-set common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or platform-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-fleet-instance 'make-create-fleet-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-fleet-instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateAndOverrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-and-overrides)))
    (aws-sdk/generator/shape::to-query-params "Lifecycle" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'lifecycle)))
    (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
    (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform))))))
(common-lisp:progn
 (common-lisp:deftype create-fleet-instances-set () '(trivial-types:proper-list create-fleet-instance))
 (common-lisp:defun |make-create-fleet-instances-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list create-fleet-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-options common-lisp:nil :type (common-lisp:or spot-options-request common-lisp:null))
   (on-demand-options common-lisp:nil :type (common-lisp:or on-demand-options-request common-lisp:null))
   (excess-capacity-termination-policy common-lisp:nil :type (common-lisp:or fleet-excess-capacity-termination-policy common-lisp:null))
   (launch-template-configs (common-lisp:error ":launch-template-configs is required") :type (common-lisp:or fleet-launch-template-config-list-request common-lisp:null))
   (target-capacity-specification (common-lisp:error ":target-capacity-specification is required") :type (common-lisp:or target-capacity-specification-request common-lisp:null))
   (terminate-instances-with-expiration common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or fleet-type common-lisp:null))
   (valid-from common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (replace-unhealthy-instances common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-fleet-request 'make-create-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-fleet-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-options)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-options)))
                       (aws-sdk/generator/shape::to-query-params "ExcessCapacityTerminationPolicy"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'excess-capacity-termination-policy)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateConfigs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-configs)))
                       (aws-sdk/generator/shape::to-query-params "TargetCapacitySpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-capacity-specification)))
                       (aws-sdk/generator/shape::to-query-params "TerminateInstancesWithExpiration"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'terminate-instances-with-expiration)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "ValidFrom" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-from)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "ReplaceUnhealthyInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'replace-unhealthy-instances)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fleet-result (:copier common-lisp:nil))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (errors common-lisp:nil :type (common-lisp:or create-fleet-errors-set common-lisp:null))
   (instances common-lisp:nil :type (common-lisp:or create-fleet-instances-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-fleet-result 'make-create-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-fleet-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id)))
                       (aws-sdk/generator/shape::to-query-params "Errors" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'errors)))
                       (aws-sdk/generator/shape::to-query-params "Instances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instances))))))
(common-lisp:progn
 (common-lisp:defstruct (create-flow-logs-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deliver-logs-permission-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-ids (common-lisp:error ":resource-ids is required") :type (common-lisp:or flow-log-resource-ids common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type (common-lisp:or flow-logs-resource-type common-lisp:null))
   (traffic-type (common-lisp:error ":traffic-type is required") :type (common-lisp:or traffic-type common-lisp:null))
   (log-destination-type common-lisp:nil :type (common-lisp:or log-destination-type common-lisp:null))
   (log-destination common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-format common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (max-aggregation-interval common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-flow-logs-request 'make-create-flow-logs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-flow-logs-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DeliverLogsPermissionArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deliver-logs-permission-arn)))
                       (aws-sdk/generator/shape::to-query-params "LogGroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-group-name)))
                       (aws-sdk/generator/shape::to-query-params "ResourceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-ids)))
                       (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
                       (aws-sdk/generator/shape::to-query-params "TrafficType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-type)))
                       (aws-sdk/generator/shape::to-query-params "LogDestinationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-destination-type)))
                       (aws-sdk/generator/shape::to-query-params "LogDestination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-destination)))
                       (aws-sdk/generator/shape::to-query-params "LogFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-format)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "MaxAggregationInterval" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-aggregation-interval))))))
(common-lisp:progn
 (common-lisp:defstruct (create-flow-logs-result (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (flow-log-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-flow-logs-result 'make-create-flow-logs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-flow-logs-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "FlowLogIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'flow-log-ids)))
                       (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fpga-image-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (input-storage-location (common-lisp:error ":input-storage-location is required") :type (common-lisp:or storage-location common-lisp:null))
   (logs-storage-location common-lisp:nil :type (common-lisp:or storage-location common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-fpga-image-request 'make-create-fpga-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-fpga-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InputStorageLocation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'input-storage-location)))
                       (aws-sdk/generator/shape::to-query-params "LogsStorageLocation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'logs-storage-location)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (create-fpga-image-result (:copier common-lisp:nil))
   (fpga-image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fpga-image-global-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-fpga-image-result 'make-create-fpga-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-fpga-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id)))
                       (aws-sdk/generator/shape::to-query-params "FpgaImageGlobalId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-global-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-image-request (:copier common-lisp:nil))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-request-list common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type (common-lisp:or string common-lisp:null))
   (no-reboot common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-image-request 'make-create-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "NoReboot" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'no-reboot))))))
(common-lisp:progn
 (common-lisp:defstruct (create-image-result (:copier common-lisp:nil)) (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-image-result 'make-create-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-instance-export-task-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (export-to-s3task common-lisp:nil :type (common-lisp:or export-to-s3task-specification common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (target-environment common-lisp:nil :type (common-lisp:or export-environment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-instance-export-task-request 'make-create-instance-export-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-instance-export-task-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ExportToS3Task" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-to-s3task)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetEnvironment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-environment))))))
(common-lisp:progn
 (common-lisp:defstruct (create-instance-export-task-result (:copier common-lisp:nil)) (export-task common-lisp:nil :type (common-lisp:or export-task common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-instance-export-task-result 'make-create-instance-export-task-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-instance-export-task-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ExportTask" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-task))))))
(common-lisp:progn
 (common-lisp:defstruct (create-internet-gateway-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-internet-gateway-request 'make-create-internet-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-internet-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-internet-gateway-result (:copier common-lisp:nil)) (internet-gateway common-lisp:nil :type (common-lisp:or internet-gateway common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-internet-gateway-result 'make-create-internet-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-internet-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InternetGateway" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'internet-gateway))))))
(common-lisp:progn
 (common-lisp:defstruct (create-key-pair-request (:copier common-lisp:nil))
   (key-name (common-lisp:error ":key-name is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-key-pair-request 'make-create-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-key-pair-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-launch-template-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-name (common-lisp:error ":launch-template-name is required") :type (common-lisp:or launch-template-name common-lisp:null))
   (version-description common-lisp:nil :type (common-lisp:or version-description common-lisp:null))
   (launch-template-data (common-lisp:error ":launch-template-data is required") :type (common-lisp:or request-launch-template-data common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-launch-template-request 'make-create-launch-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-launch-template-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "VersionDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version-description)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-data)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (create-launch-template-result (:copier common-lisp:nil)) (launch-template common-lisp:nil :type (common-lisp:or launch-template common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-launch-template-result 'make-create-launch-template-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-launch-template-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template))))))
(common-lisp:progn
 (common-lisp:defstruct (create-launch-template-version-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-id common-lisp:nil :type (common-lisp:or launch-template-id common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (source-version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version-description common-lisp:nil :type (common-lisp:or version-description common-lisp:null))
   (launch-template-data (common-lisp:error ":launch-template-data is required") :type (common-lisp:or request-launch-template-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-launch-template-version-request 'make-create-launch-template-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-launch-template-version-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "SourceVersion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-version)))
                       (aws-sdk/generator/shape::to-query-params "VersionDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version-description)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-data))))))
(common-lisp:progn
 (common-lisp:defstruct (create-launch-template-version-result (:copier common-lisp:nil)) (launch-template-version common-lisp:nil :type (common-lisp:or launch-template-version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-launch-template-version-result 'make-create-launch-template-version-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-launch-template-version-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateVersion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-version))))))
(common-lisp:progn
 (common-lisp:defstruct (create-local-gateway-route-request (:copier common-lisp:nil))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (local-gateway-route-table-id (common-lisp:error ":local-gateway-route-table-id is required") :type (common-lisp:or local-gateway-routetable-id common-lisp:null))
   (local-gateway-virtual-interface-group-id (common-lisp:error ":local-gateway-virtual-interface-group-id is required") :type (common-lisp:or local-gateway-virtual-interface-group-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-local-gateway-route-request 'make-create-local-gateway-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-local-gateway-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceGroupId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-group-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-local-gateway-route-result (:copier common-lisp:nil)) (route common-lisp:nil :type (common-lisp:or local-gateway-route common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-local-gateway-route-result 'make-create-local-gateway-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-local-gateway-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Route" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route))))))
(common-lisp:progn
 (common-lisp:defstruct (create-local-gateway-route-table-vpc-association-request (:copier common-lisp:nil))
   (local-gateway-route-table-id (common-lisp:error ":local-gateway-route-table-id is required") :type (common-lisp:or local-gateway-routetable-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-local-gateway-route-table-vpc-association-request 'make-create-local-gateway-route-table-vpc-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-local-gateway-route-table-vpc-association-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-local-gateway-route-table-vpc-association-result (:copier common-lisp:nil))
   (local-gateway-route-table-vpc-association common-lisp:nil :type (common-lisp:or local-gateway-route-table-vpc-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-local-gateway-route-table-vpc-association-result 'make-create-local-gateway-route-table-vpc-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-local-gateway-route-table-vpc-association-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVpcAssociation"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-vpc-association))))))
(common-lisp:progn
 (common-lisp:defstruct (create-nat-gateway-request (:copier common-lisp:nil))
   (allocation-id (common-lisp:error ":allocation-id is required") :type (common-lisp:or allocation-id common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type (common-lisp:or subnet-id common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-nat-gateway-request 'make-create-nat-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-nat-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (create-nat-gateway-result (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (nat-gateway common-lisp:nil :type (common-lisp:or nat-gateway common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-nat-gateway-result 'make-create-nat-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-nat-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "NatGateway" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway))))))
(common-lisp:progn
 (common-lisp:defstruct (create-network-acl-entry-request (:copier common-lisp:nil))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (egress (common-lisp:error ":egress is required") :type (common-lisp:or boolean common-lisp:null))
   (icmp-type-code common-lisp:nil :type (common-lisp:or icmp-type-code common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-acl-id (common-lisp:error ":network-acl-id is required") :type (common-lisp:or network-acl-id common-lisp:null))
   (port-range common-lisp:nil :type (common-lisp:or port-range common-lisp:null))
   (protocol (common-lisp:error ":protocol is required") :type (common-lisp:or string common-lisp:null))
   (rule-action (common-lisp:error ":rule-action is required") :type (common-lisp:or rule-action common-lisp:null))
   (rule-number (common-lisp:error ":rule-number is required") :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-network-acl-entry-request 'make-create-network-acl-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-network-acl-entry-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Egress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress)))
                       (aws-sdk/generator/shape::to-query-params "IcmpTypeCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'icmp-type-code)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-id)))
                       (aws-sdk/generator/shape::to-query-params "PortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'port-range)))
                       (aws-sdk/generator/shape::to-query-params "Protocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'protocol)))
                       (aws-sdk/generator/shape::to-query-params "RuleAction" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-action)))
                       (aws-sdk/generator/shape::to-query-params "RuleNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-number))))))
(common-lisp:progn
 (common-lisp:defstruct (create-network-acl-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-network-acl-request 'make-create-network-acl-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-network-acl-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-network-acl-result (:copier common-lisp:nil)) (network-acl common-lisp:nil :type (common-lisp:or network-acl common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-network-acl-result 'make-create-network-acl-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-network-acl-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkAcl" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl))))))
(common-lisp:progn
 (common-lisp:defstruct (create-network-interface-permission-request (:copier common-lisp:nil))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null))
   (aws-account-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (aws-service common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (permission (common-lisp:error ":permission is required") :type (common-lisp:or interface-permission-type common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-network-interface-permission-request 'make-create-network-interface-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-network-interface-permission-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "AwsAccountId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'aws-account-id)))
                       (aws-sdk/generator/shape::to-query-params "AwsService" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'aws-service)))
                       (aws-sdk/generator/shape::to-query-params "Permission" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'permission)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-network-interface-permission-result (:copier common-lisp:nil)) (interface-permission common-lisp:nil :type (common-lisp:or network-interface-permission common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-network-interface-permission-result 'make-create-network-interface-permission-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-network-interface-permission-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InterfacePermission" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interface-permission))))))
(common-lisp:progn
 (common-lisp:defstruct (create-network-interface-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or security-group-id-string-list common-lisp:null))
   (ipv6address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or instance-ipv6address-list common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-addresses common-lisp:nil :type (common-lisp:or private-ip-address-specification-list common-lisp:null))
   (secondary-private-ip-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (interface-type common-lisp:nil :type (common-lisp:or network-interface-creation-type common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type (common-lisp:or subnet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-network-interface-request 'make-create-network-interface-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-network-interface-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address-count)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses)))
                       (aws-sdk/generator/shape::to-query-params "SecondaryPrivateIpAddressCount"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'secondary-private-ip-address-count)))
                       (aws-sdk/generator/shape::to-query-params "InterfaceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interface-type)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-network-interface-result (:copier common-lisp:nil)) (network-interface common-lisp:nil :type (common-lisp:or network-interface common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-network-interface-result 'make-create-network-interface-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-network-interface-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterface" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface))))))
(common-lisp:progn
 (common-lisp:defstruct (create-placement-group-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (strategy common-lisp:nil :type (common-lisp:or placement-strategy common-lisp:null))
   (partition-count common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-placement-group-request 'make-create-placement-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-placement-group-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "Strategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'strategy)))
                       (aws-sdk/generator/shape::to-query-params "PartitionCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'partition-count))))))
(common-lisp:progn
 (common-lisp:defstruct (create-reserved-instances-listing-request (:copier common-lisp:nil))
   (client-token (common-lisp:error ":client-token is required") :type (common-lisp:or string common-lisp:null))
   (instance-count (common-lisp:error ":instance-count is required") :type (common-lisp:or integer common-lisp:null))
   (price-schedules (common-lisp:error ":price-schedules is required") :type (common-lisp:or price-schedule-specification-list common-lisp:null))
   (reserved-instances-id (common-lisp:error ":reserved-instances-id is required") :type (common-lisp:or reservation-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-reserved-instances-listing-request 'make-create-reserved-instances-listing-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-reserved-instances-listing-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "PriceSchedules" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'price-schedules)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-reserved-instances-listing-result (:copier common-lisp:nil)) (reserved-instances-listings common-lisp:nil :type (common-lisp:or reserved-instances-listing-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-reserved-instances-listing-result 'make-create-reserved-instances-listing-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-reserved-instances-listing-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesListings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-listings))))))
(common-lisp:progn
 (common-lisp:defstruct (create-route-request (:copier common-lisp:nil))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (egress-only-internet-gateway-id common-lisp:nil :type (common-lisp:or egress-only-internet-gateway-id common-lisp:null))
   (gateway-id common-lisp:nil :type (common-lisp:or route-gateway-id common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (nat-gateway-id common-lisp:nil :type (common-lisp:or nat-gateway-id common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or transit-gateway-id common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or local-gateway-id common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or network-interface-id common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null))
   (vpc-peering-connection-id common-lisp:nil :type (common-lisp:or vpc-peering-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-route-request 'make-create-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DestinationIpv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGatewayId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "NatGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-route-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-route-result 'make-create-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (create-route-table-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-route-table-request 'make-create-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-route-table-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-route-table-result (:copier common-lisp:nil)) (route-table common-lisp:nil :type (common-lisp:or route-table common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-route-table-result 'make-create-route-table-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-route-table-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "RouteTable" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table))))))
(common-lisp:progn
 (common-lisp:defstruct (create-security-group-request (:copier common-lisp:nil))
   (description (common-lisp:error ":description is required") :type (common-lisp:or string common-lisp:null))
   (group-name (common-lisp:error ":group-name is required") :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-security-group-request 'make-create-security-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-security-group-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-security-group-result (:copier common-lisp:nil)) (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-security-group-result 'make-create-security-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-security-group-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-snapshot-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-snapshot-request 'make-create-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-snapshot-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-snapshots-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-specification (common-lisp:error ":instance-specification is required") :type (common-lisp:or instance-specification common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (copy-tags-from-source common-lisp:nil :type (common-lisp:or copy-tags-from-source common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-snapshots-request 'make-create-snapshots-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-snapshots-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "InstanceSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-specification)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "CopyTagsFromSource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'copy-tags-from-source))))))
(common-lisp:progn
 (common-lisp:defstruct (create-snapshots-result (:copier common-lisp:nil)) (snapshots common-lisp:nil :type (common-lisp:or snapshot-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-snapshots-result 'make-create-snapshots-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-snapshots-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Snapshots" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshots))))))
(common-lisp:progn
 (common-lisp:defstruct (create-spot-datafeed-subscription-request (:copier common-lisp:nil))
   (bucket (common-lisp:error ":bucket is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-spot-datafeed-subscription-request 'make-create-spot-datafeed-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-spot-datafeed-subscription-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bucket)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Prefix" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix))))))
(common-lisp:progn
 (common-lisp:defstruct (create-spot-datafeed-subscription-result (:copier common-lisp:nil)) (spot-datafeed-subscription common-lisp:nil :type (common-lisp:or spot-datafeed-subscription common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-spot-datafeed-subscription-result 'make-create-spot-datafeed-subscription-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-spot-datafeed-subscription-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SpotDatafeedSubscription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-datafeed-subscription))))))
(common-lisp:progn
 (common-lisp:defstruct (create-subnet-request (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cidr-block (common-lisp:error ":cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-subnet-request 'make-create-subnet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-subnet-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZoneId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone-id)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-subnet-result (:copier common-lisp:nil)) (subnet common-lisp:nil :type (common-lisp:or subnet common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-subnet-result 'make-create-subnet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-subnet-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Subnet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet))))))
(common-lisp:progn
 (common-lisp:defstruct (create-tags-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (resources (common-lisp:error ":resources is required") :type (common-lisp:or resource-id-list common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-tags-request 'make-create-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-tags-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Resources" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resources)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-filter-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-filter-request 'make-create-traffic-mirror-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-filter-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-filter-result (:copier common-lisp:nil))
   (traffic-mirror-filter common-lisp:nil :type (common-lisp:or traffic-mirror-filter common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-filter-result 'make-create-traffic-mirror-filter-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-filter-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-filter-rule-request (:copier common-lisp:nil))
   (traffic-mirror-filter-id (common-lisp:error ":traffic-mirror-filter-id is required") :type (common-lisp:or traffic-mirror-filter-id common-lisp:null))
   (traffic-direction (common-lisp:error ":traffic-direction is required") :type (common-lisp:or traffic-direction common-lisp:null))
   (rule-number (common-lisp:error ":rule-number is required") :type (common-lisp:or integer common-lisp:null))
   (rule-action (common-lisp:error ":rule-action is required") :type (common-lisp:or traffic-mirror-rule-action common-lisp:null))
   (destination-port-range common-lisp:nil :type (common-lisp:or traffic-mirror-port-range-request common-lisp:null))
   (source-port-range common-lisp:nil :type (common-lisp:or traffic-mirror-port-range-request common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (source-cidr-block (common-lisp:error ":source-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-filter-rule-request 'make-create-traffic-mirror-filter-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-filter-rule-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficDirection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-direction)))
                       (aws-sdk/generator/shape::to-query-params "RuleNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-number)))
                       (aws-sdk/generator/shape::to-query-params "RuleAction" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-action)))
                       (aws-sdk/generator/shape::to-query-params "DestinationPortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-port-range)))
                       (aws-sdk/generator/shape::to-query-params "SourcePortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-port-range)))
                       (aws-sdk/generator/shape::to-query-params "Protocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'protocol)))
                       (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "SourceCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-filter-rule-result (:copier common-lisp:nil))
   (traffic-mirror-filter-rule common-lisp:nil :type (common-lisp:or traffic-mirror-filter-rule common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-filter-rule-result 'make-create-traffic-mirror-filter-rule-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-filter-rule-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterRule" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-rule)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-session-request (:copier common-lisp:nil))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null))
   (traffic-mirror-target-id (common-lisp:error ":traffic-mirror-target-id is required") :type (common-lisp:or traffic-mirror-target-id common-lisp:null))
   (traffic-mirror-filter-id (common-lisp:error ":traffic-mirror-filter-id is required") :type (common-lisp:or traffic-mirror-filter-id common-lisp:null))
   (packet-length common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (session-number (common-lisp:error ":session-number is required") :type (common-lisp:or integer common-lisp:null))
   (virtual-network-id common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-session-request 'make-create-traffic-mirror-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-session-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "PacketLength" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'packet-length)))
                       (aws-sdk/generator/shape::to-query-params "SessionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'session-number)))
                       (aws-sdk/generator/shape::to-query-params "VirtualNetworkId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-network-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-session-result (:copier common-lisp:nil))
   (traffic-mirror-session common-lisp:nil :type (common-lisp:or traffic-mirror-session common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-session-result 'make-create-traffic-mirror-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-session-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSession" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-session)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-target-request (:copier common-lisp:nil))
   (network-interface-id common-lisp:nil :type (common-lisp:or network-interface-id common-lisp:null))
   (network-load-balancer-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-target-request 'make-create-traffic-mirror-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-target-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkLoadBalancerArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-load-balancer-arn)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-traffic-mirror-target-result (:copier common-lisp:nil))
   (traffic-mirror-target common-lisp:nil :type (common-lisp:or traffic-mirror-target common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-traffic-mirror-target-result 'make-create-traffic-mirror-target-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-traffic-mirror-target-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorTarget" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-multicast-domain-request (:copier common-lisp:nil))
   (transit-gateway-id (common-lisp:error ":transit-gateway-id is required") :type (common-lisp:or transit-gateway-id common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-multicast-domain-request 'make-create-transit-gateway-multicast-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-multicast-domain-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-multicast-domain-result (:copier common-lisp:nil))
   (transit-gateway-multicast-domain common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-multicast-domain-result 'make-create-transit-gateway-multicast-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-multicast-domain-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-peering-attachment-request (:copier common-lisp:nil))
   (transit-gateway-id (common-lisp:error ":transit-gateway-id is required") :type (common-lisp:or transit-gateway-id common-lisp:null))
   (peer-transit-gateway-id (common-lisp:error ":peer-transit-gateway-id is required") :type (common-lisp:or transit-association-gateway-id common-lisp:null))
   (peer-account-id (common-lisp:error ":peer-account-id is required") :type (common-lisp:or string common-lisp:null))
   (peer-region (common-lisp:error ":peer-region is required") :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-peering-attachment-request 'make-create-transit-gateway-peering-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-peering-attachment-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "PeerTransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "PeerAccountId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-account-id)))
                       (aws-sdk/generator/shape::to-query-params "PeerRegion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-region)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-peering-attachment-result (:copier common-lisp:nil))
   (transit-gateway-peering-attachment common-lisp:nil :type (common-lisp:or transit-gateway-peering-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-peering-attachment-result 'make-create-transit-gateway-peering-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-peering-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayPeeringAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-peering-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or transit-gateway-request-options common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-request 'make-create-transit-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Options" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'options)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-result (:copier common-lisp:nil)) (transit-gateway common-lisp:nil :type (common-lisp:or transit-gateway common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-result 'make-create-transit-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGateway" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-route-request (:copier common-lisp:nil))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (blackhole common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-route-request 'make-create-transit-gateway-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "Blackhole" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'blackhole)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-route-result (:copier common-lisp:nil)) (route common-lisp:nil :type (common-lisp:or transit-gateway-route common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-route-result 'make-create-transit-gateway-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Route" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-route-table-request (:copier common-lisp:nil))
   (transit-gateway-id (common-lisp:error ":transit-gateway-id is required") :type (common-lisp:or transit-gateway-id common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-route-table-request 'make-create-transit-gateway-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-route-table-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-route-table-result (:copier common-lisp:nil)) (transit-gateway-route-table common-lisp:nil :type (common-lisp:or transit-gateway-route-table common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-route-table-result 'make-create-transit-gateway-route-table-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-route-table-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTable" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-vpc-attachment-request (:copier common-lisp:nil))
   (transit-gateway-id (common-lisp:error ":transit-gateway-id is required") :type (common-lisp:or transit-gateway-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (subnet-ids (common-lisp:error ":subnet-ids is required") :type (common-lisp:or transit-gateway-subnet-id-list common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or create-transit-gateway-vpc-attachment-request-options common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-vpc-attachment-request 'make-create-transit-gateway-vpc-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-vpc-attachment-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-ids)))
                       (aws-sdk/generator/shape::to-query-params "Options" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'options)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-vpc-attachment-request-options (:copier common-lisp:nil))
   (dns-support common-lisp:nil :type (common-lisp:or dns-support-value common-lisp:null))
   (ipv6support common-lisp:nil :type (common-lisp:or ipv6support-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-vpc-attachment-request-options 'make-create-transit-gateway-vpc-attachment-request-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-vpc-attachment-request-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DnsSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-support)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Support" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6support))))))
(common-lisp:progn
 (common-lisp:defstruct (create-transit-gateway-vpc-attachment-result (:copier common-lisp:nil)) (transit-gateway-vpc-attachment common-lisp:nil :type (common-lisp:or transit-gateway-vpc-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-transit-gateway-vpc-attachment-result 'make-create-transit-gateway-vpc-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-transit-gateway-vpc-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayVpcAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-vpc-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (create-volume-permission (:copier common-lisp:nil))
   (group common-lisp:nil :type (common-lisp:or permission-group common-lisp:null))
   (user-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-volume-permission 'make-create-volume-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-volume-permission))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Group" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group)))
                       (aws-sdk/generator/shape::to-query-params "UserId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-id))))))
(common-lisp:progn
 (common-lisp:deftype create-volume-permission-list () '(trivial-types:proper-list create-volume-permission))
 (common-lisp:defun |make-create-volume-permission-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list create-volume-permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-volume-permission-modifications (:copier common-lisp:nil))
   (add common-lisp:nil :type (common-lisp:or create-volume-permission-list common-lisp:null))
   (remove common-lisp:nil :type (common-lisp:or create-volume-permission-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-volume-permission-modifications 'make-create-volume-permission-modifications))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-volume-permission-modifications))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Add" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add)))
                       (aws-sdk/generator/shape::to-query-params "Remove" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove))))))
(common-lisp:progn
 (common-lisp:defstruct (create-volume-request (:copier common-lisp:nil))
   (availability-zone (common-lisp:error ":availability-zone is required") :type (common-lisp:or string common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or kms-key-id common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or snapshot-id common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (multi-attach-enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-volume-request 'make-create-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-volume-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "Iops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iops)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "Size" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-type)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "MultiAttachEnabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'multi-attach-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-endpoint-connection-notification-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-id common-lisp:nil :type (common-lisp:or vpc-endpoint-service-id common-lisp:null))
   (vpc-endpoint-id common-lisp:nil :type (common-lisp:or vpc-endpoint-id common-lisp:null))
   (connection-notification-arn (common-lisp:error ":connection-notification-arn is required") :type (common-lisp:or string common-lisp:null))
   (connection-events (common-lisp:error ":connection-events is required") :type (common-lisp:or value-string-list common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-endpoint-connection-notification-request 'make-create-vpc-endpoint-connection-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-endpoint-connection-notification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-arn)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionEvents" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-events)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-endpoint-connection-notification-result (:copier common-lisp:nil))
   (connection-notification common-lisp:nil :type (common-lisp:or connection-notification common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-endpoint-connection-notification-result 'make-create-vpc-endpoint-connection-notification-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-endpoint-connection-notification-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConnectionNotification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-endpoint-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-endpoint-type common-lisp:nil :type (common-lisp:or vpc-endpoint-type common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type (common-lisp:or string common-lisp:null))
   (policy-document common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (route-table-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-route-table-id-list common-lisp:null))
   (subnet-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-subnet-id-list common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-security-group-id-list common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-dns-enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-endpoint-request 'make-create-vpc-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-endpoint-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-type)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "ServiceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-name)))
                       (aws-sdk/generator/shape::to-query-params "PolicyDocument" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'policy-document)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-ids)))
                       (aws-sdk/generator/shape::to-query-params "SubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-ids)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsEnabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-enabled)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-endpoint-result (:copier common-lisp:nil))
   (vpc-endpoint common-lisp:nil :type (common-lisp:or vpc-endpoint common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-endpoint-result 'make-create-vpc-endpoint-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-endpoint-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcEndpoint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-endpoint-service-configuration-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (acceptance-required common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-load-balancer-arns (common-lisp:error ":network-load-balancer-arns is required") :type (common-lisp:or value-string-list common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-endpoint-service-configuration-request 'make-create-vpc-endpoint-service-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-endpoint-service-configuration-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "AcceptanceRequired" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'acceptance-required)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "NetworkLoadBalancerArns" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-load-balancer-arns)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-endpoint-service-configuration-result (:copier common-lisp:nil))
   (service-configuration common-lisp:nil :type (common-lisp:or service-configuration common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-endpoint-service-configuration-result 'make-create-vpc-endpoint-service-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-endpoint-service-configuration-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ServiceConfiguration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-configuration)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-peering-connection-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (peer-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (peer-vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null))
   (peer-region common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-peering-connection-request 'make-create-vpc-peering-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-peering-connection-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "PeerOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PeerVpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "PeerRegion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-region))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-peering-connection-result (:copier common-lisp:nil)) (vpc-peering-connection common-lisp:nil :type (common-lisp:or vpc-peering-connection common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-peering-connection-result 'make-create-vpc-peering-connection-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-peering-connection-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcPeeringConnection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-request (:copier common-lisp:nil))
   (cidr-block (common-lisp:error ":cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (amazon-provided-ipv6cidr-block common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ipv6pool common-lisp:nil :type (common-lisp:or ipv6pool-ec2id common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (ipv6cidr-block-network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-request 'make-create-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "AmazonProvidedIpv6CidrBlock"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amazon-provided-ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6pool)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-tenancy)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockNetworkBorderGroup"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-network-border-group))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpc-result (:copier common-lisp:nil)) (vpc common-lisp:nil :type (common-lisp:or vpc common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpc-result 'make-create-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpc-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Vpc" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpn-connection-request (:copier common-lisp:nil))
   (customer-gateway-id (common-lisp:error ":customer-gateway-id is required") :type (common-lisp:or customer-gateway-id common-lisp:null))
   (type (common-lisp:error ":type is required") :type (common-lisp:or string common-lisp:null))
   (vpn-gateway-id common-lisp:nil :type (common-lisp:or vpn-gateway-id common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or transit-gateway-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or vpn-connection-options-specification common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpn-connection-request 'make-create-vpn-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpn-connection-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CustomerGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "VpnGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Options" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'options))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpn-connection-result (:copier common-lisp:nil)) (vpn-connection common-lisp:nil :type (common-lisp:or vpn-connection common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpn-connection-result 'make-create-vpn-connection-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpn-connection-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpn-connection-route-request (:copier common-lisp:nil))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (vpn-connection-id (common-lisp:error ":vpn-connection-id is required") :type (common-lisp:or vpn-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpn-connection-route-request 'make-create-vpn-connection-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpn-connection-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "VpnConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpn-gateway-request (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type (common-lisp:error ":type is required") :type (common-lisp:or gateway-type common-lisp:null))
   (amazon-side-asn common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpn-gateway-request 'make-create-vpn-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpn-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "AmazonSideAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amazon-side-asn)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vpn-gateway-result (:copier common-lisp:nil)) (vpn-gateway common-lisp:nil :type (common-lisp:or vpn-gateway common-lisp:null)))
 (common-lisp:export (common-lisp:list 'create-vpn-gateway-result 'make-create-vpn-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape create-vpn-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnGateway" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway))))))
(common-lisp:progn
 (common-lisp:defstruct (credit-specification (:copier common-lisp:nil)) (cpu-credits common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'credit-specification 'make-credit-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape credit-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CpuCredits" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-credits))))))
(common-lisp:progn
 (common-lisp:defstruct (credit-specification-request (:copier common-lisp:nil)) (cpu-credits (common-lisp:error ":cpu-credits is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'credit-specification-request 'make-credit-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape credit-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CpuCredits" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-credits))))))
(common-lisp:deftype currency-code-values () 'common-lisp:string)
(common-lisp:deftype current-generation-flag () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (customer-gateway (:copier common-lisp:nil))
   (bgp-asn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (certificate-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'customer-gateway 'make-customer-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape customer-gateway))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BgpAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bgp-asn)))
                       (aws-sdk/generator/shape::to-query-params "CustomerGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "IpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-address)))
                       (aws-sdk/generator/shape::to-query-params "CertificateArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'certificate-arn)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype customer-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype customer-gateway-id-string-list () '(trivial-types:proper-list customer-gateway-id))
 (common-lisp:defun |make-customer-gateway-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list customer-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype customer-gateway-list () '(trivial-types:proper-list customer-gateway))
 (common-lisp:defun |make-customer-gateway-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list customer-gateway))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ditmax-results () 'common-lisp:integer)
(common-lisp:deftype ditomax-results () 'common-lisp:integer)
(common-lisp:deftype datafeed-subscription-state () 'common-lisp:string)
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:deftype dedicated-host-flag () 'common-lisp:boolean)
(common-lisp:deftype dedicated-host-id () 'common-lisp:string)
(common-lisp:deftype default-route-table-association-value () 'common-lisp:string)
(common-lisp:deftype default-route-table-propagation-value () 'common-lisp:string)
(common-lisp:deftype default-target-capacity-type () 'common-lisp:string)
(common-lisp:deftype defaulting-dhcp-options-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-client-vpn-endpoint-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-client-vpn-endpoint-request 'make-delete-client-vpn-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-client-vpn-endpoint-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-client-vpn-endpoint-result (:copier common-lisp:nil)) (status common-lisp:nil :type (common-lisp:or client-vpn-endpoint-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-client-vpn-endpoint-result 'make-delete-client-vpn-endpoint-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-client-vpn-endpoint-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-client-vpn-route-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (target-vpc-subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-client-vpn-route-request 'make-delete-client-vpn-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-client-vpn-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetVpcSubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-vpc-subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-client-vpn-route-result (:copier common-lisp:nil)) (status common-lisp:nil :type (common-lisp:or client-vpn-route-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-client-vpn-route-result 'make-delete-client-vpn-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-client-vpn-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-customer-gateway-request (:copier common-lisp:nil))
   (customer-gateway-id (common-lisp:error ":customer-gateway-id is required") :type (common-lisp:or customer-gateway-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-customer-gateway-request 'make-delete-customer-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-customer-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CustomerGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-dhcp-options-request (:copier common-lisp:nil))
   (dhcp-options-id (common-lisp:error ":dhcp-options-id is required") :type (common-lisp:or dhcp-options-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-dhcp-options-request 'make-delete-dhcp-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-dhcp-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DhcpOptionsId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-options-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-egress-only-internet-gateway-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (egress-only-internet-gateway-id (common-lisp:error ":egress-only-internet-gateway-id is required") :type (common-lisp:or egress-only-internet-gateway-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-egress-only-internet-gateway-request 'make-delete-egress-only-internet-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-egress-only-internet-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGatewayId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateway-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-egress-only-internet-gateway-result (:copier common-lisp:nil)) (return-code common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-egress-only-internet-gateway-result 'make-delete-egress-only-internet-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-egress-only-internet-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReturnCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return-code))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-fleet-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or delete-fleet-error-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-fleet-error 'make-delete-fleet-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-fleet-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype delete-fleet-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-fleet-error-item (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or delete-fleet-error common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-fleet-error-item 'make-delete-fleet-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-fleet-error-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Error" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id))))))
(common-lisp:progn
 (common-lisp:deftype delete-fleet-error-set () '(trivial-types:proper-list delete-fleet-error-item))
 (common-lisp:defun |make-delete-fleet-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list delete-fleet-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-fleet-success-item (:copier common-lisp:nil))
   (current-fleet-state common-lisp:nil :type (common-lisp:or fleet-state-code common-lisp:null))
   (previous-fleet-state common-lisp:nil :type (common-lisp:or fleet-state-code common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-fleet-success-item 'make-delete-fleet-success-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-fleet-success-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CurrentFleetState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'current-fleet-state)))
                       (aws-sdk/generator/shape::to-query-params "PreviousFleetState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'previous-fleet-state)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id))))))
(common-lisp:progn
 (common-lisp:deftype delete-fleet-success-set () '(trivial-types:proper-list delete-fleet-success-item))
 (common-lisp:defun |make-delete-fleet-success-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list delete-fleet-success-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-fleets-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (fleet-ids (common-lisp:error ":fleet-ids is required") :type (common-lisp:or fleet-id-set common-lisp:null))
   (terminate-instances (common-lisp:error ":terminate-instances is required") :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-fleets-request 'make-delete-fleets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-fleets-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "FleetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-ids)))
                       (aws-sdk/generator/shape::to-query-params "TerminateInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'terminate-instances))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-fleets-result (:copier common-lisp:nil))
   (successful-fleet-deletions common-lisp:nil :type (common-lisp:or delete-fleet-success-set common-lisp:null))
   (unsuccessful-fleet-deletions common-lisp:nil :type (common-lisp:or delete-fleet-error-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-fleets-result 'make-delete-fleets-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-fleets-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SuccessfulFleetDeletions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful-fleet-deletions)))
                       (aws-sdk/generator/shape::to-query-params "UnsuccessfulFleetDeletions"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful-fleet-deletions))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-flow-logs-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (flow-log-ids (common-lisp:error ":flow-log-ids is required") :type (common-lisp:or flow-log-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-flow-logs-request 'make-delete-flow-logs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-flow-logs-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "FlowLogIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'flow-log-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-flow-logs-result (:copier common-lisp:nil)) (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-flow-logs-result 'make-delete-flow-logs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-flow-logs-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-fpga-image-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (fpga-image-id (common-lisp:error ":fpga-image-id is required") :type (common-lisp:or fpga-image-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-fpga-image-request 'make-delete-fpga-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-fpga-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-fpga-image-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-fpga-image-result 'make-delete-fpga-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-fpga-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-internet-gateway-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (internet-gateway-id (common-lisp:error ":internet-gateway-id is required") :type (common-lisp:or internet-gateway-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-internet-gateway-request 'make-delete-internet-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-internet-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InternetGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'internet-gateway-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-key-pair-request (:copier common-lisp:nil))
   (key-name (common-lisp:error ":key-name is required") :type (common-lisp:or key-pair-name common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-key-pair-request 'make-delete-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-key-pair-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-launch-template-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (launch-template-id common-lisp:nil :type (common-lisp:or launch-template-id common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-launch-template-request 'make-delete-launch-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-launch-template-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-launch-template-result (:copier common-lisp:nil)) (launch-template common-lisp:nil :type (common-lisp:or launch-template common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-launch-template-result 'make-delete-launch-template-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-launch-template-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-launch-template-versions-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (launch-template-id common-lisp:nil :type (common-lisp:or launch-template-id common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (versions (common-lisp:error ":versions is required") :type (common-lisp:or version-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-launch-template-versions-request 'make-delete-launch-template-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-launch-template-versions-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "Versions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'versions))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-launch-template-versions-response-error-item (:copier common-lisp:nil))
   (launch-template-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version-number common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (response-error common-lisp:nil :type (common-lisp:or response-error common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-launch-template-versions-response-error-item 'make-delete-launch-template-versions-response-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-launch-template-versions-response-error-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "VersionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version-number)))
                       (aws-sdk/generator/shape::to-query-params "ResponseError" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'response-error))))))
(common-lisp:progn
 (common-lisp:deftype delete-launch-template-versions-response-error-set () '(trivial-types:proper-list delete-launch-template-versions-response-error-item))
 (common-lisp:defun |make-delete-launch-template-versions-response-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list delete-launch-template-versions-response-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-launch-template-versions-response-success-item (:copier common-lisp:nil))
   (launch-template-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version-number common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-launch-template-versions-response-success-item 'make-delete-launch-template-versions-response-success-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-launch-template-versions-response-success-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "VersionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version-number))))))
(common-lisp:progn
 (common-lisp:deftype delete-launch-template-versions-response-success-set () '(trivial-types:proper-list delete-launch-template-versions-response-success-item))
 (common-lisp:defun |make-delete-launch-template-versions-response-success-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list delete-launch-template-versions-response-success-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-launch-template-versions-result (:copier common-lisp:nil))
   (successfully-deleted-launch-template-versions common-lisp:nil :type (common-lisp:or delete-launch-template-versions-response-success-set common-lisp:null))
   (unsuccessfully-deleted-launch-template-versions common-lisp:nil :type (common-lisp:or delete-launch-template-versions-response-error-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-launch-template-versions-result 'make-delete-launch-template-versions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-launch-template-versions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SuccessfullyDeletedLaunchTemplateVersions"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successfully-deleted-launch-template-versions)))
    (aws-sdk/generator/shape::to-query-params "UnsuccessfullyDeletedLaunchTemplateVersions"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessfully-deleted-launch-template-versions))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-local-gateway-route-request (:copier common-lisp:nil))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (local-gateway-route-table-id (common-lisp:error ":local-gateway-route-table-id is required") :type (common-lisp:or local-gateway-routetable-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-local-gateway-route-request 'make-delete-local-gateway-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-local-gateway-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-local-gateway-route-result (:copier common-lisp:nil)) (route common-lisp:nil :type (common-lisp:or local-gateway-route common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-local-gateway-route-result 'make-delete-local-gateway-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-local-gateway-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Route" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-local-gateway-route-table-vpc-association-request (:copier common-lisp:nil))
   (local-gateway-route-table-vpc-association-id (common-lisp:error ":local-gateway-route-table-vpc-association-id is required") :type (common-lisp:or local-gateway-route-table-vpc-association-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-local-gateway-route-table-vpc-association-request 'make-delete-local-gateway-route-table-vpc-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-local-gateway-route-table-vpc-association-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVpcAssociationId"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-vpc-association-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-local-gateway-route-table-vpc-association-result (:copier common-lisp:nil))
   (local-gateway-route-table-vpc-association common-lisp:nil :type (common-lisp:or local-gateway-route-table-vpc-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-local-gateway-route-table-vpc-association-result 'make-delete-local-gateway-route-table-vpc-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-local-gateway-route-table-vpc-association-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVpcAssociation"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-vpc-association))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-nat-gateway-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (nat-gateway-id (common-lisp:error ":nat-gateway-id is required") :type (common-lisp:or nat-gateway-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-nat-gateway-request 'make-delete-nat-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-nat-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NatGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-nat-gateway-result (:copier common-lisp:nil)) (nat-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-nat-gateway-result 'make-delete-nat-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-nat-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NatGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-network-acl-entry-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (egress (common-lisp:error ":egress is required") :type (common-lisp:or boolean common-lisp:null))
   (network-acl-id (common-lisp:error ":network-acl-id is required") :type (common-lisp:or network-acl-id common-lisp:null))
   (rule-number (common-lisp:error ":rule-number is required") :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-network-acl-entry-request 'make-delete-network-acl-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-network-acl-entry-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Egress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-id)))
                       (aws-sdk/generator/shape::to-query-params "RuleNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-number))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-network-acl-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-acl-id (common-lisp:error ":network-acl-id is required") :type (common-lisp:or network-acl-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-network-acl-request 'make-delete-network-acl-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-network-acl-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-network-interface-permission-request (:copier common-lisp:nil))
   (network-interface-permission-id (common-lisp:error ":network-interface-permission-id is required") :type (common-lisp:or network-interface-permission-id common-lisp:null))
   (force common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-network-interface-permission-request 'make-delete-network-interface-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-network-interface-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NetworkInterfacePermissionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-permission-id)))
    (aws-sdk/generator/shape::to-query-params "Force" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'force)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-network-interface-permission-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-network-interface-permission-result 'make-delete-network-interface-permission-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-network-interface-permission-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-network-interface-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-network-interface-request 'make-delete-network-interface-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-network-interface-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-placement-group-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-name (common-lisp:error ":group-name is required") :type (common-lisp:or placement-group-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-placement-group-request 'make-delete-placement-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-placement-group-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-queued-reserved-instances-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or delete-queued-reserved-instances-error-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-queued-reserved-instances-error 'make-delete-queued-reserved-instances-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-queued-reserved-instances-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype delete-queued-reserved-instances-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype delete-queued-reserved-instances-id-list () '(trivial-types:proper-list reservation-id))
 (common-lisp:defun |make-delete-queued-reserved-instances-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reservation-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-queued-reserved-instances-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (reserved-instances-ids (common-lisp:error ":reserved-instances-ids is required") :type (common-lisp:or delete-queued-reserved-instances-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-queued-reserved-instances-request 'make-delete-queued-reserved-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-queued-reserved-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-queued-reserved-instances-result (:copier common-lisp:nil))
   (successful-queued-purchase-deletions common-lisp:nil :type (common-lisp:or successful-queued-purchase-deletion-set common-lisp:null))
   (failed-queued-purchase-deletions common-lisp:nil :type (common-lisp:or failed-queued-purchase-deletion-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-queued-reserved-instances-result 'make-delete-queued-reserved-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-queued-reserved-instances-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SuccessfulQueuedPurchaseDeletions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful-queued-purchase-deletions)))
    (aws-sdk/generator/shape::to-query-params "FailedQueuedPurchaseDeletions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'failed-queued-purchase-deletions))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-route-request (:copier common-lisp:nil))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-route-request 'make-delete-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DestinationIpv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-route-table-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-route-table-request 'make-delete-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-route-table-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-security-group-request (:copier common-lisp:nil))
   (group-id common-lisp:nil :type (common-lisp:or security-group-id common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or security-group-name common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-security-group-request 'make-delete-security-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-security-group-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-snapshot-request (:copier common-lisp:nil))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type (common-lisp:or snapshot-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-snapshot-request 'make-delete-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-snapshot-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-spot-datafeed-subscription-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-spot-datafeed-subscription-request 'make-delete-spot-datafeed-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-spot-datafeed-subscription-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-subnet-request (:copier common-lisp:nil))
   (subnet-id (common-lisp:error ":subnet-id is required") :type (common-lisp:or subnet-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-subnet-request 'make-delete-subnet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-subnet-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (resources (common-lisp:error ":resources is required") :type (common-lisp:or resource-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-tags-request 'make-delete-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-tags-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Resources" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resources)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-filter-request (:copier common-lisp:nil))
   (traffic-mirror-filter-id (common-lisp:error ":traffic-mirror-filter-id is required") :type (common-lisp:or traffic-mirror-filter-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-filter-request 'make-delete-traffic-mirror-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-filter-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-filter-result (:copier common-lisp:nil)) (traffic-mirror-filter-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-filter-result 'make-delete-traffic-mirror-filter-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-filter-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-filter-rule-request (:copier common-lisp:nil))
   (traffic-mirror-filter-rule-id (common-lisp:error ":traffic-mirror-filter-rule-id is required") :type (common-lisp:or traffic-mirror-filter-rule-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-filter-rule-request 'make-delete-traffic-mirror-filter-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-filter-rule-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterRuleId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-rule-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-filter-rule-result (:copier common-lisp:nil)) (traffic-mirror-filter-rule-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-filter-rule-result 'make-delete-traffic-mirror-filter-rule-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-filter-rule-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterRuleId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-rule-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-session-request (:copier common-lisp:nil))
   (traffic-mirror-session-id (common-lisp:error ":traffic-mirror-session-id is required") :type (common-lisp:or traffic-mirror-session-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-session-request 'make-delete-traffic-mirror-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-session-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSessionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-session-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-session-result (:copier common-lisp:nil)) (traffic-mirror-session-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-session-result 'make-delete-traffic-mirror-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-session-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSessionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-session-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-target-request (:copier common-lisp:nil))
   (traffic-mirror-target-id (common-lisp:error ":traffic-mirror-target-id is required") :type (common-lisp:or traffic-mirror-target-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-target-request 'make-delete-traffic-mirror-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-target-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-traffic-mirror-target-result (:copier common-lisp:nil)) (traffic-mirror-target-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-traffic-mirror-target-result 'make-delete-traffic-mirror-target-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-traffic-mirror-target-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-multicast-domain-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id (common-lisp:error ":transit-gateway-multicast-domain-id is required") :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-multicast-domain-request 'make-delete-transit-gateway-multicast-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-multicast-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-multicast-domain-result (:copier common-lisp:nil))
   (transit-gateway-multicast-domain common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-multicast-domain-result 'make-delete-transit-gateway-multicast-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-multicast-domain-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-peering-attachment-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-peering-attachment-request 'make-delete-transit-gateway-peering-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-peering-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-peering-attachment-result (:copier common-lisp:nil))
   (transit-gateway-peering-attachment common-lisp:nil :type (common-lisp:or transit-gateway-peering-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-peering-attachment-result 'make-delete-transit-gateway-peering-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-peering-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayPeeringAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-peering-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-request (:copier common-lisp:nil))
   (transit-gateway-id (common-lisp:error ":transit-gateway-id is required") :type (common-lisp:or transit-gateway-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-request 'make-delete-transit-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-result (:copier common-lisp:nil)) (transit-gateway common-lisp:nil :type (common-lisp:or transit-gateway common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-result 'make-delete-transit-gateway-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGateway" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-route-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-route-request 'make-delete-transit-gateway-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-route-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-route-result (:copier common-lisp:nil)) (route common-lisp:nil :type (common-lisp:or transit-gateway-route common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-route-result 'make-delete-transit-gateway-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Route" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-route-table-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-route-table-request 'make-delete-transit-gateway-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-route-table-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-route-table-result (:copier common-lisp:nil)) (transit-gateway-route-table common-lisp:nil :type (common-lisp:or transit-gateway-route-table common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-route-table-result 'make-delete-transit-gateway-route-table-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-route-table-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTable" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-vpc-attachment-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-vpc-attachment-request 'make-delete-transit-gateway-vpc-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-vpc-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-transit-gateway-vpc-attachment-result (:copier common-lisp:nil)) (transit-gateway-vpc-attachment common-lisp:nil :type (common-lisp:or transit-gateway-vpc-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-transit-gateway-vpc-attachment-result 'make-delete-transit-gateway-vpc-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-transit-gateway-vpc-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayVpcAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-vpc-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-volume-request (:copier common-lisp:nil))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-volume-request 'make-delete-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-volume-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-endpoint-connection-notifications-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (connection-notification-ids (common-lisp:error ":connection-notification-ids is required") :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-endpoint-connection-notifications-request 'make-delete-vpc-endpoint-connection-notifications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-endpoint-connection-notifications-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-endpoint-connection-notifications-result (:copier common-lisp:nil)) (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-endpoint-connection-notifications-result 'make-delete-vpc-endpoint-connection-notifications-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-endpoint-connection-notifications-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-endpoint-service-configurations-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-ids (common-lisp:error ":service-ids is required") :type (common-lisp:or vpc-endpoint-service-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-endpoint-service-configurations-request 'make-delete-vpc-endpoint-service-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-endpoint-service-configurations-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-endpoint-service-configurations-result (:copier common-lisp:nil)) (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-endpoint-service-configurations-result 'make-delete-vpc-endpoint-service-configurations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-endpoint-service-configurations-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-endpoints-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-endpoint-ids (common-lisp:error ":vpc-endpoint-ids is required") :type (common-lisp:or vpc-endpoint-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-endpoints-request 'make-delete-vpc-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-endpoints-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-endpoints-result (:copier common-lisp:nil)) (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-endpoints-result 'make-delete-vpc-endpoints-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-endpoints-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-peering-connection-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-peering-connection-id (common-lisp:error ":vpc-peering-connection-id is required") :type (common-lisp:or vpc-peering-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-peering-connection-request 'make-delete-vpc-peering-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-peering-connection-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-peering-connection-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-peering-connection-result 'make-delete-vpc-peering-connection-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-peering-connection-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpc-request (:copier common-lisp:nil))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpc-request 'make-delete-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpc-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpn-connection-request (:copier common-lisp:nil))
   (vpn-connection-id (common-lisp:error ":vpn-connection-id is required") :type (common-lisp:or vpn-connection-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpn-connection-request 'make-delete-vpn-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpn-connection-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpn-connection-route-request (:copier common-lisp:nil))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (vpn-connection-id (common-lisp:error ":vpn-connection-id is required") :type (common-lisp:or vpn-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpn-connection-route-request 'make-delete-vpn-connection-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpn-connection-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "VpnConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vpn-gateway-request (:copier common-lisp:nil))
   (vpn-gateway-id (common-lisp:error ":vpn-gateway-id is required") :type (common-lisp:or vpn-gateway-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-vpn-gateway-request 'make-delete-vpn-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape delete-vpn-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (deprovision-byoip-cidr-request (:copier common-lisp:nil))
   (cidr (common-lisp:error ":cidr is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deprovision-byoip-cidr-request 'make-deprovision-byoip-cidr-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape deprovision-byoip-cidr-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (deprovision-byoip-cidr-result (:copier common-lisp:nil)) (byoip-cidr common-lisp:nil :type (common-lisp:or byoip-cidr common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deprovision-byoip-cidr-result 'make-deprovision-byoip-cidr-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape deprovision-byoip-cidr-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ByoipCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'byoip-cidr))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-image-request (:copier common-lisp:nil))
   (image-id (common-lisp:error ":image-id is required") :type (common-lisp:or image-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deregister-image-request 'make-deregister-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape deregister-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-transit-gateway-multicast-group-members-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-ids common-lisp:nil :type (common-lisp:or transit-gateway-network-interface-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deregister-transit-gateway-multicast-group-members-request 'make-deregister-transit-gateway-multicast-group-members-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape deregister-transit-gateway-multicast-group-members-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address)))
    (aws-sdk/generator/shape::to-query-params "NetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-transit-gateway-multicast-group-members-result (:copier common-lisp:nil))
   (deregistered-multicast-group-members common-lisp:nil :type (common-lisp:or transit-gateway-multicast-deregistered-group-members common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deregister-transit-gateway-multicast-group-members-result 'make-deregister-transit-gateway-multicast-group-members-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape deregister-transit-gateway-multicast-group-members-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeregisteredMulticastGroupMembers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deregistered-multicast-group-members))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-transit-gateway-multicast-group-sources-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-ids common-lisp:nil :type (common-lisp:or transit-gateway-network-interface-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deregister-transit-gateway-multicast-group-sources-request 'make-deregister-transit-gateway-multicast-group-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape deregister-transit-gateway-multicast-group-sources-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address)))
    (aws-sdk/generator/shape::to-query-params "NetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-transit-gateway-multicast-group-sources-result (:copier common-lisp:nil))
   (deregistered-multicast-group-sources common-lisp:nil :type (common-lisp:or transit-gateway-multicast-deregistered-group-sources common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deregister-transit-gateway-multicast-group-sources-result 'make-deregister-transit-gateway-multicast-group-sources-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape deregister-transit-gateway-multicast-group-sources-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeregisteredMulticastGroupSources" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deregistered-multicast-group-sources))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-account-attributes-request (:copier common-lisp:nil))
   (attribute-names common-lisp:nil :type (common-lisp:or account-attribute-name-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-account-attributes-request 'make-describe-account-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-account-attributes-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttributeNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute-names)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-account-attributes-result (:copier common-lisp:nil)) (account-attributes common-lisp:nil :type (common-lisp:or account-attribute-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-account-attributes-result 'make-describe-account-attributes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-account-attributes-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AccountAttributes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'account-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-addresses-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (public-ips common-lisp:nil :type (common-lisp:or public-ip-string-list common-lisp:null))
   (allocation-ids common-lisp:nil :type (common-lisp:or allocation-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-addresses-request 'make-describe-addresses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-addresses-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "PublicIps" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ips)))
                       (aws-sdk/generator/shape::to-query-params "AllocationIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-addresses-result (:copier common-lisp:nil)) (addresses common-lisp:nil :type (common-lisp:or address-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-addresses-result 'make-describe-addresses-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-addresses-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'addresses))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-aggregate-id-format-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-aggregate-id-format-request 'make-describe-aggregate-id-format-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-aggregate-id-format-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-aggregate-id-format-result (:copier common-lisp:nil))
   (use-long-ids-aggregated common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (statuses common-lisp:nil :type (common-lisp:or id-format-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-aggregate-id-format-result 'make-describe-aggregate-id-format-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-aggregate-id-format-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "UseLongIdsAggregated" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'use-long-ids-aggregated)))
                       (aws-sdk/generator/shape::to-query-params "Statuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'statuses))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-availability-zones-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (zone-names common-lisp:nil :type (common-lisp:or zone-name-string-list common-lisp:null))
   (zone-ids common-lisp:nil :type (common-lisp:or zone-id-string-list common-lisp:null))
   (all-availability-zones common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-availability-zones-request 'make-describe-availability-zones-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-availability-zones-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "ZoneNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'zone-names)))
                       (aws-sdk/generator/shape::to-query-params "ZoneIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'zone-ids)))
                       (aws-sdk/generator/shape::to-query-params "AllAvailabilityZones" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'all-availability-zones)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-availability-zones-result (:copier common-lisp:nil)) (availability-zones common-lisp:nil :type (common-lisp:or availability-zone-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-availability-zones-result 'make-describe-availability-zones-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-availability-zones-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZones" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-bundle-tasks-request (:copier common-lisp:nil))
   (bundle-ids common-lisp:nil :type (common-lisp:or bundle-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-bundle-tasks-request 'make-describe-bundle-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-bundle-tasks-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BundleIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bundle-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-bundle-tasks-result (:copier common-lisp:nil)) (bundle-tasks common-lisp:nil :type (common-lisp:or bundle-task-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-bundle-tasks-result 'make-describe-bundle-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-bundle-tasks-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BundleTasks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bundle-tasks))))))
(common-lisp:deftype describe-byoip-cidrs-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-byoip-cidrs-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results (common-lisp:error ":max-results is required") :type (common-lisp:or describe-byoip-cidrs-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-byoip-cidrs-request 'make-describe-byoip-cidrs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-byoip-cidrs-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-byoip-cidrs-result (:copier common-lisp:nil))
   (byoip-cidrs common-lisp:nil :type (common-lisp:or byoip-cidr-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-byoip-cidrs-result 'make-describe-byoip-cidrs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-byoip-cidrs-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ByoipCidrs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'byoip-cidrs)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-capacity-reservations-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-capacity-reservations-request (:copier common-lisp:nil))
   (capacity-reservation-ids common-lisp:nil :type (common-lisp:or capacity-reservation-id-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-capacity-reservations-max-results common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-capacity-reservations-request 'make-describe-capacity-reservations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-capacity-reservations-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservationIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-capacity-reservations-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (capacity-reservations common-lisp:nil :type (common-lisp:or capacity-reservation-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-capacity-reservations-result 'make-describe-capacity-reservations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-capacity-reservations-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservations))))))
(common-lisp:deftype describe-classic-link-instances-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-classic-link-instances-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-ids common-lisp:nil :type (common-lisp:or instance-id-string-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-classic-link-instances-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-classic-link-instances-request 'make-describe-classic-link-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-classic-link-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-classic-link-instances-result (:copier common-lisp:nil))
   (instances common-lisp:nil :type (common-lisp:or classic-link-instance-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-classic-link-instances-result 'make-describe-classic-link-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-classic-link-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Instances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instances)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-client-vpn-authorization-rules-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-authorization-rules-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-client-vpn-authorization-rules-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-authorization-rules-request 'make-describe-client-vpn-authorization-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-authorization-rules-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-authorization-rules-result (:copier common-lisp:nil))
   (authorization-rules common-lisp:nil :type (common-lisp:or authorization-rule-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-authorization-rules-result 'make-describe-client-vpn-authorization-rules-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-authorization-rules-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AuthorizationRules" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'authorization-rules)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-client-vpn-connections-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-connections-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-client-vpn-connections-max-results common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-connections-request 'make-describe-client-vpn-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-connections-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-connections-result (:copier common-lisp:nil))
   (connections common-lisp:nil :type (common-lisp:or client-vpn-connection-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-connections-result 'make-describe-client-vpn-connections-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-connections-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Connections" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connections)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-client-vpn-endpoint-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-endpoints-request (:copier common-lisp:nil))
   (client-vpn-endpoint-ids common-lisp:nil :type (common-lisp:or client-vpn-endpoint-id-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-client-vpn-endpoint-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-endpoints-request 'make-describe-client-vpn-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-endpoints-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-endpoints-result (:copier common-lisp:nil))
   (client-vpn-endpoints common-lisp:nil :type (common-lisp:or endpoint-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-endpoints-result 'make-describe-client-vpn-endpoints-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-endpoints-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpoints" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoints)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-client-vpn-routes-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-routes-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-client-vpn-routes-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-routes-request 'make-describe-client-vpn-routes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-routes-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-routes-result (:copier common-lisp:nil))
   (routes common-lisp:nil :type (common-lisp:or client-vpn-route-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-routes-result 'make-describe-client-vpn-routes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-routes-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Routes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'routes)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-client-vpn-target-networks-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-target-networks-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (association-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-client-vpn-target-networks-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-target-networks-request 'make-describe-client-vpn-target-networks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-target-networks-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "AssociationIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-client-vpn-target-networks-result (:copier common-lisp:nil))
   (client-vpn-target-networks common-lisp:nil :type (common-lisp:or target-network-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-client-vpn-target-networks-result 'make-describe-client-vpn-target-networks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-client-vpn-target-networks-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnTargetNetworks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-target-networks)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-coip-pools-request (:copier common-lisp:nil))
   (pool-ids common-lisp:nil :type (common-lisp:or coip-pool-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or coip-pool-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-coip-pools-request 'make-describe-coip-pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-coip-pools-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-coip-pools-result (:copier common-lisp:nil))
   (coip-pools common-lisp:nil :type (common-lisp:or coip-pool-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-coip-pools-result 'make-describe-coip-pools-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-coip-pools-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CoipPools" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'coip-pools)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:deftype describe-conversion-task-list () '(trivial-types:proper-list conversion-task))
 (common-lisp:defun |make-describe-conversion-task-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list conversion-task))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (describe-conversion-tasks-request (:copier common-lisp:nil))
   (conversion-task-ids common-lisp:nil :type (common-lisp:or conversion-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-conversion-tasks-request 'make-describe-conversion-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-conversion-tasks-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConversionTaskIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'conversion-task-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-conversion-tasks-result (:copier common-lisp:nil)) (conversion-tasks common-lisp:nil :type (common-lisp:or describe-conversion-task-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-conversion-tasks-result 'make-describe-conversion-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-conversion-tasks-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConversionTasks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'conversion-tasks))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-customer-gateways-request (:copier common-lisp:nil))
   (customer-gateway-ids common-lisp:nil :type (common-lisp:or customer-gateway-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-customer-gateways-request 'make-describe-customer-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-customer-gateways-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CustomerGatewayIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-customer-gateways-result (:copier common-lisp:nil)) (customer-gateways common-lisp:nil :type (common-lisp:or customer-gateway-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-customer-gateways-result 'make-describe-customer-gateways-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-customer-gateways-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CustomerGateways" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateways))))))
(common-lisp:deftype describe-dhcp-options-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-dhcp-options-request (:copier common-lisp:nil))
   (dhcp-options-ids common-lisp:nil :type (common-lisp:or dhcp-options-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-dhcp-options-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-dhcp-options-request 'make-describe-dhcp-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-dhcp-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DhcpOptionsIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-options-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-dhcp-options-result (:copier common-lisp:nil))
   (dhcp-options common-lisp:nil :type (common-lisp:or dhcp-options-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-dhcp-options-result 'make-describe-dhcp-options-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-dhcp-options-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DhcpOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-options)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-egress-only-internet-gateways-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-egress-only-internet-gateways-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (egress-only-internet-gateway-ids common-lisp:nil :type (common-lisp:or egress-only-internet-gateway-id-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-egress-only-internet-gateways-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-egress-only-internet-gateways-request 'make-describe-egress-only-internet-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-egress-only-internet-gateways-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGatewayIds"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateway-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-egress-only-internet-gateways-result (:copier common-lisp:nil))
   (egress-only-internet-gateways common-lisp:nil :type (common-lisp:or egress-only-internet-gateway-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-egress-only-internet-gateways-result 'make-describe-egress-only-internet-gateways-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-egress-only-internet-gateways-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGateways" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateways)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-elastic-gpus-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-elastic-gpus-request (:copier common-lisp:nil))
   (elastic-gpu-ids common-lisp:nil :type (common-lisp:or elastic-gpu-id-set common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-elastic-gpus-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-elastic-gpus-request 'make-describe-elastic-gpus-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-elastic-gpus-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ElasticGpuIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-elastic-gpus-result (:copier common-lisp:nil))
   (elastic-gpu-set common-lisp:nil :type (common-lisp:or elastic-gpu-set common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-elastic-gpus-result 'make-describe-elastic-gpus-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-elastic-gpus-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ElasticGpuSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-set)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-export-image-tasks-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-export-image-tasks-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (export-image-task-ids common-lisp:nil :type (common-lisp:or export-image-task-id-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-export-image-tasks-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-export-image-tasks-request 'make-describe-export-image-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-export-image-tasks-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "ExportImageTaskIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-image-task-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-export-image-tasks-result (:copier common-lisp:nil))
   (export-image-tasks common-lisp:nil :type (common-lisp:or export-image-task-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-export-image-tasks-result 'make-describe-export-image-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-export-image-tasks-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ExportImageTasks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-image-tasks)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-export-tasks-request (:copier common-lisp:nil))
   (export-task-ids common-lisp:nil :type (common-lisp:or export-task-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-export-tasks-request 'make-describe-export-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-export-tasks-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ExportTaskIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-task-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-export-tasks-result (:copier common-lisp:nil)) (export-tasks common-lisp:nil :type (common-lisp:or export-task-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-export-tasks-result 'make-describe-export-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-export-tasks-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ExportTasks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-tasks))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fast-snapshot-restore-success-item (:copier common-lisp:nil))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or fast-snapshot-restore-state-code common-lisp:null))
   (state-transition-reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-alias common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enabling-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (optimizing-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (enabled-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (disabling-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (disabled-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fast-snapshot-restore-success-item 'make-describe-fast-snapshot-restore-success-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fast-snapshot-restore-success-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StateTransitionReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state-transition-reason)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerAlias" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-alias)))
                       (aws-sdk/generator/shape::to-query-params "EnablingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabling-time)))
                       (aws-sdk/generator/shape::to-query-params "OptimizingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'optimizing-time)))
                       (aws-sdk/generator/shape::to-query-params "EnabledTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled-time)))
                       (aws-sdk/generator/shape::to-query-params "DisablingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disabling-time)))
                       (aws-sdk/generator/shape::to-query-params "DisabledTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disabled-time))))))
(common-lisp:progn
 (common-lisp:deftype describe-fast-snapshot-restore-success-set () '(trivial-types:proper-list describe-fast-snapshot-restore-success-item))
 (common-lisp:defun |make-describe-fast-snapshot-restore-success-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list describe-fast-snapshot-restore-success-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype describe-fast-snapshot-restores-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-fast-snapshot-restores-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-fast-snapshot-restores-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fast-snapshot-restores-request 'make-describe-fast-snapshot-restores-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fast-snapshot-restores-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fast-snapshot-restores-result (:copier common-lisp:nil))
   (fast-snapshot-restores common-lisp:nil :type (common-lisp:or describe-fast-snapshot-restore-success-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fast-snapshot-restores-result 'make-describe-fast-snapshot-restores-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fast-snapshot-restores-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FastSnapshotRestores" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fast-snapshot-restores)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleet-error (:copier common-lisp:nil))
   (launch-template-and-overrides common-lisp:nil :type (common-lisp:or launch-template-and-overrides-response common-lisp:null))
   (lifecycle common-lisp:nil :type (common-lisp:or instance-lifecycle common-lisp:null))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleet-error 'make-describe-fleet-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleet-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateAndOverrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-and-overrides)))
    (aws-sdk/generator/shape::to-query-params "Lifecycle" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'lifecycle)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error-message))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleet-history-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (event-type common-lisp:nil :type (common-lisp:or fleet-event-type common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fleet-id (common-lisp:error ":fleet-id is required") :type (common-lisp:or fleet-id common-lisp:null))
   (start-time (common-lisp:error ":start-time is required") :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleet-history-request 'make-describe-fleet-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleet-history-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EventType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-type)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleet-history-result (:copier common-lisp:nil))
   (history-records common-lisp:nil :type (common-lisp:or history-record-set common-lisp:null))
   (last-evaluated-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleet-history-result 'make-describe-fleet-history-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleet-history-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HistoryRecords" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'history-records)))
                       (aws-sdk/generator/shape::to-query-params "LastEvaluatedTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'last-evaluated-time)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleet-instances-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fleet-id (common-lisp:error ":fleet-id is required") :type (common-lisp:or fleet-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleet-instances-request 'make-describe-fleet-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleet-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleet-instances-result (:copier common-lisp:nil))
   (active-instances common-lisp:nil :type (common-lisp:or active-instance-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleet-instances-result 'make-describe-fleet-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleet-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ActiveInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'active-instances)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id))))))
(common-lisp:progn
 (common-lisp:deftype describe-fleets-error-set () '(trivial-types:proper-list describe-fleet-error))
 (common-lisp:defun |make-describe-fleets-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list describe-fleet-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleets-instances (:copier common-lisp:nil))
   (launch-template-and-overrides common-lisp:nil :type (common-lisp:or launch-template-and-overrides-response common-lisp:null))
   (lifecycle common-lisp:nil :type (common-lisp:or instance-lifecycle common-lisp:null))
   (instance-ids common-lisp:nil :type (common-lisp:or instance-ids-set common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or platform-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleets-instances 'make-describe-fleets-instances))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleets-instances))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateAndOverrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-and-overrides)))
    (aws-sdk/generator/shape::to-query-params "Lifecycle" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'lifecycle)))
    (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
    (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform))))))
(common-lisp:progn
 (common-lisp:deftype describe-fleets-instances-set () '(trivial-types:proper-list describe-fleets-instances))
 (common-lisp:defun |make-describe-fleets-instances-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list describe-fleets-instances))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleets-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fleet-ids common-lisp:nil :type (common-lisp:or fleet-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleets-request 'make-describe-fleets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleets-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "FleetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fleets-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fleets common-lisp:nil :type (common-lisp:or fleet-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fleets-result 'make-describe-fleets-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fleets-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Fleets" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleets))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-flow-logs-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filter common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (flow-log-ids common-lisp:nil :type (common-lisp:or flow-log-id-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-flow-logs-request 'make-describe-flow-logs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-flow-logs-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filter)))
                       (aws-sdk/generator/shape::to-query-params "FlowLogIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'flow-log-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-flow-logs-result (:copier common-lisp:nil))
   (flow-logs common-lisp:nil :type (common-lisp:or flow-log-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-flow-logs-result 'make-describe-flow-logs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-flow-logs-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FlowLogs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'flow-logs)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fpga-image-attribute-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (fpga-image-id (common-lisp:error ":fpga-image-id is required") :type (common-lisp:or fpga-image-id common-lisp:null))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or fpga-image-attribute-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fpga-image-attribute-request 'make-describe-fpga-image-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fpga-image-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id)))
                       (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fpga-image-attribute-result (:copier common-lisp:nil)) (fpga-image-attribute common-lisp:nil :type (common-lisp:or fpga-image-attribute common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fpga-image-attribute-result 'make-describe-fpga-image-attribute-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fpga-image-attribute-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FpgaImageAttribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-attribute))))))
(common-lisp:deftype describe-fpga-images-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-fpga-images-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (fpga-image-ids common-lisp:nil :type (common-lisp:or fpga-image-id-list common-lisp:null))
   (owners common-lisp:nil :type (common-lisp:or owner-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-fpga-images-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fpga-images-request 'make-describe-fpga-images-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fpga-images-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "FpgaImageIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-ids)))
                       (aws-sdk/generator/shape::to-query-params "Owners" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owners)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-fpga-images-result (:copier common-lisp:nil))
   (fpga-images common-lisp:nil :type (common-lisp:or fpga-image-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-fpga-images-result 'make-describe-fpga-images-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-fpga-images-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FpgaImages" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-images)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-host-reservation-offerings-request (:copier common-lisp:nil))
   (filter common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-host-reservations-max-results common-lisp:null))
   (min-duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (offering-id common-lisp:nil :type (common-lisp:or offering-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-host-reservation-offerings-request 'make-describe-host-reservation-offerings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-host-reservation-offerings-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filter)))
                       (aws-sdk/generator/shape::to-query-params "MaxDuration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-duration)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "MinDuration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-duration)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "OfferingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-host-reservation-offerings-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (offering-set common-lisp:nil :type (common-lisp:or host-offering-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-host-reservation-offerings-result 'make-describe-host-reservation-offerings-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-host-reservation-offerings-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "OfferingSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-set))))))
(common-lisp:deftype describe-host-reservations-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-host-reservations-request (:copier common-lisp:nil))
   (filter common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (host-reservation-id-set common-lisp:nil :type (common-lisp:or host-reservation-id-set common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-host-reservations-request 'make-describe-host-reservations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-host-reservations-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filter)))
                       (aws-sdk/generator/shape::to-query-params "HostReservationIdSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-reservation-id-set)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-host-reservations-result (:copier common-lisp:nil))
   (host-reservation-set common-lisp:nil :type (common-lisp:or host-reservation-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-host-reservations-result 'make-describe-host-reservations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-host-reservations-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HostReservationSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-reservation-set)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-hosts-request (:copier common-lisp:nil))
   (filter common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (host-ids common-lisp:nil :type (common-lisp:or request-host-id-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-hosts-request 'make-describe-hosts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-hosts-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filter)))
                       (aws-sdk/generator/shape::to-query-params "HostIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-hosts-result (:copier common-lisp:nil))
   (hosts common-lisp:nil :type (common-lisp:or host-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-hosts-result 'make-describe-hosts-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-hosts-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Hosts" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hosts)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-iam-instance-profile-associations-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-iam-instance-profile-associations-request (:copier common-lisp:nil))
   (association-ids common-lisp:nil :type (common-lisp:or association-id-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-iam-instance-profile-associations-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-iam-instance-profile-associations-request 'make-describe-iam-instance-profile-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-iam-instance-profile-associations-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-iam-instance-profile-associations-result (:copier common-lisp:nil))
   (iam-instance-profile-associations common-lisp:nil :type (common-lisp:or iam-instance-profile-association-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-iam-instance-profile-associations-result 'make-describe-iam-instance-profile-associations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-iam-instance-profile-associations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamInstanceProfileAssociations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile-associations)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-id-format-request (:copier common-lisp:nil)) (resource common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-id-format-request 'make-describe-id-format-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-id-format-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Resource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-id-format-result (:copier common-lisp:nil)) (statuses common-lisp:nil :type (common-lisp:or id-format-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-id-format-result 'make-describe-id-format-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-id-format-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Statuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'statuses))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-identity-id-format-request (:copier common-lisp:nil))
   (principal-arn (common-lisp:error ":principal-arn is required") :type (common-lisp:or string common-lisp:null))
   (resource common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-identity-id-format-request 'make-describe-identity-id-format-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-identity-id-format-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PrincipalArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'principal-arn)))
                       (aws-sdk/generator/shape::to-query-params "Resource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-identity-id-format-result (:copier common-lisp:nil)) (statuses common-lisp:nil :type (common-lisp:or id-format-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-identity-id-format-result 'make-describe-identity-id-format-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-identity-id-format-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Statuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'statuses))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-image-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or image-attribute-name common-lisp:null))
   (image-id (common-lisp:error ":image-id is required") :type (common-lisp:or image-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-image-attribute-request 'make-describe-image-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-image-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-images-request (:copier common-lisp:nil))
   (executable-users common-lisp:nil :type (common-lisp:or executable-by-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (image-ids common-lisp:nil :type (common-lisp:or image-id-string-list common-lisp:null))
   (owners common-lisp:nil :type (common-lisp:or owner-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-images-request 'make-describe-images-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-images-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ExecutableUsers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'executable-users)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "ImageIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-ids)))
                       (aws-sdk/generator/shape::to-query-params "Owners" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owners)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-images-result (:copier common-lisp:nil)) (images common-lisp:nil :type (common-lisp:or image-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-images-result 'make-describe-images-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-images-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Images" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'images))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-import-image-tasks-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (import-task-ids common-lisp:nil :type (common-lisp:or import-task-id-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-import-image-tasks-request 'make-describe-import-image-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-import-image-tasks-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "ImportTaskIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-import-image-tasks-result (:copier common-lisp:nil))
   (import-image-tasks common-lisp:nil :type (common-lisp:or import-image-task-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-import-image-tasks-result 'make-describe-import-image-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-import-image-tasks-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImportImageTasks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-image-tasks)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-import-snapshot-tasks-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (import-task-ids common-lisp:nil :type (common-lisp:or import-snapshot-task-id-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-import-snapshot-tasks-request 'make-describe-import-snapshot-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-import-snapshot-tasks-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "ImportTaskIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-import-snapshot-tasks-result (:copier common-lisp:nil))
   (import-snapshot-tasks common-lisp:nil :type (common-lisp:or import-snapshot-task-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-import-snapshot-tasks-result 'make-describe-import-snapshot-tasks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-import-snapshot-tasks-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImportSnapshotTasks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-snapshot-tasks)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or instance-attribute-name common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-attribute-request 'make-describe-instance-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:deftype describe-instance-credit-specifications-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-credit-specifications-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (instance-ids common-lisp:nil :type (common-lisp:or instance-id-string-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-instance-credit-specifications-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-credit-specifications-request 'make-describe-instance-credit-specifications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-credit-specifications-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-credit-specifications-result (:copier common-lisp:nil))
   (instance-credit-specifications common-lisp:nil :type (common-lisp:or instance-credit-specification-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-credit-specifications-result 'make-describe-instance-credit-specifications-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-credit-specifications-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceCreditSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-credit-specifications)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-status-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (instance-ids common-lisp:nil :type (common-lisp:or instance-id-string-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (include-all-instances common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-status-request 'make-describe-instance-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-status-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "IncludeAllInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'include-all-instances))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-status-result (:copier common-lisp:nil))
   (instance-statuses common-lisp:nil :type (common-lisp:or instance-status-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-status-result 'make-describe-instance-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-status-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceStatuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-statuses)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-type-offerings-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (location-type common-lisp:nil :type (common-lisp:or location-type common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or ditomax-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-type-offerings-request 'make-describe-instance-type-offerings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-type-offerings-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "LocationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'location-type)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-type-offerings-result (:copier common-lisp:nil))
   (instance-type-offerings common-lisp:nil :type (common-lisp:or instance-type-offerings-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-type-offerings-result 'make-describe-instance-type-offerings-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-type-offerings-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceTypeOfferings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type-offerings)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-types-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-types common-lisp:nil :type (common-lisp:or request-instance-type-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or ditmax-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-types-request 'make-describe-instance-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-types-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTypes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-types)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instance-types-result (:copier common-lisp:nil))
   (instance-types common-lisp:nil :type (common-lisp:or instance-type-info-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instance-types-result 'make-describe-instance-types-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instance-types-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceTypes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-types)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instances-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (instance-ids common-lisp:nil :type (common-lisp:or instance-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instances-request 'make-describe-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instances-result (:copier common-lisp:nil))
   (reservations common-lisp:nil :type (common-lisp:or reservation-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-instances-result 'make-describe-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Reservations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reservations)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-internet-gateways-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-internet-gateways-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (internet-gateway-ids common-lisp:nil :type (common-lisp:or internet-gateway-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-internet-gateways-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-internet-gateways-request 'make-describe-internet-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-internet-gateways-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InternetGatewayIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'internet-gateway-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-internet-gateways-result (:copier common-lisp:nil))
   (internet-gateways common-lisp:nil :type (common-lisp:or internet-gateway-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-internet-gateways-result 'make-describe-internet-gateways-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-internet-gateways-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InternetGateways" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'internet-gateways)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-ipv6pools-request (:copier common-lisp:nil))
   (pool-ids common-lisp:nil :type (common-lisp:or ipv6pool-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or ipv6pool-max-results common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-ipv6pools-request 'make-describe-ipv6pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-ipv6pools-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-ipv6pools-result (:copier common-lisp:nil))
   (ipv6pools common-lisp:nil :type (common-lisp:or ipv6pool-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-ipv6pools-result 'make-describe-ipv6pools-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-ipv6pools-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6Pools" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6pools)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-key-pairs-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (key-names common-lisp:nil :type (common-lisp:or key-name-string-list common-lisp:null))
   (key-pair-ids common-lisp:nil :type (common-lisp:or key-pair-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-key-pairs-request 'make-describe-key-pairs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-key-pairs-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "KeyNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-names)))
                       (aws-sdk/generator/shape::to-query-params "KeyPairIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-pair-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-key-pairs-result (:copier common-lisp:nil)) (key-pairs common-lisp:nil :type (common-lisp:or key-pair-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-key-pairs-result 'make-describe-key-pairs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-key-pairs-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KeyPairs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-pairs))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-launch-template-versions-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (launch-template-id common-lisp:nil :type (common-lisp:or launch-template-id common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (versions common-lisp:nil :type (common-lisp:or version-string-list common-lisp:null))
   (min-version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-launch-template-versions-request 'make-describe-launch-template-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-launch-template-versions-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "Versions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'versions)))
                       (aws-sdk/generator/shape::to-query-params "MinVersion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-version)))
                       (aws-sdk/generator/shape::to-query-params "MaxVersion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-version)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-launch-template-versions-result (:copier common-lisp:nil))
   (launch-template-versions common-lisp:nil :type (common-lisp:or launch-template-version-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-launch-template-versions-result 'make-describe-launch-template-versions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-launch-template-versions-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateVersions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-versions)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-launch-templates-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-launch-templates-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (launch-template-ids common-lisp:nil :type (common-lisp:or launch-template-id-string-list common-lisp:null))
   (launch-template-names common-lisp:nil :type (common-lisp:or launch-template-name-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-launch-templates-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-launch-templates-request 'make-describe-launch-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-launch-templates-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-ids)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-names)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-launch-templates-result (:copier common-lisp:nil))
   (launch-templates common-lisp:nil :type (common-lisp:or launch-template-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-launch-templates-result 'make-describe-launch-templates-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-launch-templates-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplates" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-templates)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-route-table-virtual-interface-group-associations-request (:copier common-lisp:nil))
   (local-gateway-route-table-virtual-interface-group-association-ids common-lisp:nil :type (common-lisp:or local-gateway-route-table-virtual-interface-group-association-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or local-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-route-table-virtual-interface-group-associations-request 'make-describe-local-gateway-route-table-virtual-interface-group-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-route-table-virtual-interface-group-associations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-virtual-interface-group-association-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-route-table-virtual-interface-group-associations-result (:copier common-lisp:nil))
   (local-gateway-route-table-virtual-interface-group-associations common-lisp:nil :type (common-lisp:or local-gateway-route-table-virtual-interface-group-association-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-route-table-virtual-interface-group-associations-result 'make-describe-local-gateway-route-table-virtual-interface-group-associations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-route-table-virtual-interface-group-associations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVirtualInterfaceGroupAssociations"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-virtual-interface-group-associations)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-route-table-vpc-associations-request (:copier common-lisp:nil))
   (local-gateway-route-table-vpc-association-ids common-lisp:nil :type (common-lisp:or local-gateway-route-table-vpc-association-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or local-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-route-table-vpc-associations-request 'make-describe-local-gateway-route-table-vpc-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-route-table-vpc-associations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVpcAssociationIds"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-vpc-association-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-route-table-vpc-associations-result (:copier common-lisp:nil))
   (local-gateway-route-table-vpc-associations common-lisp:nil :type (common-lisp:or local-gateway-route-table-vpc-association-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-route-table-vpc-associations-result 'make-describe-local-gateway-route-table-vpc-associations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-route-table-vpc-associations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVpcAssociations"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-vpc-associations)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-route-tables-request (:copier common-lisp:nil))
   (local-gateway-route-table-ids common-lisp:nil :type (common-lisp:or local-gateway-route-table-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or local-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-route-tables-request 'make-describe-local-gateway-route-tables-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-route-tables-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-route-tables-result (:copier common-lisp:nil))
   (local-gateway-route-tables common-lisp:nil :type (common-lisp:or local-gateway-route-table-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-route-tables-result 'make-describe-local-gateway-route-tables-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-route-tables-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTables" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-tables)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-virtual-interface-groups-request (:copier common-lisp:nil))
   (local-gateway-virtual-interface-group-ids common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-group-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or local-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-virtual-interface-groups-request 'make-describe-local-gateway-virtual-interface-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-virtual-interface-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-group-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-virtual-interface-groups-result (:copier common-lisp:nil))
   (local-gateway-virtual-interface-groups common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-group-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-virtual-interface-groups-result 'make-describe-local-gateway-virtual-interface-groups-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-virtual-interface-groups-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-groups)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-virtual-interfaces-request (:copier common-lisp:nil))
   (local-gateway-virtual-interface-ids common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or local-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-virtual-interfaces-request 'make-describe-local-gateway-virtual-interfaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-virtual-interfaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateway-virtual-interfaces-result (:copier common-lisp:nil))
   (local-gateway-virtual-interfaces common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateway-virtual-interfaces-result 'make-describe-local-gateway-virtual-interfaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateway-virtual-interfaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interfaces)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateways-request (:copier common-lisp:nil))
   (local-gateway-ids common-lisp:nil :type (common-lisp:or local-gateway-id-set common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or local-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateways-request 'make-describe-local-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateways-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGatewayIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-local-gateways-result (:copier common-lisp:nil))
   (local-gateways common-lisp:nil :type (common-lisp:or local-gateway-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-local-gateways-result 'make-describe-local-gateways-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-local-gateways-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGateways" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateways)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-moving-addresses-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-moving-addresses-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-moving-addresses-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ips common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-moving-addresses-request 'make-describe-moving-addresses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-moving-addresses-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "PublicIps" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ips))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-moving-addresses-result (:copier common-lisp:nil))
   (moving-address-statuses common-lisp:nil :type (common-lisp:or moving-address-status-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-moving-addresses-result 'make-describe-moving-addresses-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-moving-addresses-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MovingAddressStatuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'moving-address-statuses)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-nat-gateways-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-nat-gateways-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filter common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-nat-gateways-max-results common-lisp:null))
   (nat-gateway-ids common-lisp:nil :type (common-lisp:or nat-gateway-id-string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-nat-gateways-request 'make-describe-nat-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-nat-gateways-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filter)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NatGatewayIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-nat-gateways-result (:copier common-lisp:nil))
   (nat-gateways common-lisp:nil :type (common-lisp:or nat-gateway-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-nat-gateways-result 'make-describe-nat-gateways-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-nat-gateways-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NatGateways" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateways)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-network-acls-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-network-acls-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-acl-ids common-lisp:nil :type (common-lisp:or network-acl-id-string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-network-acls-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-acls-request 'make-describe-network-acls-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-acls-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-network-acls-result (:copier common-lisp:nil))
   (network-acls common-lisp:nil :type (common-lisp:or network-acl-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-acls-result 'make-describe-network-acls-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-acls-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkAcls" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acls)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-network-interface-attribute-request (:copier common-lisp:nil))
   (attribute common-lisp:nil :type (common-lisp:or network-interface-attribute common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-interface-attribute-request 'make-describe-network-interface-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-interface-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-network-interface-attribute-result (:copier common-lisp:nil))
   (attachment common-lisp:nil :type (common-lisp:or network-interface-attachment common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-dest-check common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-interface-attribute-result 'make-describe-network-interface-attribute-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-interface-attribute-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check))))))
(common-lisp:deftype describe-network-interface-permissions-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-network-interface-permissions-request (:copier common-lisp:nil))
   (network-interface-permission-ids common-lisp:nil :type (common-lisp:or network-interface-permission-id-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-network-interface-permissions-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-interface-permissions-request 'make-describe-network-interface-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-interface-permissions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NetworkInterfacePermissionIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-permission-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-network-interface-permissions-result (:copier common-lisp:nil))
   (network-interface-permissions common-lisp:nil :type (common-lisp:or network-interface-permission-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-interface-permissions-result 'make-describe-network-interface-permissions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-interface-permissions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NetworkInterfacePermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-permissions)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-network-interfaces-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-network-interfaces-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-interface-ids common-lisp:nil :type (common-lisp:or network-interface-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-network-interfaces-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-interfaces-request 'make-describe-network-interfaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-interfaces-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-network-interfaces-result (:copier common-lisp:nil))
   (network-interfaces common-lisp:nil :type (common-lisp:or network-interface-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-network-interfaces-result 'make-describe-network-interfaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-network-interfaces-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-placement-groups-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-names common-lisp:nil :type (common-lisp:or placement-group-string-list common-lisp:null))
   (group-ids common-lisp:nil :type (common-lisp:or placement-group-id-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-placement-groups-request 'make-describe-placement-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-placement-groups-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-names)))
                       (aws-sdk/generator/shape::to-query-params "GroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-placement-groups-result (:copier common-lisp:nil)) (placement-groups common-lisp:nil :type (common-lisp:or placement-group-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-placement-groups-result 'make-describe-placement-groups-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-placement-groups-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PlacementGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement-groups))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-prefix-lists-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (prefix-list-ids common-lisp:nil :type (common-lisp:or prefix-list-resource-id-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-prefix-lists-request 'make-describe-prefix-lists-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-prefix-lists-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "PrefixListIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix-list-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-prefix-lists-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (prefix-lists common-lisp:nil :type (common-lisp:or prefix-list-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-prefix-lists-result 'make-describe-prefix-lists-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-prefix-lists-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "PrefixLists" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix-lists))))))
(common-lisp:deftype describe-principal-id-format-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-principal-id-format-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (resources common-lisp:nil :type (common-lisp:or resource-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-principal-id-format-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-principal-id-format-request 'make-describe-principal-id-format-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-principal-id-format-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Resources" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resources)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-principal-id-format-result (:copier common-lisp:nil))
   (principals common-lisp:nil :type (common-lisp:or principal-id-format-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-principal-id-format-result 'make-describe-principal-id-format-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-principal-id-format-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Principals" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'principals)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-public-ipv4pools-request (:copier common-lisp:nil))
   (pool-ids common-lisp:nil :type (common-lisp:or public-ipv4pool-id-string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or pool-max-results common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-public-ipv4pools-request 'make-describe-public-ipv4pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-public-ipv4pools-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-public-ipv4pools-result (:copier common-lisp:nil))
   (public-ipv4pools common-lisp:nil :type (common-lisp:or public-ipv4pool-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-public-ipv4pools-result 'make-describe-public-ipv4pools-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-public-ipv4pools-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PublicIpv4Pools" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ipv4pools)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-regions-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (region-names common-lisp:nil :type (common-lisp:or region-name-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (all-regions common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-regions-request 'make-describe-regions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-regions-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "RegionNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'region-names)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "AllRegions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'all-regions))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-regions-result (:copier common-lisp:nil)) (regions common-lisp:nil :type (common-lisp:or region-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-regions-result 'make-describe-regions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-regions-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Regions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'regions))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-listings-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (reserved-instances-id common-lisp:nil :type (common-lisp:or reservation-id common-lisp:null))
   (reserved-instances-listing-id common-lisp:nil :type (common-lisp:or reserved-instances-listing-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-listings-request 'make-describe-reserved-instances-listings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-listings-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesListingId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-listing-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-listings-result (:copier common-lisp:nil)) (reserved-instances-listings common-lisp:nil :type (common-lisp:or reserved-instances-listing-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-listings-result 'make-describe-reserved-instances-listings-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-listings-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesListings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-listings))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-modifications-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (reserved-instances-modification-ids common-lisp:nil :type (common-lisp:or reserved-instances-modification-id-string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-modifications-request 'make-describe-reserved-instances-modifications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-modifications-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesModificationIds"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-modification-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-modifications-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reserved-instances-modifications common-lisp:nil :type (common-lisp:or reserved-instances-modification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-modifications-result 'make-describe-reserved-instances-modifications-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-modifications-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesModifications"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-modifications))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-offerings-request (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (include-marketplace common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (max-duration common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (max-instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (min-duration common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (offering-class common-lisp:nil :type (common-lisp:or offering-class-type common-lisp:null))
   (product-description common-lisp:nil :type (common-lisp:or riproduct-description common-lisp:null))
   (reserved-instances-offering-ids common-lisp:nil :type (common-lisp:or reserved-instances-offering-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (offering-type common-lisp:nil :type (common-lisp:or offering-type-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-offerings-request 'make-describe-reserved-instances-offerings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-offerings-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "IncludeMarketplace" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'include-marketplace)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "MaxDuration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-duration)))
                       (aws-sdk/generator/shape::to-query-params "MaxInstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-instance-count)))
                       (aws-sdk/generator/shape::to-query-params "MinDuration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-duration)))
                       (aws-sdk/generator/shape::to-query-params "OfferingClass" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-class)))
                       (aws-sdk/generator/shape::to-query-params "ProductDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-description)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesOfferingIds"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-offering-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-tenancy)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "OfferingType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-type))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-offerings-result (:copier common-lisp:nil))
   (reserved-instances-offerings common-lisp:nil :type (common-lisp:or reserved-instances-offering-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-offerings-result 'make-describe-reserved-instances-offerings-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-offerings-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesOfferings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-offerings)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (offering-class common-lisp:nil :type (common-lisp:or offering-class-type common-lisp:null))
   (reserved-instances-ids common-lisp:nil :type (common-lisp:or reserved-instances-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (offering-type common-lisp:nil :type (common-lisp:or offering-type-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-request 'make-describe-reserved-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "OfferingClass" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-class)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "OfferingType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-type))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-reserved-instances-result (:copier common-lisp:nil)) (reserved-instances common-lisp:nil :type (common-lisp:or reserved-instances-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-reserved-instances-result 'make-describe-reserved-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-reserved-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances))))))
(common-lisp:deftype describe-route-tables-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-route-tables-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (route-table-ids common-lisp:nil :type (common-lisp:or route-table-id-string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-route-tables-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-route-tables-request 'make-describe-route-tables-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-route-tables-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-route-tables-result (:copier common-lisp:nil))
   (route-tables common-lisp:nil :type (common-lisp:or route-table-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-route-tables-result 'make-describe-route-tables-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-route-tables-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "RouteTables" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-tables)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-scheduled-instance-availability-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-scheduled-instance-availability-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (first-slot-start-time-range (common-lisp:error ":first-slot-start-time-range is required") :type (common-lisp:or slot-date-time-range-request common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-scheduled-instance-availability-max-results common-lisp:null))
   (max-slot-duration-in-hours common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (min-slot-duration-in-hours common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (recurrence (common-lisp:error ":recurrence is required") :type (common-lisp:or scheduled-instance-recurrence-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-scheduled-instance-availability-request 'make-describe-scheduled-instance-availability-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-scheduled-instance-availability-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "FirstSlotStartTimeRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'first-slot-start-time-range)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "MaxSlotDurationInHours" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-slot-duration-in-hours)))
                       (aws-sdk/generator/shape::to-query-params "MinSlotDurationInHours" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-slot-duration-in-hours)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Recurrence" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'recurrence))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-scheduled-instance-availability-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (scheduled-instance-availability-set common-lisp:nil :type (common-lisp:or scheduled-instance-availability-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-scheduled-instance-availability-result 'make-describe-scheduled-instance-availability-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-scheduled-instance-availability-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "ScheduledInstanceAvailabilitySet"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scheduled-instance-availability-set))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-scheduled-instances-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (scheduled-instance-ids common-lisp:nil :type (common-lisp:or scheduled-instance-id-request-set common-lisp:null))
   (slot-start-time-range common-lisp:nil :type (common-lisp:or slot-start-time-range-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-scheduled-instances-request 'make-describe-scheduled-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-scheduled-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "ScheduledInstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scheduled-instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "SlotStartTimeRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'slot-start-time-range))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-scheduled-instances-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (scheduled-instance-set common-lisp:nil :type (common-lisp:or scheduled-instance-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-scheduled-instances-result 'make-describe-scheduled-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-scheduled-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "ScheduledInstanceSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scheduled-instance-set))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-security-group-references-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-id (common-lisp:error ":group-id is required") :type (common-lisp:or group-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-security-group-references-request 'make-describe-security-group-references-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-security-group-references-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-security-group-references-result (:copier common-lisp:nil)) (security-group-reference-set common-lisp:nil :type (common-lisp:or security-group-references common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-security-group-references-result 'make-describe-security-group-references-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-security-group-references-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SecurityGroupReferenceSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-reference-set))))))
(common-lisp:deftype describe-security-groups-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-security-groups-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (group-ids common-lisp:nil :type (common-lisp:or group-id-string-list common-lisp:null))
   (group-names common-lisp:nil :type (common-lisp:or group-name-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-security-groups-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-security-groups-request 'make-describe-security-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-security-groups-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "GroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ids)))
                       (aws-sdk/generator/shape::to-query-params "GroupNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-names)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-security-groups-result (:copier common-lisp:nil))
   (security-groups common-lisp:nil :type (common-lisp:or security-group-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-security-groups-result 'make-describe-security-groups-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-security-groups-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-snapshot-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or snapshot-attribute-name common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type (common-lisp:or snapshot-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-snapshot-attribute-request 'make-describe-snapshot-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-snapshot-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-snapshot-attribute-result (:copier common-lisp:nil))
   (create-volume-permissions common-lisp:nil :type (common-lisp:or create-volume-permission-list common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-snapshot-attribute-result 'make-describe-snapshot-attribute-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-snapshot-attribute-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CreateVolumePermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-volume-permissions)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-snapshots-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-ids common-lisp:nil :type (common-lisp:or owner-string-list common-lisp:null))
   (restorable-by-user-ids common-lisp:nil :type (common-lisp:or restorable-by-string-list common-lisp:null))
   (snapshot-ids common-lisp:nil :type (common-lisp:or snapshot-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-snapshots-request 'make-describe-snapshots-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-snapshots-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "OwnerIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-ids)))
                       (aws-sdk/generator/shape::to-query-params "RestorableByUserIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'restorable-by-user-ids)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-snapshots-result (:copier common-lisp:nil))
   (snapshots common-lisp:nil :type (common-lisp:or snapshot-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-snapshots-result 'make-describe-snapshots-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-snapshots-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Snapshots" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshots)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-datafeed-subscription-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-datafeed-subscription-request 'make-describe-spot-datafeed-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-datafeed-subscription-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-datafeed-subscription-result (:copier common-lisp:nil)) (spot-datafeed-subscription common-lisp:nil :type (common-lisp:or spot-datafeed-subscription common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-datafeed-subscription-result 'make-describe-spot-datafeed-subscription-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-datafeed-subscription-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SpotDatafeedSubscription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-datafeed-subscription))))))
(common-lisp:deftype describe-spot-fleet-instances-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-fleet-instances-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-spot-fleet-instances-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-fleet-request-id (common-lisp:error ":spot-fleet-request-id is required") :type (common-lisp:or spot-fleet-request-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-fleet-instances-request 'make-describe-spot-fleet-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-fleet-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-fleet-instances-response (:copier common-lisp:nil))
   (active-instances common-lisp:nil :type (common-lisp:or active-instance-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-fleet-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-fleet-instances-response 'make-describe-spot-fleet-instances-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-fleet-instances-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ActiveInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'active-instances)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id))))))
(common-lisp:deftype describe-spot-fleet-request-history-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-fleet-request-history-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (event-type common-lisp:nil :type (common-lisp:or event-type common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-spot-fleet-request-history-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-fleet-request-id (common-lisp:error ":spot-fleet-request-id is required") :type (common-lisp:or spot-fleet-request-id common-lisp:null))
   (start-time (common-lisp:error ":start-time is required") :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-fleet-request-history-request 'make-describe-spot-fleet-request-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-fleet-request-history-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EventType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-type)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-fleet-request-history-response (:copier common-lisp:nil))
   (history-records common-lisp:nil :type (common-lisp:or history-records common-lisp:null))
   (last-evaluated-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-fleet-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-fleet-request-history-response 'make-describe-spot-fleet-request-history-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-fleet-request-history-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HistoryRecords" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'history-records)))
                       (aws-sdk/generator/shape::to-query-params "LastEvaluatedTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'last-evaluated-time)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-fleet-requests-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-fleet-request-ids common-lisp:nil :type (common-lisp:or spot-fleet-request-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-fleet-requests-request 'make-describe-spot-fleet-requests-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-fleet-requests-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-fleet-requests-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-fleet-request-configs common-lisp:nil :type (common-lisp:or spot-fleet-request-config-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-fleet-requests-response 'make-describe-spot-fleet-requests-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-fleet-requests-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestConfigs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-configs))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-instance-requests-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (spot-instance-request-ids common-lisp:nil :type (common-lisp:or spot-instance-request-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-instance-requests-request 'make-describe-spot-instance-requests-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-instance-requests-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceRequestIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-request-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-instance-requests-result (:copier common-lisp:nil))
   (spot-instance-requests common-lisp:nil :type (common-lisp:or spot-instance-request-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-instance-requests-result 'make-describe-spot-instance-requests-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-instance-requests-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SpotInstanceRequests" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-requests)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-price-history-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instance-types common-lisp:nil :type (common-lisp:or instance-type-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-descriptions common-lisp:nil :type (common-lisp:or product-description-list common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-price-history-request 'make-describe-spot-price-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-price-history-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EndTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-time)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTypes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-types)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "ProductDescriptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-descriptions)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-spot-price-history-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-price-history common-lisp:nil :type (common-lisp:or spot-price-history-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-spot-price-history-result 'make-describe-spot-price-history-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-spot-price-history-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "SpotPriceHistory" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-price-history))))))
(common-lisp:deftype describe-stale-security-groups-max-results () 'common-lisp:integer)
(common-lisp:deftype describe-stale-security-groups-next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (describe-stale-security-groups-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-stale-security-groups-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or describe-stale-security-groups-next-token common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-stale-security-groups-request 'make-describe-stale-security-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-stale-security-groups-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-stale-security-groups-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stale-security-group-set common-lisp:nil :type (common-lisp:or stale-security-group-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-stale-security-groups-result 'make-describe-stale-security-groups-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-stale-security-groups-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "StaleSecurityGroupSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'stale-security-group-set))))))
(common-lisp:deftype describe-subnets-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-subnets-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (subnet-ids common-lisp:nil :type (common-lisp:or subnet-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-subnets-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-subnets-request 'make-describe-subnets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-subnets-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "SubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-subnets-result (:copier common-lisp:nil))
   (subnets common-lisp:nil :type (common-lisp:or subnet-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-subnets-result 'make-describe-subnets-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-subnets-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Subnets" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnets)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-tags-request 'make-describe-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-tags-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-description-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-tags-result 'make-describe-tags-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-tags-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-traffic-mirror-filters-request (:copier common-lisp:nil))
   (traffic-mirror-filter-ids common-lisp:nil :type (common-lisp:or traffic-mirror-filter-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or traffic-mirroring-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-traffic-mirror-filters-request 'make-describe-traffic-mirror-filters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-traffic-mirror-filters-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-traffic-mirror-filters-result (:copier common-lisp:nil))
   (traffic-mirror-filters common-lisp:nil :type (common-lisp:or traffic-mirror-filter-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-traffic-mirror-filters-result 'make-describe-traffic-mirror-filters-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-traffic-mirror-filters-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filters)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-traffic-mirror-sessions-request (:copier common-lisp:nil))
   (traffic-mirror-session-ids common-lisp:nil :type (common-lisp:or traffic-mirror-session-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or traffic-mirroring-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-traffic-mirror-sessions-request 'make-describe-traffic-mirror-sessions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-traffic-mirror-sessions-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSessionIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-session-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-traffic-mirror-sessions-result (:copier common-lisp:nil))
   (traffic-mirror-sessions common-lisp:nil :type (common-lisp:or traffic-mirror-session-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-traffic-mirror-sessions-result 'make-describe-traffic-mirror-sessions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-traffic-mirror-sessions-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSessions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-sessions)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-traffic-mirror-targets-request (:copier common-lisp:nil))
   (traffic-mirror-target-ids common-lisp:nil :type (common-lisp:or traffic-mirror-target-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or traffic-mirroring-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-traffic-mirror-targets-request 'make-describe-traffic-mirror-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-traffic-mirror-targets-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-traffic-mirror-targets-result (:copier common-lisp:nil))
   (traffic-mirror-targets common-lisp:nil :type (common-lisp:or traffic-mirror-target-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-traffic-mirror-targets-result 'make-describe-traffic-mirror-targets-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-traffic-mirror-targets-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargets" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-targets)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-attachments-request (:copier common-lisp:nil))
   (transit-gateway-attachment-ids common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-attachments-request 'make-describe-transit-gateway-attachments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-attachments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-attachments-result (:copier common-lisp:nil))
   (transit-gateway-attachments common-lisp:nil :type (common-lisp:or transit-gateway-attachment-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-attachments-result 'make-describe-transit-gateway-attachments-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-attachments-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachments)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-multicast-domains-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-ids common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-multicast-domains-request 'make-describe-transit-gateway-multicast-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-multicast-domains-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-multicast-domains-result (:copier common-lisp:nil))
   (transit-gateway-multicast-domains common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-multicast-domains-result 'make-describe-transit-gateway-multicast-domains-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-multicast-domains-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomains" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domains)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-peering-attachments-request (:copier common-lisp:nil))
   (transit-gateway-attachment-ids common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-peering-attachments-request 'make-describe-transit-gateway-peering-attachments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-peering-attachments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-peering-attachments-result (:copier common-lisp:nil))
   (transit-gateway-peering-attachments common-lisp:nil :type (common-lisp:or transit-gateway-peering-attachment-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-peering-attachments-result 'make-describe-transit-gateway-peering-attachments-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-peering-attachments-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayPeeringAttachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-peering-attachments)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-route-tables-request (:copier common-lisp:nil))
   (transit-gateway-route-table-ids common-lisp:nil :type (common-lisp:or transit-gateway-route-table-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-route-tables-request 'make-describe-transit-gateway-route-tables-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-route-tables-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-route-tables-result (:copier common-lisp:nil))
   (transit-gateway-route-tables common-lisp:nil :type (common-lisp:or transit-gateway-route-table-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-route-tables-result 'make-describe-transit-gateway-route-tables-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-route-tables-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTables" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-tables)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-vpc-attachments-request (:copier common-lisp:nil))
   (transit-gateway-attachment-ids common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-vpc-attachments-request 'make-describe-transit-gateway-vpc-attachments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-vpc-attachments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-ids)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateway-vpc-attachments-result (:copier common-lisp:nil))
   (transit-gateway-vpc-attachments common-lisp:nil :type (common-lisp:or transit-gateway-vpc-attachment-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateway-vpc-attachments-result 'make-describe-transit-gateway-vpc-attachments-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateway-vpc-attachments-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayVpcAttachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-vpc-attachments)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateways-request (:copier common-lisp:nil))
   (transit-gateway-ids common-lisp:nil :type (common-lisp:or transit-gateway-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateways-request 'make-describe-transit-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateways-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-transit-gateways-result (:copier common-lisp:nil))
   (transit-gateways common-lisp:nil :type (common-lisp:or transit-gateway-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-transit-gateways-result 'make-describe-transit-gateways-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-transit-gateways-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGateways" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateways)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volume-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or volume-attribute-name common-lisp:null))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volume-attribute-request 'make-describe-volume-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volume-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volume-attribute-result (:copier common-lisp:nil))
   (auto-enable-io common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volume-attribute-result 'make-describe-volume-attribute-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volume-attribute-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AutoEnableIO" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-enable-io)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volume-status-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-ids common-lisp:nil :type (common-lisp:or volume-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volume-status-request 'make-describe-volume-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volume-status-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "VolumeIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volume-status-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-statuses common-lisp:nil :type (common-lisp:or volume-status-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volume-status-result 'make-describe-volume-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volume-status-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "VolumeStatuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-statuses))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volumes-modifications-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (volume-ids common-lisp:nil :type (common-lisp:or volume-id-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volumes-modifications-request 'make-describe-volumes-modifications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volumes-modifications-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VolumeIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volumes-modifications-result (:copier common-lisp:nil))
   (volumes-modifications common-lisp:nil :type (common-lisp:or volume-modification-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volumes-modifications-result 'make-describe-volumes-modifications-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volumes-modifications-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VolumesModifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volumes-modifications)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volumes-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (volume-ids common-lisp:nil :type (common-lisp:or volume-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volumes-request 'make-describe-volumes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volumes-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "VolumeIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volumes-result (:copier common-lisp:nil))
   (volumes common-lisp:nil :type (common-lisp:or volume-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-volumes-result 'make-describe-volumes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-volumes-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Volumes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volumes)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or vpc-attribute-name common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-attribute-request 'make-describe-vpc-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-attribute-result (:copier common-lisp:nil))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enable-dns-hostnames common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (enable-dns-support common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-attribute-result 'make-describe-vpc-attribute-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-attribute-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "EnableDnsHostnames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enable-dns-hostnames)))
                       (aws-sdk/generator/shape::to-query-params "EnableDnsSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enable-dns-support))))))
(common-lisp:deftype describe-vpc-classic-link-dns-support-max-results () 'common-lisp:integer)
(common-lisp:deftype describe-vpc-classic-link-dns-support-next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-classic-link-dns-support-request (:copier common-lisp:nil))
   (max-results common-lisp:nil :type (common-lisp:or describe-vpc-classic-link-dns-support-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or describe-vpc-classic-link-dns-support-next-token common-lisp:null))
   (vpc-ids common-lisp:nil :type (common-lisp:or vpc-classic-link-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-classic-link-dns-support-request 'make-describe-vpc-classic-link-dns-support-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-classic-link-dns-support-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "VpcIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-classic-link-dns-support-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or describe-vpc-classic-link-dns-support-next-token common-lisp:null))
   (vpcs common-lisp:nil :type (common-lisp:or classic-link-dns-support-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-classic-link-dns-support-result 'make-describe-vpc-classic-link-dns-support-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-classic-link-dns-support-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "Vpcs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpcs))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-classic-link-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-ids common-lisp:nil :type (common-lisp:or vpc-classic-link-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-classic-link-request 'make-describe-vpc-classic-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-classic-link-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-classic-link-result (:copier common-lisp:nil)) (vpcs common-lisp:nil :type (common-lisp:or vpc-classic-link-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-classic-link-result 'make-describe-vpc-classic-link-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-classic-link-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Vpcs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpcs))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-connection-notifications-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (connection-notification-id common-lisp:nil :type (common-lisp:or connection-notification-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-connection-notifications-request 'make-describe-vpc-endpoint-connection-notifications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-connection-notifications-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-id)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-connection-notifications-result (:copier common-lisp:nil))
   (connection-notification-set common-lisp:nil :type (common-lisp:or connection-notification-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-connection-notifications-result 'make-describe-vpc-endpoint-connection-notifications-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-connection-notifications-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConnectionNotificationSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-set)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-connections-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-connections-request 'make-describe-vpc-endpoint-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-connections-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-connections-result (:copier common-lisp:nil))
   (vpc-endpoint-connections common-lisp:nil :type (common-lisp:or vpc-endpoint-connection-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-connections-result 'make-describe-vpc-endpoint-connections-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-connections-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcEndpointConnections" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-connections)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-service-configurations-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-service-id-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-service-configurations-request 'make-describe-vpc-endpoint-service-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-service-configurations-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-service-configurations-result (:copier common-lisp:nil))
   (service-configurations common-lisp:nil :type (common-lisp:or service-configuration-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-service-configurations-result 'make-describe-vpc-endpoint-service-configurations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-service-configurations-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ServiceConfigurations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-configurations)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-service-permissions-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-id (common-lisp:error ":service-id is required") :type (common-lisp:or vpc-endpoint-service-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-service-permissions-request 'make-describe-vpc-endpoint-service-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-service-permissions-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-service-permissions-result (:copier common-lisp:nil))
   (allowed-principals common-lisp:nil :type (common-lisp:or allowed-principal-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-service-permissions-result 'make-describe-vpc-endpoint-service-permissions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-service-permissions-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllowedPrincipals" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allowed-principals)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-services-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-names common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-services-request 'make-describe-vpc-endpoint-services-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-services-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-names)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoint-services-result (:copier common-lisp:nil))
   (service-names common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (service-details common-lisp:nil :type (common-lisp:or service-detail-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoint-services-result 'make-describe-vpc-endpoint-services-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoint-services-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ServiceNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-names)))
                       (aws-sdk/generator/shape::to-query-params "ServiceDetails" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-details)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoints-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-endpoint-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-id-list common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoints-request 'make-describe-vpc-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoints-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-ids)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-endpoints-result (:copier common-lisp:nil))
   (vpc-endpoints common-lisp:nil :type (common-lisp:or vpc-endpoint-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-endpoints-result 'make-describe-vpc-endpoints-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-endpoints-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcEndpoints" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoints)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-vpc-peering-connections-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-peering-connections-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-peering-connection-ids common-lisp:nil :type (common-lisp:or vpc-peering-connection-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-vpc-peering-connections-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-peering-connections-request 'make-describe-vpc-peering-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-peering-connections-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-ids)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpc-peering-connections-result (:copier common-lisp:nil))
   (vpc-peering-connections common-lisp:nil :type (common-lisp:or vpc-peering-connection-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpc-peering-connections-result 'make-describe-vpc-peering-connections-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpc-peering-connections-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcPeeringConnections" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connections)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype describe-vpcs-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (describe-vpcs-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (vpc-ids common-lisp:nil :type (common-lisp:or vpc-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or describe-vpcs-max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpcs-request 'make-describe-vpcs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpcs-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "VpcIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpcs-result (:copier common-lisp:nil)) (vpcs common-lisp:nil :type (common-lisp:or vpc-list common-lisp:null)) (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpcs-result 'make-describe-vpcs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpcs-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Vpcs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpcs)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpn-connections-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (vpn-connection-ids common-lisp:nil :type (common-lisp:or vpn-connection-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpn-connections-request 'make-describe-vpn-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpn-connections-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "VpnConnectionIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpn-connections-result (:copier common-lisp:nil)) (vpn-connections common-lisp:nil :type (common-lisp:or vpn-connection-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpn-connections-result 'make-describe-vpn-connections-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpn-connections-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnections" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connections))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpn-gateways-request (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (vpn-gateway-ids common-lisp:nil :type (common-lisp:or vpn-gateway-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpn-gateways-request 'make-describe-vpn-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpn-gateways-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "VpnGatewayIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vpn-gateways-result (:copier common-lisp:nil)) (vpn-gateways common-lisp:nil :type (common-lisp:or vpn-gateway-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'describe-vpn-gateways-result 'make-describe-vpn-gateways-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape describe-vpn-gateways-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnGateways" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateways))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-classic-link-vpc-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detach-classic-link-vpc-request 'make-detach-classic-link-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape detach-classic-link-vpc-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-classic-link-vpc-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detach-classic-link-vpc-result 'make-detach-classic-link-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape detach-classic-link-vpc-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-internet-gateway-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (internet-gateway-id (common-lisp:error ":internet-gateway-id is required") :type (common-lisp:or internet-gateway-id common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detach-internet-gateway-request 'make-detach-internet-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape detach-internet-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InternetGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'internet-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-network-interface-request (:copier common-lisp:nil))
   (attachment-id (common-lisp:error ":attachment-id is required") :type (common-lisp:or network-interface-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (force common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detach-network-interface-request 'make-detach-network-interface-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape detach-network-interface-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Force" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'force))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-volume-request (:copier common-lisp:nil))
   (device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (force common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detach-volume-request 'make-detach-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape detach-volume-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Device" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device)))
                       (aws-sdk/generator/shape::to-query-params "Force" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'force)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-vpn-gateway-request (:copier common-lisp:nil))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (vpn-gateway-id (common-lisp:error ":vpn-gateway-id is required") :type (common-lisp:or vpn-gateway-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detach-vpn-gateway-request 'make-detach-vpn-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape detach-vpn-gateway-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "VpnGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:deftype device-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (dhcp-configuration (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (values common-lisp:nil :type (common-lisp:or dhcp-configuration-value-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dhcp-configuration 'make-dhcp-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape dhcp-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key)))
                       (aws-sdk/generator/shape::to-query-params "Values" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'values))))))
(common-lisp:progn
 (common-lisp:deftype dhcp-configuration-list () '(trivial-types:proper-list dhcp-configuration))
 (common-lisp:defun |make-dhcp-configuration-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list dhcp-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype dhcp-configuration-value-list () '(trivial-types:proper-list attribute-value))
 (common-lisp:defun |make-dhcp-configuration-value-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (dhcp-options (:copier common-lisp:nil))
   (dhcp-configurations common-lisp:nil :type (common-lisp:or dhcp-configuration-list common-lisp:null))
   (dhcp-options-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dhcp-options 'make-dhcp-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape dhcp-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DhcpConfigurations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-configurations)))
                       (aws-sdk/generator/shape::to-query-params "DhcpOptionsId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-options-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype dhcp-options-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dhcp-options-id-string-list () '(trivial-types:proper-list dhcp-options-id))
 (common-lisp:defun |make-dhcp-options-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list dhcp-options-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype dhcp-options-list () '(trivial-types:proper-list dhcp-options))
 (common-lisp:defun |make-dhcp-options-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list dhcp-options))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (directory-service-authentication (:copier common-lisp:nil)) (directory-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'directory-service-authentication 'make-directory-service-authentication))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape directory-service-authentication))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DirectoryId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'directory-id))))))
(common-lisp:progn
 (common-lisp:defstruct (directory-service-authentication-request (:copier common-lisp:nil)) (directory-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'directory-service-authentication-request 'make-directory-service-authentication-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape directory-service-authentication-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DirectoryId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'directory-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-ebs-encryption-by-default-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-ebs-encryption-by-default-request 'make-disable-ebs-encryption-by-default-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-ebs-encryption-by-default-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-ebs-encryption-by-default-result (:copier common-lisp:nil)) (ebs-encryption-by-default common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-ebs-encryption-by-default-result 'make-disable-ebs-encryption-by-default-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-ebs-encryption-by-default-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EbsEncryptionByDefault" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-encryption-by-default))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-fast-snapshot-restore-error-item (:copier common-lisp:nil))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fast-snapshot-restore-state-errors common-lisp:nil :type (common-lisp:or disable-fast-snapshot-restore-state-error-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-fast-snapshot-restore-error-item 'make-disable-fast-snapshot-restore-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-fast-snapshot-restore-error-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "FastSnapshotRestoreStateErrors"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fast-snapshot-restore-state-errors))))))
(common-lisp:progn
 (common-lisp:deftype disable-fast-snapshot-restore-error-set () '(trivial-types:proper-list disable-fast-snapshot-restore-error-item))
 (common-lisp:defun |make-disable-fast-snapshot-restore-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list disable-fast-snapshot-restore-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (disable-fast-snapshot-restore-state-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-fast-snapshot-restore-state-error 'make-disable-fast-snapshot-restore-state-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-fast-snapshot-restore-state-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-fast-snapshot-restore-state-error-item (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or disable-fast-snapshot-restore-state-error common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-fast-snapshot-restore-state-error-item 'make-disable-fast-snapshot-restore-state-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-fast-snapshot-restore-state-error-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Error" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error))))))
(common-lisp:progn
 (common-lisp:deftype disable-fast-snapshot-restore-state-error-set () '(trivial-types:proper-list disable-fast-snapshot-restore-state-error-item))
 (common-lisp:defun |make-disable-fast-snapshot-restore-state-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list disable-fast-snapshot-restore-state-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (disable-fast-snapshot-restore-success-item (:copier common-lisp:nil))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or fast-snapshot-restore-state-code common-lisp:null))
   (state-transition-reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-alias common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enabling-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (optimizing-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (enabled-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (disabling-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (disabled-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-fast-snapshot-restore-success-item 'make-disable-fast-snapshot-restore-success-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-fast-snapshot-restore-success-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StateTransitionReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state-transition-reason)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerAlias" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-alias)))
                       (aws-sdk/generator/shape::to-query-params "EnablingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabling-time)))
                       (aws-sdk/generator/shape::to-query-params "OptimizingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'optimizing-time)))
                       (aws-sdk/generator/shape::to-query-params "EnabledTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled-time)))
                       (aws-sdk/generator/shape::to-query-params "DisablingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disabling-time)))
                       (aws-sdk/generator/shape::to-query-params "DisabledTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disabled-time))))))
(common-lisp:progn
 (common-lisp:deftype disable-fast-snapshot-restore-success-set () '(trivial-types:proper-list disable-fast-snapshot-restore-success-item))
 (common-lisp:defun |make-disable-fast-snapshot-restore-success-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list disable-fast-snapshot-restore-success-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (disable-fast-snapshot-restores-request (:copier common-lisp:nil))
   (availability-zones (common-lisp:error ":availability-zones is required") :type (common-lisp:or availability-zone-string-list common-lisp:null))
   (source-snapshot-ids (common-lisp:error ":source-snapshot-ids is required") :type (common-lisp:or snapshot-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-fast-snapshot-restores-request 'make-disable-fast-snapshot-restores-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-fast-snapshot-restores-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZones" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zones)))
                       (aws-sdk/generator/shape::to-query-params "SourceSnapshotIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-snapshot-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-fast-snapshot-restores-result (:copier common-lisp:nil))
   (successful common-lisp:nil :type (common-lisp:or disable-fast-snapshot-restore-success-set common-lisp:null))
   (unsuccessful common-lisp:nil :type (common-lisp:or disable-fast-snapshot-restore-error-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-fast-snapshot-restores-result 'make-disable-fast-snapshot-restores-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-fast-snapshot-restores-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Successful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful)))
                       (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-transit-gateway-route-table-propagation-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-transit-gateway-route-table-propagation-request 'make-disable-transit-gateway-route-table-propagation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-transit-gateway-route-table-propagation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-transit-gateway-route-table-propagation-result (:copier common-lisp:nil)) (propagation common-lisp:nil :type (common-lisp:or transit-gateway-propagation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-transit-gateway-route-table-propagation-result 'make-disable-transit-gateway-route-table-propagation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-transit-gateway-route-table-propagation-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Propagation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'propagation))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-vgw-route-propagation-request (:copier common-lisp:nil))
   (gateway-id (common-lisp:error ":gateway-id is required") :type (common-lisp:or vpn-gateway-id common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-vgw-route-propagation-request 'make-disable-vgw-route-propagation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-vgw-route-propagation-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-vpc-classic-link-dns-support-request (:copier common-lisp:nil)) (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-vpc-classic-link-dns-support-request 'make-disable-vpc-classic-link-dns-support-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-vpc-classic-link-dns-support-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-vpc-classic-link-dns-support-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-vpc-classic-link-dns-support-result 'make-disable-vpc-classic-link-dns-support-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-vpc-classic-link-dns-support-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-vpc-classic-link-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-vpc-classic-link-request 'make-disable-vpc-classic-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-vpc-classic-link-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-vpc-classic-link-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disable-vpc-classic-link-result 'make-disable-vpc-classic-link-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disable-vpc-classic-link-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-address-request (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or elastic-ip-association-id common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-address-request 'make-disassociate-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-address-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-client-vpn-target-network-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or client-vpn-association-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-client-vpn-target-network-request 'make-disassociate-client-vpn-target-network-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-client-vpn-target-network-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-client-vpn-target-network-result (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or association-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-client-vpn-target-network-result 'make-disassociate-client-vpn-target-network-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-client-vpn-target-network-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-iam-instance-profile-request (:copier common-lisp:nil))
   (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or iam-instance-profile-association-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-iam-instance-profile-request 'make-disassociate-iam-instance-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-iam-instance-profile-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-iam-instance-profile-result (:copier common-lisp:nil)) (iam-instance-profile-association common-lisp:nil :type (common-lisp:or iam-instance-profile-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-iam-instance-profile-result 'make-disassociate-iam-instance-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-iam-instance-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamInstanceProfileAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile-association))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-route-table-request (:copier common-lisp:nil))
   (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or route-table-association-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-route-table-request 'make-disassociate-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-route-table-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-subnet-cidr-block-request (:copier common-lisp:nil))
   (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or subnet-cidr-association-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-subnet-cidr-block-request 'make-disassociate-subnet-cidr-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-subnet-cidr-block-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-subnet-cidr-block-result (:copier common-lisp:nil))
   (ipv6cidr-block-association common-lisp:nil :type (common-lisp:or subnet-ipv6cidr-block-association common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-subnet-cidr-block-result 'make-disassociate-subnet-cidr-block-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-subnet-cidr-block-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-association)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-transit-gateway-multicast-domain-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (subnet-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-transit-gateway-multicast-domain-request 'make-disassociate-transit-gateway-multicast-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-transit-gateway-multicast-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "SubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-transit-gateway-multicast-domain-result (:copier common-lisp:nil)) (associations common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-associations common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-transit-gateway-multicast-domain-result 'make-disassociate-transit-gateway-multicast-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-transit-gateway-multicast-domain-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Associations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associations))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-transit-gateway-route-table-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-transit-gateway-route-table-request 'make-disassociate-transit-gateway-route-table-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-transit-gateway-route-table-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-transit-gateway-route-table-result (:copier common-lisp:nil)) (association common-lisp:nil :type (common-lisp:or transit-gateway-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-transit-gateway-route-table-result 'make-disassociate-transit-gateway-route-table-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-transit-gateway-route-table-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Association" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-vpc-cidr-block-request (:copier common-lisp:nil)) (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or vpc-cidr-association-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-vpc-cidr-block-request 'make-disassociate-vpc-cidr-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-vpc-cidr-block-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id))))))
(common-lisp:progn
 (common-lisp:defstruct (disassociate-vpc-cidr-block-result (:copier common-lisp:nil))
   (ipv6cidr-block-association common-lisp:nil :type (common-lisp:or vpc-ipv6cidr-block-association common-lisp:null))
   (cidr-block-association common-lisp:nil :type (common-lisp:or vpc-cidr-block-association common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disassociate-vpc-cidr-block-result 'make-disassociate-vpc-cidr-block-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disassociate-vpc-cidr-block-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-association)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlockAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block-association)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:deftype disk-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (disk-image (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image common-lisp:nil :type (common-lisp:or disk-image-detail common-lisp:null))
   (volume common-lisp:nil :type (common-lisp:or volume-detail common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk-image 'make-disk-image))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disk-image))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Image" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image)))
                       (aws-sdk/generator/shape::to-query-params "Volume" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume))))))
(common-lisp:progn
 (common-lisp:defstruct (disk-image-description (:copier common-lisp:nil))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or disk-image-format common-lisp:null))
   (import-manifest-url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk-image-description 'make-disk-image-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disk-image-description))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Checksum" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'checksum)))
                       (aws-sdk/generator/shape::to-query-params "Format" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'format)))
                       (aws-sdk/generator/shape::to-query-params "ImportManifestUrl" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-manifest-url)))
                       (aws-sdk/generator/shape::to-query-params "Size" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size))))))
(common-lisp:progn
 (common-lisp:defstruct (disk-image-detail (:copier common-lisp:nil))
   (bytes (common-lisp:error ":bytes is required") :type (common-lisp:or long common-lisp:null))
   (format (common-lisp:error ":format is required") :type (common-lisp:or disk-image-format common-lisp:null))
   (import-manifest-url (common-lisp:error ":import-manifest-url is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk-image-detail 'make-disk-image-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disk-image-detail))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Bytes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bytes)))
                       (aws-sdk/generator/shape::to-query-params "Format" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'format)))
                       (aws-sdk/generator/shape::to-query-params "ImportManifestUrl" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-manifest-url))))))
(common-lisp:deftype disk-image-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype disk-image-list () '(trivial-types:proper-list disk-image))
 (common-lisp:defun |make-disk-image-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list disk-image))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (disk-image-volume-description (:copier common-lisp:nil)) (id common-lisp:nil :type (common-lisp:or string common-lisp:null)) (size common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk-image-volume-description 'make-disk-image-volume-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disk-image-volume-description))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Id" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'id)))
                       (aws-sdk/generator/shape::to-query-params "Size" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size))))))
(common-lisp:progn
 (common-lisp:defstruct (disk-info (:copier common-lisp:nil))
   (size-in-gb common-lisp:nil :type (common-lisp:or disk-size common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or disk-count common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or disk-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk-info 'make-disk-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape disk-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SizeInGB" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size-in-gb)))
                       (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type))))))
(common-lisp:progn
 (common-lisp:deftype disk-info-list () '(trivial-types:proper-list disk-info))
 (common-lisp:defun |make-disk-info-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list disk-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype disk-size () 'common-lisp:integer)
(common-lisp:deftype disk-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (dns-entry (:copier common-lisp:nil)) (dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null)) (hosted-zone-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dns-entry 'make-dns-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape dns-entry))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-name)))
                       (aws-sdk/generator/shape::to-query-params "HostedZoneId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hosted-zone-id))))))
(common-lisp:progn
 (common-lisp:deftype dns-entry-set () '(trivial-types:proper-list dns-entry))
 (common-lisp:defun |make-dns-entry-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list dns-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dns-name-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (dns-servers-options-modify-structure (:copier common-lisp:nil))
   (custom-dns-servers common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dns-servers-options-modify-structure 'make-dns-servers-options-modify-structure))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape dns-servers-options-modify-structure))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CustomDnsServers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'custom-dns-servers)))
                       (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled))))))
(common-lisp:deftype dns-support-value () 'common-lisp:string)
(common-lisp:deftype domain-type () 'common-lisp:string)
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (ebs-block-device (:copier common-lisp:nil))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebs-block-device 'make-ebs-block-device))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ebs-block-device))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Iops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iops)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-size)))
                       (aws-sdk/generator/shape::to-query-params "VolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-type)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted))))))
(common-lisp:deftype ebs-encryption-support () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (ebs-info (:copier common-lisp:nil))
   (ebs-optimized-support common-lisp:nil :type (common-lisp:or ebs-optimized-support common-lisp:null))
   (encryption-support common-lisp:nil :type (common-lisp:or ebs-encryption-support common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebs-info 'make-ebs-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ebs-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EbsOptimizedSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized-support)))
                       (aws-sdk/generator/shape::to-query-params "EncryptionSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encryption-support))))))
(common-lisp:progn
 (common-lisp:defstruct (ebs-instance-block-device (:copier common-lisp:nil))
   (attach-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or attachment-status common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebs-instance-block-device 'make-ebs-instance-block-device))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ebs-instance-block-device))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttachTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attach-time)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id))))))
(common-lisp:progn
 (common-lisp:defstruct (ebs-instance-block-device-specification (:copier common-lisp:nil))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or volume-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebs-instance-block-device-specification 'make-ebs-instance-block-device-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ebs-instance-block-device-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id))))))
(common-lisp:deftype ebs-optimized-support () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (egress-only-internet-gateway (:copier common-lisp:nil))
   (attachments common-lisp:nil :type (common-lisp:or internet-gateway-attachment-list common-lisp:null))
   (egress-only-internet-gateway-id common-lisp:nil :type (common-lisp:or egress-only-internet-gateway-id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'egress-only-internet-gateway 'make-egress-only-internet-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape egress-only-internet-gateway))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachments)))
                       (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGatewayId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype egress-only-internet-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype egress-only-internet-gateway-id-list () '(trivial-types:proper-list egress-only-internet-gateway-id))
 (common-lisp:defun |make-egress-only-internet-gateway-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list egress-only-internet-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype egress-only-internet-gateway-list () '(trivial-types:proper-list egress-only-internet-gateway))
 (common-lisp:defun |make-egress-only-internet-gateway-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list egress-only-internet-gateway))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (elastic-gpu-association (:copier common-lisp:nil))
   (elastic-gpu-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-gpu-association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-gpu-association-state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-gpu-association-time common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-gpu-association 'make-elastic-gpu-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape elastic-gpu-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ElasticGpuId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-id)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuAssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-association-id)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuAssociationState"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-association-state)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuAssociationTime"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-association-time))))))
(common-lisp:progn
 (common-lisp:deftype elastic-gpu-association-list () '(trivial-types:proper-list elastic-gpu-association))
 (common-lisp:defun |make-elastic-gpu-association-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-gpu-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (elastic-gpu-health (:copier common-lisp:nil)) (status common-lisp:nil :type (common-lisp:or elastic-gpu-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-gpu-health 'make-elastic-gpu-health))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape elastic-gpu-health))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:deftype elastic-gpu-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype elastic-gpu-id-set () '(trivial-types:proper-list elastic-gpu-id))
 (common-lisp:defun |make-elastic-gpu-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-gpu-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype elastic-gpu-set () '(trivial-types:proper-list elastic-gpus))
 (common-lisp:defun |make-elastic-gpu-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-gpus))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (elastic-gpu-specification (:copier common-lisp:nil)) (type (common-lisp:error ":type is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-gpu-specification 'make-elastic-gpu-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape elastic-gpu-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type))))))
(common-lisp:progn
 (common-lisp:deftype elastic-gpu-specification-list () '(trivial-types:proper-list elastic-gpu-specification))
 (common-lisp:defun |make-elastic-gpu-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-gpu-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (elastic-gpu-specification-response (:copier common-lisp:nil)) (type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-gpu-specification-response 'make-elastic-gpu-specification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape elastic-gpu-specification-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type))))))
(common-lisp:progn
 (common-lisp:deftype elastic-gpu-specification-response-list () '(trivial-types:proper-list elastic-gpu-specification-response))
 (common-lisp:defun |make-elastic-gpu-specification-response-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-gpu-specification-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype elastic-gpu-specifications () '(trivial-types:proper-list elastic-gpu-specification))
 (common-lisp:defun |make-elastic-gpu-specifications| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-gpu-specification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype elastic-gpu-state () 'common-lisp:string)
(common-lisp:deftype elastic-gpu-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (elastic-gpus (:copier common-lisp:nil))
   (elastic-gpu-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-gpu-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-gpu-health common-lisp:nil :type (common-lisp:or elastic-gpu-health common-lisp:null))
   (elastic-gpu-state common-lisp:nil :type (common-lisp:or elastic-gpu-state common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-gpus 'make-elastic-gpus))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape elastic-gpus))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ElasticGpuId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-type)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuHealth" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-health)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-state)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (elastic-inference-accelerator (:copier common-lisp:nil))
   (type (common-lisp:error ":type is required") :type (common-lisp:or string common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or elastic-inference-accelerator-count common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-inference-accelerator 'make-elastic-inference-accelerator))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape elastic-inference-accelerator))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count))))))
(common-lisp:progn
 (common-lisp:defstruct (elastic-inference-accelerator-association (:copier common-lisp:nil))
   (elastic-inference-accelerator-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-inference-accelerator-association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-inference-accelerator-association-state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-inference-accelerator-association-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-inference-accelerator-association 'make-elastic-inference-accelerator-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape elastic-inference-accelerator-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticInferenceAcceleratorArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerator-arn)))
    (aws-sdk/generator/shape::to-query-params "ElasticInferenceAcceleratorAssociationId"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerator-association-id)))
    (aws-sdk/generator/shape::to-query-params "ElasticInferenceAcceleratorAssociationState"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerator-association-state)))
    (aws-sdk/generator/shape::to-query-params "ElasticInferenceAcceleratorAssociationTime"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerator-association-time))))))
(common-lisp:progn
 (common-lisp:deftype elastic-inference-accelerator-association-list () '(trivial-types:proper-list elastic-inference-accelerator-association))
 (common-lisp:defun |make-elastic-inference-accelerator-association-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-inference-accelerator-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype elastic-inference-accelerator-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype elastic-inference-accelerators () '(trivial-types:proper-list elastic-inference-accelerator))
 (common-lisp:defun |make-elastic-inference-accelerators| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list elastic-inference-accelerator))
   aws-sdk/generator/shape::members))
(common-lisp:deftype elastic-ip-association-id () 'common-lisp:string)
(common-lisp:deftype ena-support () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (enable-ebs-encryption-by-default-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-ebs-encryption-by-default-request 'make-enable-ebs-encryption-by-default-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-ebs-encryption-by-default-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-ebs-encryption-by-default-result (:copier common-lisp:nil)) (ebs-encryption-by-default common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-ebs-encryption-by-default-result 'make-enable-ebs-encryption-by-default-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-ebs-encryption-by-default-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EbsEncryptionByDefault" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-encryption-by-default))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-fast-snapshot-restore-error-item (:copier common-lisp:nil))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fast-snapshot-restore-state-errors common-lisp:nil :type (common-lisp:or enable-fast-snapshot-restore-state-error-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-fast-snapshot-restore-error-item 'make-enable-fast-snapshot-restore-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-fast-snapshot-restore-error-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "FastSnapshotRestoreStateErrors"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fast-snapshot-restore-state-errors))))))
(common-lisp:progn
 (common-lisp:deftype enable-fast-snapshot-restore-error-set () '(trivial-types:proper-list enable-fast-snapshot-restore-error-item))
 (common-lisp:defun |make-enable-fast-snapshot-restore-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list enable-fast-snapshot-restore-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (enable-fast-snapshot-restore-state-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-fast-snapshot-restore-state-error 'make-enable-fast-snapshot-restore-state-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-fast-snapshot-restore-state-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-fast-snapshot-restore-state-error-item (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or enable-fast-snapshot-restore-state-error common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-fast-snapshot-restore-state-error-item 'make-enable-fast-snapshot-restore-state-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-fast-snapshot-restore-state-error-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Error" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error))))))
(common-lisp:progn
 (common-lisp:deftype enable-fast-snapshot-restore-state-error-set () '(trivial-types:proper-list enable-fast-snapshot-restore-state-error-item))
 (common-lisp:defun |make-enable-fast-snapshot-restore-state-error-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list enable-fast-snapshot-restore-state-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (enable-fast-snapshot-restore-success-item (:copier common-lisp:nil))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or fast-snapshot-restore-state-code common-lisp:null))
   (state-transition-reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-alias common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enabling-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (optimizing-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (enabled-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (disabling-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (disabled-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-fast-snapshot-restore-success-item 'make-enable-fast-snapshot-restore-success-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-fast-snapshot-restore-success-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StateTransitionReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state-transition-reason)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerAlias" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-alias)))
                       (aws-sdk/generator/shape::to-query-params "EnablingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabling-time)))
                       (aws-sdk/generator/shape::to-query-params "OptimizingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'optimizing-time)))
                       (aws-sdk/generator/shape::to-query-params "EnabledTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled-time)))
                       (aws-sdk/generator/shape::to-query-params "DisablingTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disabling-time)))
                       (aws-sdk/generator/shape::to-query-params "DisabledTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disabled-time))))))
(common-lisp:progn
 (common-lisp:deftype enable-fast-snapshot-restore-success-set () '(trivial-types:proper-list enable-fast-snapshot-restore-success-item))
 (common-lisp:defun |make-enable-fast-snapshot-restore-success-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list enable-fast-snapshot-restore-success-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (enable-fast-snapshot-restores-request (:copier common-lisp:nil))
   (availability-zones (common-lisp:error ":availability-zones is required") :type (common-lisp:or availability-zone-string-list common-lisp:null))
   (source-snapshot-ids (common-lisp:error ":source-snapshot-ids is required") :type (common-lisp:or snapshot-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-fast-snapshot-restores-request 'make-enable-fast-snapshot-restores-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-fast-snapshot-restores-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZones" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zones)))
                       (aws-sdk/generator/shape::to-query-params "SourceSnapshotIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-snapshot-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-fast-snapshot-restores-result (:copier common-lisp:nil))
   (successful common-lisp:nil :type (common-lisp:or enable-fast-snapshot-restore-success-set common-lisp:null))
   (unsuccessful common-lisp:nil :type (common-lisp:or enable-fast-snapshot-restore-error-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-fast-snapshot-restores-result 'make-enable-fast-snapshot-restores-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-fast-snapshot-restores-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Successful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful)))
                       (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-transit-gateway-route-table-propagation-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-transit-gateway-route-table-propagation-request 'make-enable-transit-gateway-route-table-propagation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-transit-gateway-route-table-propagation-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-transit-gateway-route-table-propagation-result (:copier common-lisp:nil)) (propagation common-lisp:nil :type (common-lisp:or transit-gateway-propagation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-transit-gateway-route-table-propagation-result 'make-enable-transit-gateway-route-table-propagation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-transit-gateway-route-table-propagation-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Propagation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'propagation))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-vgw-route-propagation-request (:copier common-lisp:nil))
   (gateway-id (common-lisp:error ":gateway-id is required") :type (common-lisp:or vpn-gateway-id common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-vgw-route-propagation-request 'make-enable-vgw-route-propagation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-vgw-route-propagation-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-volume-iorequest (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-volume-iorequest 'make-enable-volume-iorequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-volume-iorequest))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-vpc-classic-link-dns-support-request (:copier common-lisp:nil)) (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-vpc-classic-link-dns-support-request 'make-enable-vpc-classic-link-dns-support-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-vpc-classic-link-dns-support-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-vpc-classic-link-dns-support-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-vpc-classic-link-dns-support-result 'make-enable-vpc-classic-link-dns-support-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-vpc-classic-link-dns-support-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-vpc-classic-link-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-vpc-classic-link-request 'make-enable-vpc-classic-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-vpc-classic-link-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-vpc-classic-link-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enable-vpc-classic-link-result 'make-enable-vpc-classic-link-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape enable-vpc-classic-link-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:deftype end-date-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype endpoint-set () '(trivial-types:proper-list client-vpn-endpoint))
 (common-lisp:defun |make-endpoint-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list client-vpn-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (event-information (:copier common-lisp:nil))
   (event-description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-sub-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event-information 'make-event-information))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape event-information))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EventDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-description)))
                       (aws-sdk/generator/shape::to-query-params "EventSubType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-sub-type)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:deftype excess-capacity-termination-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype executable-by-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-executable-by-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (export-client-vpn-client-certificate-revocation-list-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-client-vpn-client-certificate-revocation-list-request 'make-export-client-vpn-client-certificate-revocation-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-client-vpn-client-certificate-revocation-list-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (export-client-vpn-client-certificate-revocation-list-result (:copier common-lisp:nil))
   (certificate-revocation-list common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or client-certificate-revocation-list-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-client-vpn-client-certificate-revocation-list-result 'make-export-client-vpn-client-certificate-revocation-list-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-client-vpn-client-certificate-revocation-list-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CertificateRevocationList" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'certificate-revocation-list)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (export-client-vpn-client-configuration-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-client-vpn-client-configuration-request 'make-export-client-vpn-client-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-client-vpn-client-configuration-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (export-client-vpn-client-configuration-result (:copier common-lisp:nil)) (client-configuration common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-client-vpn-client-configuration-result 'make-export-client-vpn-client-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-client-vpn-client-configuration-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientConfiguration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-configuration))))))
(common-lisp:deftype export-environment () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (export-image-request (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disk-image-format (common-lisp:error ":disk-image-format is required") :type (common-lisp:or disk-image-format common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (image-id (common-lisp:error ":image-id is required") :type (common-lisp:or image-id common-lisp:null))
   (s3export-location (common-lisp:error ":s3export-location is required") :type (common-lisp:or export-task-s3location-request common-lisp:null))
   (role-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-image-request 'make-export-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DiskImageFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-image-format)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "S3ExportLocation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3export-location)))
                       (aws-sdk/generator/shape::to-query-params "RoleName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'role-name))))))
(common-lisp:progn
 (common-lisp:defstruct (export-image-result (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disk-image-format common-lisp:nil :type (common-lisp:or disk-image-format common-lisp:null))
   (export-image-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (role-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3export-location common-lisp:nil :type (common-lisp:or export-task-s3location common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-image-result 'make-export-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DiskImageFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-image-format)))
                       (aws-sdk/generator/shape::to-query-params "ExportImageTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-image-task-id)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "RoleName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'role-name)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "S3ExportLocation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3export-location)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message))))))
(common-lisp:progn
 (common-lisp:defstruct (export-image-task (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (export-image-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3export-location common-lisp:nil :type (common-lisp:or export-task-s3location common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-image-task 'make-export-image-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-image-task))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ExportImageTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-image-task-id)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "S3ExportLocation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3export-location)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message))))))
(common-lisp:deftype export-image-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype export-image-task-id-list () '(trivial-types:proper-list export-image-task-id))
 (common-lisp:defun |make-export-image-task-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list export-image-task-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype export-image-task-list () '(trivial-types:proper-list export-image-task))
 (common-lisp:defun |make-export-image-task-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list export-image-task))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (export-task (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (export-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (export-to-s3task common-lisp:nil :type (common-lisp:or export-to-s3task common-lisp:null))
   (instance-export-details common-lisp:nil :type (common-lisp:or instance-export-details common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or export-task-state common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-task 'make-export-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-task))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ExportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-task-id)))
                       (aws-sdk/generator/shape::to-query-params "ExportToS3Task" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'export-to-s3task)))
                       (aws-sdk/generator/shape::to-query-params "InstanceExportDetails" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-export-details)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype export-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype export-task-id-string-list () '(trivial-types:proper-list export-task-id))
 (common-lisp:defun |make-export-task-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list export-task-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype export-task-list () '(trivial-types:proper-list export-task))
 (common-lisp:defun |make-export-task-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list export-task))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (export-task-s3location (:copier common-lisp:nil))
   (s3bucket common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3prefix common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-task-s3location 'make-export-task-s3location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-task-s3location))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "S3Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3bucket)))
                       (aws-sdk/generator/shape::to-query-params "S3Prefix" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3prefix))))))
(common-lisp:progn
 (common-lisp:defstruct (export-task-s3location-request (:copier common-lisp:nil))
   (s3bucket (common-lisp:error ":s3bucket is required") :type (common-lisp:or string common-lisp:null))
   (s3prefix common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-task-s3location-request 'make-export-task-s3location-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-task-s3location-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "S3Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3bucket)))
                       (aws-sdk/generator/shape::to-query-params "S3Prefix" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3prefix))))))
(common-lisp:deftype export-task-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (export-to-s3task (:copier common-lisp:nil))
   (container-format common-lisp:nil :type (common-lisp:or container-format common-lisp:null))
   (disk-image-format common-lisp:nil :type (common-lisp:or disk-image-format common-lisp:null))
   (s3bucket common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3key common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-to-s3task 'make-export-to-s3task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-to-s3task))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ContainerFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'container-format)))
                       (aws-sdk/generator/shape::to-query-params "DiskImageFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-image-format)))
                       (aws-sdk/generator/shape::to-query-params "S3Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3bucket)))
                       (aws-sdk/generator/shape::to-query-params "S3Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3key))))))
(common-lisp:progn
 (common-lisp:defstruct (export-to-s3task-specification (:copier common-lisp:nil))
   (container-format common-lisp:nil :type (common-lisp:or container-format common-lisp:null))
   (disk-image-format common-lisp:nil :type (common-lisp:or disk-image-format common-lisp:null))
   (s3bucket common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3prefix common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-to-s3task-specification 'make-export-to-s3task-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-to-s3task-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ContainerFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'container-format)))
                       (aws-sdk/generator/shape::to-query-params "DiskImageFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-image-format)))
                       (aws-sdk/generator/shape::to-query-params "S3Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3bucket)))
                       (aws-sdk/generator/shape::to-query-params "S3Prefix" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3prefix))))))
(common-lisp:progn
 (common-lisp:defstruct (export-transit-gateway-routes-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (s3bucket (common-lisp:error ":s3bucket is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-transit-gateway-routes-request 'make-export-transit-gateway-routes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-transit-gateway-routes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "S3Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3bucket)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (export-transit-gateway-routes-result (:copier common-lisp:nil)) (s3location common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-transit-gateway-routes-result 'make-export-transit-gateway-routes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape export-transit-gateway-routes-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "S3Location" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3location))))))
(common-lisp:deftype export-vm-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (failed-queued-purchase-deletion (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or delete-queued-reserved-instances-error common-lisp:null))
   (reserved-instances-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failed-queued-purchase-deletion 'make-failed-queued-purchase-deletion))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape failed-queued-purchase-deletion))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Error" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id))))))
(common-lisp:progn
 (common-lisp:deftype failed-queued-purchase-deletion-set () '(trivial-types:proper-list failed-queued-purchase-deletion))
 (common-lisp:defun |make-failed-queued-purchase-deletion-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list failed-queued-purchase-deletion))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fast-snapshot-restore-state-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (filter (:copier common-lisp:nil)) (name common-lisp:nil :type (common-lisp:or string common-lisp:null)) (values common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape filter))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Values" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'values))))))
(common-lisp:progn
 (common-lisp:deftype filter-list () '(trivial-types:proper-list filter))
 (common-lisp:defun |make-filter-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list filter)) aws-sdk/generator/shape::members))
(common-lisp:deftype fleet-activity-status () 'common-lisp:string)
(common-lisp:deftype fleet-capacity-reservation-usage-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (fleet-data (:copier common-lisp:nil))
   (activity-status common-lisp:nil :type (common-lisp:or fleet-activity-status common-lisp:null))
   (create-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (fleet-id common-lisp:nil :type (common-lisp:or fleet-id common-lisp:null))
   (fleet-state common-lisp:nil :type (common-lisp:or fleet-state-code common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (excess-capacity-termination-policy common-lisp:nil :type (common-lisp:or fleet-excess-capacity-termination-policy common-lisp:null))
   (fulfilled-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (fulfilled-on-demand-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (launch-template-configs common-lisp:nil :type (common-lisp:or fleet-launch-template-config-list common-lisp:null))
   (target-capacity-specification common-lisp:nil :type (common-lisp:or target-capacity-specification common-lisp:null))
   (terminate-instances-with-expiration common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or fleet-type common-lisp:null))
   (valid-from common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (replace-unhealthy-instances common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (spot-options common-lisp:nil :type (common-lisp:or spot-options common-lisp:null))
   (on-demand-options common-lisp:nil :type (common-lisp:or on-demand-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (errors common-lisp:nil :type (common-lisp:or describe-fleets-error-set common-lisp:null))
   (instances common-lisp:nil :type (common-lisp:or describe-fleets-instances-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-data 'make-fleet-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fleet-data))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ActivityStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'activity-status)))
                       (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id)))
                       (aws-sdk/generator/shape::to-query-params "FleetState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-state)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "ExcessCapacityTerminationPolicy"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'excess-capacity-termination-policy)))
                       (aws-sdk/generator/shape::to-query-params "FulfilledCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fulfilled-capacity)))
                       (aws-sdk/generator/shape::to-query-params "FulfilledOnDemandCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fulfilled-on-demand-capacity)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateConfigs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-configs)))
                       (aws-sdk/generator/shape::to-query-params "TargetCapacitySpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-capacity-specification)))
                       (aws-sdk/generator/shape::to-query-params "TerminateInstancesWithExpiration"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'terminate-instances-with-expiration)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "ValidFrom" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-from)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "ReplaceUnhealthyInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'replace-unhealthy-instances)))
                       (aws-sdk/generator/shape::to-query-params "SpotOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-options)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-options)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "Errors" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'errors)))
                       (aws-sdk/generator/shape::to-query-params "Instances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instances))))))
(common-lisp:deftype fleet-event-type () 'common-lisp:string)
(common-lisp:deftype fleet-excess-capacity-termination-policy () 'common-lisp:string)
(common-lisp:deftype fleet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fleet-id-set () '(trivial-types:proper-list fleet-id))
 (common-lisp:defun |make-fleet-id-set| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fleet-id)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (fleet-launch-template-config (:copier common-lisp:nil))
   (launch-template-specification common-lisp:nil :type (common-lisp:or fleet-launch-template-specification common-lisp:null))
   (overrides common-lisp:nil :type (common-lisp:or fleet-launch-template-overrides-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-launch-template-config 'make-fleet-launch-template-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fleet-launch-template-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-specification)))
    (aws-sdk/generator/shape::to-query-params "Overrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'overrides))))))
(common-lisp:progn
 (common-lisp:deftype fleet-launch-template-config-list () '(trivial-types:proper-list fleet-launch-template-config))
 (common-lisp:defun |make-fleet-launch-template-config-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fleet-launch-template-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype fleet-launch-template-config-list-request () '(trivial-types:proper-list fleet-launch-template-config-request))
 (common-lisp:defun |make-fleet-launch-template-config-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fleet-launch-template-config-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (fleet-launch-template-config-request (:copier common-lisp:nil))
   (launch-template-specification common-lisp:nil :type (common-lisp:or fleet-launch-template-specification-request common-lisp:null))
   (overrides common-lisp:nil :type (common-lisp:or fleet-launch-template-overrides-list-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-launch-template-config-request 'make-fleet-launch-template-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fleet-launch-template-config-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-specification)))
    (aws-sdk/generator/shape::to-query-params "Overrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'overrides))))))
(common-lisp:progn
 (common-lisp:defstruct (fleet-launch-template-overrides (:copier common-lisp:nil))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (max-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (weighted-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or placement-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-launch-template-overrides 'make-fleet-launch-template-overrides))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fleet-launch-template-overrides))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "MaxPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-price)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "WeightedCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'weighted-capacity)))
                       (aws-sdk/generator/shape::to-query-params "Priority" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'priority)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement))))))
(common-lisp:progn
 (common-lisp:deftype fleet-launch-template-overrides-list () '(trivial-types:proper-list fleet-launch-template-overrides))
 (common-lisp:defun |make-fleet-launch-template-overrides-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fleet-launch-template-overrides))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype fleet-launch-template-overrides-list-request () '(trivial-types:proper-list fleet-launch-template-overrides-request))
 (common-lisp:defun |make-fleet-launch-template-overrides-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fleet-launch-template-overrides-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (fleet-launch-template-overrides-request (:copier common-lisp:nil))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (max-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (weighted-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or placement common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-launch-template-overrides-request 'make-fleet-launch-template-overrides-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fleet-launch-template-overrides-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "MaxPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-price)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "WeightedCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'weighted-capacity)))
                       (aws-sdk/generator/shape::to-query-params "Priority" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'priority)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement))))))
(common-lisp:progn
 (common-lisp:defstruct (fleet-launch-template-specification (:copier common-lisp:nil))
   (launch-template-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-launch-template-specification 'make-fleet-launch-template-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fleet-launch-template-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "Version" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version))))))
(common-lisp:progn
 (common-lisp:defstruct (fleet-launch-template-specification-request (:copier common-lisp:nil))
   (launch-template-id common-lisp:nil :type (common-lisp:or launch-template-id common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fleet-launch-template-specification-request 'make-fleet-launch-template-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fleet-launch-template-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "Version" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version))))))
(common-lisp:deftype fleet-on-demand-allocation-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fleet-set () '(trivial-types:proper-list fleet-data))
 (common-lisp:defun |make-fleet-set| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fleet-data)) aws-sdk/generator/shape::members))
(common-lisp:deftype fleet-state-code () 'common-lisp:string)
(common-lisp:deftype fleet-type () 'common-lisp:string)
(common-lisp:deftype float () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:defstruct (flow-log (:copier common-lisp:nil))
   (creation-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (deliver-logs-error-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deliver-logs-permission-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deliver-logs-status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (flow-log-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (flow-log-status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (traffic-type common-lisp:nil :type (common-lisp:or traffic-type common-lisp:null))
   (log-destination-type common-lisp:nil :type (common-lisp:or log-destination-type common-lisp:null))
   (log-destination common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-format common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (max-aggregation-interval common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'flow-log 'make-flow-log))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape flow-log))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
                       (aws-sdk/generator/shape::to-query-params "DeliverLogsErrorMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deliver-logs-error-message)))
                       (aws-sdk/generator/shape::to-query-params "DeliverLogsPermissionArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deliver-logs-permission-arn)))
                       (aws-sdk/generator/shape::to-query-params "DeliverLogsStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deliver-logs-status)))
                       (aws-sdk/generator/shape::to-query-params "FlowLogId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'flow-log-id)))
                       (aws-sdk/generator/shape::to-query-params "FlowLogStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'flow-log-status)))
                       (aws-sdk/generator/shape::to-query-params "LogGroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-group-name)))
                       (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-type)))
                       (aws-sdk/generator/shape::to-query-params "LogDestinationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-destination-type)))
                       (aws-sdk/generator/shape::to-query-params "LogDestination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-destination)))
                       (aws-sdk/generator/shape::to-query-params "LogFormat" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'log-format)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "MaxAggregationInterval" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-aggregation-interval))))))
(common-lisp:progn
 (common-lisp:deftype flow-log-id-list () '(trivial-types:proper-list vpc-flow-log-id))
 (common-lisp:defun |make-flow-log-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-flow-log-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype flow-log-resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype flow-log-resource-ids () '(trivial-types:proper-list flow-log-resource-id))
 (common-lisp:defun |make-flow-log-resource-ids| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list flow-log-resource-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype flow-log-set () '(trivial-types:proper-list flow-log))
 (common-lisp:defun |make-flow-log-set| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list flow-log)) aws-sdk/generator/shape::members))
(common-lisp:deftype flow-logs-resource-type () 'common-lisp:string)
(common-lisp:deftype fpga-device-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (fpga-device-info (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or fpga-device-name common-lisp:null))
   (manufacturer common-lisp:nil :type (common-lisp:or fpga-device-manufacturer-name common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or fpga-device-count common-lisp:null))
   (memory-info common-lisp:nil :type (common-lisp:or fpga-device-memory-info common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fpga-device-info 'make-fpga-device-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fpga-device-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Manufacturer" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'manufacturer)))
                       (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count)))
                       (aws-sdk/generator/shape::to-query-params "MemoryInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'memory-info))))))
(common-lisp:progn
 (common-lisp:deftype fpga-device-info-list () '(trivial-types:proper-list fpga-device-info))
 (common-lisp:defun |make-fpga-device-info-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fpga-device-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fpga-device-manufacturer-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (fpga-device-memory-info (:copier common-lisp:nil)) (size-in-mi-b common-lisp:nil :type (common-lisp:or fpga-device-memory-size common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fpga-device-memory-info 'make-fpga-device-memory-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fpga-device-memory-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SizeInMiB" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size-in-mi-b))))))
(common-lisp:deftype fpga-device-memory-size () 'common-lisp:integer)
(common-lisp:deftype fpga-device-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (fpga-image (:copier common-lisp:nil))
   (fpga-image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fpga-image-global-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (shell-version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pci-id common-lisp:nil :type (common-lisp:or pci-id common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or fpga-image-state common-lisp:null))
   (create-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (update-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-alias common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (public common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (data-retention-support common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fpga-image 'make-fpga-image))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fpga-image))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id)))
                       (aws-sdk/generator/shape::to-query-params "FpgaImageGlobalId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-global-id)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ShellVersion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'shell-version)))
                       (aws-sdk/generator/shape::to-query-params "PciId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pci-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "UpdateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'update-time)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerAlias" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-alias)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "Public" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public)))
                       (aws-sdk/generator/shape::to-query-params "DataRetentionSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'data-retention-support))))))
(common-lisp:progn
 (common-lisp:defstruct (fpga-image-attribute (:copier common-lisp:nil))
   (fpga-image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (load-permissions common-lisp:nil :type (common-lisp:or load-permission-list common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fpga-image-attribute 'make-fpga-image-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fpga-image-attribute))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "LoadPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'load-permissions)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes))))))
(common-lisp:deftype fpga-image-attribute-name () 'common-lisp:string)
(common-lisp:deftype fpga-image-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fpga-image-id-list () '(trivial-types:proper-list fpga-image-id))
 (common-lisp:defun |make-fpga-image-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fpga-image-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype fpga-image-list () '(trivial-types:proper-list fpga-image))
 (common-lisp:defun |make-fpga-image-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list fpga-image))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (fpga-image-state (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or fpga-image-state-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fpga-image-state 'make-fpga-image-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fpga-image-state))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype fpga-image-state-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (fpga-info (:copier common-lisp:nil))
   (fpgas common-lisp:nil :type (common-lisp:or fpga-device-info-list common-lisp:null))
   (total-fpga-memory-in-mi-b common-lisp:nil :type (common-lisp:or |totalFpgaMemory| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fpga-info 'make-fpga-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape fpga-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Fpgas" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpgas)))
                       (aws-sdk/generator/shape::to-query-params "TotalFpgaMemoryInMiB" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-fpga-memory-in-mi-b))))))
(common-lisp:deftype free-tier-eligible-flag () 'common-lisp:boolean)
(common-lisp:deftype gateway-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (get-associated-ipv6pool-cidrs-request (:copier common-lisp:nil))
   (pool-id (common-lisp:error ":pool-id is required") :type (common-lisp:or ipv6pool-ec2id common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or ipv6pool-max-results common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-associated-ipv6pool-cidrs-request 'make-get-associated-ipv6pool-cidrs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-associated-ipv6pool-cidrs-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-id)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-associated-ipv6pool-cidrs-result (:copier common-lisp:nil))
   (ipv6cidr-associations common-lisp:nil :type (common-lisp:or ipv6cidr-association-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-associated-ipv6pool-cidrs-result 'make-get-associated-ipv6pool-cidrs-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-associated-ipv6pool-cidrs-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6CidrAssociations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-associations)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-capacity-reservation-usage-request (:copier common-lisp:nil))
   (capacity-reservation-id (common-lisp:error ":capacity-reservation-id is required") :type (common-lisp:or capacity-reservation-id common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or get-capacity-reservation-usage-request-max-results common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-capacity-reservation-usage-request 'make-get-capacity-reservation-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-capacity-reservation-usage-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:deftype get-capacity-reservation-usage-request-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (get-capacity-reservation-usage-result (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (capacity-reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (total-instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (available-instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or capacity-reservation-state common-lisp:null))
   (instance-usages common-lisp:nil :type (common-lisp:or instance-usage-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-capacity-reservation-usage-result 'make-get-capacity-reservation-usage-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-capacity-reservation-usage-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "TotalInstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-instance-count)))
                       (aws-sdk/generator/shape::to-query-params "AvailableInstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-instance-count)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "InstanceUsages" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-usages))))))
(common-lisp:progn
 (common-lisp:defstruct (get-coip-pool-usage-request (:copier common-lisp:nil))
   (pool-id (common-lisp:error ":pool-id is required") :type (common-lisp:or coip-pool-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or coip-pool-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-coip-pool-usage-request 'make-get-coip-pool-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-coip-pool-usage-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-id)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-coip-pool-usage-result (:copier common-lisp:nil))
   (coip-pool-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (coip-address-usages common-lisp:nil :type (common-lisp:or coip-address-usage-set common-lisp:null))
   (local-gateway-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-coip-pool-usage-result 'make-get-coip-pool-usage-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-coip-pool-usage-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CoipPoolId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'coip-pool-id)))
                       (aws-sdk/generator/shape::to-query-params "CoipAddressUsages" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'coip-address-usages)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-console-output-request (:copier common-lisp:nil))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (latest common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-console-output-request 'make-get-console-output-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-console-output-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Latest" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'latest))))))
(common-lisp:progn
 (common-lisp:defstruct (get-console-output-result (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (output common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-console-output-result 'make-get-console-output-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-console-output-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Output" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'output)))
                       (aws-sdk/generator/shape::to-query-params "Timestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'timestamp))))))
(common-lisp:progn
 (common-lisp:defstruct (get-console-screenshot-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (wake-up common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-console-screenshot-request 'make-get-console-screenshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-console-screenshot-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "WakeUp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'wake-up))))))
(common-lisp:progn
 (common-lisp:defstruct (get-console-screenshot-result (:copier common-lisp:nil))
   (image-data common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-console-screenshot-result 'make-get-console-screenshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-console-screenshot-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImageData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-data)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-default-credit-specification-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-family (common-lisp:error ":instance-family is required") :type (common-lisp:or unlimited-supported-instance-family common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-default-credit-specification-request 'make-get-default-credit-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-default-credit-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family))))))
(common-lisp:progn
 (common-lisp:defstruct (get-default-credit-specification-result (:copier common-lisp:nil))
   (instance-family-credit-specification common-lisp:nil :type (common-lisp:or instance-family-credit-specification common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-default-credit-specification-result 'make-get-default-credit-specification-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-default-credit-specification-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceFamilyCreditSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family-credit-specification))))))
(common-lisp:progn
 (common-lisp:defstruct (get-ebs-default-kms-key-id-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-ebs-default-kms-key-id-request 'make-get-ebs-default-kms-key-id-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-ebs-default-kms-key-id-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-ebs-default-kms-key-id-result (:copier common-lisp:nil)) (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-ebs-default-kms-key-id-result 'make-get-ebs-default-kms-key-id-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-ebs-default-kms-key-id-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-ebs-encryption-by-default-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-ebs-encryption-by-default-request 'make-get-ebs-encryption-by-default-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-ebs-encryption-by-default-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-ebs-encryption-by-default-result (:copier common-lisp:nil)) (ebs-encryption-by-default common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-ebs-encryption-by-default-result 'make-get-ebs-encryption-by-default-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-ebs-encryption-by-default-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EbsEncryptionByDefault" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-encryption-by-default))))))
(common-lisp:progn
 (common-lisp:defstruct (get-host-reservation-purchase-preview-request (:copier common-lisp:nil))
   (host-id-set (common-lisp:error ":host-id-set is required") :type (common-lisp:or request-host-id-set common-lisp:null))
   (offering-id (common-lisp:error ":offering-id is required") :type (common-lisp:or offering-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-host-reservation-purchase-preview-request 'make-get-host-reservation-purchase-preview-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-host-reservation-purchase-preview-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HostIdSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id-set)))
                       (aws-sdk/generator/shape::to-query-params "OfferingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-host-reservation-purchase-preview-result (:copier common-lisp:nil))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (purchase common-lisp:nil :type (common-lisp:or purchase-set common-lisp:null))
   (total-hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (total-upfront-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-host-reservation-purchase-preview-result 'make-get-host-reservation-purchase-preview-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-host-reservation-purchase-preview-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "Purchase" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'purchase)))
                       (aws-sdk/generator/shape::to-query-params "TotalHourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "TotalUpfrontPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-upfront-price))))))
(common-lisp:progn
 (common-lisp:defstruct (get-launch-template-data-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-launch-template-data-request 'make-get-launch-template-data-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-launch-template-data-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-launch-template-data-result (:copier common-lisp:nil)) (launch-template-data common-lisp:nil :type (common-lisp:or response-launch-template-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-launch-template-data-result 'make-get-launch-template-data-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-launch-template-data-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-data))))))
(common-lisp:progn
 (common-lisp:defstruct (get-password-data-request (:copier common-lisp:nil))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-password-data-request 'make-get-password-data-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-password-data-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-password-data-result (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (password-data common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-password-data-result 'make-get-password-data-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-password-data-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "PasswordData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'password-data)))
                       (aws-sdk/generator/shape::to-query-params "Timestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'timestamp))))))
(common-lisp:progn
 (common-lisp:defstruct (get-reserved-instances-exchange-quote-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (reserved-instance-ids (common-lisp:error ":reserved-instance-ids is required") :type (common-lisp:or reserved-instance-id-set common-lisp:null))
   (target-configurations common-lisp:nil :type (common-lisp:or target-configuration-request-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-reserved-instances-exchange-quote-request 'make-get-reserved-instances-exchange-quote-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-reserved-instances-exchange-quote-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "TargetConfigurations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct (get-reserved-instances-exchange-quote-result (:copier common-lisp:nil))
   (currency-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (is-valid-exchange common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (output-reserved-instances-will-expire-at common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (payment-due common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reserved-instance-value-rollup common-lisp:nil :type (common-lisp:or reservation-value common-lisp:null))
   (reserved-instance-value-set common-lisp:nil :type (common-lisp:or reserved-instance-reservation-value-set common-lisp:null))
   (target-configuration-value-rollup common-lisp:nil :type (common-lisp:or reservation-value common-lisp:null))
   (target-configuration-value-set common-lisp:nil :type (common-lisp:or target-reservation-value-set common-lisp:null))
   (validation-failure-reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-reserved-instances-exchange-quote-result 'make-get-reserved-instances-exchange-quote-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-reserved-instances-exchange-quote-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "IsValidExchange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'is-valid-exchange)))
                       (aws-sdk/generator/shape::to-query-params "OutputReservedInstancesWillExpireAt"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'output-reserved-instances-will-expire-at)))
                       (aws-sdk/generator/shape::to-query-params "PaymentDue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'payment-due)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstanceValueRollup"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instance-value-rollup)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstanceValueSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instance-value-set)))
                       (aws-sdk/generator/shape::to-query-params "TargetConfigurationValueRollup"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-configuration-value-rollup)))
                       (aws-sdk/generator/shape::to-query-params "TargetConfigurationValueSet"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-configuration-value-set)))
                       (aws-sdk/generator/shape::to-query-params "ValidationFailureReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'validation-failure-reason))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-attachment-propagations-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-attachment-propagations-request 'make-get-transit-gateway-attachment-propagations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-attachment-propagations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-attachment-propagations-result (:copier common-lisp:nil))
   (transit-gateway-attachment-propagations common-lisp:nil :type (common-lisp:or transit-gateway-attachment-propagation-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-attachment-propagations-result 'make-get-transit-gateway-attachment-propagations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-attachment-propagations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentPropagations"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-propagations)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-multicast-domain-associations-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-multicast-domain-associations-request 'make-get-transit-gateway-multicast-domain-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-multicast-domain-associations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-multicast-domain-associations-result (:copier common-lisp:nil))
   (multicast-domain-associations common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-association-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-multicast-domain-associations-result 'make-get-transit-gateway-multicast-domain-associations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-multicast-domain-associations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MulticastDomainAssociations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'multicast-domain-associations)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-route-table-associations-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-route-table-associations-request 'make-get-transit-gateway-route-table-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-route-table-associations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-route-table-associations-result (:copier common-lisp:nil))
   (associations common-lisp:nil :type (common-lisp:or transit-gateway-route-table-association-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-route-table-associations-result 'make-get-transit-gateway-route-table-associations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-route-table-associations-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Associations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associations)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-route-table-propagations-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-route-table-propagations-request 'make-get-transit-gateway-route-table-propagations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-route-table-propagations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (get-transit-gateway-route-table-propagations-result (:copier common-lisp:nil))
   (transit-gateway-route-table-propagations common-lisp:nil :type (common-lisp:or transit-gateway-route-table-propagation-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-transit-gateway-route-table-propagations-result 'make-get-transit-gateway-route-table-propagations-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape get-transit-gateway-route-table-propagations-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTablePropagations"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-propagations)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:deftype gpu-device-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (gpu-device-info (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or gpu-device-name common-lisp:null))
   (manufacturer common-lisp:nil :type (common-lisp:or gpu-device-manufacturer-name common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or gpu-device-count common-lisp:null))
   (memory-info common-lisp:nil :type (common-lisp:or gpu-device-memory-info common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gpu-device-info 'make-gpu-device-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape gpu-device-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Manufacturer" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'manufacturer)))
                       (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count)))
                       (aws-sdk/generator/shape::to-query-params "MemoryInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'memory-info))))))
(common-lisp:progn
 (common-lisp:deftype gpu-device-info-list () '(trivial-types:proper-list gpu-device-info))
 (common-lisp:defun |make-gpu-device-info-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list gpu-device-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype gpu-device-manufacturer-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (gpu-device-memory-info (:copier common-lisp:nil)) (size-in-mi-b common-lisp:nil :type (common-lisp:or gpu-device-memory-size common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gpu-device-memory-info 'make-gpu-device-memory-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape gpu-device-memory-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SizeInMiB" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size-in-mi-b))))))
(common-lisp:deftype gpu-device-memory-size () 'common-lisp:integer)
(common-lisp:deftype gpu-device-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (gpu-info (:copier common-lisp:nil))
   (gpus common-lisp:nil :type (common-lisp:or gpu-device-info-list common-lisp:null))
   (total-gpu-memory-in-mi-b common-lisp:nil :type (common-lisp:or |totalGpuMemory| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gpu-info 'make-gpu-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape gpu-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Gpus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gpus)))
                       (aws-sdk/generator/shape::to-query-params "TotalGpuMemoryInMiB" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-gpu-memory-in-mi-b))))))
(common-lisp:progn
 (common-lisp:deftype group-id-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-group-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (group-identifier (:copier common-lisp:nil)) (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null)) (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'group-identifier 'make-group-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape group-identifier))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id))))))
(common-lisp:progn
 (common-lisp:deftype group-identifier-list () '(trivial-types:proper-list group-identifier))
 (common-lisp:defun |make-group-identifier-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list group-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype group-identifier-set () '(trivial-types:proper-list security-group-identifier))
 (common-lisp:defun |make-group-identifier-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype group-ids () '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-group-ids| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype group-name-string-list () '(trivial-types:proper-list security-group-name))
 (common-lisp:defun |make-group-name-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hibernation-flag () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (hibernation-options (:copier common-lisp:nil)) (configured common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hibernation-options 'make-hibernation-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape hibernation-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Configured" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'configured))))))
(common-lisp:progn
 (common-lisp:defstruct (hibernation-options-request (:copier common-lisp:nil)) (configured common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hibernation-options-request 'make-hibernation-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape hibernation-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Configured" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'configured))))))
(common-lisp:progn
 (common-lisp:defstruct (history-record (:copier common-lisp:nil))
   (event-information common-lisp:nil :type (common-lisp:or event-information common-lisp:null))
   (event-type common-lisp:nil :type (common-lisp:or event-type common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'history-record 'make-history-record))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape history-record))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EventInformation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-information)))
                       (aws-sdk/generator/shape::to-query-params "EventType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-type)))
                       (aws-sdk/generator/shape::to-query-params "Timestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'timestamp))))))
(common-lisp:progn
 (common-lisp:defstruct (history-record-entry (:copier common-lisp:nil))
   (event-information common-lisp:nil :type (common-lisp:or event-information common-lisp:null))
   (event-type common-lisp:nil :type (common-lisp:or fleet-event-type common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'history-record-entry 'make-history-record-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape history-record-entry))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EventInformation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-information)))
                       (aws-sdk/generator/shape::to-query-params "EventType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-type)))
                       (aws-sdk/generator/shape::to-query-params "Timestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'timestamp))))))
(common-lisp:progn
 (common-lisp:deftype history-record-set () '(trivial-types:proper-list history-record-entry))
 (common-lisp:defun |make-history-record-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list history-record-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype history-records () '(trivial-types:proper-list history-record))
 (common-lisp:defun |make-history-records| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list history-record))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (host (:copier common-lisp:nil))
   (auto-placement common-lisp:nil :type (common-lisp:or auto-placement common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (available-capacity common-lisp:nil :type (common-lisp:or available-capacity common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (host-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (host-properties common-lisp:nil :type (common-lisp:or host-properties common-lisp:null))
   (host-reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instances common-lisp:nil :type (common-lisp:or host-instance-list common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or allocation-state common-lisp:null))
   (allocation-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (release-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (host-recovery common-lisp:nil :type (common-lisp:or host-recovery common-lisp:null))
   (allows-multiple-instance-types common-lisp:nil :type (common-lisp:or allows-multiple-instance-types common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (member-of-service-linked-resource-group common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'host 'make-host))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape host))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AutoPlacement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-placement)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "AvailableCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-capacity)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "HostId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id)))
                       (aws-sdk/generator/shape::to-query-params "HostProperties" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-properties)))
                       (aws-sdk/generator/shape::to-query-params "HostReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "Instances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instances)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "AllocationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-time)))
                       (aws-sdk/generator/shape::to-query-params "ReleaseTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'release-time)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "HostRecovery" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-recovery)))
                       (aws-sdk/generator/shape::to-query-params "AllowsMultipleInstanceTypes"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allows-multiple-instance-types)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZoneId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone-id)))
                       (aws-sdk/generator/shape::to-query-params "MemberOfServiceLinkedResourceGroup"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'member-of-service-linked-resource-group))))))
(common-lisp:progn
 (common-lisp:defstruct (host-instance (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'host-instance 'make-host-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape host-instance))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id))))))
(common-lisp:progn
 (common-lisp:deftype host-instance-list () '(trivial-types:proper-list host-instance))
 (common-lisp:defun |make-host-instance-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list host-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype host-list () '(trivial-types:proper-list host))
 (common-lisp:defun |make-host-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list host)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (host-offering (:copier common-lisp:nil))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (offering-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (payment-option common-lisp:nil :type (common-lisp:or payment-option common-lisp:null))
   (upfront-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'host-offering 'make-host-offering))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape host-offering))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "Duration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'duration)))
                       (aws-sdk/generator/shape::to-query-params "HourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family)))
                       (aws-sdk/generator/shape::to-query-params "OfferingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-id)))
                       (aws-sdk/generator/shape::to-query-params "PaymentOption" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'payment-option)))
                       (aws-sdk/generator/shape::to-query-params "UpfrontPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upfront-price))))))
(common-lisp:progn
 (common-lisp:deftype host-offering-set () '(trivial-types:proper-list host-offering))
 (common-lisp:defun |make-host-offering-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list host-offering))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (host-properties (:copier common-lisp:nil))
   (cores common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (sockets common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (total-vcpus common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'host-properties 'make-host-properties))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape host-properties))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cores" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cores)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family)))
                       (aws-sdk/generator/shape::to-query-params "Sockets" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sockets)))
                       (aws-sdk/generator/shape::to-query-params "TotalVCpus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-vcpus))))))
(common-lisp:deftype host-recovery () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (host-reservation (:copier common-lisp:nil))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (end common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (host-id-set common-lisp:nil :type (common-lisp:or response-host-id-set common-lisp:null))
   (host-reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (offering-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (payment-option common-lisp:nil :type (common-lisp:or payment-option common-lisp:null))
   (start common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or reservation-state common-lisp:null))
   (upfront-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'host-reservation 'make-host-reservation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape host-reservation))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count)))
                       (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "Duration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'duration)))
                       (aws-sdk/generator/shape::to-query-params "End" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end)))
                       (aws-sdk/generator/shape::to-query-params "HostIdSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id-set)))
                       (aws-sdk/generator/shape::to-query-params "HostReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "HourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family)))
                       (aws-sdk/generator/shape::to-query-params "OfferingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-id)))
                       (aws-sdk/generator/shape::to-query-params "PaymentOption" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'payment-option)))
                       (aws-sdk/generator/shape::to-query-params "Start" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "UpfrontPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upfront-price)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype host-reservation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype host-reservation-id-set () '(trivial-types:proper-list host-reservation-id))
 (common-lisp:defun |make-host-reservation-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list host-reservation-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype host-reservation-set () '(trivial-types:proper-list host-reservation))
 (common-lisp:defun |make-host-reservation-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list host-reservation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype host-tenancy () 'common-lisp:string)
(common-lisp:deftype http-tokens-state () 'common-lisp:string)
(common-lisp:deftype hypervisor-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ikeversions-list () '(trivial-types:proper-list ikeversions-list-value))
 (common-lisp:defun |make-ikeversions-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ikeversions-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ikeversions-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ikeversions-list-value 'make-ikeversions-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ikeversions-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype ikeversions-request-list () '(trivial-types:proper-list ikeversions-request-list-value))
 (common-lisp:defun |make-ikeversions-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ikeversions-request-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ikeversions-request-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ikeversions-request-list-value 'make-ikeversions-request-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ikeversions-request-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:defstruct (iam-instance-profile (:copier common-lisp:nil)) (arn common-lisp:nil :type (common-lisp:or string common-lisp:null)) (id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'iam-instance-profile 'make-iam-instance-profile))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape iam-instance-profile))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Arn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'arn)))
                       (aws-sdk/generator/shape::to-query-params "Id" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'id))))))
(common-lisp:progn
 (common-lisp:defstruct (iam-instance-profile-association (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or iam-instance-profile common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or iam-instance-profile-association-state common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'iam-instance-profile-association 'make-iam-instance-profile-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape iam-instance-profile-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Timestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'timestamp))))))
(common-lisp:deftype iam-instance-profile-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype iam-instance-profile-association-set () '(trivial-types:proper-list iam-instance-profile-association))
 (common-lisp:defun |make-iam-instance-profile-association-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list iam-instance-profile-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype iam-instance-profile-association-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (iam-instance-profile-specification (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'iam-instance-profile-specification 'make-iam-instance-profile-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape iam-instance-profile-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Arn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'arn)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:progn
 (common-lisp:defstruct (icmp-type-code (:copier common-lisp:nil)) (code common-lisp:nil :type (common-lisp:or integer common-lisp:null)) (type common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'icmp-type-code 'make-icmp-type-code))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape icmp-type-code))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type))))))
(common-lisp:progn
 (common-lisp:defstruct (id-format (:copier common-lisp:nil))
   (deadline common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (resource common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (use-long-ids common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'id-format 'make-id-format))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape id-format))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Deadline" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deadline)))
                       (aws-sdk/generator/shape::to-query-params "Resource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource)))
                       (aws-sdk/generator/shape::to-query-params "UseLongIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'use-long-ids))))))
(common-lisp:progn
 (common-lisp:deftype id-format-list () '(trivial-types:proper-list id-format))
 (common-lisp:defun |make-id-format-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list id-format))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (image (:copier common-lisp:nil))
   (architecture common-lisp:nil :type (common-lisp:or architecture-values common-lisp:null))
   (creation-date common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-location common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-type common-lisp:nil :type (common-lisp:or image-type-values common-lisp:null))
   (public common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or platform-values common-lisp:null))
   (platform-details common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (usage-operation common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or image-state common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-list common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ena-support common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (hypervisor common-lisp:nil :type (common-lisp:or hypervisor-type common-lisp:null))
   (image-owner-alias common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (root-device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (root-device-type common-lisp:nil :type (common-lisp:or device-type common-lisp:null))
   (sriov-net-support common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state-reason common-lisp:nil :type (common-lisp:or state-reason common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (virtualization-type common-lisp:nil :type (common-lisp:or virtualization-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image 'make-image))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape image))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Architecture" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'architecture)))
                       (aws-sdk/generator/shape::to-query-params "CreationDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-date)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "ImageLocation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-location)))
                       (aws-sdk/generator/shape::to-query-params "ImageType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-type)))
                       (aws-sdk/generator/shape::to-query-params "Public" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "PlatformDetails" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform-details)))
                       (aws-sdk/generator/shape::to-query-params "UsageOperation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'usage-operation)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "EnaSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ena-support)))
                       (aws-sdk/generator/shape::to-query-params "Hypervisor" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hypervisor)))
                       (aws-sdk/generator/shape::to-query-params "ImageOwnerAlias" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-owner-alias)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "RootDeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'root-device-name)))
                       (aws-sdk/generator/shape::to-query-params "RootDeviceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'root-device-type)))
                       (aws-sdk/generator/shape::to-query-params "SriovNetSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sriov-net-support)))
                       (aws-sdk/generator/shape::to-query-params "StateReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state-reason)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VirtualizationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtualization-type))))))
(common-lisp:progn
 (common-lisp:defstruct (image-attribute (:copier common-lisp:nil))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-list common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-permissions common-lisp:nil :type (common-lisp:or launch-permission-list common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (sriov-net-support common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image-attribute 'make-image-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape image-attribute))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-permissions)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "SriovNetSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sriov-net-support))))))
(common-lisp:deftype image-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (image-disk-container (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or snapshot-id common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (user-bucket common-lisp:nil :type (common-lisp:or user-bucket common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image-disk-container 'make-image-disk-container))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape image-disk-container))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "Format" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'format)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "Url" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'url)))
                       (aws-sdk/generator/shape::to-query-params "UserBucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-bucket))))))
(common-lisp:progn
 (common-lisp:deftype image-disk-container-list () '(trivial-types:proper-list image-disk-container))
 (common-lisp:defun |make-image-disk-container-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list image-disk-container))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype image-id-string-list () '(trivial-types:proper-list image-id))
 (common-lisp:defun |make-image-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list image-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype image-list () '(trivial-types:proper-list image))
 (common-lisp:defun |make-image-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list image)) aws-sdk/generator/shape::members))
(common-lisp:deftype image-state () 'common-lisp:string)
(common-lisp:deftype image-type-values () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (import-client-vpn-client-certificate-revocation-list-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (certificate-revocation-list (common-lisp:error ":certificate-revocation-list is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-client-vpn-client-certificate-revocation-list-request 'make-import-client-vpn-client-certificate-revocation-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-client-vpn-client-certificate-revocation-list-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "CertificateRevocationList" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'certificate-revocation-list)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (import-client-vpn-client-certificate-revocation-list-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-client-vpn-client-certificate-revocation-list-result 'make-import-client-vpn-client-certificate-revocation-list-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-client-vpn-client-certificate-revocation-list-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (import-image-license-configuration-request (:copier common-lisp:nil)) (license-configuration-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-image-license-configuration-request 'make-import-image-license-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-image-license-configuration-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LicenseConfigurationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-configuration-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (import-image-license-configuration-response (:copier common-lisp:nil)) (license-configuration-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-image-license-configuration-response 'make-import-image-license-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-image-license-configuration-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LicenseConfigurationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-configuration-arn))))))
(common-lisp:progn
 (common-lisp:deftype import-image-license-specification-list-request () '(trivial-types:proper-list import-image-license-configuration-request))
 (common-lisp:defun |make-import-image-license-specification-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list import-image-license-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype import-image-license-specification-list-response () '(trivial-types:proper-list import-image-license-configuration-response))
 (common-lisp:defun |make-import-image-license-specification-list-response| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list import-image-license-configuration-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (import-image-request (:copier common-lisp:nil))
   (architecture common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-data common-lisp:nil :type (common-lisp:or client-data common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disk-containers common-lisp:nil :type (common-lisp:or image-disk-container-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (hypervisor common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or kms-key-id common-lisp:null))
   (license-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (role-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (license-specifications common-lisp:nil :type (common-lisp:or import-image-license-specification-list-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-image-request 'make-import-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Architecture" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'architecture)))
                       (aws-sdk/generator/shape::to-query-params "ClientData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-data)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DiskContainers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-containers)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "Hypervisor" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hypervisor)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "LicenseType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-type)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "RoleName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'role-name)))
                       (aws-sdk/generator/shape::to-query-params "LicenseSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (import-image-result (:copier common-lisp:nil))
   (architecture common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (hypervisor common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (import-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (license-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-details common-lisp:nil :type (common-lisp:or snapshot-detail-list common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (license-specifications common-lisp:nil :type (common-lisp:or import-image-license-specification-list-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-image-result 'make-import-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Architecture" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'architecture)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "Hypervisor" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hypervisor)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "ImportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-id)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "LicenseType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-type)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotDetails" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-details)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "LicenseSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (import-image-task (:copier common-lisp:nil))
   (architecture common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (hypervisor common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (import-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (license-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-details common-lisp:nil :type (common-lisp:or snapshot-detail-list common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (license-specifications common-lisp:nil :type (common-lisp:or import-image-license-specification-list-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-image-task 'make-import-image-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-image-task))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Architecture" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'architecture)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "Hypervisor" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hypervisor)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "ImportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-id)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "LicenseType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-type)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotDetails" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-details)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "LicenseSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-specifications))))))
(common-lisp:deftype import-image-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype import-image-task-list () '(trivial-types:proper-list import-image-task))
 (common-lisp:defun |make-import-image-task-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list import-image-task))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (import-instance-launch-specification (:copier common-lisp:nil))
   (additional-info common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (architecture common-lisp:nil :type (common-lisp:or architecture-values common-lisp:null))
   (group-ids common-lisp:nil :type (common-lisp:or security-group-id-string-list common-lisp:null))
   (group-names common-lisp:nil :type (common-lisp:or security-group-string-list common-lisp:null))
   (instance-initiated-shutdown-behavior common-lisp:nil :type (common-lisp:or shutdown-behavior common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or placement common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or user-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-instance-launch-specification 'make-import-instance-launch-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-instance-launch-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AdditionalInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'additional-info)))
                       (aws-sdk/generator/shape::to-query-params "Architecture" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'architecture)))
                       (aws-sdk/generator/shape::to-query-params "GroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ids)))
                       (aws-sdk/generator/shape::to-query-params "GroupNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-names)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInitiatedShutdownBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-initiated-shutdown-behavior)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data))))))
(common-lisp:progn
 (common-lisp:defstruct (import-instance-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disk-images common-lisp:nil :type (common-lisp:or disk-image-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (launch-specification common-lisp:nil :type (common-lisp:or import-instance-launch-specification common-lisp:null))
   (platform (common-lisp:error ":platform is required") :type (common-lisp:or platform-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-instance-request 'make-import-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-instance-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DiskImages" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-images)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "LaunchSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-specification)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform))))))
(common-lisp:progn
 (common-lisp:defstruct (import-instance-result (:copier common-lisp:nil)) (conversion-task common-lisp:nil :type (common-lisp:or conversion-task common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-instance-result 'make-import-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-instance-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConversionTask" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'conversion-task))))))
(common-lisp:progn
 (common-lisp:defstruct (import-instance-task-details (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or platform-values common-lisp:null))
   (volumes common-lisp:nil :type (common-lisp:or import-instance-volume-detail-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-instance-task-details 'make-import-instance-task-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-instance-task-details))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "Volumes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volumes))))))
(common-lisp:progn
 (common-lisp:defstruct (import-instance-volume-detail-item (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (bytes-converted common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image common-lisp:nil :type (common-lisp:or disk-image-description common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume common-lisp:nil :type (common-lisp:or disk-image-volume-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-instance-volume-detail-item 'make-import-instance-volume-detail-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-instance-volume-detail-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "BytesConverted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bytes-converted)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Image" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "Volume" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume))))))
(common-lisp:progn
 (common-lisp:deftype import-instance-volume-detail-set () '(trivial-types:proper-list import-instance-volume-detail-item))
 (common-lisp:defun |make-import-instance-volume-detail-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list import-instance-volume-detail-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (import-key-pair-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (key-name (common-lisp:error ":key-name is required") :type (common-lisp:or string common-lisp:null))
   (public-key-material (common-lisp:error ":public-key-material is required") :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-key-pair-request 'make-import-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-key-pair-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "PublicKeyMaterial" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-key-material))))))
(common-lisp:progn
 (common-lisp:defstruct (import-key-pair-result (:copier common-lisp:nil))
   (key-fingerprint common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-key-pair-result 'make-import-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-key-pair-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KeyFingerprint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-fingerprint)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name))))))
(common-lisp:progn
 (common-lisp:defstruct (import-snapshot-request (:copier common-lisp:nil))
   (client-data common-lisp:nil :type (common-lisp:or client-data common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disk-container common-lisp:nil :type (common-lisp:or snapshot-disk-container common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or kms-key-id common-lisp:null))
   (role-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-snapshot-request 'make-import-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-snapshot-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-data)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DiskContainer" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-container)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "RoleName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'role-name))))))
(common-lisp:progn
 (common-lisp:defstruct (import-snapshot-result (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (import-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-task-detail common-lisp:nil :type (common-lisp:or snapshot-task-detail common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-snapshot-result 'make-import-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-snapshot-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ImportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-id)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotTaskDetail" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-task-detail))))))
(common-lisp:progn
 (common-lisp:defstruct (import-snapshot-task (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (import-task-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-task-detail common-lisp:nil :type (common-lisp:or snapshot-task-detail common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-snapshot-task 'make-import-snapshot-task))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-snapshot-task))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ImportTaskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'import-task-id)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotTaskDetail" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-task-detail)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype import-snapshot-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype import-snapshot-task-id-list () '(trivial-types:proper-list import-snapshot-task-id))
 (common-lisp:defun |make-import-snapshot-task-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list import-snapshot-task-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype import-snapshot-task-list () '(trivial-types:proper-list import-snapshot-task))
 (common-lisp:defun |make-import-snapshot-task-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list import-snapshot-task))
   aws-sdk/generator/shape::members))
(common-lisp:deftype import-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype import-task-id-list () '(trivial-types:proper-list import-image-task-id))
 (common-lisp:defun |make-import-task-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list import-image-task-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (import-volume-request (:copier common-lisp:nil))
   (availability-zone (common-lisp:error ":availability-zone is required") :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (image (common-lisp:error ":image is required") :type (common-lisp:or disk-image-detail common-lisp:null))
   (volume (common-lisp:error ":volume is required") :type (common-lisp:or volume-detail common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-volume-request 'make-import-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-volume-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Image" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image)))
                       (aws-sdk/generator/shape::to-query-params "Volume" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume))))))
(common-lisp:progn
 (common-lisp:defstruct (import-volume-result (:copier common-lisp:nil)) (conversion-task common-lisp:nil :type (common-lisp:or conversion-task common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-volume-result 'make-import-volume-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-volume-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConversionTask" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'conversion-task))))))
(common-lisp:progn
 (common-lisp:defstruct (import-volume-task-details (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (bytes-converted common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image common-lisp:nil :type (common-lisp:or disk-image-description common-lisp:null))
   (volume common-lisp:nil :type (common-lisp:or disk-image-volume-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'import-volume-task-details 'make-import-volume-task-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape import-volume-task-details))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "BytesConverted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bytes-converted)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Image" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image)))
                       (aws-sdk/generator/shape::to-query-params "Volume" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume))))))
(common-lisp:progn
 (common-lisp:defstruct (inference-accelerator-info (:copier common-lisp:nil)) (accelerators common-lisp:nil :type (common-lisp:or inference-device-info-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'inference-accelerator-info 'make-inference-accelerator-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape inference-accelerator-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Accelerators" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'accelerators))))))
(common-lisp:deftype inference-device-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (inference-device-info (:copier common-lisp:nil))
   (count common-lisp:nil :type (common-lisp:or inference-device-count common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or inference-device-name common-lisp:null))
   (manufacturer common-lisp:nil :type (common-lisp:or inference-device-manufacturer-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'inference-device-info 'make-inference-device-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape inference-device-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Manufacturer" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'manufacturer))))))
(common-lisp:progn
 (common-lisp:deftype inference-device-info-list () '(trivial-types:proper-list inference-device-info))
 (common-lisp:defun |make-inference-device-info-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list inference-device-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inference-device-manufacturer-name () 'common-lisp:string)
(common-lisp:deftype inference-device-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (ami-launch-index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or monitoring common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or placement common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or platform-values common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null))
   (public-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or instance-state common-lisp:null))
   (state-transition-reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (architecture common-lisp:nil :type (common-lisp:or architecture-values common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or instance-block-device-mapping-list common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ena-support common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (hypervisor common-lisp:nil :type (common-lisp:or hypervisor-type common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or iam-instance-profile common-lisp:null))
   (instance-lifecycle common-lisp:nil :type (common-lisp:or instance-lifecycle-type common-lisp:null))
   (elastic-gpu-associations common-lisp:nil :type (common-lisp:or elastic-gpu-association-list common-lisp:null))
   (elastic-inference-accelerator-associations common-lisp:nil :type (common-lisp:or elastic-inference-accelerator-association-list common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or instance-network-interface-list common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (root-device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (root-device-type common-lisp:nil :type (common-lisp:or device-type common-lisp:null))
   (security-groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (source-dest-check common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (spot-instance-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (sriov-net-support common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state-reason common-lisp:nil :type (common-lisp:or state-reason common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (virtualization-type common-lisp:nil :type (common-lisp:or virtualization-type common-lisp:null))
   (cpu-options common-lisp:nil :type (common-lisp:or cpu-options common-lisp:null))
   (capacity-reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (capacity-reservation-specification common-lisp:nil :type (common-lisp:or capacity-reservation-specification-response common-lisp:null))
   (hibernation-options common-lisp:nil :type (common-lisp:or hibernation-options common-lisp:null))
   (licenses common-lisp:nil :type (common-lisp:or license-list common-lisp:null))
   (metadata-options common-lisp:nil :type (common-lisp:or instance-metadata-options-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AmiLaunchIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ami-launch-index)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-time)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "PublicDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PublicIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StateTransitionReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state-transition-reason)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "Architecture" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'architecture)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "EnaSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ena-support)))
                       (aws-sdk/generator/shape::to-query-params "Hypervisor" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hypervisor)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "InstanceLifecycle" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-lifecycle)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuAssociations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-associations)))
                       (aws-sdk/generator/shape::to-query-params "ElasticInferenceAcceleratorAssociations"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerator-associations)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "RootDeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'root-device-name)))
                       (aws-sdk/generator/shape::to-query-params "RootDeviceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'root-device-type)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-request-id)))
                       (aws-sdk/generator/shape::to-query-params "SriovNetSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sriov-net-support)))
                       (aws-sdk/generator/shape::to-query-params "StateReason" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state-reason)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VirtualizationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtualization-type)))
                       (aws-sdk/generator/shape::to-query-params "CpuOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-options)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationSpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-specification)))
                       (aws-sdk/generator/shape::to-query-params "HibernationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hibernation-options)))
                       (aws-sdk/generator/shape::to-query-params "Licenses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'licenses)))
                       (aws-sdk/generator/shape::to-query-params "MetadataOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'metadata-options))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-attribute (:copier common-lisp:nil))
   (groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or instance-block-device-mapping-list common-lisp:null))
   (disable-api-termination common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (ena-support common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-initiated-shutdown-behavior common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-list common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (root-device-name common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (source-dest-check common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (sriov-net-support common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-attribute 'make-instance-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-attribute))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "DisableApiTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disable-api-termination)))
                       (aws-sdk/generator/shape::to-query-params "EnaSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ena-support)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInitiatedShutdownBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-initiated-shutdown-behavior)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "RootDeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'root-device-name)))
                       (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check)))
                       (aws-sdk/generator/shape::to-query-params "SriovNetSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sriov-net-support)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data))))))
(common-lisp:deftype instance-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-block-device-mapping (:copier common-lisp:nil))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs common-lisp:nil :type (common-lisp:or ebs-instance-block-device common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-block-device-mapping 'make-instance-block-device-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-block-device-mapping))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "Ebs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs))))))
(common-lisp:progn
 (common-lisp:deftype instance-block-device-mapping-list () '(trivial-types:proper-list instance-block-device-mapping))
 (common-lisp:defun |make-instance-block-device-mapping-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-block-device-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-block-device-mapping-specification (:copier common-lisp:nil))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs common-lisp:nil :type (common-lisp:or ebs-instance-block-device-specification common-lisp:null))
   (no-device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtual-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-block-device-mapping-specification 'make-instance-block-device-mapping-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-block-device-mapping-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "Ebs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs)))
                       (aws-sdk/generator/shape::to-query-params "NoDevice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'no-device)))
                       (aws-sdk/generator/shape::to-query-params "VirtualName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-name))))))
(common-lisp:progn
 (common-lisp:deftype instance-block-device-mapping-specification-list () '(trivial-types:proper-list instance-block-device-mapping-specification))
 (common-lisp:defun |make-instance-block-device-mapping-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-block-device-mapping-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-capacity (:copier common-lisp:nil))
   (available-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (total-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-capacity 'make-instance-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-capacity))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailableCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-capacity)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "TotalCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-count (:copier common-lisp:nil))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or listing-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-count 'make-instance-count))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-count))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype instance-count-list () '(trivial-types:proper-list instance-count))
 (common-lisp:defun |make-instance-count-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-count))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-credit-specification (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cpu-credits common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-credit-specification 'make-instance-credit-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-credit-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "CpuCredits" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-credits))))))
(common-lisp:progn
 (common-lisp:deftype instance-credit-specification-list () '(trivial-types:proper-list instance-credit-specification))
 (common-lisp:defun |make-instance-credit-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-credit-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-credit-specification-list-request () '(trivial-types:proper-list instance-credit-specification-request))
 (common-lisp:defun |make-instance-credit-specification-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-credit-specification-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-credit-specification-request (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (cpu-credits common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-credit-specification-request 'make-instance-credit-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-credit-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "CpuCredits" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-credits))))))
(common-lisp:deftype instance-event-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-export-details (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-environment common-lisp:nil :type (common-lisp:or export-environment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-export-details 'make-instance-export-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-export-details))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetEnvironment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-environment))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-family-credit-specification (:copier common-lisp:nil))
   (instance-family common-lisp:nil :type (common-lisp:or unlimited-supported-instance-family common-lisp:null))
   (cpu-credits common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-family-credit-specification 'make-instance-family-credit-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-family-credit-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family)))
                       (aws-sdk/generator/shape::to-query-params "CpuCredits" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-credits))))))
(common-lisp:deftype instance-health-status () 'common-lisp:string)
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-id-set () '(trivial-types:proper-list string))
 (common-lisp:defun |make-instance-id-set| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-id-string-list () '(trivial-types:proper-list instance-id))
 (common-lisp:defun |make-instance-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-ids-set () '(trivial-types:proper-list instance-id))
 (common-lisp:defun |make-instance-ids-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-interruption-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-ipv6address (:copier common-lisp:nil)) (ipv6address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-ipv6address 'make-instance-ipv6address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-ipv6address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6Address" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address))))))
(common-lisp:progn
 (common-lisp:deftype instance-ipv6address-list () '(trivial-types:proper-list instance-ipv6address))
 (common-lisp:defun |make-instance-ipv6address-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-ipv6address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-ipv6address-list-request () '(trivial-types:proper-list instance-ipv6address-request))
 (common-lisp:defun |make-instance-ipv6address-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-ipv6address-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-ipv6address-request (:copier common-lisp:nil)) (ipv6address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-ipv6address-request 'make-instance-ipv6address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-ipv6address-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6Address" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address))))))
(common-lisp:deftype instance-lifecycle () 'common-lisp:string)
(common-lisp:deftype instance-lifecycle-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-list () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instance-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-market-options-request (:copier common-lisp:nil))
   (market-type common-lisp:nil :type (common-lisp:or market-type common-lisp:null))
   (spot-options common-lisp:nil :type (common-lisp:or spot-market-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-market-options-request 'make-instance-market-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-market-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MarketType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'market-type)))
                       (aws-sdk/generator/shape::to-query-params "SpotOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-options))))))
(common-lisp:deftype instance-match-criteria () 'common-lisp:string)
(common-lisp:deftype instance-metadata-endpoint-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-metadata-options-request (:copier common-lisp:nil))
   (http-tokens common-lisp:nil :type (common-lisp:or http-tokens-state common-lisp:null))
   (http-put-response-hop-limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (http-endpoint common-lisp:nil :type (common-lisp:or instance-metadata-endpoint-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-metadata-options-request 'make-instance-metadata-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-metadata-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HttpTokens" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-tokens)))
                       (aws-sdk/generator/shape::to-query-params "HttpPutResponseHopLimit" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-put-response-hop-limit)))
                       (aws-sdk/generator/shape::to-query-params "HttpEndpoint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-endpoint))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-metadata-options-response (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or instance-metadata-options-state common-lisp:null))
   (http-tokens common-lisp:nil :type (common-lisp:or http-tokens-state common-lisp:null))
   (http-put-response-hop-limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (http-endpoint common-lisp:nil :type (common-lisp:or instance-metadata-endpoint-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-metadata-options-response 'make-instance-metadata-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-metadata-options-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "HttpTokens" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-tokens)))
                       (aws-sdk/generator/shape::to-query-params "HttpPutResponseHopLimit" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-put-response-hop-limit)))
                       (aws-sdk/generator/shape::to-query-params "HttpEndpoint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-endpoint))))))
(common-lisp:deftype instance-metadata-options-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-monitoring (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or monitoring common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-monitoring 'make-instance-monitoring))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-monitoring))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring))))))
(common-lisp:progn
 (common-lisp:deftype instance-monitoring-list () '(trivial-types:proper-list instance-monitoring))
 (common-lisp:defun |make-instance-monitoring-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-monitoring))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-network-interface (:copier common-lisp:nil))
   (association common-lisp:nil :type (common-lisp:or instance-network-interface-association common-lisp:null))
   (attachment common-lisp:nil :type (common-lisp:or instance-network-interface-attachment common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or instance-ipv6address-list common-lisp:null))
   (mac-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-addresses common-lisp:nil :type (common-lisp:or instance-private-ip-address-list common-lisp:null))
   (source-dest-check common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or network-interface-status common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (interface-type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-network-interface 'make-instance-network-interface))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-network-interface))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Association" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association)))
                       (aws-sdk/generator/shape::to-query-params "Attachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "MacAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'mac-address)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses)))
                       (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "InterfaceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interface-type))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-network-interface-association (:copier common-lisp:nil))
   (ip-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-network-interface-association 'make-instance-network-interface-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-network-interface-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "IpOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PublicDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-network-interface-attachment (:copier common-lisp:nil))
   (attach-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (device-index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or attachment-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-network-interface-attachment 'make-instance-network-interface-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-network-interface-attachment))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttachTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attach-time)))
                       (aws-sdk/generator/shape::to-query-params "AttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "DeviceIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-index)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:deftype instance-network-interface-list () '(trivial-types:proper-list instance-network-interface))
 (common-lisp:defun |make-instance-network-interface-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-network-interface))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-network-interface-specification (:copier common-lisp:nil))
   (associate-public-ip-address common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (device-index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or security-group-id-string-list common-lisp:null))
   (ipv6address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or instance-ipv6address-list common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-addresses common-lisp:nil :type (common-lisp:or private-ip-address-specification-list common-lisp:null))
   (secondary-private-ip-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (interface-type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-network-interface-specification 'make-instance-network-interface-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-network-interface-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociatePublicIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associate-public-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DeviceIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-index)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address-count)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses)))
                       (aws-sdk/generator/shape::to-query-params "SecondaryPrivateIpAddressCount"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'secondary-private-ip-address-count)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "InterfaceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interface-type))))))
(common-lisp:progn
 (common-lisp:deftype instance-network-interface-specification-list () '(trivial-types:proper-list instance-network-interface-specification))
 (common-lisp:defun |make-instance-network-interface-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-network-interface-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-private-ip-address (:copier common-lisp:nil))
   (association common-lisp:nil :type (common-lisp:or instance-network-interface-association common-lisp:null))
   (primary common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-private-ip-address 'make-instance-private-ip-address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-private-ip-address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Association" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association)))
                       (aws-sdk/generator/shape::to-query-params "Primary" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'primary)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address))))))
(common-lisp:progn
 (common-lisp:deftype instance-private-ip-address-list () '(trivial-types:proper-list instance-private-ip-address))
 (common-lisp:defun |make-instance-private-ip-address-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-private-ip-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-specification (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (exclude-boot-volume common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-specification 'make-instance-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "ExcludeBootVolume" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'exclude-boot-volume))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-state (:copier common-lisp:nil)) (code common-lisp:nil :type (common-lisp:or integer common-lisp:null)) (name common-lisp:nil :type (common-lisp:or instance-state-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-state 'make-instance-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-state))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-state-change (:copier common-lisp:nil))
   (current-state common-lisp:nil :type (common-lisp:or instance-state common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (previous-state common-lisp:nil :type (common-lisp:or instance-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-state-change 'make-instance-state-change))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-state-change))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CurrentState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'current-state)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "PreviousState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'previous-state))))))
(common-lisp:progn
 (common-lisp:deftype instance-state-change-list () '(trivial-types:proper-list instance-state-change))
 (common-lisp:defun |make-instance-state-change-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-state-change))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-state-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-status (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (events common-lisp:nil :type (common-lisp:or instance-status-event-list common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-state common-lisp:nil :type (common-lisp:or instance-state common-lisp:null))
   (instance-status common-lisp:nil :type (common-lisp:or instance-status-summary common-lisp:null))
   (system-status common-lisp:nil :type (common-lisp:or instance-status-summary common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-status 'make-instance-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "Events" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'events)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-state)))
                       (aws-sdk/generator/shape::to-query-params "InstanceStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-status)))
                       (aws-sdk/generator/shape::to-query-params "SystemStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'system-status))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-status-details (:copier common-lisp:nil))
   (impaired-since common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or status-name common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-status-details 'make-instance-status-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-status-details))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImpairedSince" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'impaired-since)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:deftype instance-status-details-list () '(trivial-types:proper-list instance-status-details))
 (common-lisp:defun |make-instance-status-details-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-status-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-status-event (:copier common-lisp:nil))
   (instance-event-id common-lisp:nil :type (common-lisp:or instance-event-id common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or event-code common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (not-after common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (not-before common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (not-before-deadline common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-status-event 'make-instance-status-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-status-event))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceEventId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-event-id)))
                       (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "NotAfter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'not-after)))
                       (aws-sdk/generator/shape::to-query-params "NotBefore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'not-before)))
                       (aws-sdk/generator/shape::to-query-params "NotBeforeDeadline" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'not-before-deadline))))))
(common-lisp:progn
 (common-lisp:deftype instance-status-event-list () '(trivial-types:proper-list instance-status-event))
 (common-lisp:defun |make-instance-status-event-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-status-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-status-list () '(trivial-types:proper-list instance-status))
 (common-lisp:defun |make-instance-status-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-status-summary (:copier common-lisp:nil))
   (details common-lisp:nil :type (common-lisp:or instance-status-details-list common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or summary-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-status-summary 'make-instance-status-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-status-summary))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Details" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'details)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:deftype instance-storage-flag () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (instance-storage-info (:copier common-lisp:nil))
   (total-size-in-gb common-lisp:nil :type (common-lisp:or disk-size common-lisp:null))
   (disks common-lisp:nil :type (common-lisp:or disk-info-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-storage-info 'make-instance-storage-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-storage-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TotalSizeInGB" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-size-in-gb)))
                       (aws-sdk/generator/shape::to-query-params "Disks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disks))))))
(common-lisp:deftype instance-type () 'common-lisp:string)
(common-lisp:deftype instance-type-hypervisor () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance-type-info (:copier common-lisp:nil))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (current-generation common-lisp:nil :type (common-lisp:or current-generation-flag common-lisp:null))
   (free-tier-eligible common-lisp:nil :type (common-lisp:or free-tier-eligible-flag common-lisp:null))
   (supported-usage-classes common-lisp:nil :type (common-lisp:or usage-class-type-list common-lisp:null))
   (supported-root-device-types common-lisp:nil :type (common-lisp:or root-device-type-list common-lisp:null))
   (bare-metal common-lisp:nil :type (common-lisp:or bare-metal-flag common-lisp:null))
   (hypervisor common-lisp:nil :type (common-lisp:or instance-type-hypervisor common-lisp:null))
   (processor-info common-lisp:nil :type (common-lisp:or processor-info common-lisp:null))
   (vcpu-info common-lisp:nil :type (common-lisp:or vcpu-info common-lisp:null))
   (memory-info common-lisp:nil :type (common-lisp:or memory-info common-lisp:null))
   (instance-storage-supported common-lisp:nil :type (common-lisp:or instance-storage-flag common-lisp:null))
   (instance-storage-info common-lisp:nil :type (common-lisp:or instance-storage-info common-lisp:null))
   (ebs-info common-lisp:nil :type (common-lisp:or ebs-info common-lisp:null))
   (network-info common-lisp:nil :type (common-lisp:or network-info common-lisp:null))
   (gpu-info common-lisp:nil :type (common-lisp:or gpu-info common-lisp:null))
   (fpga-info common-lisp:nil :type (common-lisp:or fpga-info common-lisp:null))
   (placement-group-info common-lisp:nil :type (common-lisp:or placement-group-info common-lisp:null))
   (inference-accelerator-info common-lisp:nil :type (common-lisp:or inference-accelerator-info common-lisp:null))
   (hibernation-supported common-lisp:nil :type (common-lisp:or hibernation-flag common-lisp:null))
   (burstable-performance-supported common-lisp:nil :type (common-lisp:or burstable-performance-flag common-lisp:null))
   (dedicated-hosts-supported common-lisp:nil :type (common-lisp:or dedicated-host-flag common-lisp:null))
   (auto-recovery-supported common-lisp:nil :type (common-lisp:or auto-recovery-flag common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-type-info 'make-instance-type-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-type-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "CurrentGeneration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'current-generation)))
                       (aws-sdk/generator/shape::to-query-params "FreeTierEligible" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'free-tier-eligible)))
                       (aws-sdk/generator/shape::to-query-params "SupportedUsageClasses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'supported-usage-classes)))
                       (aws-sdk/generator/shape::to-query-params "SupportedRootDeviceTypes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'supported-root-device-types)))
                       (aws-sdk/generator/shape::to-query-params "BareMetal" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bare-metal)))
                       (aws-sdk/generator/shape::to-query-params "Hypervisor" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hypervisor)))
                       (aws-sdk/generator/shape::to-query-params "ProcessorInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'processor-info)))
                       (aws-sdk/generator/shape::to-query-params "VCpuInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vcpu-info)))
                       (aws-sdk/generator/shape::to-query-params "MemoryInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'memory-info)))
                       (aws-sdk/generator/shape::to-query-params "InstanceStorageSupported" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-storage-supported)))
                       (aws-sdk/generator/shape::to-query-params "InstanceStorageInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-storage-info)))
                       (aws-sdk/generator/shape::to-query-params "EbsInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-info)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-info)))
                       (aws-sdk/generator/shape::to-query-params "GpuInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gpu-info)))
                       (aws-sdk/generator/shape::to-query-params "FpgaInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-info)))
                       (aws-sdk/generator/shape::to-query-params "PlacementGroupInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement-group-info)))
                       (aws-sdk/generator/shape::to-query-params "InferenceAcceleratorInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'inference-accelerator-info)))
                       (aws-sdk/generator/shape::to-query-params "HibernationSupported" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hibernation-supported)))
                       (aws-sdk/generator/shape::to-query-params "BurstablePerformanceSupported"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'burstable-performance-supported)))
                       (aws-sdk/generator/shape::to-query-params "DedicatedHostsSupported" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dedicated-hosts-supported)))
                       (aws-sdk/generator/shape::to-query-params "AutoRecoverySupported" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-recovery-supported))))))
(common-lisp:progn
 (common-lisp:deftype instance-type-info-list () '(trivial-types:proper-list instance-type-info))
 (common-lisp:defun |make-instance-type-info-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-type-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instance-type-list () '(trivial-types:proper-list instance-type))
 (common-lisp:defun |make-instance-type-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-type-offering (:copier common-lisp:nil))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (location-type common-lisp:nil :type (common-lisp:or location-type common-lisp:null))
   (location common-lisp:nil :type (common-lisp:or location common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-type-offering 'make-instance-type-offering))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-type-offering))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "LocationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'location-type)))
                       (aws-sdk/generator/shape::to-query-params "Location" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'location))))))
(common-lisp:progn
 (common-lisp:deftype instance-type-offerings-list () '(trivial-types:proper-list instance-type-offering))
 (common-lisp:defun |make-instance-type-offerings-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-type-offering))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-usage (:copier common-lisp:nil))
   (account-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (used-instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-usage 'make-instance-usage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape instance-usage))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AccountId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'account-id)))
                       (aws-sdk/generator/shape::to-query-params "UsedInstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'used-instance-count))))))
(common-lisp:progn
 (common-lisp:deftype instance-usage-set () '(trivial-types:proper-list instance-usage))
 (common-lisp:defun |make-instance-usage-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-usage))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype interface-permission-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (internet-gateway (:copier common-lisp:nil))
   (attachments common-lisp:nil :type (common-lisp:or internet-gateway-attachment-list common-lisp:null))
   (internet-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'internet-gateway 'make-internet-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape internet-gateway))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachments)))
                       (aws-sdk/generator/shape::to-query-params "InternetGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'internet-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (internet-gateway-attachment (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or attachment-status common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'internet-gateway-attachment 'make-internet-gateway-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape internet-gateway-attachment))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:deftype internet-gateway-attachment-list () '(trivial-types:proper-list internet-gateway-attachment))
 (common-lisp:defun |make-internet-gateway-attachment-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list internet-gateway-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype internet-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype internet-gateway-id-list () '(trivial-types:proper-list internet-gateway-id))
 (common-lisp:defun |make-internet-gateway-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list internet-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype internet-gateway-list () '(trivial-types:proper-list internet-gateway))
 (common-lisp:defun |make-internet-gateway-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list internet-gateway))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ip-permission (:copier common-lisp:nil))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ip-protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ip-ranges common-lisp:nil :type (common-lisp:or ip-range-list common-lisp:null))
   (ipv6ranges common-lisp:nil :type (common-lisp:or ipv6range-list common-lisp:null))
   (prefix-list-ids common-lisp:nil :type (common-lisp:or prefix-list-id-list common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (user-id-group-pairs common-lisp:nil :type (common-lisp:or user-id-group-pair-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ip-permission 'make-ip-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ip-permission))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "IpProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-protocol)))
                       (aws-sdk/generator/shape::to-query-params "IpRanges" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-ranges)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Ranges" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6ranges)))
                       (aws-sdk/generator/shape::to-query-params "PrefixListIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix-list-ids)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port)))
                       (aws-sdk/generator/shape::to-query-params "UserIdGroupPairs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-id-group-pairs))))))
(common-lisp:progn
 (common-lisp:deftype ip-permission-list () '(trivial-types:proper-list ip-permission))
 (common-lisp:defun |make-ip-permission-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ip-permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ip-range (:copier common-lisp:nil)) (cidr-ip common-lisp:nil :type (common-lisp:or string common-lisp:null)) (description common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ip-range 'make-ip-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ip-range))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-ip)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description))))))
(common-lisp:progn
 (common-lisp:deftype ip-range-list () '(trivial-types:proper-list ip-range))
 (common-lisp:defun |make-ip-range-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ip-range)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ip-ranges () '(trivial-types:proper-list string))
 (common-lisp:defun |make-ip-ranges| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string)) aws-sdk/generator/shape::members))
(common-lisp:deftype ipv4pool-ec2id () 'common-lisp:string)
(common-lisp:deftype ipv6address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ipv6address-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-ipv6address-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ipv6cidr-association (:copier common-lisp:nil))
   (ipv6cidr common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (associated-resource common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipv6cidr-association 'make-ipv6cidr-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ipv6cidr-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6Cidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr)))
                       (aws-sdk/generator/shape::to-query-params "AssociatedResource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associated-resource))))))
(common-lisp:progn
 (common-lisp:deftype ipv6cidr-association-set () '(trivial-types:proper-list ipv6cidr-association))
 (common-lisp:defun |make-ipv6cidr-association-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ipv6cidr-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ipv6cidr-block (:copier common-lisp:nil)) (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipv6cidr-block 'make-ipv6cidr-block))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ipv6cidr-block))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block))))))
(common-lisp:progn
 (common-lisp:deftype ipv6cidr-block-set () '(trivial-types:proper-list ipv6cidr-block))
 (common-lisp:defun |make-ipv6cidr-block-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ipv6cidr-block))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ipv6flag () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (ipv6pool (:copier common-lisp:nil))
   (pool-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pool-cidr-blocks common-lisp:nil :type (common-lisp:or pool-cidr-blocks-set common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipv6pool 'make-ipv6pool))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ipv6pool))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "PoolCidrBlocks" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-cidr-blocks)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype ipv6pool-ec2id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ipv6pool-id-list () '(trivial-types:proper-list ipv6pool-ec2id))
 (common-lisp:defun |make-ipv6pool-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ipv6pool-ec2id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ipv6pool-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype ipv6pool-set () '(trivial-types:proper-list ipv6pool))
 (common-lisp:defun |make-ipv6pool-set| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ipv6pool)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ipv6range (:copier common-lisp:nil)) (cidr-ipv6 common-lisp:nil :type (common-lisp:or string common-lisp:null)) (description common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipv6range 'make-ipv6range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape ipv6range))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrIpv6" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-ipv6)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description))))))
(common-lisp:progn
 (common-lisp:deftype ipv6range-list () '(trivial-types:proper-list ipv6range))
 (common-lisp:defun |make-ipv6range-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ipv6range))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ipv6support-value () 'common-lisp:string)
(common-lisp:deftype kernel-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype key-name-string-list () '(trivial-types:proper-list key-pair-name))
 (common-lisp:defun |make-key-name-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list key-pair-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (key-pair (:copier common-lisp:nil))
   (key-fingerprint common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-material common-lisp:nil :type (common-lisp:or sensitive-user-data common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-pair-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-pair 'make-key-pair))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape key-pair))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KeyFingerprint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-fingerprint)))
                       (aws-sdk/generator/shape::to-query-params "KeyMaterial" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-material)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "KeyPairId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-pair-id))))))
(common-lisp:deftype key-pair-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype key-pair-id-string-list () '(trivial-types:proper-list key-pair-id))
 (common-lisp:defun |make-key-pair-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list key-pair-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (key-pair-info (:copier common-lisp:nil))
   (key-pair-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-fingerprint common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-pair-info 'make-key-pair-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape key-pair-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KeyPairId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-pair-id)))
                       (aws-sdk/generator/shape::to-query-params "KeyFingerprint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-fingerprint)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype key-pair-list () '(trivial-types:proper-list key-pair-info))
 (common-lisp:defun |make-key-pair-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list key-pair-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype key-pair-name () 'common-lisp:string)
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (last-error (:copier common-lisp:nil)) (message common-lisp:nil :type (common-lisp:or string common-lisp:null)) (code common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'last-error 'make-last-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape last-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message)))
                       (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-permission (:copier common-lisp:nil))
   (group common-lisp:nil :type (common-lisp:or permission-group common-lisp:null))
   (user-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-permission 'make-launch-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-permission))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Group" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group)))
                       (aws-sdk/generator/shape::to-query-params "UserId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-id))))))
(common-lisp:progn
 (common-lisp:deftype launch-permission-list () '(trivial-types:proper-list launch-permission))
 (common-lisp:defun |make-launch-permission-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-permission-modifications (:copier common-lisp:nil))
   (add common-lisp:nil :type (common-lisp:or launch-permission-list common-lisp:null))
   (remove common-lisp:nil :type (common-lisp:or launch-permission-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-permission-modifications 'make-launch-permission-modifications))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-permission-modifications))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Add" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add)))
                       (aws-sdk/generator/shape::to-query-params "Remove" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-specification (:copier common-lisp:nil))
   (user-data common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (security-groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (addressing-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-list common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or iam-instance-profile-specification common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or instance-network-interface-specification-list common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or spot-placement common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or run-instances-monitoring-enabled common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-specification 'make-launch-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "AddressingType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'addressing-type)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring))))))
(common-lisp:progn
 (common-lisp:deftype launch-specs-list () '(trivial-types:proper-list spot-fleet-launch-specification))
 (common-lisp:defun |make-launch-specs-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list spot-fleet-launch-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template (:copier common-lisp:nil))
   (launch-template-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (create-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (created-by common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (default-version-number common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (latest-version-number common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template 'make-launch-template))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "CreatedBy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'created-by)))
                       (aws-sdk/generator/shape::to-query-params "DefaultVersionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-version-number)))
                       (aws-sdk/generator/shape::to-query-params "LatestVersionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'latest-version-number)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-and-overrides-response (:copier common-lisp:nil))
   (launch-template-specification common-lisp:nil :type (common-lisp:or fleet-launch-template-specification common-lisp:null))
   (overrides common-lisp:nil :type (common-lisp:or fleet-launch-template-overrides common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-and-overrides-response 'make-launch-template-and-overrides-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-and-overrides-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-specification)))
    (aws-sdk/generator/shape::to-query-params "Overrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'overrides))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-block-device-mapping (:copier common-lisp:nil))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtual-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs common-lisp:nil :type (common-lisp:or launch-template-ebs-block-device common-lisp:null))
   (no-device common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-block-device-mapping 'make-launch-template-block-device-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-block-device-mapping))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "VirtualName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-name)))
                       (aws-sdk/generator/shape::to-query-params "Ebs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs)))
                       (aws-sdk/generator/shape::to-query-params "NoDevice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'no-device))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-block-device-mapping-list () '(trivial-types:proper-list launch-template-block-device-mapping))
 (common-lisp:defun |make-launch-template-block-device-mapping-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-block-device-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-block-device-mapping-request (:copier common-lisp:nil))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtual-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs common-lisp:nil :type (common-lisp:or launch-template-ebs-block-device-request common-lisp:null))
   (no-device common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-block-device-mapping-request 'make-launch-template-block-device-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-block-device-mapping-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "VirtualName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-name)))
                       (aws-sdk/generator/shape::to-query-params "Ebs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs)))
                       (aws-sdk/generator/shape::to-query-params "NoDevice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'no-device))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-block-device-mapping-request-list () '(trivial-types:proper-list launch-template-block-device-mapping-request))
 (common-lisp:defun |make-launch-template-block-device-mapping-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-block-device-mapping-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-capacity-reservation-specification-request (:copier common-lisp:nil))
   (capacity-reservation-preference common-lisp:nil :type (common-lisp:or capacity-reservation-preference common-lisp:null))
   (capacity-reservation-target common-lisp:nil :type (common-lisp:or capacity-reservation-target common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-capacity-reservation-specification-request 'make-launch-template-capacity-reservation-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-capacity-reservation-specification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CapacityReservationPreference" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-preference)))
    (aws-sdk/generator/shape::to-query-params "CapacityReservationTarget" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-target))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-capacity-reservation-specification-response (:copier common-lisp:nil))
   (capacity-reservation-preference common-lisp:nil :type (common-lisp:or capacity-reservation-preference common-lisp:null))
   (capacity-reservation-target common-lisp:nil :type (common-lisp:or capacity-reservation-target-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-capacity-reservation-specification-response 'make-launch-template-capacity-reservation-specification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-capacity-reservation-specification-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CapacityReservationPreference" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-preference)))
    (aws-sdk/generator/shape::to-query-params "CapacityReservationTarget" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-target))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-config (:copier common-lisp:nil))
   (launch-template-specification common-lisp:nil :type (common-lisp:or fleet-launch-template-specification common-lisp:null))
   (overrides common-lisp:nil :type (common-lisp:or launch-template-overrides-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-config 'make-launch-template-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchTemplateSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-specification)))
    (aws-sdk/generator/shape::to-query-params "Overrides" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'overrides))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-config-list () '(trivial-types:proper-list launch-template-config))
 (common-lisp:defun |make-launch-template-config-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-cpu-options (:copier common-lisp:nil))
   (core-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (threads-per-core common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-cpu-options 'make-launch-template-cpu-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-cpu-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CoreCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'core-count)))
                       (aws-sdk/generator/shape::to-query-params "ThreadsPerCore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'threads-per-core))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-cpu-options-request (:copier common-lisp:nil))
   (core-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (threads-per-core common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-cpu-options-request 'make-launch-template-cpu-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-cpu-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CoreCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'core-count)))
                       (aws-sdk/generator/shape::to-query-params "ThreadsPerCore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'threads-per-core))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-ebs-block-device (:copier common-lisp:nil))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or kms-key-id common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or snapshot-id common-lisp:null))
   (volume-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-ebs-block-device 'make-launch-template-ebs-block-device))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-ebs-block-device))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Iops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iops)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-size)))
                       (aws-sdk/generator/shape::to-query-params "VolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-type))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-ebs-block-device-request (:copier common-lisp:nil))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or kms-key-id common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or snapshot-id common-lisp:null))
   (volume-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-ebs-block-device-request 'make-launch-template-ebs-block-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-ebs-block-device-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Iops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iops)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-size)))
                       (aws-sdk/generator/shape::to-query-params "VolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-type))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-elastic-inference-accelerator (:copier common-lisp:nil))
   (type (common-lisp:error ":type is required") :type (common-lisp:or string common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or launch-template-elastic-inference-accelerator-count common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-elastic-inference-accelerator 'make-launch-template-elastic-inference-accelerator))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-elastic-inference-accelerator))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count))))))
(common-lisp:deftype launch-template-elastic-inference-accelerator-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype launch-template-elastic-inference-accelerator-list () '(trivial-types:proper-list launch-template-elastic-inference-accelerator))
 (common-lisp:defun |make-launch-template-elastic-inference-accelerator-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-elastic-inference-accelerator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-elastic-inference-accelerator-response (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-elastic-inference-accelerator-response 'make-launch-template-elastic-inference-accelerator-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-elastic-inference-accelerator-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-elastic-inference-accelerator-response-list () '(trivial-types:proper-list launch-template-elastic-inference-accelerator-response))
 (common-lisp:defun |make-launch-template-elastic-inference-accelerator-response-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-elastic-inference-accelerator-response))
   aws-sdk/generator/shape::members))
(common-lisp:deftype launch-template-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (launch-template-hibernation-options (:copier common-lisp:nil)) (configured common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-hibernation-options 'make-launch-template-hibernation-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-hibernation-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Configured" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'configured))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-hibernation-options-request (:copier common-lisp:nil)) (configured common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-hibernation-options-request 'make-launch-template-hibernation-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-hibernation-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Configured" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'configured))))))
(common-lisp:deftype launch-template-http-tokens-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (launch-template-iam-instance-profile-specification (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-iam-instance-profile-specification 'make-launch-template-iam-instance-profile-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-iam-instance-profile-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Arn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'arn)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-iam-instance-profile-specification-request (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-iam-instance-profile-specification-request 'make-launch-template-iam-instance-profile-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-iam-instance-profile-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Arn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'arn)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:deftype launch-template-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype launch-template-id-string-list () '(trivial-types:proper-list launch-template-id))
 (common-lisp:defun |make-launch-template-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-instance-market-options (:copier common-lisp:nil))
   (market-type common-lisp:nil :type (common-lisp:or market-type common-lisp:null))
   (spot-options common-lisp:nil :type (common-lisp:or launch-template-spot-market-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-instance-market-options 'make-launch-template-instance-market-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-instance-market-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MarketType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'market-type)))
                       (aws-sdk/generator/shape::to-query-params "SpotOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-options))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-instance-market-options-request (:copier common-lisp:nil))
   (market-type common-lisp:nil :type (common-lisp:or market-type common-lisp:null))
   (spot-options common-lisp:nil :type (common-lisp:or launch-template-spot-market-options-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-instance-market-options-request 'make-launch-template-instance-market-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-instance-market-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MarketType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'market-type)))
                       (aws-sdk/generator/shape::to-query-params "SpotOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-options))))))
(common-lisp:deftype launch-template-instance-metadata-endpoint-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (launch-template-instance-metadata-options (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or launch-template-instance-metadata-options-state common-lisp:null))
   (http-tokens common-lisp:nil :type (common-lisp:or launch-template-http-tokens-state common-lisp:null))
   (http-put-response-hop-limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (http-endpoint common-lisp:nil :type (common-lisp:or launch-template-instance-metadata-endpoint-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-instance-metadata-options 'make-launch-template-instance-metadata-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-instance-metadata-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "HttpTokens" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-tokens)))
                       (aws-sdk/generator/shape::to-query-params "HttpPutResponseHopLimit" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-put-response-hop-limit)))
                       (aws-sdk/generator/shape::to-query-params "HttpEndpoint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-endpoint))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-instance-metadata-options-request (:copier common-lisp:nil))
   (http-tokens common-lisp:nil :type (common-lisp:or launch-template-http-tokens-state common-lisp:null))
   (http-put-response-hop-limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (http-endpoint common-lisp:nil :type (common-lisp:or launch-template-instance-metadata-endpoint-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-instance-metadata-options-request 'make-launch-template-instance-metadata-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-instance-metadata-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HttpTokens" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-tokens)))
                       (aws-sdk/generator/shape::to-query-params "HttpPutResponseHopLimit" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-put-response-hop-limit)))
                       (aws-sdk/generator/shape::to-query-params "HttpEndpoint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-endpoint))))))
(common-lisp:deftype launch-template-instance-metadata-options-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (launch-template-instance-network-interface-specification (:copier common-lisp:nil))
   (associate-public-ip-address common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (device-index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or group-id-string-list common-lisp:null))
   (interface-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or instance-ipv6address-list common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or network-interface-id common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-addresses common-lisp:nil :type (common-lisp:or private-ip-address-specification-list common-lisp:null))
   (secondary-private-ip-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-instance-network-interface-specification 'make-launch-template-instance-network-interface-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-instance-network-interface-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociatePublicIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associate-public-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DeviceIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-index)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "InterfaceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interface-type)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address-count)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses)))
                       (aws-sdk/generator/shape::to-query-params "SecondaryPrivateIpAddressCount"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'secondary-private-ip-address-count)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-instance-network-interface-specification-list () '(trivial-types:proper-list launch-template-instance-network-interface-specification))
 (common-lisp:defun |make-launch-template-instance-network-interface-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-instance-network-interface-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-instance-network-interface-specification-request (:copier common-lisp:nil))
   (associate-public-ip-address common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (device-index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or security-group-id-string-list common-lisp:null))
   (interface-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or instance-ipv6address-list-request common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or network-interface-id common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-addresses common-lisp:nil :type (common-lisp:or private-ip-address-specification-list common-lisp:null))
   (secondary-private-ip-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-instance-network-interface-specification-request 'make-launch-template-instance-network-interface-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-instance-network-interface-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociatePublicIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associate-public-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DeviceIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-index)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "InterfaceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interface-type)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address-count)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses)))
                       (aws-sdk/generator/shape::to-query-params "SecondaryPrivateIpAddressCount"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'secondary-private-ip-address-count)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-instance-network-interface-specification-request-list () '(trivial-types:proper-list launch-template-instance-network-interface-specification-request))
 (common-lisp:defun |make-launch-template-instance-network-interface-specification-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-instance-network-interface-specification-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-license-configuration (:copier common-lisp:nil)) (license-configuration-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-license-configuration 'make-launch-template-license-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-license-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LicenseConfigurationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-configuration-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-license-configuration-request (:copier common-lisp:nil)) (license-configuration-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-license-configuration-request 'make-launch-template-license-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-license-configuration-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LicenseConfigurationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-configuration-arn))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-license-list () '(trivial-types:proper-list launch-template-license-configuration))
 (common-lisp:defun |make-launch-template-license-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-license-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype launch-template-license-specification-list-request () '(trivial-types:proper-list launch-template-license-configuration-request))
 (common-lisp:defun |make-launch-template-license-specification-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-license-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype launch-template-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype launch-template-name-string-list () '(trivial-types:proper-list launch-template-name))
 (common-lisp:defun |make-launch-template-name-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-overrides (:copier common-lisp:nil))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (spot-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (weighted-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-overrides 'make-launch-template-overrides))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-overrides))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "SpotPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-price)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "WeightedCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'weighted-capacity)))
                       (aws-sdk/generator/shape::to-query-params "Priority" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'priority))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-overrides-list () '(trivial-types:proper-list launch-template-overrides))
 (common-lisp:defun |make-launch-template-overrides-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-overrides))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-placement (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (affinity common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (host-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (spread-domain common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (host-resource-group-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (partition-number common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-placement 'make-launch-template-placement))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-placement))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Affinity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'affinity)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "HostId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id)))
                       (aws-sdk/generator/shape::to-query-params "Tenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tenancy)))
                       (aws-sdk/generator/shape::to-query-params "SpreadDomain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spread-domain)))
                       (aws-sdk/generator/shape::to-query-params "HostResourceGroupArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-resource-group-arn)))
                       (aws-sdk/generator/shape::to-query-params "PartitionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'partition-number))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-placement-request (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (affinity common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or placement-group-name common-lisp:null))
   (host-id common-lisp:nil :type (common-lisp:or dedicated-host-id common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (spread-domain common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (host-resource-group-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (partition-number common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-placement-request 'make-launch-template-placement-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-placement-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Affinity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'affinity)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "HostId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id)))
                       (aws-sdk/generator/shape::to-query-params "Tenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tenancy)))
                       (aws-sdk/generator/shape::to-query-params "SpreadDomain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spread-domain)))
                       (aws-sdk/generator/shape::to-query-params "HostResourceGroupArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-resource-group-arn)))
                       (aws-sdk/generator/shape::to-query-params "PartitionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'partition-number))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-set () '(trivial-types:proper-list launch-template))
 (common-lisp:defun |make-launch-template-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-specification (:copier common-lisp:nil))
   (launch-template-id common-lisp:nil :type (common-lisp:or launch-template-id common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-specification 'make-launch-template-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "Version" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-spot-market-options (:copier common-lisp:nil))
   (max-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-instance-type common-lisp:nil :type (common-lisp:or spot-instance-type common-lisp:null))
   (block-duration-minutes common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or instance-interruption-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-spot-market-options 'make-launch-template-spot-market-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-spot-market-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MaxPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-price)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-type)))
                       (aws-sdk/generator/shape::to-query-params "BlockDurationMinutes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-duration-minutes)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-spot-market-options-request (:copier common-lisp:nil))
   (max-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-instance-type common-lisp:nil :type (common-lisp:or spot-instance-type common-lisp:null))
   (block-duration-minutes common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or instance-interruption-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-spot-market-options-request 'make-launch-template-spot-market-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-spot-market-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MaxPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-price)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-type)))
                       (aws-sdk/generator/shape::to-query-params "BlockDurationMinutes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-duration-minutes)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-tag-specification (:copier common-lisp:nil))
   (resource-type common-lisp:nil :type (common-lisp:or resource-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-tag-specification 'make-launch-template-tag-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-tag-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-tag-specification-list () '(trivial-types:proper-list launch-template-tag-specification))
 (common-lisp:defun |make-launch-template-tag-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-tag-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-tag-specification-request (:copier common-lisp:nil))
   (resource-type common-lisp:nil :type (common-lisp:or resource-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-tag-specification-request 'make-launch-template-tag-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-tag-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-tag-specification-request-list () '(trivial-types:proper-list launch-template-tag-specification-request))
 (common-lisp:defun |make-launch-template-tag-specification-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-tag-specification-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-template-version (:copier common-lisp:nil))
   (launch-template-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (version-number common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (version-description common-lisp:nil :type (common-lisp:or version-description common-lisp:null))
   (create-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (created-by common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (default-version common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (launch-template-data common-lisp:nil :type (common-lisp:or response-launch-template-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-template-version 'make-launch-template-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-template-version))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "VersionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version-number)))
                       (aws-sdk/generator/shape::to-query-params "VersionDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'version-description)))
                       (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "CreatedBy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'created-by)))
                       (aws-sdk/generator/shape::to-query-params "DefaultVersion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-version)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-data))))))
(common-lisp:progn
 (common-lisp:deftype launch-template-version-set () '(trivial-types:proper-list launch-template-version))
 (common-lisp:defun |make-launch-template-version-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list launch-template-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-templates-monitoring (:copier common-lisp:nil)) (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-templates-monitoring 'make-launch-templates-monitoring))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-templates-monitoring))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-templates-monitoring-request (:copier common-lisp:nil)) (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'launch-templates-monitoring-request 'make-launch-templates-monitoring-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape launch-templates-monitoring-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (license-configuration (:copier common-lisp:nil)) (license-configuration-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'license-configuration 'make-license-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape license-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LicenseConfigurationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-configuration-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (license-configuration-request (:copier common-lisp:nil)) (license-configuration-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'license-configuration-request 'make-license-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape license-configuration-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LicenseConfigurationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-configuration-arn))))))
(common-lisp:progn
 (common-lisp:deftype license-list () '(trivial-types:proper-list license-configuration))
 (common-lisp:defun |make-license-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list license-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype license-specification-list-request () '(trivial-types:proper-list license-configuration-request))
 (common-lisp:defun |make-license-specification-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list license-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype listing-state () 'common-lisp:string)
(common-lisp:deftype listing-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (load-balancers-config (:copier common-lisp:nil))
   (classic-load-balancers-config common-lisp:nil :type (common-lisp:or classic-load-balancers-config common-lisp:null))
   (target-groups-config common-lisp:nil :type (common-lisp:or target-groups-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'load-balancers-config 'make-load-balancers-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape load-balancers-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClassicLoadBalancersConfig" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'classic-load-balancers-config)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupsConfig" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-groups-config))))))
(common-lisp:progn
 (common-lisp:defstruct (load-permission (:copier common-lisp:nil)) (user-id common-lisp:nil :type (common-lisp:or string common-lisp:null)) (group common-lisp:nil :type (common-lisp:or permission-group common-lisp:null)))
 (common-lisp:export (common-lisp:list 'load-permission 'make-load-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape load-permission))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "UserId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-id)))
                       (aws-sdk/generator/shape::to-query-params "Group" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group))))))
(common-lisp:progn
 (common-lisp:deftype load-permission-list () '(trivial-types:proper-list load-permission))
 (common-lisp:defun |make-load-permission-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list load-permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype load-permission-list-request () '(trivial-types:proper-list load-permission-request))
 (common-lisp:defun |make-load-permission-list-request| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list load-permission-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (load-permission-modifications (:copier common-lisp:nil))
   (add common-lisp:nil :type (common-lisp:or load-permission-list-request common-lisp:null))
   (remove common-lisp:nil :type (common-lisp:or load-permission-list-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'load-permission-modifications 'make-load-permission-modifications))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape load-permission-modifications))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Add" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add)))
                       (aws-sdk/generator/shape::to-query-params "Remove" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove))))))
(common-lisp:progn
 (common-lisp:defstruct (load-permission-request (:copier common-lisp:nil))
   (group common-lisp:nil :type (common-lisp:or permission-group common-lisp:null))
   (user-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'load-permission-request 'make-load-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape load-permission-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Group" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group)))
                       (aws-sdk/generator/shape::to-query-params "UserId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-id))))))
(common-lisp:progn
 (common-lisp:defstruct (local-gateway (:copier common-lisp:nil))
   (local-gateway-id common-lisp:nil :type (common-lisp:or local-gateway-id common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'local-gateway 'make-local-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape local-gateway))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype local-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype local-gateway-id-set () '(trivial-types:proper-list local-gateway-id))
 (common-lisp:defun |make-local-gateway-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype local-gateway-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (local-gateway-route (:copier common-lisp:nil))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (local-gateway-virtual-interface-group-id common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-group-id common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or local-gateway-route-type common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or local-gateway-route-state common-lisp:null))
   (local-gateway-route-table-id common-lisp:nil :type (common-lisp:or local-gateway-routetable-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'local-gateway-route 'make-local-gateway-route))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape local-gateway-route))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceGroupId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-group-id)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id))))))
(common-lisp:progn
 (common-lisp:deftype local-gateway-route-list () '(trivial-types:proper-list local-gateway-route))
 (common-lisp:defun |make-local-gateway-route-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-route))
   aws-sdk/generator/shape::members))
(common-lisp:deftype local-gateway-route-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (local-gateway-route-table (:copier common-lisp:nil))
   (local-gateway-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or local-gateway-id common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'local-gateway-route-table 'make-local-gateway-route-table))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape local-gateway-route-table))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype local-gateway-route-table-id-set () '(trivial-types:proper-list local-gateway-routetable-id))
 (common-lisp:defun |make-local-gateway-route-table-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-routetable-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype local-gateway-route-table-set () '(trivial-types:proper-list local-gateway-route-table))
 (common-lisp:defun |make-local-gateway-route-table-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-route-table))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (local-gateway-route-table-virtual-interface-group-association (:copier common-lisp:nil))
   (local-gateway-route-table-virtual-interface-group-association-id common-lisp:nil :type (common-lisp:or local-gateway-route-table-virtual-interface-group-association-id common-lisp:null))
   (local-gateway-virtual-interface-group-id common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-group-id common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (local-gateway-route-table-id common-lisp:nil :type (common-lisp:or local-gateway-id common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'local-gateway-route-table-virtual-interface-group-association 'make-local-gateway-route-table-virtual-interface-group-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape local-gateway-route-table-virtual-interface-group-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-virtual-interface-group-association-id)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-group-id)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype local-gateway-route-table-virtual-interface-group-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype local-gateway-route-table-virtual-interface-group-association-id-set () '(trivial-types:proper-list local-gateway-route-table-virtual-interface-group-association-id))
 (common-lisp:defun |make-local-gateway-route-table-virtual-interface-group-association-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-route-table-virtual-interface-group-association-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype local-gateway-route-table-virtual-interface-group-association-set () '(trivial-types:proper-list local-gateway-route-table-virtual-interface-group-association))
 (common-lisp:defun |make-local-gateway-route-table-virtual-interface-group-association-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-route-table-virtual-interface-group-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (local-gateway-route-table-vpc-association (:copier common-lisp:nil))
   (local-gateway-route-table-vpc-association-id common-lisp:nil :type (common-lisp:or local-gateway-route-table-vpc-association-id common-lisp:null))
   (local-gateway-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'local-gateway-route-table-vpc-association 'make-local-gateway-route-table-vpc-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape local-gateway-route-table-vpc-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableVpcAssociationId"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-vpc-association-id)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype local-gateway-route-table-vpc-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype local-gateway-route-table-vpc-association-id-set () '(trivial-types:proper-list local-gateway-route-table-vpc-association-id))
 (common-lisp:defun |make-local-gateway-route-table-vpc-association-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-route-table-vpc-association-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype local-gateway-route-table-vpc-association-set () '(trivial-types:proper-list local-gateway-route-table-vpc-association))
 (common-lisp:defun |make-local-gateway-route-table-vpc-association-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-route-table-vpc-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype local-gateway-route-type () 'common-lisp:string)
(common-lisp:deftype local-gateway-routetable-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype local-gateway-set () '(trivial-types:proper-list local-gateway))
 (common-lisp:defun |make-local-gateway-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (local-gateway-virtual-interface (:copier common-lisp:nil))
   (local-gateway-virtual-interface-id common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-id common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vlan common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (local-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (peer-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (local-bgp-asn common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (peer-bgp-asn common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'local-gateway-virtual-interface 'make-local-gateway-virtual-interface))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape local-gateway-virtual-interface))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-id)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "Vlan" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vlan)))
    (aws-sdk/generator/shape::to-query-params "LocalAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-address)))
    (aws-sdk/generator/shape::to-query-params "PeerAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-address)))
    (aws-sdk/generator/shape::to-query-params "LocalBgpAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-bgp-asn)))
    (aws-sdk/generator/shape::to-query-params "PeerBgpAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peer-bgp-asn)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (local-gateway-virtual-interface-group (:copier common-lisp:nil))
   (local-gateway-virtual-interface-group-id common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-group-id common-lisp:null))
   (local-gateway-virtual-interface-ids common-lisp:nil :type (common-lisp:or local-gateway-virtual-interface-id-set common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'local-gateway-virtual-interface-group 'make-local-gateway-virtual-interface-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape local-gateway-virtual-interface-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceGroupId"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-group-id)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayVirtualInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-virtual-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype local-gateway-virtual-interface-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype local-gateway-virtual-interface-group-id-set () '(trivial-types:proper-list local-gateway-virtual-interface-group-id))
 (common-lisp:defun |make-local-gateway-virtual-interface-group-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-virtual-interface-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype local-gateway-virtual-interface-group-set () '(trivial-types:proper-list local-gateway-virtual-interface-group))
 (common-lisp:defun |make-local-gateway-virtual-interface-group-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-virtual-interface-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype local-gateway-virtual-interface-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype local-gateway-virtual-interface-id-set () '(trivial-types:proper-list local-gateway-virtual-interface-id))
 (common-lisp:defun |make-local-gateway-virtual-interface-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-virtual-interface-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype local-gateway-virtual-interface-set () '(trivial-types:proper-list local-gateway-virtual-interface))
 (common-lisp:defun |make-local-gateway-virtual-interface-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list local-gateway-virtual-interface))
   aws-sdk/generator/shape::members))
(common-lisp:deftype location () 'common-lisp:string)
(common-lisp:deftype location-type () 'common-lisp:string)
(common-lisp:deftype log-destination-type () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype market-type () 'common-lisp:string)
(common-lisp:deftype max-ipv4addr-per-interface () 'common-lisp:integer)
(common-lisp:deftype max-ipv6addr-per-interface () 'common-lisp:integer)
(common-lisp:deftype max-network-interfaces () 'common-lisp:integer)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype membership-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (memory-info (:copier common-lisp:nil)) (size-in-mi-b common-lisp:nil :type (common-lisp:or memory-size common-lisp:null)))
 (common-lisp:export (common-lisp:list 'memory-info 'make-memory-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape memory-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SizeInMiB" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size-in-mi-b))))))
(common-lisp:deftype memory-size () 'common-lisp:integer)
(common-lisp:deftype millisecond-date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (modify-availability-zone-group-request (:copier common-lisp:nil))
   (group-name (common-lisp:error ":group-name is required") :type (common-lisp:or string common-lisp:null))
   (opt-in-status (common-lisp:error ":opt-in-status is required") :type (common-lisp:or modify-availability-zone-opt-in-status common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-availability-zone-group-request 'make-modify-availability-zone-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-availability-zone-group-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "OptInStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'opt-in-status)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-availability-zone-group-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-availability-zone-group-result 'make-modify-availability-zone-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-availability-zone-group-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:deftype modify-availability-zone-opt-in-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (modify-capacity-reservation-request (:copier common-lisp:nil))
   (capacity-reservation-id (common-lisp:error ":capacity-reservation-id is required") :type (common-lisp:or capacity-reservation-id common-lisp:null))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (end-date-type common-lisp:nil :type (common-lisp:or end-date-type common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-capacity-reservation-request 'make-modify-capacity-reservation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-capacity-reservation-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CapacityReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "EndDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-date)))
                       (aws-sdk/generator/shape::to-query-params "EndDateType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-date-type)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-capacity-reservation-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-capacity-reservation-result 'make-modify-capacity-reservation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-capacity-reservation-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-client-vpn-endpoint-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (server-certificate-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-log-options common-lisp:nil :type (common-lisp:or connection-log-options common-lisp:null))
   (dns-servers common-lisp:nil :type (common-lisp:or dns-servers-options-modify-structure common-lisp:null))
   (vpn-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (split-tunnel common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or client-vpn-security-group-id-set common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-client-vpn-endpoint-request 'make-modify-client-vpn-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-client-vpn-endpoint-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "ServerCertificateArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'server-certificate-arn)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionLogOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-log-options)))
                       (aws-sdk/generator/shape::to-query-params "DnsServers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-servers)))
                       (aws-sdk/generator/shape::to-query-params "VpnPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-port)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "SplitTunnel" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'split-tunnel)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-client-vpn-endpoint-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-client-vpn-endpoint-result 'make-modify-client-vpn-endpoint-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-client-vpn-endpoint-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-default-credit-specification-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-family (common-lisp:error ":instance-family is required") :type (common-lisp:or unlimited-supported-instance-family common-lisp:null))
   (cpu-credits (common-lisp:error ":cpu-credits is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-default-credit-specification-request 'make-modify-default-credit-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-default-credit-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family)))
                       (aws-sdk/generator/shape::to-query-params "CpuCredits" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-credits))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-default-credit-specification-result (:copier common-lisp:nil))
   (instance-family-credit-specification common-lisp:nil :type (common-lisp:or instance-family-credit-specification common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-default-credit-specification-result 'make-modify-default-credit-specification-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-default-credit-specification-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceFamilyCreditSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family-credit-specification))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-ebs-default-kms-key-id-request (:copier common-lisp:nil))
   (kms-key-id (common-lisp:error ":kms-key-id is required") :type (common-lisp:or kms-key-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-ebs-default-kms-key-id-request 'make-modify-ebs-default-kms-key-id-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-ebs-default-kms-key-id-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-ebs-default-kms-key-id-result (:copier common-lisp:nil)) (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-ebs-default-kms-key-id-result 'make-modify-ebs-default-kms-key-id-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-ebs-default-kms-key-id-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-fleet-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (excess-capacity-termination-policy common-lisp:nil :type (common-lisp:or fleet-excess-capacity-termination-policy common-lisp:null))
   (fleet-id (common-lisp:error ":fleet-id is required") :type (common-lisp:or fleet-id common-lisp:null))
   (target-capacity-specification (common-lisp:error ":target-capacity-specification is required") :type (common-lisp:or target-capacity-specification-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-fleet-request 'make-modify-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-fleet-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ExcessCapacityTerminationPolicy"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'excess-capacity-termination-policy)))
                       (aws-sdk/generator/shape::to-query-params "FleetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fleet-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetCapacitySpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-capacity-specification))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-fleet-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-fleet-result 'make-modify-fleet-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-fleet-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-fpga-image-attribute-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (fpga-image-id (common-lisp:error ":fpga-image-id is required") :type (common-lisp:or fpga-image-id common-lisp:null))
   (attribute common-lisp:nil :type (common-lisp:or fpga-image-attribute-name common-lisp:null))
   (operation-type common-lisp:nil :type (common-lisp:or operation-type common-lisp:null))
   (user-ids common-lisp:nil :type (common-lisp:or user-id-string-list common-lisp:null))
   (user-groups common-lisp:nil :type (common-lisp:or user-group-string-list common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-string-list common-lisp:null))
   (load-permission common-lisp:nil :type (common-lisp:or load-permission-modifications common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-fpga-image-attribute-request 'make-modify-fpga-image-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-fpga-image-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id)))
                       (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "OperationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'operation-type)))
                       (aws-sdk/generator/shape::to-query-params "UserIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-ids)))
                       (aws-sdk/generator/shape::to-query-params "UserGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-groups)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "LoadPermission" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'load-permission)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-fpga-image-attribute-result (:copier common-lisp:nil)) (fpga-image-attribute common-lisp:nil :type (common-lisp:or fpga-image-attribute common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-fpga-image-attribute-result 'make-modify-fpga-image-attribute-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-fpga-image-attribute-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FpgaImageAttribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-attribute))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-hosts-request (:copier common-lisp:nil))
   (auto-placement common-lisp:nil :type (common-lisp:or auto-placement common-lisp:null))
   (host-ids (common-lisp:error ":host-ids is required") :type (common-lisp:or request-host-id-list common-lisp:null))
   (host-recovery common-lisp:nil :type (common-lisp:or host-recovery common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-family common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-hosts-request 'make-modify-hosts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-hosts-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AutoPlacement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-placement)))
                       (aws-sdk/generator/shape::to-query-params "HostIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-ids)))
                       (aws-sdk/generator/shape::to-query-params "HostRecovery" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-recovery)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-hosts-result (:copier common-lisp:nil))
   (successful common-lisp:nil :type (common-lisp:or response-host-id-list common-lisp:null))
   (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-hosts-result 'make-modify-hosts-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-hosts-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Successful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful)))
                       (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-id-format-request (:copier common-lisp:nil))
   (resource (common-lisp:error ":resource is required") :type (common-lisp:or string common-lisp:null))
   (use-long-ids (common-lisp:error ":use-long-ids is required") :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-id-format-request 'make-modify-id-format-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-id-format-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Resource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource)))
                       (aws-sdk/generator/shape::to-query-params "UseLongIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'use-long-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-identity-id-format-request (:copier common-lisp:nil))
   (principal-arn (common-lisp:error ":principal-arn is required") :type (common-lisp:or string common-lisp:null))
   (resource (common-lisp:error ":resource is required") :type (common-lisp:or string common-lisp:null))
   (use-long-ids (common-lisp:error ":use-long-ids is required") :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-identity-id-format-request 'make-modify-identity-id-format-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-identity-id-format-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PrincipalArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'principal-arn)))
                       (aws-sdk/generator/shape::to-query-params "Resource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource)))
                       (aws-sdk/generator/shape::to-query-params "UseLongIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'use-long-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-image-attribute-request (:copier common-lisp:nil))
   (attribute common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (image-id (common-lisp:error ":image-id is required") :type (common-lisp:or image-id common-lisp:null))
   (launch-permission common-lisp:nil :type (common-lisp:or launch-permission-modifications common-lisp:null))
   (operation-type common-lisp:nil :type (common-lisp:or operation-type common-lisp:null))
   (product-codes common-lisp:nil :type (common-lisp:or product-code-string-list common-lisp:null))
   (user-groups common-lisp:nil :type (common-lisp:or user-group-string-list common-lisp:null))
   (user-ids common-lisp:nil :type (common-lisp:or user-id-string-list common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-image-attribute-request 'make-modify-image-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-image-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchPermission" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-permission)))
                       (aws-sdk/generator/shape::to-query-params "OperationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'operation-type)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-codes)))
                       (aws-sdk/generator/shape::to-query-params "UserGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-groups)))
                       (aws-sdk/generator/shape::to-query-params "UserIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-ids)))
                       (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-attribute-request (:copier common-lisp:nil))
   (source-dest-check common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (attribute common-lisp:nil :type (common-lisp:or instance-attribute-name common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or instance-block-device-mapping-specification-list common-lisp:null))
   (disable-api-termination common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (ena-support common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or group-id-string-list common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (instance-initiated-shutdown-behavior common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (kernel common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (ramdisk common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (sriov-net-support common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or blob-attribute-value common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-attribute-request 'make-modify-instance-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check)))
                       (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "DisableApiTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disable-api-termination)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "EnaSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ena-support)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInitiatedShutdownBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-initiated-shutdown-behavior)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "Kernel" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel)))
                       (aws-sdk/generator/shape::to-query-params "Ramdisk" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk)))
                       (aws-sdk/generator/shape::to-query-params "SriovNetSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sriov-net-support)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data)))
                       (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-capacity-reservation-attributes-request (:copier common-lisp:nil))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (capacity-reservation-specification (common-lisp:error ":capacity-reservation-specification is required") :type (common-lisp:or capacity-reservation-specification common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-capacity-reservation-attributes-request 'make-modify-instance-capacity-reservation-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-capacity-reservation-attributes-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationSpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-specification)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-capacity-reservation-attributes-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-capacity-reservation-attributes-result 'make-modify-instance-capacity-reservation-attributes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-capacity-reservation-attributes-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-credit-specification-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-credit-specifications (common-lisp:error ":instance-credit-specifications is required") :type (common-lisp:or instance-credit-specification-list-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-credit-specification-request 'make-modify-instance-credit-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-credit-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCreditSpecifications"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-credit-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-credit-specification-result (:copier common-lisp:nil))
   (successful-instance-credit-specifications common-lisp:nil :type (common-lisp:or successful-instance-credit-specification-set common-lisp:null))
   (unsuccessful-instance-credit-specifications common-lisp:nil :type (common-lisp:or unsuccessful-instance-credit-specification-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-credit-specification-result 'make-modify-instance-credit-specification-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-credit-specification-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SuccessfulInstanceCreditSpecifications"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful-instance-credit-specifications)))
    (aws-sdk/generator/shape::to-query-params "UnsuccessfulInstanceCreditSpecifications"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful-instance-credit-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-event-start-time-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (instance-event-id (common-lisp:error ":instance-event-id is required") :type (common-lisp:or string common-lisp:null))
   (not-before (common-lisp:error ":not-before is required") :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-event-start-time-request 'make-modify-instance-event-start-time-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-event-start-time-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceEventId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-event-id)))
                       (aws-sdk/generator/shape::to-query-params "NotBefore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'not-before))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-event-start-time-result (:copier common-lisp:nil)) (event common-lisp:nil :type (common-lisp:or instance-status-event common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-event-start-time-result 'make-modify-instance-event-start-time-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-event-start-time-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Event" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-metadata-options-request (:copier common-lisp:nil))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (http-tokens common-lisp:nil :type (common-lisp:or http-tokens-state common-lisp:null))
   (http-put-response-hop-limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (http-endpoint common-lisp:nil :type (common-lisp:or instance-metadata-endpoint-state common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-metadata-options-request 'make-modify-instance-metadata-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-metadata-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "HttpTokens" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-tokens)))
                       (aws-sdk/generator/shape::to-query-params "HttpPutResponseHopLimit" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-put-response-hop-limit)))
                       (aws-sdk/generator/shape::to-query-params "HttpEndpoint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'http-endpoint)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-metadata-options-result (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-metadata-options common-lisp:nil :type (common-lisp:or instance-metadata-options-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-metadata-options-result 'make-modify-instance-metadata-options-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-metadata-options-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceMetadataOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-metadata-options))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-placement-request (:copier common-lisp:nil))
   (affinity common-lisp:nil :type (common-lisp:or affinity common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or placement-group-name common-lisp:null))
   (host-id common-lisp:nil :type (common-lisp:or dedicated-host-id common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or host-tenancy common-lisp:null))
   (partition-number common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (host-resource-group-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-placement-request 'make-modify-instance-placement-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-placement-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Affinity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'affinity)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "HostId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Tenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tenancy)))
                       (aws-sdk/generator/shape::to-query-params "PartitionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'partition-number)))
                       (aws-sdk/generator/shape::to-query-params "HostResourceGroupArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-resource-group-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-instance-placement-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-instance-placement-result 'make-modify-instance-placement-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-instance-placement-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-launch-template-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-template-id common-lisp:nil :type (common-lisp:or launch-template-id common-lisp:null))
   (launch-template-name common-lisp:nil :type (common-lisp:or launch-template-name common-lisp:null))
   (default-version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-launch-template-request 'make-modify-launch-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-launch-template-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-name)))
                       (aws-sdk/generator/shape::to-query-params "DefaultVersion" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-version))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-launch-template-result (:copier common-lisp:nil)) (launch-template common-lisp:nil :type (common-lisp:or launch-template common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-launch-template-result 'make-modify-launch-template-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-launch-template-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LaunchTemplate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-network-interface-attribute-request (:copier common-lisp:nil))
   (attachment common-lisp:nil :type (common-lisp:or network-interface-attachment-changes common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or attribute-value common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or security-group-id-string-list common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null))
   (source-dest-check common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-network-interface-attribute-request 'make-modify-network-interface-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-network-interface-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-reserved-instances-request (:copier common-lisp:nil))
   (reserved-instances-ids (common-lisp:error ":reserved-instances-ids is required") :type (common-lisp:or reserved-instances-id-string-list common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-configurations (common-lisp:error ":target-configurations is required") :type (common-lisp:or reserved-instances-configuration-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-reserved-instances-request 'make-modify-reserved-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-reserved-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-ids)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "TargetConfigurations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-reserved-instances-result (:copier common-lisp:nil)) (reserved-instances-modification-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-reserved-instances-result 'make-modify-reserved-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-reserved-instances-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReservedInstancesModificationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-modification-id))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-snapshot-attribute-request (:copier common-lisp:nil))
   (attribute common-lisp:nil :type (common-lisp:or snapshot-attribute-name common-lisp:null))
   (create-volume-permission common-lisp:nil :type (common-lisp:or create-volume-permission-modifications common-lisp:null))
   (group-names common-lisp:nil :type (common-lisp:or group-name-string-list common-lisp:null))
   (operation-type common-lisp:nil :type (common-lisp:or operation-type common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type (common-lisp:or snapshot-id common-lisp:null))
   (user-ids common-lisp:nil :type (common-lisp:or user-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-snapshot-attribute-request 'make-modify-snapshot-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-snapshot-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "CreateVolumePermission" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-volume-permission)))
                       (aws-sdk/generator/shape::to-query-params "GroupNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-names)))
                       (aws-sdk/generator/shape::to-query-params "OperationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'operation-type)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "UserIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-spot-fleet-request-request (:copier common-lisp:nil))
   (excess-capacity-termination-policy common-lisp:nil :type (common-lisp:or excess-capacity-termination-policy common-lisp:null))
   (spot-fleet-request-id (common-lisp:error ":spot-fleet-request-id is required") :type (common-lisp:or spot-fleet-request-id common-lisp:null))
   (target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (on-demand-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-spot-fleet-request-request 'make-modify-spot-fleet-request-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-spot-fleet-request-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ExcessCapacityTerminationPolicy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'excess-capacity-termination-policy)))
    (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id)))
    (aws-sdk/generator/shape::to-query-params "TargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-capacity)))
    (aws-sdk/generator/shape::to-query-params "OnDemandTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-target-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-spot-fleet-request-response (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-spot-fleet-request-response 'make-modify-spot-fleet-request-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-spot-fleet-request-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-subnet-attribute-request (:copier common-lisp:nil))
   (assign-ipv6address-on-creation common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (map-public-ip-on-launch common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type (common-lisp:or subnet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-subnet-attribute-request 'make-modify-subnet-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-subnet-attribute-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssignIpv6AddressOnCreation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'assign-ipv6address-on-creation)))
    (aws-sdk/generator/shape::to-query-params "MapPublicIpOnLaunch" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'map-public-ip-on-launch)))
    (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-traffic-mirror-filter-network-services-request (:copier common-lisp:nil))
   (traffic-mirror-filter-id (common-lisp:error ":traffic-mirror-filter-id is required") :type (common-lisp:or traffic-mirror-filter-id common-lisp:null))
   (add-network-services common-lisp:nil :type (common-lisp:or traffic-mirror-network-service-list common-lisp:null))
   (remove-network-services common-lisp:nil :type (common-lisp:or traffic-mirror-network-service-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-traffic-mirror-filter-network-services-request 'make-modify-traffic-mirror-filter-network-services-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-traffic-mirror-filter-network-services-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "AddNetworkServices" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add-network-services)))
                       (aws-sdk/generator/shape::to-query-params "RemoveNetworkServices" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-network-services)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-traffic-mirror-filter-network-services-result (:copier common-lisp:nil)) (traffic-mirror-filter common-lisp:nil :type (common-lisp:or traffic-mirror-filter common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-traffic-mirror-filter-network-services-result 'make-modify-traffic-mirror-filter-network-services-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-traffic-mirror-filter-network-services-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-traffic-mirror-filter-rule-request (:copier common-lisp:nil))
   (traffic-mirror-filter-rule-id (common-lisp:error ":traffic-mirror-filter-rule-id is required") :type (common-lisp:or traffic-mirror-filter-rule-id common-lisp:null))
   (traffic-direction common-lisp:nil :type (common-lisp:or traffic-direction common-lisp:null))
   (rule-number common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rule-action common-lisp:nil :type (common-lisp:or traffic-mirror-rule-action common-lisp:null))
   (destination-port-range common-lisp:nil :type (common-lisp:or traffic-mirror-port-range-request common-lisp:null))
   (source-port-range common-lisp:nil :type (common-lisp:or traffic-mirror-port-range-request common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (remove-fields common-lisp:nil :type (common-lisp:or traffic-mirror-filter-rule-field-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-traffic-mirror-filter-rule-request 'make-modify-traffic-mirror-filter-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-traffic-mirror-filter-rule-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterRuleId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-rule-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficDirection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-direction)))
                       (aws-sdk/generator/shape::to-query-params "RuleNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-number)))
                       (aws-sdk/generator/shape::to-query-params "RuleAction" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-action)))
                       (aws-sdk/generator/shape::to-query-params "DestinationPortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-port-range)))
                       (aws-sdk/generator/shape::to-query-params "SourcePortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-port-range)))
                       (aws-sdk/generator/shape::to-query-params "Protocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'protocol)))
                       (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "SourceCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "RemoveFields" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-fields)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-traffic-mirror-filter-rule-result (:copier common-lisp:nil)) (traffic-mirror-filter-rule common-lisp:nil :type (common-lisp:or traffic-mirror-filter-rule common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-traffic-mirror-filter-rule-result 'make-modify-traffic-mirror-filter-rule-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-traffic-mirror-filter-rule-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterRule" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-rule))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-traffic-mirror-session-request (:copier common-lisp:nil))
   (traffic-mirror-session-id (common-lisp:error ":traffic-mirror-session-id is required") :type (common-lisp:or traffic-mirror-session-id common-lisp:null))
   (traffic-mirror-target-id common-lisp:nil :type (common-lisp:or traffic-mirror-target-id common-lisp:null))
   (traffic-mirror-filter-id common-lisp:nil :type (common-lisp:or traffic-mirror-filter-id common-lisp:null))
   (packet-length common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (session-number common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (virtual-network-id common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (remove-fields common-lisp:nil :type (common-lisp:or traffic-mirror-session-field-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-traffic-mirror-session-request 'make-modify-traffic-mirror-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-traffic-mirror-session-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSessionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-session-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "PacketLength" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'packet-length)))
                       (aws-sdk/generator/shape::to-query-params "SessionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'session-number)))
                       (aws-sdk/generator/shape::to-query-params "VirtualNetworkId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-network-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "RemoveFields" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-fields)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-traffic-mirror-session-result (:copier common-lisp:nil)) (traffic-mirror-session common-lisp:nil :type (common-lisp:or traffic-mirror-session common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-traffic-mirror-session-result 'make-modify-traffic-mirror-session-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-traffic-mirror-session-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSession" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-session))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-transit-gateway-vpc-attachment-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (add-subnet-ids common-lisp:nil :type (common-lisp:or transit-gateway-subnet-id-list common-lisp:null))
   (remove-subnet-ids common-lisp:nil :type (common-lisp:or transit-gateway-subnet-id-list common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or modify-transit-gateway-vpc-attachment-request-options common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-transit-gateway-vpc-attachment-request 'make-modify-transit-gateway-vpc-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-transit-gateway-vpc-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "AddSubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add-subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "RemoveSubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "Options" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'options)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-transit-gateway-vpc-attachment-request-options (:copier common-lisp:nil))
   (dns-support common-lisp:nil :type (common-lisp:or dns-support-value common-lisp:null))
   (ipv6support common-lisp:nil :type (common-lisp:or ipv6support-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-transit-gateway-vpc-attachment-request-options 'make-modify-transit-gateway-vpc-attachment-request-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-transit-gateway-vpc-attachment-request-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DnsSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-support)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Support" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6support))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-transit-gateway-vpc-attachment-result (:copier common-lisp:nil)) (transit-gateway-vpc-attachment common-lisp:nil :type (common-lisp:or transit-gateway-vpc-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-transit-gateway-vpc-attachment-result 'make-modify-transit-gateway-vpc-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-transit-gateway-vpc-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayVpcAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-vpc-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-volume-attribute-request (:copier common-lisp:nil))
   (auto-enable-io common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-volume-attribute-request 'make-modify-volume-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-volume-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AutoEnableIO" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-enable-io)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-volume-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (volume-id (common-lisp:error ":volume-id is required") :type (common-lisp:or volume-id common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-volume-request 'make-modify-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-volume-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "Size" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size)))
                       (aws-sdk/generator/shape::to-query-params "VolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-type)))
                       (aws-sdk/generator/shape::to-query-params "Iops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iops))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-volume-result (:copier common-lisp:nil)) (volume-modification common-lisp:nil :type (common-lisp:or volume-modification common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-volume-result 'make-modify-volume-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-volume-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VolumeModification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-modification))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-attribute-request (:copier common-lisp:nil))
   (enable-dns-hostnames common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (enable-dns-support common-lisp:nil :type (common-lisp:or attribute-boolean-value common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-attribute-request 'make-modify-vpc-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EnableDnsHostnames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enable-dns-hostnames)))
                       (aws-sdk/generator/shape::to-query-params "EnableDnsSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enable-dns-support)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-connection-notification-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (connection-notification-id (common-lisp:error ":connection-notification-id is required") :type (common-lisp:or connection-notification-id common-lisp:null))
   (connection-notification-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-events common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-connection-notification-request 'make-modify-vpc-endpoint-connection-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-connection-notification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-id)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionNotificationArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-notification-arn)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionEvents" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-events))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-connection-notification-result (:copier common-lisp:nil)) (return-value common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-connection-notification-result 'make-modify-vpc-endpoint-connection-notification-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-connection-notification-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReturnValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return-value))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-endpoint-id (common-lisp:error ":vpc-endpoint-id is required") :type (common-lisp:or vpc-endpoint-id common-lisp:null))
   (reset-policy common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (policy-document common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (add-route-table-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-route-table-id-list common-lisp:null))
   (remove-route-table-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-route-table-id-list common-lisp:null))
   (add-subnet-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-subnet-id-list common-lisp:null))
   (remove-subnet-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-subnet-id-list common-lisp:null))
   (add-security-group-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-security-group-id-list common-lisp:null))
   (remove-security-group-ids common-lisp:nil :type (common-lisp:or vpc-endpoint-security-group-id-list common-lisp:null))
   (private-dns-enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-request 'make-modify-vpc-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "ResetPolicy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reset-policy)))
                       (aws-sdk/generator/shape::to-query-params "PolicyDocument" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'policy-document)))
                       (aws-sdk/generator/shape::to-query-params "AddRouteTableIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add-route-table-ids)))
                       (aws-sdk/generator/shape::to-query-params "RemoveRouteTableIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-route-table-ids)))
                       (aws-sdk/generator/shape::to-query-params "AddSubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add-subnet-ids)))
                       (aws-sdk/generator/shape::to-query-params "RemoveSubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-subnet-ids)))
                       (aws-sdk/generator/shape::to-query-params "AddSecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add-security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "RemoveSecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsEnabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-result 'make-modify-vpc-endpoint-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-service-configuration-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-id (common-lisp:error ":service-id is required") :type (common-lisp:or vpc-endpoint-service-id common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (remove-private-dns-name common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (acceptance-required common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (add-network-load-balancer-arns common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (remove-network-load-balancer-arns common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-service-configuration-request 'make-modify-vpc-endpoint-service-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-service-configuration-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "RemovePrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "AcceptanceRequired" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'acceptance-required)))
                       (aws-sdk/generator/shape::to-query-params "AddNetworkLoadBalancerArns"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add-network-load-balancer-arns)))
                       (aws-sdk/generator/shape::to-query-params "RemoveNetworkLoadBalancerArns"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-network-load-balancer-arns))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-service-configuration-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-service-configuration-result 'make-modify-vpc-endpoint-service-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-service-configuration-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-service-permissions-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-id (common-lisp:error ":service-id is required") :type (common-lisp:or vpc-endpoint-service-id common-lisp:null))
   (add-allowed-principals common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (remove-allowed-principals common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-service-permissions-request 'make-modify-vpc-endpoint-service-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-service-permissions-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "AddAllowedPrincipals" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'add-allowed-principals)))
                       (aws-sdk/generator/shape::to-query-params "RemoveAllowedPrincipals" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remove-allowed-principals))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-endpoint-service-permissions-result (:copier common-lisp:nil)) (return-value common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-endpoint-service-permissions-result 'make-modify-vpc-endpoint-service-permissions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-endpoint-service-permissions-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReturnValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return-value))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-peering-connection-options-request (:copier common-lisp:nil))
   (accepter-peering-connection-options common-lisp:nil :type (common-lisp:or peering-connection-options-request common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (requester-peering-connection-options common-lisp:nil :type (common-lisp:or peering-connection-options-request common-lisp:null))
   (vpc-peering-connection-id (common-lisp:error ":vpc-peering-connection-id is required") :type (common-lisp:or vpc-peering-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-peering-connection-options-request 'make-modify-vpc-peering-connection-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-peering-connection-options-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccepterPeeringConnectionOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'accepter-peering-connection-options)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
    (aws-sdk/generator/shape::to-query-params "RequesterPeeringConnectionOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-peering-connection-options)))
    (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-peering-connection-options-result (:copier common-lisp:nil))
   (accepter-peering-connection-options common-lisp:nil :type (common-lisp:or peering-connection-options common-lisp:null))
   (requester-peering-connection-options common-lisp:nil :type (common-lisp:or peering-connection-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-peering-connection-options-result 'make-modify-vpc-peering-connection-options-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-peering-connection-options-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccepterPeeringConnectionOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'accepter-peering-connection-options)))
    (aws-sdk/generator/shape::to-query-params "RequesterPeeringConnectionOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-peering-connection-options))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-tenancy-request (:copier common-lisp:nil))
   (vpc-id (common-lisp:error ":vpc-id is required") :type (common-lisp:or vpc-id common-lisp:null))
   (instance-tenancy (common-lisp:error ":instance-tenancy is required") :type (common-lisp:or vpc-tenancy common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-tenancy-request 'make-modify-vpc-tenancy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-tenancy-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-tenancy)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpc-tenancy-result (:copier common-lisp:nil)) (return-value common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpc-tenancy-result 'make-modify-vpc-tenancy-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpc-tenancy-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReturnValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return-value))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpn-connection-request (:copier common-lisp:nil))
   (vpn-connection-id (common-lisp:error ":vpn-connection-id is required") :type (common-lisp:or vpn-connection-id common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or transit-gateway-id common-lisp:null))
   (customer-gateway-id common-lisp:nil :type (common-lisp:or customer-gateway-id common-lisp:null))
   (vpn-gateway-id common-lisp:nil :type (common-lisp:or vpn-gateway-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpn-connection-request 'make-modify-vpn-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpn-connection-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "CustomerGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "VpnGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpn-connection-result (:copier common-lisp:nil)) (vpn-connection common-lisp:nil :type (common-lisp:or vpn-connection common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpn-connection-result 'make-modify-vpn-connection-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpn-connection-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpn-tunnel-certificate-request (:copier common-lisp:nil))
   (vpn-connection-id (common-lisp:error ":vpn-connection-id is required") :type (common-lisp:or vpn-connection-id common-lisp:null))
   (vpn-tunnel-outside-ip-address (common-lisp:error ":vpn-tunnel-outside-ip-address is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpn-tunnel-certificate-request 'make-modify-vpn-tunnel-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpn-tunnel-certificate-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-id)))
                       (aws-sdk/generator/shape::to-query-params "VpnTunnelOutsideIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-tunnel-outside-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpn-tunnel-certificate-result (:copier common-lisp:nil)) (vpn-connection common-lisp:nil :type (common-lisp:or vpn-connection common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpn-tunnel-certificate-result 'make-modify-vpn-tunnel-certificate-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpn-tunnel-certificate-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpn-tunnel-options-request (:copier common-lisp:nil))
   (vpn-connection-id (common-lisp:error ":vpn-connection-id is required") :type (common-lisp:or vpn-connection-id common-lisp:null))
   (vpn-tunnel-outside-ip-address (common-lisp:error ":vpn-tunnel-outside-ip-address is required") :type (common-lisp:or string common-lisp:null))
   (tunnel-options (common-lisp:error ":tunnel-options is required") :type (common-lisp:or modify-vpn-tunnel-options-specification common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpn-tunnel-options-request 'make-modify-vpn-tunnel-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpn-tunnel-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-id)))
                       (aws-sdk/generator/shape::to-query-params "VpnTunnelOutsideIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-tunnel-outside-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "TunnelOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tunnel-options)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpn-tunnel-options-result (:copier common-lisp:nil)) (vpn-connection common-lisp:nil :type (common-lisp:or vpn-connection common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpn-tunnel-options-result 'make-modify-vpn-tunnel-options-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpn-tunnel-options-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpnConnection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection))))))
(common-lisp:progn
 (common-lisp:defstruct (modify-vpn-tunnel-options-specification (:copier common-lisp:nil))
   (tunnel-inside-cidr common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pre-shared-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (phase1lifetime-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (phase2lifetime-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rekey-margin-time-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rekey-fuzz-percentage common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (replay-window-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (dpdtimeout-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (phase1encryption-algorithms common-lisp:nil :type (common-lisp:or phase1encryption-algorithms-request-list common-lisp:null))
   (phase2encryption-algorithms common-lisp:nil :type (common-lisp:or phase2encryption-algorithms-request-list common-lisp:null))
   (phase1integrity-algorithms common-lisp:nil :type (common-lisp:or phase1integrity-algorithms-request-list common-lisp:null))
   (phase2integrity-algorithms common-lisp:nil :type (common-lisp:or phase2integrity-algorithms-request-list common-lisp:null))
   (phase1dhgroup-numbers common-lisp:nil :type (common-lisp:or phase1dhgroup-numbers-request-list common-lisp:null))
   (phase2dhgroup-numbers common-lisp:nil :type (common-lisp:or phase2dhgroup-numbers-request-list common-lisp:null))
   (ikeversions common-lisp:nil :type (common-lisp:or ikeversions-request-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'modify-vpn-tunnel-options-specification 'make-modify-vpn-tunnel-options-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape modify-vpn-tunnel-options-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TunnelInsideCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tunnel-inside-cidr)))
                       (aws-sdk/generator/shape::to-query-params "PreSharedKey" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pre-shared-key)))
                       (aws-sdk/generator/shape::to-query-params "Phase1LifetimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1lifetime-seconds)))
                       (aws-sdk/generator/shape::to-query-params "Phase2LifetimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2lifetime-seconds)))
                       (aws-sdk/generator/shape::to-query-params "RekeyMarginTimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rekey-margin-time-seconds)))
                       (aws-sdk/generator/shape::to-query-params "RekeyFuzzPercentage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rekey-fuzz-percentage)))
                       (aws-sdk/generator/shape::to-query-params "ReplayWindowSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'replay-window-size)))
                       (aws-sdk/generator/shape::to-query-params "DPDTimeoutSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dpdtimeout-seconds)))
                       (aws-sdk/generator/shape::to-query-params "Phase1EncryptionAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1encryption-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase2EncryptionAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2encryption-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase1IntegrityAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1integrity-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase2IntegrityAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2integrity-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase1DHGroupNumbers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1dhgroup-numbers)))
                       (aws-sdk/generator/shape::to-query-params "Phase2DHGroupNumbers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2dhgroup-numbers)))
                       (aws-sdk/generator/shape::to-query-params "IKEVersions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ikeversions))))))
(common-lisp:progn
 (common-lisp:defstruct (monitor-instances-request (:copier common-lisp:nil))
   (instance-ids (common-lisp:error ":instance-ids is required") :type (common-lisp:or instance-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'monitor-instances-request 'make-monitor-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape monitor-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (monitor-instances-result (:copier common-lisp:nil)) (instance-monitorings common-lisp:nil :type (common-lisp:or instance-monitoring-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'monitor-instances-result 'make-monitor-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape monitor-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceMonitorings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-monitorings))))))
(common-lisp:progn
 (common-lisp:defstruct (monitoring (:copier common-lisp:nil)) (state common-lisp:nil :type (common-lisp:or monitoring-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'monitoring 'make-monitoring))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape monitoring))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:deftype monitoring-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (move-address-to-vpc-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (public-ip (common-lisp:error ":public-ip is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'move-address-to-vpc-request 'make-move-address-to-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape move-address-to-vpc-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip))))))
(common-lisp:progn
 (common-lisp:defstruct (move-address-to-vpc-result (:copier common-lisp:nil))
   (allocation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'move-address-to-vpc-result 'make-move-address-to-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape move-address-to-vpc-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:deftype move-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (moving-address-status (:copier common-lisp:nil))
   (move-status common-lisp:nil :type (common-lisp:or move-status common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'moving-address-status 'make-moving-address-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape moving-address-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MoveStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'move-status)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip))))))
(common-lisp:progn
 (common-lisp:deftype moving-address-status-set () '(trivial-types:proper-list moving-address-status))
 (common-lisp:defun |make-moving-address-status-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list moving-address-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype multicast-support-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (nat-gateway (:copier common-lisp:nil))
   (create-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (delete-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (failure-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (failure-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (nat-gateway-addresses common-lisp:nil :type (common-lisp:or nat-gateway-address-list common-lisp:null))
   (nat-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (provisioned-bandwidth common-lisp:nil :type (common-lisp:or provisioned-bandwidth common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or nat-gateway-state common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'nat-gateway 'make-nat-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape nat-gateway))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "DeleteTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-time)))
                       (aws-sdk/generator/shape::to-query-params "FailureCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'failure-code)))
                       (aws-sdk/generator/shape::to-query-params "FailureMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'failure-message)))
                       (aws-sdk/generator/shape::to-query-params "NatGatewayAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-addresses)))
                       (aws-sdk/generator/shape::to-query-params "NatGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "ProvisionedBandwidth" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'provisioned-bandwidth)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (nat-gateway-address (:copier common-lisp:nil))
   (allocation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'nat-gateway-address 'make-nat-gateway-address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape nat-gateway-address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip))))))
(common-lisp:progn
 (common-lisp:deftype nat-gateway-address-list () '(trivial-types:proper-list nat-gateway-address))
 (common-lisp:defun |make-nat-gateway-address-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list nat-gateway-address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype nat-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype nat-gateway-id-string-list () '(trivial-types:proper-list nat-gateway-id))
 (common-lisp:defun |make-nat-gateway-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list nat-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype nat-gateway-list () '(trivial-types:proper-list nat-gateway))
 (common-lisp:defun |make-nat-gateway-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list nat-gateway))
   aws-sdk/generator/shape::members))
(common-lisp:deftype nat-gateway-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (network-acl (:copier common-lisp:nil))
   (associations common-lisp:nil :type (common-lisp:or network-acl-association-list common-lisp:null))
   (entries common-lisp:nil :type (common-lisp:or network-acl-entry-list common-lisp:null))
   (is-default common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-acl-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-acl 'make-network-acl))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-acl))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Associations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associations)))
                       (aws-sdk/generator/shape::to-query-params "Entries" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'entries)))
                       (aws-sdk/generator/shape::to-query-params "IsDefault" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'is-default)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id))))))
(common-lisp:progn
 (common-lisp:defstruct (network-acl-association (:copier common-lisp:nil))
   (network-acl-association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-acl-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-acl-association 'make-network-acl-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-acl-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkAclAssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-association-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:deftype network-acl-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype network-acl-association-list () '(trivial-types:proper-list network-acl-association))
 (common-lisp:defun |make-network-acl-association-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-acl-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (network-acl-entry (:copier common-lisp:nil))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (egress common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (icmp-type-code common-lisp:nil :type (common-lisp:or icmp-type-code common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (port-range common-lisp:nil :type (common-lisp:or port-range common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (rule-action common-lisp:nil :type (common-lisp:or rule-action common-lisp:null))
   (rule-number common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-acl-entry 'make-network-acl-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-acl-entry))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Egress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress)))
                       (aws-sdk/generator/shape::to-query-params "IcmpTypeCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'icmp-type-code)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "PortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'port-range)))
                       (aws-sdk/generator/shape::to-query-params "Protocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'protocol)))
                       (aws-sdk/generator/shape::to-query-params "RuleAction" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-action)))
                       (aws-sdk/generator/shape::to-query-params "RuleNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-number))))))
(common-lisp:progn
 (common-lisp:deftype network-acl-entry-list () '(trivial-types:proper-list network-acl-entry))
 (common-lisp:defun |make-network-acl-entry-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-acl-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype network-acl-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype network-acl-id-string-list () '(trivial-types:proper-list network-acl-id))
 (common-lisp:defun |make-network-acl-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-acl-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype network-acl-list () '(trivial-types:proper-list network-acl))
 (common-lisp:defun |make-network-acl-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-acl))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (network-info (:copier common-lisp:nil))
   (network-performance common-lisp:nil :type (common-lisp:or network-performance common-lisp:null))
   (maximum-network-interfaces common-lisp:nil :type (common-lisp:or max-network-interfaces common-lisp:null))
   (ipv4addresses-per-interface common-lisp:nil :type (common-lisp:or max-ipv4addr-per-interface common-lisp:null))
   (ipv6addresses-per-interface common-lisp:nil :type (common-lisp:or max-ipv6addr-per-interface common-lisp:null))
   (ipv6supported common-lisp:nil :type (common-lisp:or ipv6flag common-lisp:null))
   (ena-support common-lisp:nil :type (common-lisp:or ena-support common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-info 'make-network-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkPerformance" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-performance)))
                       (aws-sdk/generator/shape::to-query-params "MaximumNetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'maximum-network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "Ipv4AddressesPerInterface" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv4addresses-per-interface)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6AddressesPerInterface" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses-per-interface)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Supported" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6supported)))
                       (aws-sdk/generator/shape::to-query-params "EnaSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ena-support))))))
(common-lisp:progn
 (common-lisp:defstruct (network-interface (:copier common-lisp:nil))
   (association common-lisp:nil :type (common-lisp:or network-interface-association common-lisp:null))
   (attachment common-lisp:nil :type (common-lisp:or network-interface-attachment common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (interface-type common-lisp:nil :type (common-lisp:or network-interface-type common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or network-interface-ipv6addresses-list common-lisp:null))
   (mac-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-addresses common-lisp:nil :type (common-lisp:or network-interface-private-ip-address-list common-lisp:null))
   (requester-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-managed common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (source-dest-check common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or network-interface-status common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-set common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface 'make-network-interface))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Association" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association)))
                       (aws-sdk/generator/shape::to-query-params "Attachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "InterfaceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interface-type)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "MacAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'mac-address)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses)))
                       (aws-sdk/generator/shape::to-query-params "RequesterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-id)))
                       (aws-sdk/generator/shape::to-query-params "RequesterManaged" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-managed)))
                       (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "TagSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-set)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:defstruct (network-interface-association (:copier common-lisp:nil))
   (allocation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ip-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface-association 'make-network-interface-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "IpOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PublicDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip))))))
(common-lisp:progn
 (common-lisp:defstruct (network-interface-attachment (:copier common-lisp:nil))
   (attach-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (device-index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or attachment-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface-attachment 'make-network-interface-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface-attachment))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttachTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attach-time)))
                       (aws-sdk/generator/shape::to-query-params "AttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "DeviceIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-index)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (network-interface-attachment-changes (:copier common-lisp:nil))
   (attachment-id common-lisp:nil :type (common-lisp:or network-interface-attachment-id common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface-attachment-changes 'make-network-interface-attachment-changes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface-attachment-changes))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination))))))
(common-lisp:deftype network-interface-attachment-id () 'common-lisp:string)
(common-lisp:deftype network-interface-attribute () 'common-lisp:string)
(common-lisp:deftype network-interface-creation-type () 'common-lisp:string)
(common-lisp:deftype network-interface-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype network-interface-id-list () '(trivial-types:proper-list network-interface-id))
 (common-lisp:defun |make-network-interface-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-interface-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (network-interface-ipv6address (:copier common-lisp:nil)) (ipv6address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface-ipv6address 'make-network-interface-ipv6address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface-ipv6address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6Address" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address))))))
(common-lisp:progn
 (common-lisp:deftype network-interface-ipv6addresses-list () '(trivial-types:proper-list network-interface-ipv6address))
 (common-lisp:defun |make-network-interface-ipv6addresses-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-interface-ipv6address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype network-interface-list () '(trivial-types:proper-list network-interface))
 (common-lisp:defun |make-network-interface-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-interface))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (network-interface-permission (:copier common-lisp:nil))
   (network-interface-permission-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (aws-account-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (aws-service common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (permission common-lisp:nil :type (common-lisp:or interface-permission-type common-lisp:null))
   (permission-state common-lisp:nil :type (common-lisp:or network-interface-permission-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface-permission 'make-network-interface-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface-permission))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NetworkInterfacePermissionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-permission-id)))
    (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
    (aws-sdk/generator/shape::to-query-params "AwsAccountId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'aws-account-id)))
    (aws-sdk/generator/shape::to-query-params "AwsService" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'aws-service)))
    (aws-sdk/generator/shape::to-query-params "Permission" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'permission)))
    (aws-sdk/generator/shape::to-query-params "PermissionState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'permission-state))))))
(common-lisp:deftype network-interface-permission-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype network-interface-permission-id-list () '(trivial-types:proper-list network-interface-permission-id))
 (common-lisp:defun |make-network-interface-permission-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-interface-permission-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype network-interface-permission-list () '(trivial-types:proper-list network-interface-permission))
 (common-lisp:defun |make-network-interface-permission-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-interface-permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (network-interface-permission-state (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or network-interface-permission-state-code common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface-permission-state 'make-network-interface-permission-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface-permission-state))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message))))))
(common-lisp:deftype network-interface-permission-state-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (network-interface-private-ip-address (:copier common-lisp:nil))
   (association common-lisp:nil :type (common-lisp:or network-interface-association common-lisp:null))
   (primary common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-interface-private-ip-address 'make-network-interface-private-ip-address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape network-interface-private-ip-address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Association" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association)))
                       (aws-sdk/generator/shape::to-query-params "Primary" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'primary)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address))))))
(common-lisp:progn
 (common-lisp:deftype network-interface-private-ip-address-list () '(trivial-types:proper-list network-interface-private-ip-address))
 (common-lisp:defun |make-network-interface-private-ip-address-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-interface-private-ip-address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype network-interface-status () 'common-lisp:string)
(common-lisp:deftype network-interface-type () 'common-lisp:string)
(common-lisp:deftype network-performance () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (new-dhcp-configuration (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (values common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'new-dhcp-configuration 'make-new-dhcp-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape new-dhcp-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key)))
                       (aws-sdk/generator/shape::to-query-params "Values" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'values))))))
(common-lisp:progn
 (common-lisp:deftype new-dhcp-configuration-list () '(trivial-types:proper-list new-dhcp-configuration))
 (common-lisp:defun |make-new-dhcp-configuration-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list new-dhcp-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype occurrence-day-request-set () '(trivial-types:proper-list integer))
 (common-lisp:defun |make-occurrence-day-request-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list integer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype occurrence-day-set () '(trivial-types:proper-list integer))
 (common-lisp:defun |make-occurrence-day-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list integer))
   aws-sdk/generator/shape::members))
(common-lisp:deftype offering-class-type () 'common-lisp:string)
(common-lisp:deftype offering-id () 'common-lisp:string)
(common-lisp:deftype offering-type-values () 'common-lisp:string)
(common-lisp:deftype on-demand-allocation-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (on-demand-options (:copier common-lisp:nil))
   (allocation-strategy common-lisp:nil :type (common-lisp:or fleet-on-demand-allocation-strategy common-lisp:null))
   (capacity-reservation-options common-lisp:nil :type (common-lisp:or capacity-reservation-options common-lisp:null))
   (single-instance-type common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (single-availability-zone common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (min-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (max-total-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'on-demand-options 'make-on-demand-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape on-demand-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationStrategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-strategy)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-options)))
                       (aws-sdk/generator/shape::to-query-params "SingleInstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-instance-type)))
                       (aws-sdk/generator/shape::to-query-params "SingleAvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "MinTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "MaxTotalPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-total-price))))))
(common-lisp:progn
 (common-lisp:defstruct (on-demand-options-request (:copier common-lisp:nil))
   (allocation-strategy common-lisp:nil :type (common-lisp:or fleet-on-demand-allocation-strategy common-lisp:null))
   (capacity-reservation-options common-lisp:nil :type (common-lisp:or capacity-reservation-options-request common-lisp:null))
   (single-instance-type common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (single-availability-zone common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (min-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (max-total-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'on-demand-options-request 'make-on-demand-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape on-demand-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationStrategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-strategy)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-options)))
                       (aws-sdk/generator/shape::to-query-params "SingleInstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-instance-type)))
                       (aws-sdk/generator/shape::to-query-params "SingleAvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "MinTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "MaxTotalPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-total-price))))))
(common-lisp:deftype operation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype owner-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-owner-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype payment-option () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (pci-id (:copier common-lisp:nil))
   (device-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vendor-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subsystem-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subsystem-vendor-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pci-id 'make-pci-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape pci-id))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-id)))
                       (aws-sdk/generator/shape::to-query-params "VendorId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vendor-id)))
                       (aws-sdk/generator/shape::to-query-params "SubsystemId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subsystem-id)))
                       (aws-sdk/generator/shape::to-query-params "SubsystemVendorId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subsystem-vendor-id))))))
(common-lisp:progn
 (common-lisp:defstruct (peering-attachment-status (:copier common-lisp:nil)) (code common-lisp:nil :type (common-lisp:or string common-lisp:null)) (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'peering-attachment-status 'make-peering-attachment-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape peering-attachment-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:defstruct (peering-connection-options (:copier common-lisp:nil))
   (allow-dns-resolution-from-remote-vpc common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-egress-from-local-classic-link-to-remote-vpc common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-egress-from-local-vpc-to-remote-classic-link common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'peering-connection-options 'make-peering-connection-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape peering-connection-options))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AllowDnsResolutionFromRemoteVpc" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-dns-resolution-from-remote-vpc)))
    (aws-sdk/generator/shape::to-query-params "AllowEgressFromLocalClassicLinkToRemoteVpc"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-egress-from-local-classic-link-to-remote-vpc)))
    (aws-sdk/generator/shape::to-query-params "AllowEgressFromLocalVpcToRemoteClassicLink"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-egress-from-local-vpc-to-remote-classic-link))))))
(common-lisp:progn
 (common-lisp:defstruct (peering-connection-options-request (:copier common-lisp:nil))
   (allow-dns-resolution-from-remote-vpc common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-egress-from-local-classic-link-to-remote-vpc common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-egress-from-local-vpc-to-remote-classic-link common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'peering-connection-options-request 'make-peering-connection-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape peering-connection-options-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AllowDnsResolutionFromRemoteVpc" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-dns-resolution-from-remote-vpc)))
    (aws-sdk/generator/shape::to-query-params "AllowEgressFromLocalClassicLinkToRemoteVpc"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-egress-from-local-classic-link-to-remote-vpc)))
    (aws-sdk/generator/shape::to-query-params "AllowEgressFromLocalVpcToRemoteClassicLink"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-egress-from-local-vpc-to-remote-classic-link))))))
(common-lisp:progn
 (common-lisp:defstruct (peering-tgw-info (:copier common-lisp:nil))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'peering-tgw-info 'make-peering-tgw-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape peering-tgw-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Region" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'region))))))
(common-lisp:deftype permission-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype phase1dhgroup-numbers-list () '(trivial-types:proper-list phase1dhgroup-numbers-list-value))
 (common-lisp:defun |make-phase1dhgroup-numbers-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase1dhgroup-numbers-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase1dhgroup-numbers-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase1dhgroup-numbers-list-value 'make-phase1dhgroup-numbers-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase1dhgroup-numbers-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase1dhgroup-numbers-request-list () '(trivial-types:proper-list phase1dhgroup-numbers-request-list-value))
 (common-lisp:defun |make-phase1dhgroup-numbers-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase1dhgroup-numbers-request-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase1dhgroup-numbers-request-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase1dhgroup-numbers-request-list-value 'make-phase1dhgroup-numbers-request-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase1dhgroup-numbers-request-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase1encryption-algorithms-list () '(trivial-types:proper-list phase1encryption-algorithms-list-value))
 (common-lisp:defun |make-phase1encryption-algorithms-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase1encryption-algorithms-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase1encryption-algorithms-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase1encryption-algorithms-list-value 'make-phase1encryption-algorithms-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase1encryption-algorithms-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase1encryption-algorithms-request-list () '(trivial-types:proper-list phase1encryption-algorithms-request-list-value))
 (common-lisp:defun |make-phase1encryption-algorithms-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase1encryption-algorithms-request-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase1encryption-algorithms-request-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase1encryption-algorithms-request-list-value 'make-phase1encryption-algorithms-request-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase1encryption-algorithms-request-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase1integrity-algorithms-list () '(trivial-types:proper-list phase1integrity-algorithms-list-value))
 (common-lisp:defun |make-phase1integrity-algorithms-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase1integrity-algorithms-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase1integrity-algorithms-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase1integrity-algorithms-list-value 'make-phase1integrity-algorithms-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase1integrity-algorithms-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase1integrity-algorithms-request-list () '(trivial-types:proper-list phase1integrity-algorithms-request-list-value))
 (common-lisp:defun |make-phase1integrity-algorithms-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase1integrity-algorithms-request-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase1integrity-algorithms-request-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase1integrity-algorithms-request-list-value 'make-phase1integrity-algorithms-request-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase1integrity-algorithms-request-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase2dhgroup-numbers-list () '(trivial-types:proper-list phase2dhgroup-numbers-list-value))
 (common-lisp:defun |make-phase2dhgroup-numbers-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase2dhgroup-numbers-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase2dhgroup-numbers-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase2dhgroup-numbers-list-value 'make-phase2dhgroup-numbers-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase2dhgroup-numbers-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase2dhgroup-numbers-request-list () '(trivial-types:proper-list phase2dhgroup-numbers-request-list-value))
 (common-lisp:defun |make-phase2dhgroup-numbers-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase2dhgroup-numbers-request-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase2dhgroup-numbers-request-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase2dhgroup-numbers-request-list-value 'make-phase2dhgroup-numbers-request-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase2dhgroup-numbers-request-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase2encryption-algorithms-list () '(trivial-types:proper-list phase2encryption-algorithms-list-value))
 (common-lisp:defun |make-phase2encryption-algorithms-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase2encryption-algorithms-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase2encryption-algorithms-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase2encryption-algorithms-list-value 'make-phase2encryption-algorithms-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase2encryption-algorithms-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase2encryption-algorithms-request-list () '(trivial-types:proper-list phase2encryption-algorithms-request-list-value))
 (common-lisp:defun |make-phase2encryption-algorithms-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase2encryption-algorithms-request-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase2encryption-algorithms-request-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase2encryption-algorithms-request-list-value 'make-phase2encryption-algorithms-request-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase2encryption-algorithms-request-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase2integrity-algorithms-list () '(trivial-types:proper-list phase2integrity-algorithms-list-value))
 (common-lisp:defun |make-phase2integrity-algorithms-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase2integrity-algorithms-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase2integrity-algorithms-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase2integrity-algorithms-list-value 'make-phase2integrity-algorithms-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase2integrity-algorithms-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype phase2integrity-algorithms-request-list () '(trivial-types:proper-list phase2integrity-algorithms-request-list-value))
 (common-lisp:defun |make-phase2integrity-algorithms-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list phase2integrity-algorithms-request-list-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (phase2integrity-algorithms-request-list-value (:copier common-lisp:nil)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase2integrity-algorithms-request-list-value 'make-phase2integrity-algorithms-request-list-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape phase2integrity-algorithms-request-list-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:defstruct (placement (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (affinity common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (partition-number common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (host-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (spread-domain common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (host-resource-group-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'placement 'make-placement))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape placement))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Affinity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'affinity)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "PartitionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'partition-number)))
                       (aws-sdk/generator/shape::to-query-params "HostId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id)))
                       (aws-sdk/generator/shape::to-query-params "Tenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tenancy)))
                       (aws-sdk/generator/shape::to-query-params "SpreadDomain" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spread-domain)))
                       (aws-sdk/generator/shape::to-query-params "HostResourceGroupArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-resource-group-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (placement-group (:copier common-lisp:nil))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or placement-group-state common-lisp:null))
   (strategy common-lisp:nil :type (common-lisp:or placement-strategy common-lisp:null))
   (partition-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'placement-group 'make-placement-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape placement-group))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Strategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'strategy)))
                       (aws-sdk/generator/shape::to-query-params "PartitionCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'partition-count)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype placement-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype placement-group-id-string-list () '(trivial-types:proper-list placement-group-id))
 (common-lisp:defun |make-placement-group-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list placement-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (placement-group-info (:copier common-lisp:nil)) (supported-strategies common-lisp:nil :type (common-lisp:or placement-group-strategy-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'placement-group-info 'make-placement-group-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape placement-group-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SupportedStrategies" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'supported-strategies))))))
(common-lisp:progn
 (common-lisp:deftype placement-group-list () '(trivial-types:proper-list placement-group))
 (common-lisp:defun |make-placement-group-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list placement-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype placement-group-name () 'common-lisp:string)
(common-lisp:deftype placement-group-state () 'common-lisp:string)
(common-lisp:deftype placement-group-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype placement-group-strategy-list () '(trivial-types:proper-list placement-group-strategy))
 (common-lisp:defun |make-placement-group-strategy-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list placement-group-strategy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype placement-group-string-list () '(trivial-types:proper-list placement-group-name))
 (common-lisp:defun |make-placement-group-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list placement-group-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (placement-response (:copier common-lisp:nil)) (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'placement-response 'make-placement-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape placement-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name))))))
(common-lisp:deftype placement-strategy () 'common-lisp:string)
(common-lisp:deftype platform-values () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (pool-cidr-block (:copier common-lisp:nil)) (cidr common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pool-cidr-block 'make-pool-cidr-block))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape pool-cidr-block))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr))))))
(common-lisp:progn
 (common-lisp:deftype pool-cidr-blocks-set () '(trivial-types:proper-list pool-cidr-block))
 (common-lisp:defun |make-pool-cidr-blocks-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list pool-cidr-block))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pool-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (port-range (:copier common-lisp:nil)) (from common-lisp:nil :type (common-lisp:or integer common-lisp:null)) (to common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'port-range 'make-port-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape port-range))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "From" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from)))
                       (aws-sdk/generator/shape::to-query-params "To" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to))))))
(common-lisp:progn
 (common-lisp:defstruct (prefix-list (:copier common-lisp:nil))
   (cidrs common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (prefix-list-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (prefix-list-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'prefix-list 'make-prefix-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape prefix-list))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cidrs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidrs)))
                       (aws-sdk/generator/shape::to-query-params "PrefixListId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix-list-id)))
                       (aws-sdk/generator/shape::to-query-params "PrefixListName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix-list-name))))))
(common-lisp:progn
 (common-lisp:defstruct (prefix-list-id (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (prefix-list-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'prefix-list-id 'make-prefix-list-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape prefix-list-id))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "PrefixListId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix-list-id))))))
(common-lisp:progn
 (common-lisp:deftype prefix-list-id-list () '(trivial-types:proper-list prefix-list-id))
 (common-lisp:defun |make-prefix-list-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list prefix-list-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype prefix-list-id-set () '(trivial-types:proper-list string))
 (common-lisp:defun |make-prefix-list-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype prefix-list-resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype prefix-list-resource-id-string-list () '(trivial-types:proper-list prefix-list-resource-id))
 (common-lisp:defun |make-prefix-list-resource-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list prefix-list-resource-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype prefix-list-set () '(trivial-types:proper-list prefix-list))
 (common-lisp:defun |make-prefix-list-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list prefix-list))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (price-schedule (:copier common-lisp:nil))
   (active common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (price common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (term common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'price-schedule 'make-price-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape price-schedule))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Active" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'active)))
                       (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "Price" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'price)))
                       (aws-sdk/generator/shape::to-query-params "Term" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'term))))))
(common-lisp:progn
 (common-lisp:deftype price-schedule-list () '(trivial-types:proper-list price-schedule))
 (common-lisp:defun |make-price-schedule-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list price-schedule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (price-schedule-specification (:copier common-lisp:nil))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (price common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (term common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'price-schedule-specification 'make-price-schedule-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape price-schedule-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "Price" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'price)))
                       (aws-sdk/generator/shape::to-query-params "Term" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'term))))))
(common-lisp:progn
 (common-lisp:deftype price-schedule-specification-list () '(trivial-types:proper-list price-schedule-specification))
 (common-lisp:defun |make-price-schedule-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list price-schedule-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (pricing-detail (:copier common-lisp:nil)) (count common-lisp:nil :type (common-lisp:or integer common-lisp:null)) (price common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pricing-detail 'make-pricing-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape pricing-detail))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Count" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'count)))
                       (aws-sdk/generator/shape::to-query-params "Price" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'price))))))
(common-lisp:progn
 (common-lisp:deftype pricing-details-list () '(trivial-types:proper-list pricing-detail))
 (common-lisp:defun |make-pricing-details-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list pricing-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (principal-id-format (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (statuses common-lisp:nil :type (common-lisp:or id-format-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'principal-id-format 'make-principal-id-format))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape principal-id-format))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Arn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'arn)))
                       (aws-sdk/generator/shape::to-query-params "Statuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'statuses))))))
(common-lisp:progn
 (common-lisp:deftype principal-id-format-list () '(trivial-types:proper-list principal-id-format))
 (common-lisp:defun |make-principal-id-format-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list principal-id-format))
   aws-sdk/generator/shape::members))
(common-lisp:deftype principal-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (private-dns-name-configuration (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or dns-name-state common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'private-dns-name-configuration 'make-private-dns-name-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape private-dns-name-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:progn
 (common-lisp:deftype private-ip-address-config-set () '(trivial-types:proper-list scheduled-instances-private-ip-address-config))
 (common-lisp:defun |make-private-ip-address-config-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instances-private-ip-address-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (private-ip-address-specification (:copier common-lisp:nil))
   (primary common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'private-ip-address-specification 'make-private-ip-address-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape private-ip-address-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Primary" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'primary)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address))))))
(common-lisp:progn
 (common-lisp:deftype private-ip-address-specification-list () '(trivial-types:proper-list private-ip-address-specification))
 (common-lisp:defun |make-private-ip-address-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list private-ip-address-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype private-ip-address-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-private-ip-address-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (processor-info (:copier common-lisp:nil))
   (supported-architectures common-lisp:nil :type (common-lisp:or architecture-type-list common-lisp:null))
   (sustained-clock-speed-in-ghz common-lisp:nil :type (common-lisp:or processor-sustained-clock-speed common-lisp:null)))
 (common-lisp:export (common-lisp:list 'processor-info 'make-processor-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape processor-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SupportedArchitectures" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'supported-architectures)))
                       (aws-sdk/generator/shape::to-query-params "SustainedClockSpeedInGhz" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sustained-clock-speed-in-ghz))))))
(common-lisp:deftype processor-sustained-clock-speed () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (product-code (:copier common-lisp:nil))
   (product-code-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-code-type common-lisp:nil :type (common-lisp:or product-code-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'product-code 'make-product-code))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape product-code))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ProductCodeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-code-id)))
                       (aws-sdk/generator/shape::to-query-params "ProductCodeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-code-type))))))
(common-lisp:progn
 (common-lisp:deftype product-code-list () '(trivial-types:proper-list product-code))
 (common-lisp:defun |make-product-code-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list product-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype product-code-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-product-code-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype product-code-values () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype product-description-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-product-description-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (propagating-vgw (:copier common-lisp:nil)) (gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'propagating-vgw 'make-propagating-vgw))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape propagating-vgw))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id))))))
(common-lisp:progn
 (common-lisp:deftype propagating-vgw-list () '(trivial-types:proper-list propagating-vgw))
 (common-lisp:defun |make-propagating-vgw-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list propagating-vgw))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (provision-byoip-cidr-request (:copier common-lisp:nil))
   (cidr (common-lisp:error ":cidr is required") :type (common-lisp:or string common-lisp:null))
   (cidr-authorization-context common-lisp:nil :type (common-lisp:or cidr-authorization-context common-lisp:null))
   (publicly-advertisable common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'provision-byoip-cidr-request 'make-provision-byoip-cidr-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape provision-byoip-cidr-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr)))
                       (aws-sdk/generator/shape::to-query-params "CidrAuthorizationContext" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-authorization-context)))
                       (aws-sdk/generator/shape::to-query-params "PubliclyAdvertisable" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'publicly-advertisable)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (provision-byoip-cidr-result (:copier common-lisp:nil)) (byoip-cidr common-lisp:nil :type (common-lisp:or byoip-cidr common-lisp:null)))
 (common-lisp:export (common-lisp:list 'provision-byoip-cidr-result 'make-provision-byoip-cidr-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape provision-byoip-cidr-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ByoipCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'byoip-cidr))))))
(common-lisp:progn
 (common-lisp:defstruct (provisioned-bandwidth (:copier common-lisp:nil))
   (provision-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (provisioned common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (request-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (requested common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'provisioned-bandwidth 'make-provisioned-bandwidth))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape provisioned-bandwidth))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ProvisionTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'provision-time)))
                       (aws-sdk/generator/shape::to-query-params "Provisioned" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'provisioned)))
                       (aws-sdk/generator/shape::to-query-params "RequestTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'request-time)))
                       (aws-sdk/generator/shape::to-query-params "Requested" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requested)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:deftype public-ip-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-public-ip-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (public-ipv4pool (:copier common-lisp:nil))
   (pool-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pool-address-ranges common-lisp:nil :type (common-lisp:or public-ipv4pool-range-set common-lisp:null))
   (total-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (total-available-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'public-ipv4pool 'make-public-ipv4pool))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape public-ipv4pool))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PoolId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "PoolAddressRanges" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pool-address-ranges)))
                       (aws-sdk/generator/shape::to-query-params "TotalAddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-address-count)))
                       (aws-sdk/generator/shape::to-query-params "TotalAvailableAddressCount"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-available-address-count)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype public-ipv4pool-id-string-list () '(trivial-types:proper-list ipv4pool-ec2id))
 (common-lisp:defun |make-public-ipv4pool-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list ipv4pool-ec2id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (public-ipv4pool-range (:copier common-lisp:nil))
   (first-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (last-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (available-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'public-ipv4pool-range 'make-public-ipv4pool-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape public-ipv4pool-range))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FirstAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'first-address)))
                       (aws-sdk/generator/shape::to-query-params "LastAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'last-address)))
                       (aws-sdk/generator/shape::to-query-params "AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'address-count)))
                       (aws-sdk/generator/shape::to-query-params "AvailableAddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-address-count))))))
(common-lisp:progn
 (common-lisp:deftype public-ipv4pool-range-set () '(trivial-types:proper-list public-ipv4pool-range))
 (common-lisp:defun |make-public-ipv4pool-range-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list public-ipv4pool-range))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype public-ipv4pool-set () '(trivial-types:proper-list public-ipv4pool))
 (common-lisp:defun |make-public-ipv4pool-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list public-ipv4pool))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (purchase (:copier common-lisp:nil))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (host-id-set common-lisp:nil :type (common-lisp:or response-host-id-set common-lisp:null))
   (host-reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (payment-option common-lisp:nil :type (common-lisp:or payment-option common-lisp:null))
   (upfront-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase 'make-purchase))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "Duration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'duration)))
                       (aws-sdk/generator/shape::to-query-params "HostIdSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id-set)))
                       (aws-sdk/generator/shape::to-query-params "HostReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-reservation-id)))
                       (aws-sdk/generator/shape::to-query-params "HourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "InstanceFamily" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-family)))
                       (aws-sdk/generator/shape::to-query-params "PaymentOption" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'payment-option)))
                       (aws-sdk/generator/shape::to-query-params "UpfrontPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upfront-price))))))
(common-lisp:progn
 (common-lisp:defstruct (purchase-host-reservation-request (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (host-id-set (common-lisp:error ":host-id-set is required") :type (common-lisp:or request-host-id-set common-lisp:null))
   (limit-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (offering-id (common-lisp:error ":offering-id is required") :type (common-lisp:or offering-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase-host-reservation-request 'make-purchase-host-reservation-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase-host-reservation-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "HostIdSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-id-set)))
                       (aws-sdk/generator/shape::to-query-params "LimitPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'limit-price)))
                       (aws-sdk/generator/shape::to-query-params "OfferingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-id))))))
(common-lisp:progn
 (common-lisp:defstruct (purchase-host-reservation-result (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (purchase common-lisp:nil :type (common-lisp:or purchase-set common-lisp:null))
   (total-hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (total-upfront-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase-host-reservation-result 'make-purchase-host-reservation-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase-host-reservation-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "Purchase" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'purchase)))
                       (aws-sdk/generator/shape::to-query-params "TotalHourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "TotalUpfrontPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-upfront-price))))))
(common-lisp:progn
 (common-lisp:defstruct (purchase-request (:copier common-lisp:nil))
   (instance-count (common-lisp:error ":instance-count is required") :type (common-lisp:or integer common-lisp:null))
   (purchase-token (common-lisp:error ":purchase-token is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase-request 'make-purchase-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "PurchaseToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'purchase-token))))))
(common-lisp:progn
 (common-lisp:deftype purchase-request-set () '(trivial-types:proper-list purchase-request))
 (common-lisp:defun |make-purchase-request-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list purchase-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (purchase-reserved-instances-offering-request (:copier common-lisp:nil))
   (instance-count (common-lisp:error ":instance-count is required") :type (common-lisp:or integer common-lisp:null))
   (reserved-instances-offering-id (common-lisp:error ":reserved-instances-offering-id is required") :type (common-lisp:or reserved-instances-offering-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (limit-price common-lisp:nil :type (common-lisp:or reserved-instance-limit-price common-lisp:null))
   (purchase-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase-reserved-instances-offering-request 'make-purchase-reserved-instances-offering-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase-reserved-instances-offering-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesOfferingId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-offering-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "LimitPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'limit-price)))
                       (aws-sdk/generator/shape::to-query-params "PurchaseTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'purchase-time))))))
(common-lisp:progn
 (common-lisp:defstruct (purchase-reserved-instances-offering-result (:copier common-lisp:nil)) (reserved-instances-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase-reserved-instances-offering-result 'make-purchase-reserved-instances-offering-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase-reserved-instances-offering-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id))))))
(common-lisp:progn
 (common-lisp:defstruct (purchase-scheduled-instances-request (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (purchase-requests (common-lisp:error ":purchase-requests is required") :type (common-lisp:or purchase-request-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase-scheduled-instances-request 'make-purchase-scheduled-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase-scheduled-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "PurchaseRequests" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'purchase-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (purchase-scheduled-instances-result (:copier common-lisp:nil)) (scheduled-instance-set common-lisp:nil :type (common-lisp:or purchased-scheduled-instance-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'purchase-scheduled-instances-result 'make-purchase-scheduled-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape purchase-scheduled-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ScheduledInstanceSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scheduled-instance-set))))))
(common-lisp:progn
 (common-lisp:deftype purchase-set () '(trivial-types:proper-list purchase))
 (common-lisp:defun |make-purchase-set| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list purchase)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype purchased-scheduled-instance-set () '(trivial-types:proper-list scheduled-instance))
 (common-lisp:defun |make-purchased-scheduled-instance-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instance))
   aws-sdk/generator/shape::members))
(common-lisp:deftype riproduct-description () 'common-lisp:string)
(common-lisp:deftype ramdisk-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype reason-codes-list () '(trivial-types:proper-list report-instance-reason-codes))
 (common-lisp:defun |make-reason-codes-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list report-instance-reason-codes))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reboot-instances-request (:copier common-lisp:nil))
   (instance-ids (common-lisp:error ":instance-ids is required") :type (common-lisp:or instance-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reboot-instances-request 'make-reboot-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reboot-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (recurring-charge (:copier common-lisp:nil))
   (amount common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (frequency common-lisp:nil :type (common-lisp:or recurring-charge-frequency common-lisp:null)))
 (common-lisp:export (common-lisp:list 'recurring-charge 'make-recurring-charge))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape recurring-charge))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Amount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amount)))
                       (aws-sdk/generator/shape::to-query-params "Frequency" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'frequency))))))
(common-lisp:deftype recurring-charge-frequency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recurring-charges-list () '(trivial-types:proper-list recurring-charge))
 (common-lisp:defun |make-recurring-charges-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list recurring-charge))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (region (:copier common-lisp:nil))
   (endpoint common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (opt-in-status common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'region 'make-region))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape region))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Endpoint" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'endpoint)))
                       (aws-sdk/generator/shape::to-query-params "RegionName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'region-name)))
                       (aws-sdk/generator/shape::to-query-params "OptInStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'opt-in-status))))))
(common-lisp:progn
 (common-lisp:deftype region-list () '(trivial-types:proper-list region))
 (common-lisp:defun |make-region-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list region)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype region-name-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-region-name-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (register-image-request (:copier common-lisp:nil))
   (image-location common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (architecture common-lisp:nil :type (common-lisp:or architecture-values common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-request-list common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ena-support common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or kernel-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type (common-lisp:or string common-lisp:null))
   (billing-products common-lisp:nil :type (common-lisp:or billing-product-list common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or ramdisk-id common-lisp:null))
   (root-device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (sriov-net-support common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtualization-type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'register-image-request 'make-register-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape register-image-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImageLocation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-location)))
                       (aws-sdk/generator/shape::to-query-params "Architecture" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'architecture)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EnaSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ena-support)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "BillingProducts" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'billing-products)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "RootDeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'root-device-name)))
                       (aws-sdk/generator/shape::to-query-params "SriovNetSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'sriov-net-support)))
                       (aws-sdk/generator/shape::to-query-params "VirtualizationType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtualization-type))))))
(common-lisp:progn
 (common-lisp:defstruct (register-image-result (:copier common-lisp:nil)) (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'register-image-result 'make-register-image-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape register-image-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id))))))
(common-lisp:progn
 (common-lisp:defstruct (register-transit-gateway-multicast-group-members-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-ids common-lisp:nil :type (common-lisp:or transit-gateway-network-interface-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'register-transit-gateway-multicast-group-members-request 'make-register-transit-gateway-multicast-group-members-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape register-transit-gateway-multicast-group-members-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address)))
    (aws-sdk/generator/shape::to-query-params "NetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (register-transit-gateway-multicast-group-members-result (:copier common-lisp:nil))
   (registered-multicast-group-members common-lisp:nil :type (common-lisp:or transit-gateway-multicast-registered-group-members common-lisp:null)))
 (common-lisp:export (common-lisp:list 'register-transit-gateway-multicast-group-members-result 'make-register-transit-gateway-multicast-group-members-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape register-transit-gateway-multicast-group-members-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RegisteredMulticastGroupMembers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'registered-multicast-group-members))))))
(common-lisp:progn
 (common-lisp:defstruct (register-transit-gateway-multicast-group-sources-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-ids common-lisp:nil :type (common-lisp:or transit-gateway-network-interface-id-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'register-transit-gateway-multicast-group-sources-request 'make-register-transit-gateway-multicast-group-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape register-transit-gateway-multicast-group-sources-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address)))
    (aws-sdk/generator/shape::to-query-params "NetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (register-transit-gateway-multicast-group-sources-result (:copier common-lisp:nil))
   (registered-multicast-group-sources common-lisp:nil :type (common-lisp:or transit-gateway-multicast-registered-group-sources common-lisp:null)))
 (common-lisp:export (common-lisp:list 'register-transit-gateway-multicast-group-sources-result 'make-register-transit-gateway-multicast-group-sources-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape register-transit-gateway-multicast-group-sources-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RegisteredMulticastGroupSources" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'registered-multicast-group-sources))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-transit-gateway-peering-attachment-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-transit-gateway-peering-attachment-request 'make-reject-transit-gateway-peering-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-transit-gateway-peering-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-transit-gateway-peering-attachment-result (:copier common-lisp:nil))
   (transit-gateway-peering-attachment common-lisp:nil :type (common-lisp:or transit-gateway-peering-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-transit-gateway-peering-attachment-result 'make-reject-transit-gateway-peering-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-transit-gateway-peering-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayPeeringAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-peering-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-transit-gateway-vpc-attachment-request (:copier common-lisp:nil))
   (transit-gateway-attachment-id (common-lisp:error ":transit-gateway-attachment-id is required") :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-transit-gateway-vpc-attachment-request 'make-reject-transit-gateway-vpc-attachment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-transit-gateway-vpc-attachment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-transit-gateway-vpc-attachment-result (:copier common-lisp:nil)) (transit-gateway-vpc-attachment common-lisp:nil :type (common-lisp:or transit-gateway-vpc-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-transit-gateway-vpc-attachment-result 'make-reject-transit-gateway-vpc-attachment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-transit-gateway-vpc-attachment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayVpcAttachment" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-vpc-attachment))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-vpc-endpoint-connections-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-id (common-lisp:error ":service-id is required") :type (common-lisp:or vpc-endpoint-service-id common-lisp:null))
   (vpc-endpoint-ids (common-lisp:error ":vpc-endpoint-ids is required") :type (common-lisp:or vpc-endpoint-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-vpc-endpoint-connections-request 'make-reject-vpc-endpoint-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-vpc-endpoint-connections-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-vpc-endpoint-connections-result (:copier common-lisp:nil)) (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-vpc-endpoint-connections-result 'make-reject-vpc-endpoint-connections-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-vpc-endpoint-connections-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-vpc-peering-connection-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (vpc-peering-connection-id (common-lisp:error ":vpc-peering-connection-id is required") :type (common-lisp:or vpc-peering-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-vpc-peering-connection-request 'make-reject-vpc-peering-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-vpc-peering-connection-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-vpc-peering-connection-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reject-vpc-peering-connection-result 'make-reject-vpc-peering-connection-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reject-vpc-peering-connection-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (release-address-request (:copier common-lisp:nil))
   (allocation-id common-lisp:nil :type (common-lisp:or allocation-id common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'release-address-request 'make-release-address-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape release-address-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-id)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip)))
                       (aws-sdk/generator/shape::to-query-params "NetworkBorderGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-border-group)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (release-hosts-request (:copier common-lisp:nil)) (host-ids (common-lisp:error ":host-ids is required") :type (common-lisp:or request-host-id-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'release-hosts-request 'make-release-hosts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape release-hosts-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HostIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'host-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (release-hosts-result (:copier common-lisp:nil))
   (successful common-lisp:nil :type (common-lisp:or response-host-id-list common-lisp:null))
   (unsuccessful common-lisp:nil :type (common-lisp:or unsuccessful-item-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'release-hosts-result 'make-release-hosts-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape release-hosts-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Successful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'successful)))
                       (aws-sdk/generator/shape::to-query-params "Unsuccessful" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unsuccessful))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-iam-instance-profile-association-request (:copier common-lisp:nil))
   (iam-instance-profile (common-lisp:error ":iam-instance-profile is required") :type (common-lisp:or iam-instance-profile-specification common-lisp:null))
   (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or iam-instance-profile-association-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-iam-instance-profile-association-request 'make-replace-iam-instance-profile-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-iam-instance-profile-association-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-iam-instance-profile-association-result (:copier common-lisp:nil))
   (iam-instance-profile-association common-lisp:nil :type (common-lisp:or iam-instance-profile-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-iam-instance-profile-association-result 'make-replace-iam-instance-profile-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-iam-instance-profile-association-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamInstanceProfileAssociation" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile-association))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-network-acl-association-request (:copier common-lisp:nil))
   (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or network-acl-association-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-acl-id (common-lisp:error ":network-acl-id is required") :type (common-lisp:or network-acl-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-network-acl-association-request 'make-replace-network-acl-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-network-acl-association-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-id))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-network-acl-association-result (:copier common-lisp:nil)) (new-association-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-network-acl-association-result 'make-replace-network-acl-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-network-acl-association-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NewAssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'new-association-id))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-network-acl-entry-request (:copier common-lisp:nil))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (egress (common-lisp:error ":egress is required") :type (common-lisp:or boolean common-lisp:null))
   (icmp-type-code common-lisp:nil :type (common-lisp:or icmp-type-code common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-acl-id (common-lisp:error ":network-acl-id is required") :type (common-lisp:or network-acl-id common-lisp:null))
   (port-range common-lisp:nil :type (common-lisp:or port-range common-lisp:null))
   (protocol (common-lisp:error ":protocol is required") :type (common-lisp:or string common-lisp:null))
   (rule-action (common-lisp:error ":rule-action is required") :type (common-lisp:or rule-action common-lisp:null))
   (rule-number (common-lisp:error ":rule-number is required") :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-network-acl-entry-request 'make-replace-network-acl-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-network-acl-entry-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Egress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress)))
                       (aws-sdk/generator/shape::to-query-params "IcmpTypeCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'icmp-type-code)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "NetworkAclId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-acl-id)))
                       (aws-sdk/generator/shape::to-query-params "PortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'port-range)))
                       (aws-sdk/generator/shape::to-query-params "Protocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'protocol)))
                       (aws-sdk/generator/shape::to-query-params "RuleAction" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-action)))
                       (aws-sdk/generator/shape::to-query-params "RuleNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-number))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-route-request (:copier common-lisp:nil))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (egress-only-internet-gateway-id common-lisp:nil :type (common-lisp:or egress-only-internet-gateway-id common-lisp:null))
   (gateway-id common-lisp:nil :type (common-lisp:or route-gateway-id common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (local-target common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (nat-gateway-id common-lisp:nil :type (common-lisp:or nat-gateway-id common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or transit-gateway-id common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or local-gateway-id common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or network-interface-id common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null))
   (vpc-peering-connection-id common-lisp:nil :type (common-lisp:or vpc-peering-connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-route-request 'make-replace-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DestinationIpv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGatewayId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "LocalTarget" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-target)))
                       (aws-sdk/generator/shape::to-query-params "NatGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-route-table-association-request (:copier common-lisp:nil))
   (association-id (common-lisp:error ":association-id is required") :type (common-lisp:or route-table-association-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (route-table-id (common-lisp:error ":route-table-id is required") :type (common-lisp:or route-table-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-route-table-association-request 'make-replace-route-table-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-route-table-association-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-route-table-association-result (:copier common-lisp:nil))
   (new-association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (association-state common-lisp:nil :type (common-lisp:or route-table-association-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-route-table-association-result 'make-replace-route-table-association-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-route-table-association-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NewAssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'new-association-id)))
                       (aws-sdk/generator/shape::to-query-params "AssociationState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-state))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-transit-gateway-route-request (:copier common-lisp:nil))
   (destination-cidr-block (common-lisp:error ":destination-cidr-block is required") :type (common-lisp:or string common-lisp:null))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (blackhole common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-transit-gateway-route-request 'make-replace-transit-gateway-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-transit-gateway-route-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "Blackhole" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'blackhole)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (replace-transit-gateway-route-result (:copier common-lisp:nil)) (route common-lisp:nil :type (common-lisp:or transit-gateway-route common-lisp:null)))
 (common-lisp:export (common-lisp:list 'replace-transit-gateway-route-result 'make-replace-transit-gateway-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape replace-transit-gateway-route-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Route" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route))))))
(common-lisp:deftype report-instance-reason-codes () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (report-instance-status-request (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instances (common-lisp:error ":instances is required") :type (common-lisp:or instance-id-string-list common-lisp:null))
   (reason-codes (common-lisp:error ":reason-codes is required") :type (common-lisp:or reason-codes-list common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (status (common-lisp:error ":status is required") :type (common-lisp:or report-status-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'report-instance-status-request 'make-report-instance-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape report-instance-status-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EndTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-time)))
                       (aws-sdk/generator/shape::to-query-params "Instances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instances)))
                       (aws-sdk/generator/shape::to-query-params "ReasonCodes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reason-codes)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:deftype report-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype request-host-id-list () '(trivial-types:proper-list dedicated-host-id))
 (common-lisp:defun |make-request-host-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list dedicated-host-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype request-host-id-set () '(trivial-types:proper-list dedicated-host-id))
 (common-lisp:defun |make-request-host-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list dedicated-host-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype request-instance-type-list () '(trivial-types:proper-list instance-type))
 (common-lisp:defun |make-request-instance-type-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list instance-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (request-launch-template-data (:copier common-lisp:nil))
   (kernel-id common-lisp:nil :type (common-lisp:or kernel-id common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or launch-template-iam-instance-profile-specification-request common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or launch-template-block-device-mapping-request-list common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or launch-template-instance-network-interface-specification-request-list common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or image-id common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or key-pair-name common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or launch-templates-monitoring-request common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or launch-template-placement-request common-lisp:null))
   (ram-disk-id common-lisp:nil :type (common-lisp:or ramdisk-id common-lisp:null))
   (disable-api-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-initiated-shutdown-behavior common-lisp:nil :type (common-lisp:or shutdown-behavior common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or launch-template-tag-specification-request-list common-lisp:null))
   (elastic-gpu-specifications common-lisp:nil :type (common-lisp:or elastic-gpu-specification-list common-lisp:null))
   (elastic-inference-accelerators common-lisp:nil :type (common-lisp:or launch-template-elastic-inference-accelerator-list common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or security-group-id-string-list common-lisp:null))
   (security-groups common-lisp:nil :type (common-lisp:or security-group-string-list common-lisp:null))
   (instance-market-options common-lisp:nil :type (common-lisp:or launch-template-instance-market-options-request common-lisp:null))
   (credit-specification common-lisp:nil :type (common-lisp:or credit-specification-request common-lisp:null))
   (cpu-options common-lisp:nil :type (common-lisp:or launch-template-cpu-options-request common-lisp:null))
   (capacity-reservation-specification common-lisp:nil :type (common-lisp:or launch-template-capacity-reservation-specification-request common-lisp:null))
   (license-specifications common-lisp:nil :type (common-lisp:or launch-template-license-specification-list-request common-lisp:null))
   (hibernation-options common-lisp:nil :type (common-lisp:or launch-template-hibernation-options-request common-lisp:null))
   (metadata-options common-lisp:nil :type (common-lisp:or launch-template-instance-metadata-options-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-launch-template-data 'make-request-launch-template-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape request-launch-template-data))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "RamDiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ram-disk-id)))
                       (aws-sdk/generator/shape::to-query-params "DisableApiTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disable-api-termination)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInitiatedShutdownBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-initiated-shutdown-behavior)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-specifications)))
                       (aws-sdk/generator/shape::to-query-params "ElasticInferenceAccelerators"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerators)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "InstanceMarketOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-market-options)))
                       (aws-sdk/generator/shape::to-query-params "CreditSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'credit-specification)))
                       (aws-sdk/generator/shape::to-query-params "CpuOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-options)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationSpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-specification)))
                       (aws-sdk/generator/shape::to-query-params "LicenseSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-specifications)))
                       (aws-sdk/generator/shape::to-query-params "HibernationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hibernation-options)))
                       (aws-sdk/generator/shape::to-query-params "MetadataOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'metadata-options))))))
(common-lisp:progn
 (common-lisp:defstruct (request-spot-fleet-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (spot-fleet-request-config (common-lisp:error ":spot-fleet-request-config is required") :type (common-lisp:or spot-fleet-request-config-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-spot-fleet-request 'make-request-spot-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape request-spot-fleet-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestConfig" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-config))))))
(common-lisp:progn
 (common-lisp:defstruct (request-spot-fleet-response (:copier common-lisp:nil)) (spot-fleet-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-spot-fleet-response 'make-request-spot-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape request-spot-fleet-response))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id))))))
(common-lisp:progn
 (common-lisp:defstruct (request-spot-instances-request (:copier common-lisp:nil))
   (availability-zone-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (block-duration-minutes common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (launch-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-specification common-lisp:nil :type (common-lisp:or request-spot-launch-specification common-lisp:null))
   (spot-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or spot-instance-type common-lisp:null))
   (valid-from common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or instance-interruption-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-spot-instances-request 'make-request-spot-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape request-spot-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZoneGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone-group)))
                       (aws-sdk/generator/shape::to-query-params "BlockDurationMinutes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-duration-minutes)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "LaunchGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-group)))
                       (aws-sdk/generator/shape::to-query-params "LaunchSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-specification)))
                       (aws-sdk/generator/shape::to-query-params "SpotPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-price)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "ValidFrom" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-from)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior))))))
(common-lisp:progn
 (common-lisp:defstruct (request-spot-instances-result (:copier common-lisp:nil)) (spot-instance-requests common-lisp:nil :type (common-lisp:or spot-instance-request-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-spot-instances-result 'make-request-spot-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape request-spot-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SpotInstanceRequests" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (request-spot-launch-specification (:copier common-lisp:nil))
   (security-group-ids common-lisp:nil :type (common-lisp:or request-spot-launch-specification-security-group-id-list common-lisp:null))
   (security-groups common-lisp:nil :type (common-lisp:or request-spot-launch-specification-security-group-list common-lisp:null))
   (addressing-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-list common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or iam-instance-profile-specification common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or image-id common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or kernel-id common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or key-pair-name common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or run-instances-monitoring-enabled common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or instance-network-interface-specification-list common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or spot-placement common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or ramdisk-id common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-spot-launch-specification 'make-request-spot-launch-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape request-spot-launch-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "AddressingType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'addressing-type)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data))))))
(common-lisp:progn
 (common-lisp:deftype request-spot-launch-specification-security-group-id-list () '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-request-spot-launch-specification-security-group-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype request-spot-launch-specification-security-group-list () '(trivial-types:proper-list security-group-name))
 (common-lisp:defun |make-request-spot-launch-specification-security-group-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reservation (:copier common-lisp:nil))
   (groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (instances common-lisp:nil :type (common-lisp:or instance-list common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reservation-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reservation 'make-reservation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reservation))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "Instances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instances)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "RequesterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-id)))
                       (aws-sdk/generator/shape::to-query-params "ReservationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reservation-id))))))
(common-lisp:deftype reservation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype reservation-list () '(trivial-types:proper-list reservation))
 (common-lisp:defun |make-reservation-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reservation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype reservation-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reservation-value (:copier common-lisp:nil))
   (hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (remaining-total-value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (remaining-upfront-value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reservation-value 'make-reservation-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reservation-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "HourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "RemainingTotalValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remaining-total-value)))
                       (aws-sdk/generator/shape::to-query-params "RemainingUpfrontValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'remaining-upfront-value))))))
(common-lisp:progn
 (common-lisp:deftype reserved-instance-id-set () '(trivial-types:proper-list reservation-id))
 (common-lisp:defun |make-reserved-instance-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reservation-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instance-limit-price (:copier common-lisp:nil))
   (amount common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instance-limit-price 'make-reserved-instance-limit-price))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instance-limit-price))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Amount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amount)))
                       (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code))))))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instance-reservation-value (:copier common-lisp:nil))
   (reservation-value common-lisp:nil :type (common-lisp:or reservation-value common-lisp:null))
   (reserved-instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instance-reservation-value 'make-reserved-instance-reservation-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instance-reservation-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservationValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reservation-value)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instance-id))))))
(common-lisp:progn
 (common-lisp:deftype reserved-instance-reservation-value-set () '(trivial-types:proper-list reserved-instance-reservation-value))
 (common-lisp:defun |make-reserved-instance-reservation-value-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instance-reservation-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype reserved-instance-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reserved-instances (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (end common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (fixed-price common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (product-description common-lisp:nil :type (common-lisp:or riproduct-description common-lisp:null))
   (reserved-instances-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (start common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or reserved-instance-state common-lisp:null))
   (usage-price common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (instance-tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (offering-class common-lisp:nil :type (common-lisp:or offering-class-type common-lisp:null))
   (offering-type common-lisp:nil :type (common-lisp:or offering-type-values common-lisp:null))
   (recurring-charges common-lisp:nil :type (common-lisp:or recurring-charges-list common-lisp:null))
   (scope common-lisp:nil :type (common-lisp:or |scope| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instances 'make-reserved-instances))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instances))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Duration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'duration)))
                       (aws-sdk/generator/shape::to-query-params "End" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end)))
                       (aws-sdk/generator/shape::to-query-params "FixedPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fixed-price)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "ProductDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-description)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id)))
                       (aws-sdk/generator/shape::to-query-params "Start" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "UsagePrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'usage-price)))
                       (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-tenancy)))
                       (aws-sdk/generator/shape::to-query-params "OfferingClass" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-class)))
                       (aws-sdk/generator/shape::to-query-params "OfferingType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-type)))
                       (aws-sdk/generator/shape::to-query-params "RecurringCharges" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'recurring-charges)))
                       (aws-sdk/generator/shape::to-query-params "Scope" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scope)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instances-configuration (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (scope common-lisp:nil :type (common-lisp:or |scope| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instances-configuration 'make-reserved-instances-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instances-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "Scope" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scope))))))
(common-lisp:progn
 (common-lisp:deftype reserved-instances-configuration-list () '(trivial-types:proper-list reserved-instances-configuration))
 (common-lisp:defun |make-reserved-instances-configuration-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instances-id (:copier common-lisp:nil)) (reserved-instances-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instances-id 'make-reserved-instances-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instances-id))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id))))))
(common-lisp:progn
 (common-lisp:deftype reserved-instances-id-string-list () '(trivial-types:proper-list reservation-id))
 (common-lisp:defun |make-reserved-instances-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reservation-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype reserved-instances-list () '(trivial-types:proper-list reserved-instances))
 (common-lisp:defun |make-reserved-instances-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instances-listing (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (create-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instance-counts common-lisp:nil :type (common-lisp:or instance-count-list common-lisp:null))
   (price-schedules common-lisp:nil :type (common-lisp:or price-schedule-list common-lisp:null))
   (reserved-instances-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reserved-instances-listing-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or listing-status common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (update-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instances-listing 'make-reserved-instances-listing))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instances-listing))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "CreateDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-date)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCounts" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-counts)))
                       (aws-sdk/generator/shape::to-query-params "PriceSchedules" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'price-schedules)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesListingId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-listing-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "UpdateDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'update-date))))))
(common-lisp:deftype reserved-instances-listing-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype reserved-instances-listing-list () '(trivial-types:proper-list reserved-instances-listing))
 (common-lisp:defun |make-reserved-instances-listing-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-listing))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instances-modification (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (create-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (effective-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (modification-results common-lisp:nil :type (common-lisp:or reserved-instances-modification-result-list common-lisp:null))
   (reserved-instances-ids common-lisp:nil :type (common-lisp:or reserved-intances-ids common-lisp:null))
   (reserved-instances-modification-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (update-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instances-modification 'make-reserved-instances-modification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instances-modification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "CreateDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-date)))
                       (aws-sdk/generator/shape::to-query-params "EffectiveDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'effective-date)))
                       (aws-sdk/generator/shape::to-query-params "ModificationResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'modification-results)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-ids)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesModificationId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-modification-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "UpdateDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'update-date))))))
(common-lisp:deftype reserved-instances-modification-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype reserved-instances-modification-id-string-list () '(trivial-types:proper-list reserved-instances-modification-id))
 (common-lisp:defun |make-reserved-instances-modification-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-modification-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype reserved-instances-modification-list () '(trivial-types:proper-list reserved-instances-modification))
 (common-lisp:defun |make-reserved-instances-modification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-modification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instances-modification-result (:copier common-lisp:nil))
   (reserved-instances-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-configuration common-lisp:nil :type (common-lisp:or reserved-instances-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instances-modification-result 'make-reserved-instances-modification-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instances-modification-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetConfiguration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-configuration))))))
(common-lisp:progn
 (common-lisp:deftype reserved-instances-modification-result-list () '(trivial-types:proper-list reserved-instances-modification-result))
 (common-lisp:defun |make-reserved-instances-modification-result-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-modification-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reserved-instances-offering (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (fixed-price common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (product-description common-lisp:nil :type (common-lisp:or riproduct-description common-lisp:null))
   (reserved-instances-offering-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (usage-price common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (currency-code common-lisp:nil :type (common-lisp:or currency-code-values common-lisp:null))
   (instance-tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (marketplace common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (offering-class common-lisp:nil :type (common-lisp:or offering-class-type common-lisp:null))
   (offering-type common-lisp:nil :type (common-lisp:or offering-type-values common-lisp:null))
   (pricing-details common-lisp:nil :type (common-lisp:or pricing-details-list common-lisp:null))
   (recurring-charges common-lisp:nil :type (common-lisp:or recurring-charges-list common-lisp:null))
   (scope common-lisp:nil :type (common-lisp:or |scope| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reserved-instances-offering 'make-reserved-instances-offering))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reserved-instances-offering))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "Duration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'duration)))
                       (aws-sdk/generator/shape::to-query-params "FixedPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fixed-price)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "ProductDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-description)))
                       (aws-sdk/generator/shape::to-query-params "ReservedInstancesOfferingId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-offering-id)))
                       (aws-sdk/generator/shape::to-query-params "UsagePrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'usage-price)))
                       (aws-sdk/generator/shape::to-query-params "CurrencyCode" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'currency-code)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-tenancy)))
                       (aws-sdk/generator/shape::to-query-params "Marketplace" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'marketplace)))
                       (aws-sdk/generator/shape::to-query-params "OfferingClass" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-class)))
                       (aws-sdk/generator/shape::to-query-params "OfferingType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-type)))
                       (aws-sdk/generator/shape::to-query-params "PricingDetails" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pricing-details)))
                       (aws-sdk/generator/shape::to-query-params "RecurringCharges" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'recurring-charges)))
                       (aws-sdk/generator/shape::to-query-params "Scope" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scope))))))
(common-lisp:deftype reserved-instances-offering-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype reserved-instances-offering-id-string-list () '(trivial-types:proper-list reserved-instances-offering-id))
 (common-lisp:defun |make-reserved-instances-offering-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-offering-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype reserved-instances-offering-list () '(trivial-types:proper-list reserved-instances-offering))
 (common-lisp:defun |make-reserved-instances-offering-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-offering))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype reserved-intances-ids () '(trivial-types:proper-list reserved-instances-id))
 (common-lisp:defun |make-reserved-intances-ids| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list reserved-instances-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reset-ebs-default-kms-key-id-request (:copier common-lisp:nil)) (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-ebs-default-kms-key-id-request 'make-reset-ebs-default-kms-key-id-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-ebs-default-kms-key-id-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (reset-ebs-default-kms-key-id-result (:copier common-lisp:nil)) (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-ebs-default-kms-key-id-result 'make-reset-ebs-default-kms-key-id-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-ebs-default-kms-key-id-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id))))))
(common-lisp:deftype reset-fpga-image-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reset-fpga-image-attribute-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (fpga-image-id (common-lisp:error ":fpga-image-id is required") :type (common-lisp:or fpga-image-id common-lisp:null))
   (attribute common-lisp:nil :type (common-lisp:or reset-fpga-image-attribute-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-fpga-image-attribute-request 'make-reset-fpga-image-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-fpga-image-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "FpgaImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fpga-image-id)))
                       (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute))))))
(common-lisp:progn
 (common-lisp:defstruct (reset-fpga-image-attribute-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-fpga-image-attribute-result 'make-reset-fpga-image-attribute-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-fpga-image-attribute-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:deftype reset-image-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reset-image-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or reset-image-attribute-name common-lisp:null))
   (image-id (common-lisp:error ":image-id is required") :type (common-lisp:or image-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-image-attribute-request 'make-reset-image-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-image-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (reset-instance-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or instance-attribute-name common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-instance-attribute-request 'make-reset-instance-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-instance-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (reset-network-interface-attribute-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null))
   (source-dest-check common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-network-interface-attribute-request 'make-reset-network-interface-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-network-interface-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "SourceDestCheck" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-dest-check))))))
(common-lisp:progn
 (common-lisp:defstruct (reset-snapshot-attribute-request (:copier common-lisp:nil))
   (attribute (common-lisp:error ":attribute is required") :type (common-lisp:or snapshot-attribute-name common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type (common-lisp:or snapshot-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reset-snapshot-attribute-request 'make-reset-snapshot-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape reset-snapshot-attribute-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attribute" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attribute)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:deftype resource-id-list () '(trivial-types:proper-list taggable-resource-id))
 (common-lisp:defun |make-resource-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list taggable-resource-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-resource-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string)) aws-sdk/generator/shape::members))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (response-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or launch-template-error-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'response-error 'make-response-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape response-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:deftype response-host-id-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-response-host-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype response-host-id-set () '(trivial-types:proper-list string))
 (common-lisp:defun |make-response-host-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (response-launch-template-data (:copier common-lisp:nil))
   (kernel-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or launch-template-iam-instance-profile-specification common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or launch-template-block-device-mapping-list common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or launch-template-instance-network-interface-specification-list common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or launch-templates-monitoring common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or launch-template-placement common-lisp:null))
   (ram-disk-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disable-api-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-initiated-shutdown-behavior common-lisp:nil :type (common-lisp:or shutdown-behavior common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or launch-template-tag-specification-list common-lisp:null))
   (elastic-gpu-specifications common-lisp:nil :type (common-lisp:or elastic-gpu-specification-response-list common-lisp:null))
   (elastic-inference-accelerators common-lisp:nil :type (common-lisp:or launch-template-elastic-inference-accelerator-response-list common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (security-groups common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (instance-market-options common-lisp:nil :type (common-lisp:or launch-template-instance-market-options common-lisp:null))
   (credit-specification common-lisp:nil :type (common-lisp:or credit-specification common-lisp:null))
   (cpu-options common-lisp:nil :type (common-lisp:or launch-template-cpu-options common-lisp:null))
   (capacity-reservation-specification common-lisp:nil :type (common-lisp:or launch-template-capacity-reservation-specification-response common-lisp:null))
   (license-specifications common-lisp:nil :type (common-lisp:or launch-template-license-list common-lisp:null))
   (hibernation-options common-lisp:nil :type (common-lisp:or launch-template-hibernation-options common-lisp:null))
   (metadata-options common-lisp:nil :type (common-lisp:or launch-template-instance-metadata-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'response-launch-template-data 'make-response-launch-template-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape response-launch-template-data))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "RamDiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ram-disk-id)))
                       (aws-sdk/generator/shape::to-query-params "DisableApiTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disable-api-termination)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInitiatedShutdownBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-initiated-shutdown-behavior)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-specifications)))
                       (aws-sdk/generator/shape::to-query-params "ElasticInferenceAccelerators"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerators)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "InstanceMarketOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-market-options)))
                       (aws-sdk/generator/shape::to-query-params "CreditSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'credit-specification)))
                       (aws-sdk/generator/shape::to-query-params "CpuOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-options)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationSpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-specification)))
                       (aws-sdk/generator/shape::to-query-params "LicenseSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-specifications)))
                       (aws-sdk/generator/shape::to-query-params "HibernationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hibernation-options)))
                       (aws-sdk/generator/shape::to-query-params "MetadataOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'metadata-options))))))
(common-lisp:progn
 (common-lisp:deftype restorable-by-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-restorable-by-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (restore-address-to-classic-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (public-ip (common-lisp:error ":public-ip is required") :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'restore-address-to-classic-request 'make-restore-address-to-classic-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape restore-address-to-classic-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip))))))
(common-lisp:progn
 (common-lisp:defstruct (restore-address-to-classic-result (:copier common-lisp:nil))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'restore-address-to-classic-result 'make-restore-address-to-classic-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape restore-address-to-classic-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "PublicIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'public-ip)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (revoke-client-vpn-ingress-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (target-network-cidr (common-lisp:error ":target-network-cidr is required") :type (common-lisp:or string common-lisp:null))
   (access-group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (revoke-all-groups common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'revoke-client-vpn-ingress-request 'make-revoke-client-vpn-ingress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape revoke-client-vpn-ingress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetNetworkCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-network-cidr)))
                       (aws-sdk/generator/shape::to-query-params "AccessGroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'access-group-id)))
                       (aws-sdk/generator/shape::to-query-params "RevokeAllGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'revoke-all-groups)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (revoke-client-vpn-ingress-result (:copier common-lisp:nil)) (status common-lisp:nil :type (common-lisp:or client-vpn-authorization-rule-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'revoke-client-vpn-ingress-result 'make-revoke-client-vpn-ingress-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape revoke-client-vpn-ingress-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:defstruct (revoke-security-group-egress-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-id (common-lisp:error ":group-id is required") :type (common-lisp:or security-group-id common-lisp:null))
   (ip-permissions common-lisp:nil :type (common-lisp:or ip-permission-list common-lisp:null))
   (cidr-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ip-protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (source-security-group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-security-group-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'revoke-security-group-egress-request 'make-revoke-security-group-egress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape revoke-security-group-egress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions)))
                       (aws-sdk/generator/shape::to-query-params "CidrIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-ip)))
                       (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "IpProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-protocol)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-name)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupOwnerId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-owner-id))))))
(common-lisp:progn
 (common-lisp:defstruct (revoke-security-group-ingress-request (:copier common-lisp:nil))
   (cidr-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or security-group-id common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or security-group-name common-lisp:null))
   (ip-permissions common-lisp:nil :type (common-lisp:or ip-permission-list common-lisp:null))
   (ip-protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-security-group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-security-group-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'revoke-security-group-ingress-request 'make-revoke-security-group-ingress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape revoke-security-group-ingress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrIp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-ip)))
                       (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions)))
                       (aws-sdk/generator/shape::to-query-params "IpProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-protocol)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-name)))
                       (aws-sdk/generator/shape::to-query-params "SourceSecurityGroupOwnerId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-security-group-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:deftype root-device-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype root-device-type-list () '(trivial-types:proper-list root-device-type))
 (common-lisp:defun |make-root-device-type-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list root-device-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (route (:copier common-lisp:nil))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-prefix-list-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (egress-only-internet-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (nat-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (local-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or route-origin common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or route-state common-lisp:null))
   (vpc-peering-connection-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route 'make-route))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape route))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DestinationIpv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DestinationPrefixListId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-prefix-list-id)))
                       (aws-sdk/generator/shape::to-query-params "EgressOnlyInternetGatewayId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-only-internet-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-owner-id)))
                       (aws-sdk/generator/shape::to-query-params "NatGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'nat-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "LocalGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "Origin" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'origin)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:deftype route-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype route-list () '(trivial-types:proper-list route))
 (common-lisp:defun |make-route-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list route)) aws-sdk/generator/shape::members))
(common-lisp:deftype route-origin () 'common-lisp:string)
(common-lisp:deftype route-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (route-table (:copier common-lisp:nil))
   (associations common-lisp:nil :type (common-lisp:or route-table-association-list common-lisp:null))
   (propagating-vgws common-lisp:nil :type (common-lisp:or propagating-vgw-list common-lisp:null))
   (route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (routes common-lisp:nil :type (common-lisp:or route-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route-table 'make-route-table))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape route-table))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Associations" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associations)))
                       (aws-sdk/generator/shape::to-query-params "PropagatingVgws" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'propagating-vgws)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "Routes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'routes)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id))))))
(common-lisp:progn
 (common-lisp:defstruct (route-table-association (:copier common-lisp:nil))
   (main common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (route-table-association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (association-state common-lisp:nil :type (common-lisp:or route-table-association-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route-table-association 'make-route-table-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape route-table-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Main" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'main)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableAssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-association-id)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "GatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "AssociationState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-state))))))
(common-lisp:deftype route-table-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype route-table-association-list () '(trivial-types:proper-list route-table-association))
 (common-lisp:defun |make-route-table-association-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list route-table-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (route-table-association-state (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or route-table-association-state-code common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route-table-association-state 'make-route-table-association-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape route-table-association-state))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message))))))
(common-lisp:deftype route-table-association-state-code () 'common-lisp:string)
(common-lisp:deftype route-table-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype route-table-id-string-list () '(trivial-types:proper-list route-table-id))
 (common-lisp:defun |make-route-table-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list route-table-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype route-table-list () '(trivial-types:proper-list route-table))
 (common-lisp:defun |make-route-table-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list route-table))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rule-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (run-instances-monitoring-enabled (:copier common-lisp:nil)) (enabled (common-lisp:error ":enabled is required") :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'run-instances-monitoring-enabled 'make-run-instances-monitoring-enabled))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape run-instances-monitoring-enabled))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (run-instances-request (:copier common-lisp:nil))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-request-list common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or image-id common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (ipv6address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or instance-ipv6address-list common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or kernel-id common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or key-pair-name common-lisp:null))
   (max-count (common-lisp:error ":max-count is required") :type (common-lisp:or integer common-lisp:null))
   (min-count (common-lisp:error ":min-count is required") :type (common-lisp:or integer common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or run-instances-monitoring-enabled common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or placement common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or ramdisk-id common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or security-group-id-string-list common-lisp:null))
   (security-groups common-lisp:nil :type (common-lisp:or security-group-string-list common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (additional-info common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disable-api-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or iam-instance-profile-specification common-lisp:null))
   (instance-initiated-shutdown-behavior common-lisp:nil :type (common-lisp:or shutdown-behavior common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or instance-network-interface-specification-list common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (elastic-gpu-specification common-lisp:nil :type (common-lisp:or elastic-gpu-specifications common-lisp:null))
   (elastic-inference-accelerators common-lisp:nil :type (common-lisp:or elastic-inference-accelerators common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null))
   (launch-template common-lisp:nil :type (common-lisp:or launch-template-specification common-lisp:null))
   (instance-market-options common-lisp:nil :type (common-lisp:or instance-market-options-request common-lisp:null))
   (credit-specification common-lisp:nil :type (common-lisp:or credit-specification-request common-lisp:null))
   (cpu-options common-lisp:nil :type (common-lisp:or cpu-options-request common-lisp:null))
   (capacity-reservation-specification common-lisp:nil :type (common-lisp:or capacity-reservation-specification common-lisp:null))
   (hibernation-options common-lisp:nil :type (common-lisp:or hibernation-options-request common-lisp:null))
   (license-specifications common-lisp:nil :type (common-lisp:or license-specification-list-request common-lisp:null))
   (metadata-options common-lisp:nil :type (common-lisp:or instance-metadata-options-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'run-instances-request 'make-run-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape run-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address-count)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "MaxCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-count)))
                       (aws-sdk/generator/shape::to-query-params "MinCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-count)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data)))
                       (aws-sdk/generator/shape::to-query-params "AdditionalInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'additional-info)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DisableApiTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disable-api-termination)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInitiatedShutdownBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-initiated-shutdown-behavior)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "ElasticGpuSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-gpu-specification)))
                       (aws-sdk/generator/shape::to-query-params "ElasticInferenceAccelerators"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'elastic-inference-accelerators)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template)))
                       (aws-sdk/generator/shape::to-query-params "InstanceMarketOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-market-options)))
                       (aws-sdk/generator/shape::to-query-params "CreditSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'credit-specification)))
                       (aws-sdk/generator/shape::to-query-params "CpuOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cpu-options)))
                       (aws-sdk/generator/shape::to-query-params "CapacityReservationSpecification"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'capacity-reservation-specification)))
                       (aws-sdk/generator/shape::to-query-params "HibernationOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hibernation-options)))
                       (aws-sdk/generator/shape::to-query-params "LicenseSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'license-specifications)))
                       (aws-sdk/generator/shape::to-query-params "MetadataOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'metadata-options))))))
(common-lisp:progn
 (common-lisp:defstruct (run-scheduled-instances-request (:copier common-lisp:nil))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (launch-specification (common-lisp:error ":launch-specification is required") :type (common-lisp:or scheduled-instances-launch-specification common-lisp:null))
   (scheduled-instance-id (common-lisp:error ":scheduled-instance-id is required") :type (common-lisp:or scheduled-instance-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'run-scheduled-instances-request 'make-run-scheduled-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape run-scheduled-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "LaunchSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-specification)))
                       (aws-sdk/generator/shape::to-query-params "ScheduledInstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scheduled-instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (run-scheduled-instances-result (:copier common-lisp:nil)) (instance-id-set common-lisp:nil :type (common-lisp:or instance-id-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'run-scheduled-instances-result 'make-run-scheduled-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape run-scheduled-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceIdSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id-set))))))
(common-lisp:progn
 (common-lisp:defstruct (s3storage (:copier common-lisp:nil))
   (awsaccess-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (bucket common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (upload-policy common-lisp:nil :type (common-lisp:or blob common-lisp:null))
   (upload-policy-signature common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3storage 'make-s3storage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape s3storage))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AWSAccessKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'awsaccess-key-id)))
                       (aws-sdk/generator/shape::to-query-params "Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bucket)))
                       (aws-sdk/generator/shape::to-query-params "Prefix" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix)))
                       (aws-sdk/generator/shape::to-query-params "UploadPolicy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upload-policy)))
                       (aws-sdk/generator/shape::to-query-params "UploadPolicySignature" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'upload-policy-signature))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instance (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (create-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-slot-start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (previous-slot-end-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (recurrence common-lisp:nil :type (common-lisp:or scheduled-instance-recurrence common-lisp:null))
   (scheduled-instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (slot-duration-in-hours common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (term-end-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (term-start-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (total-scheduled-instance-hours common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instance 'make-scheduled-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instance))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "CreateDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-date)))
                       (aws-sdk/generator/shape::to-query-params "HourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "NetworkPlatform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-platform)))
                       (aws-sdk/generator/shape::to-query-params "NextSlotStartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-slot-start-time)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "PreviousSlotEndTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'previous-slot-end-time)))
                       (aws-sdk/generator/shape::to-query-params "Recurrence" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'recurrence)))
                       (aws-sdk/generator/shape::to-query-params "ScheduledInstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'scheduled-instance-id)))
                       (aws-sdk/generator/shape::to-query-params "SlotDurationInHours" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'slot-duration-in-hours)))
                       (aws-sdk/generator/shape::to-query-params "TermEndDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'term-end-date)))
                       (aws-sdk/generator/shape::to-query-params "TermStartDate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'term-start-date)))
                       (aws-sdk/generator/shape::to-query-params "TotalScheduledInstanceHours"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-scheduled-instance-hours))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instance-availability (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (available-instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (first-slot-start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-term-duration-in-days common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (min-term-duration-in-days common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (network-platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (purchase-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (recurrence common-lisp:nil :type (common-lisp:or scheduled-instance-recurrence common-lisp:null))
   (slot-duration-in-hours common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (total-scheduled-instance-hours common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instance-availability 'make-scheduled-instance-availability))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instance-availability))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "AvailableInstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-instance-count)))
                       (aws-sdk/generator/shape::to-query-params "FirstSlotStartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'first-slot-start-time)))
                       (aws-sdk/generator/shape::to-query-params "HourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "MaxTermDurationInDays" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-term-duration-in-days)))
                       (aws-sdk/generator/shape::to-query-params "MinTermDurationInDays" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-term-duration-in-days)))
                       (aws-sdk/generator/shape::to-query-params "NetworkPlatform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-platform)))
                       (aws-sdk/generator/shape::to-query-params "Platform" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'platform)))
                       (aws-sdk/generator/shape::to-query-params "PurchaseToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'purchase-token)))
                       (aws-sdk/generator/shape::to-query-params "Recurrence" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'recurrence)))
                       (aws-sdk/generator/shape::to-query-params "SlotDurationInHours" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'slot-duration-in-hours)))
                       (aws-sdk/generator/shape::to-query-params "TotalScheduledInstanceHours"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-scheduled-instance-hours))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-instance-availability-set () '(trivial-types:proper-list scheduled-instance-availability))
 (common-lisp:defun |make-scheduled-instance-availability-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instance-availability))
   aws-sdk/generator/shape::members))
(common-lisp:deftype scheduled-instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype scheduled-instance-id-request-set () '(trivial-types:proper-list scheduled-instance-id))
 (common-lisp:defun |make-scheduled-instance-id-request-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instance-recurrence (:copier common-lisp:nil))
   (frequency common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (interval common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (occurrence-day-set common-lisp:nil :type (common-lisp:or occurrence-day-set common-lisp:null))
   (occurrence-relative-to-end common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (occurrence-unit common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instance-recurrence 'make-scheduled-instance-recurrence))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instance-recurrence))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Frequency" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'frequency)))
                       (aws-sdk/generator/shape::to-query-params "Interval" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interval)))
                       (aws-sdk/generator/shape::to-query-params "OccurrenceDaySet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'occurrence-day-set)))
                       (aws-sdk/generator/shape::to-query-params "OccurrenceRelativeToEnd" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'occurrence-relative-to-end)))
                       (aws-sdk/generator/shape::to-query-params "OccurrenceUnit" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'occurrence-unit))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instance-recurrence-request (:copier common-lisp:nil))
   (frequency common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (interval common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (occurrence-days common-lisp:nil :type (common-lisp:or occurrence-day-request-set common-lisp:null))
   (occurrence-relative-to-end common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (occurrence-unit common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instance-recurrence-request 'make-scheduled-instance-recurrence-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instance-recurrence-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Frequency" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'frequency)))
                       (aws-sdk/generator/shape::to-query-params "Interval" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'interval)))
                       (aws-sdk/generator/shape::to-query-params "OccurrenceDays" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'occurrence-days)))
                       (aws-sdk/generator/shape::to-query-params "OccurrenceRelativeToEnd" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'occurrence-relative-to-end)))
                       (aws-sdk/generator/shape::to-query-params "OccurrenceUnit" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'occurrence-unit))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-instance-set () '(trivial-types:proper-list scheduled-instance))
 (common-lisp:defun |make-scheduled-instance-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-block-device-mapping (:copier common-lisp:nil))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ebs common-lisp:nil :type (common-lisp:or scheduled-instances-ebs common-lisp:null))
   (no-device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtual-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-block-device-mapping 'make-scheduled-instances-block-device-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-block-device-mapping))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "Ebs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs)))
                       (aws-sdk/generator/shape::to-query-params "NoDevice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'no-device)))
                       (aws-sdk/generator/shape::to-query-params "VirtualName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-name))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-instances-block-device-mapping-set () '(trivial-types:proper-list scheduled-instances-block-device-mapping))
 (common-lisp:defun |make-scheduled-instances-block-device-mapping-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instances-block-device-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-ebs (:copier common-lisp:nil))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or snapshot-id common-lisp:null))
   (volume-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-ebs 'make-scheduled-instances-ebs))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-ebs))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "Iops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iops)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-size)))
                       (aws-sdk/generator/shape::to-query-params "VolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-type))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-iam-instance-profile (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-iam-instance-profile 'make-scheduled-instances-iam-instance-profile))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-iam-instance-profile))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Arn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'arn)))
                       (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-ipv6address (:copier common-lisp:nil)) (ipv6address common-lisp:nil :type (common-lisp:or ipv6address common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-ipv6address 'make-scheduled-instances-ipv6address))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-ipv6address))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6Address" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-instances-ipv6address-list () '(trivial-types:proper-list scheduled-instances-ipv6address))
 (common-lisp:defun |make-scheduled-instances-ipv6address-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instances-ipv6address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-launch-specification (:copier common-lisp:nil))
   (block-device-mappings common-lisp:nil :type (common-lisp:or scheduled-instances-block-device-mapping-set common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or scheduled-instances-iam-instance-profile common-lisp:null))
   (image-id (common-lisp:error ":image-id is required") :type (common-lisp:or image-id common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or kernel-id common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or key-pair-name common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or scheduled-instances-monitoring common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or scheduled-instances-network-interface-set common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or scheduled-instances-placement common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or ramdisk-id common-lisp:null))
   (security-group-ids common-lisp:nil :type (common-lisp:or scheduled-instances-security-group-id-set common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-launch-specification 'make-scheduled-instances-launch-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-launch-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroupIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-group-ids)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-monitoring (:copier common-lisp:nil)) (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-monitoring 'make-scheduled-instances-monitoring))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-monitoring))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-network-interface (:copier common-lisp:nil))
   (associate-public-ip-address common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (device-index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or scheduled-instances-security-group-id-set common-lisp:null))
   (ipv6address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ipv6addresses common-lisp:nil :type (common-lisp:or scheduled-instances-ipv6address-list common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or network-interface-id common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip-address-configs common-lisp:nil :type (common-lisp:or private-ip-address-config-set common-lisp:null))
   (secondary-private-ip-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or subnet-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-network-interface 'make-scheduled-instances-network-interface))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-network-interface))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociatePublicIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'associate-public-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DeviceIndex" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-index)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6AddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6address-count)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddressConfigs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address-configs)))
                       (aws-sdk/generator/shape::to-query-params "SecondaryPrivateIpAddressCount"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'secondary-private-ip-address-count)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-instances-network-interface-set () '(trivial-types:proper-list scheduled-instances-network-interface))
 (common-lisp:defun |make-scheduled-instances-network-interface-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list scheduled-instances-network-interface))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-placement (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or placement-group-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-placement 'make-scheduled-instances-placement))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-placement))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name))))))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-instances-private-ip-address-config (:copier common-lisp:nil))
   (primary common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (private-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scheduled-instances-private-ip-address-config 'make-scheduled-instances-private-ip-address-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape scheduled-instances-private-ip-address-config))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Primary" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'primary)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-address))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-instances-security-group-id-set () '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-scheduled-instances-security-group-id-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (search-local-gateway-routes-request (:copier common-lisp:nil))
   (local-gateway-route-table-id (common-lisp:error ":local-gateway-route-table-id is required") :type (common-lisp:or local-gateway-routetable-id common-lisp:null))
   (filters (common-lisp:error ":filters is required") :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'search-local-gateway-routes-request 'make-search-local-gateway-routes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape search-local-gateway-routes-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "LocalGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'local-gateway-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
                       (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (search-local-gateway-routes-result (:copier common-lisp:nil))
   (routes common-lisp:nil :type (common-lisp:or local-gateway-route-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'search-local-gateway-routes-result 'make-search-local-gateway-routes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape search-local-gateway-routes-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Routes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'routes)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (search-transit-gateway-multicast-groups-request (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-id common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'search-transit-gateway-multicast-groups-request 'make-search-transit-gateway-multicast-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape search-transit-gateway-multicast-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (search-transit-gateway-multicast-groups-result (:copier common-lisp:nil))
   (multicast-groups common-lisp:nil :type (common-lisp:or transit-gateway-multicast-group-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'search-transit-gateway-multicast-groups-result 'make-search-transit-gateway-multicast-groups-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape search-transit-gateway-multicast-groups-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MulticastGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'multicast-groups)))
                       (aws-sdk/generator/shape::to-query-params "NextToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (search-transit-gateway-routes-request (:copier common-lisp:nil))
   (transit-gateway-route-table-id (common-lisp:error ":transit-gateway-route-table-id is required") :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (filters (common-lisp:error ":filters is required") :type (common-lisp:or filter-list common-lisp:null))
   (max-results common-lisp:nil :type (common-lisp:or transit-gateway-max-results common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'search-transit-gateway-routes-request 'make-search-transit-gateway-routes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape search-transit-gateway-routes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "Filters" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'filters)))
    (aws-sdk/generator/shape::to-query-params "MaxResults" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-results)))
    (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (search-transit-gateway-routes-result (:copier common-lisp:nil))
   (routes common-lisp:nil :type (common-lisp:or transit-gateway-route-list common-lisp:null))
   (additional-routes-available common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'search-transit-gateway-routes-result 'make-search-transit-gateway-routes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape search-transit-gateway-routes-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Routes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'routes)))
                       (aws-sdk/generator/shape::to-query-params "AdditionalRoutesAvailable" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'additional-routes-available))))))
(common-lisp:progn
 (common-lisp:defstruct (security-group (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ip-permissions common-lisp:nil :type (common-lisp:or ip-permission-list common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ip-permissions-egress common-lisp:nil :type (common-lisp:or ip-permission-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'security-group 'make-security-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape security-group))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissionsEgress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions-egress)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-id-string-list () '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-group-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (security-group-identifier (:copier common-lisp:nil))
   (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'security-group-identifier 'make-security-group-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape security-group-identifier))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name))))))
(common-lisp:progn
 (common-lisp:deftype security-group-list () '(trivial-types:proper-list security-group))
 (common-lisp:defun |make-security-group-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype security-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (security-group-reference (:copier common-lisp:nil))
   (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (referencing-vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-peering-connection-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'security-group-reference 'make-security-group-reference))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape security-group-reference))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "ReferencingVpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'referencing-vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:deftype security-group-references () '(trivial-types:proper-list security-group-reference))
 (common-lisp:defun |make-security-group-references| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-reference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype security-group-string-list () '(trivial-types:proper-list security-group-name))
 (common-lisp:defun |make-security-group-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (send-diagnostic-interrupt-request (:copier common-lisp:nil))
   (instance-id (common-lisp:error ":instance-id is required") :type (common-lisp:or instance-id common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'send-diagnostic-interrupt-request 'make-send-diagnostic-interrupt-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape send-diagnostic-interrupt-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:deftype sensitive-user-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (service-configuration (:copier common-lisp:nil))
   (service-type common-lisp:nil :type (common-lisp:or service-type-detail-set common-lisp:null))
   (service-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-state common-lisp:nil :type (common-lisp:or service-state common-lisp:null))
   (availability-zones common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (acceptance-required common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (manages-vpc-endpoints common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-load-balancer-arns common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (base-endpoint-dns-names common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-dns-name-configuration common-lisp:nil :type (common-lisp:or private-dns-name-configuration common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service-configuration 'make-service-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape service-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ServiceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-type)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "ServiceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-name)))
                       (aws-sdk/generator/shape::to-query-params "ServiceState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-state)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZones" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zones)))
                       (aws-sdk/generator/shape::to-query-params "AcceptanceRequired" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'acceptance-required)))
                       (aws-sdk/generator/shape::to-query-params "ManagesVpcEndpoints" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'manages-vpc-endpoints)))
                       (aws-sdk/generator/shape::to-query-params "NetworkLoadBalancerArns" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-load-balancer-arns)))
                       (aws-sdk/generator/shape::to-query-params "BaseEndpointDnsNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'base-endpoint-dns-names)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsNameConfiguration"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name-configuration)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype service-configuration-set () '(trivial-types:proper-list service-configuration))
 (common-lisp:defun |make-service-configuration-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list service-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (service-detail (:copier common-lisp:nil))
   (service-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-type common-lisp:nil :type (common-lisp:or service-type-detail-set common-lisp:null))
   (availability-zones common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (base-endpoint-dns-names common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (private-dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-policy-supported common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (acceptance-required common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (manages-vpc-endpoints common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (private-dns-name-verification-state common-lisp:nil :type (common-lisp:or dns-name-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service-detail 'make-service-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape service-detail))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ServiceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-name)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "ServiceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-type)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZones" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zones)))
                       (aws-sdk/generator/shape::to-query-params "Owner" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner)))
                       (aws-sdk/generator/shape::to-query-params "BaseEndpointDnsNames" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'base-endpoint-dns-names)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointPolicySupported"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-policy-supported)))
                       (aws-sdk/generator/shape::to-query-params "AcceptanceRequired" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'acceptance-required)))
                       (aws-sdk/generator/shape::to-query-params "ManagesVpcEndpoints" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'manages-vpc-endpoints)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsNameVerificationState"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-name-verification-state))))))
(common-lisp:progn
 (common-lisp:deftype service-detail-set () '(trivial-types:proper-list service-detail))
 (common-lisp:defun |make-service-detail-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list service-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype service-state () 'common-lisp:string)
(common-lisp:deftype service-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (service-type-detail (:copier common-lisp:nil)) (service-type common-lisp:nil :type (common-lisp:or service-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service-type-detail 'make-service-type-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape service-type-detail))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ServiceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-type))))))
(common-lisp:progn
 (common-lisp:deftype service-type-detail-set () '(trivial-types:proper-list service-type-detail))
 (common-lisp:defun |make-service-type-detail-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list service-type-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype shutdown-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (slot-date-time-range-request (:copier common-lisp:nil))
   (earliest-time (common-lisp:error ":earliest-time is required") :type (common-lisp:or date-time common-lisp:null))
   (latest-time (common-lisp:error ":latest-time is required") :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'slot-date-time-range-request 'make-slot-date-time-range-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape slot-date-time-range-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EarliestTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'earliest-time)))
                       (aws-sdk/generator/shape::to-query-params "LatestTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'latest-time))))))
(common-lisp:progn
 (common-lisp:defstruct (slot-start-time-range-request (:copier common-lisp:nil))
   (earliest-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (latest-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'slot-start-time-range-request 'make-slot-start-time-range-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape slot-start-time-range-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EarliestTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'earliest-time)))
                       (aws-sdk/generator/shape::to-query-params "LatestTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'latest-time))))))
(common-lisp:progn
 (common-lisp:defstruct (snapshot (:copier common-lisp:nil))
   (data-encryption-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or snapshot-state common-lisp:null))
   (state-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (owner-alias common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snapshot 'make-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape snapshot))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DataEncryptionKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'data-encryption-key-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StateMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state-message)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-size)))
                       (aws-sdk/generator/shape::to-query-params "OwnerAlias" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-alias)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype snapshot-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (snapshot-detail (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disk-image-size common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (user-bucket common-lisp:nil :type (common-lisp:or user-bucket-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snapshot-detail 'make-snapshot-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape snapshot-detail))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DeviceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device-name)))
                       (aws-sdk/generator/shape::to-query-params "DiskImageSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-image-size)))
                       (aws-sdk/generator/shape::to-query-params "Format" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'format)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "Url" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'url)))
                       (aws-sdk/generator/shape::to-query-params "UserBucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-bucket))))))
(common-lisp:progn
 (common-lisp:deftype snapshot-detail-list () '(trivial-types:proper-list snapshot-detail))
 (common-lisp:defun |make-snapshot-detail-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list snapshot-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (snapshot-disk-container (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (user-bucket common-lisp:nil :type (common-lisp:or user-bucket common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snapshot-disk-container 'make-snapshot-disk-container))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape snapshot-disk-container))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Format" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'format)))
                       (aws-sdk/generator/shape::to-query-params "Url" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'url)))
                       (aws-sdk/generator/shape::to-query-params "UserBucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-bucket))))))
(common-lisp:deftype snapshot-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype snapshot-id-string-list () '(trivial-types:proper-list snapshot-id))
 (common-lisp:defun |make-snapshot-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list snapshot-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (snapshot-info (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or snapshot-state common-lisp:null))
   (volume-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snapshot-info 'make-snapshot-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape snapshot-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "VolumeSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-size)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id))))))
(common-lisp:progn
 (common-lisp:deftype snapshot-list () '(trivial-types:proper-list snapshot))
 (common-lisp:defun |make-snapshot-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list snapshot)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype snapshot-set () '(trivial-types:proper-list snapshot-info))
 (common-lisp:defun |make-snapshot-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list snapshot-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype snapshot-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (snapshot-task-detail (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (disk-image-size common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (user-bucket common-lisp:nil :type (common-lisp:or user-bucket-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snapshot-task-detail 'make-snapshot-task-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape snapshot-task-detail))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "DiskImageSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'disk-image-size)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "Format" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'format)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "Url" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'url)))
                       (aws-sdk/generator/shape::to-query-params "UserBucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-bucket))))))
(common-lisp:deftype spot-allocation-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (spot-datafeed-subscription (:copier common-lisp:nil))
   (bucket common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (fault common-lisp:nil :type (common-lisp:or spot-instance-state-fault common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or datafeed-subscription-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-datafeed-subscription 'make-spot-datafeed-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-datafeed-subscription))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bucket)))
                       (aws-sdk/generator/shape::to-query-params "Fault" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fault)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Prefix" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-fleet-launch-specification (:copier common-lisp:nil))
   (security-groups common-lisp:nil :type (common-lisp:or group-identifier-list common-lisp:null))
   (addressing-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (block-device-mappings common-lisp:nil :type (common-lisp:or block-device-mapping-list common-lisp:null))
   (ebs-optimized common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (iam-instance-profile common-lisp:nil :type (common-lisp:or iam-instance-profile-specification common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (kernel-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (monitoring common-lisp:nil :type (common-lisp:or spot-fleet-monitoring common-lisp:null))
   (network-interfaces common-lisp:nil :type (common-lisp:or instance-network-interface-specification-list common-lisp:null))
   (placement common-lisp:nil :type (common-lisp:or spot-placement common-lisp:null))
   (ramdisk-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (user-data common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (weighted-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or spot-fleet-tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-fleet-launch-specification 'make-spot-fleet-launch-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-fleet-launch-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups)))
                       (aws-sdk/generator/shape::to-query-params "AddressingType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'addressing-type)))
                       (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-device-mappings)))
                       (aws-sdk/generator/shape::to-query-params "EbsOptimized" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ebs-optimized)))
                       (aws-sdk/generator/shape::to-query-params "IamInstanceProfile" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-instance-profile)))
                       (aws-sdk/generator/shape::to-query-params "ImageId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'image-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "KernelId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kernel-id)))
                       (aws-sdk/generator/shape::to-query-params "KeyName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key-name)))
                       (aws-sdk/generator/shape::to-query-params "Monitoring" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'monitoring)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaces" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interfaces)))
                       (aws-sdk/generator/shape::to-query-params "Placement" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'placement)))
                       (aws-sdk/generator/shape::to-query-params "RamdiskId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ramdisk-id)))
                       (aws-sdk/generator/shape::to-query-params "SpotPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-price)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "UserData" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-data)))
                       (aws-sdk/generator/shape::to-query-params "WeightedCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'weighted-capacity)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-fleet-monitoring (:copier common-lisp:nil)) (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-fleet-monitoring 'make-spot-fleet-monitoring))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-fleet-monitoring))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Enabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-fleet-request-config (:copier common-lisp:nil))
   (activity-status common-lisp:nil :type (common-lisp:or activity-status common-lisp:null))
   (create-time common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (spot-fleet-request-config common-lisp:nil :type (common-lisp:or spot-fleet-request-config-data common-lisp:null))
   (spot-fleet-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-fleet-request-state common-lisp:nil :type (common-lisp:or batch-state common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-fleet-request-config 'make-spot-fleet-request-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-fleet-request-config))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ActivityStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'activity-status)))
                       (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestConfig" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-config)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-id)))
                       (aws-sdk/generator/shape::to-query-params "SpotFleetRequestState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-fleet-request-state)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-fleet-request-config-data (:copier common-lisp:nil))
   (allocation-strategy common-lisp:nil :type (common-lisp:or allocation-strategy common-lisp:null))
   (on-demand-allocation-strategy common-lisp:nil :type (common-lisp:or on-demand-allocation-strategy common-lisp:null))
   (client-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (excess-capacity-termination-policy common-lisp:nil :type (common-lisp:or excess-capacity-termination-policy common-lisp:null))
   (fulfilled-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (on-demand-fulfilled-capacity common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (iam-fleet-role (common-lisp:error ":iam-fleet-role is required") :type (common-lisp:or string common-lisp:null))
   (launch-specifications common-lisp:nil :type (common-lisp:or launch-specs-list common-lisp:null))
   (launch-template-configs common-lisp:nil :type (common-lisp:or launch-template-config-list common-lisp:null))
   (spot-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-capacity (common-lisp:error ":target-capacity is required") :type (common-lisp:or integer common-lisp:null))
   (on-demand-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (on-demand-max-total-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-max-total-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (terminate-instances-with-expiration common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or fleet-type common-lisp:null))
   (valid-from common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (replace-unhealthy-instances common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or instance-interruption-behavior common-lisp:null))
   (load-balancers-config common-lisp:nil :type (common-lisp:or load-balancers-config common-lisp:null))
   (instance-pools-to-use-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (tag-specifications common-lisp:nil :type (common-lisp:or tag-specification-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-fleet-request-config-data 'make-spot-fleet-request-config-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-fleet-request-config-data))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationStrategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-strategy)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandAllocationStrategy"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-allocation-strategy)))
                       (aws-sdk/generator/shape::to-query-params "ClientToken" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-token)))
                       (aws-sdk/generator/shape::to-query-params "ExcessCapacityTerminationPolicy"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'excess-capacity-termination-policy)))
                       (aws-sdk/generator/shape::to-query-params "FulfilledCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fulfilled-capacity)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandFulfilledCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-fulfilled-capacity)))
                       (aws-sdk/generator/shape::to-query-params "IamFleetRole" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iam-fleet-role)))
                       (aws-sdk/generator/shape::to-query-params "LaunchSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-specifications)))
                       (aws-sdk/generator/shape::to-query-params "LaunchTemplateConfigs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-template-configs)))
                       (aws-sdk/generator/shape::to-query-params "SpotPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-price)))
                       (aws-sdk/generator/shape::to-query-params "TargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandMaxTotalPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-max-total-price)))
                       (aws-sdk/generator/shape::to-query-params "SpotMaxTotalPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-max-total-price)))
                       (aws-sdk/generator/shape::to-query-params "TerminateInstancesWithExpiration"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'terminate-instances-with-expiration)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "ValidFrom" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-from)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "ReplaceUnhealthyInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'replace-unhealthy-instances)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior)))
                       (aws-sdk/generator/shape::to-query-params "LoadBalancersConfig" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'load-balancers-config)))
                       (aws-sdk/generator/shape::to-query-params "InstancePoolsToUseCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-pools-to-use-count)))
                       (aws-sdk/generator/shape::to-query-params "TagSpecifications" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tag-specifications))))))
(common-lisp:progn
 (common-lisp:deftype spot-fleet-request-config-set () '(trivial-types:proper-list spot-fleet-request-config))
 (common-lisp:defun |make-spot-fleet-request-config-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list spot-fleet-request-config))
   aws-sdk/generator/shape::members))
(common-lisp:deftype spot-fleet-request-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype spot-fleet-request-id-list () '(trivial-types:proper-list spot-fleet-request-id))
 (common-lisp:defun |make-spot-fleet-request-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list spot-fleet-request-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (spot-fleet-tag-specification (:copier common-lisp:nil))
   (resource-type common-lisp:nil :type (common-lisp:or resource-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-fleet-tag-specification 'make-spot-fleet-tag-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-fleet-tag-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype spot-fleet-tag-specification-list () '(trivial-types:proper-list spot-fleet-tag-specification))
 (common-lisp:defun |make-spot-fleet-tag-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list spot-fleet-tag-specification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype spot-instance-interruption-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (spot-instance-request (:copier common-lisp:nil))
   (actual-block-hourly-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (block-duration-minutes common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (create-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (fault common-lisp:nil :type (common-lisp:or spot-instance-state-fault common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or instance-id common-lisp:null))
   (launch-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (launch-specification common-lisp:nil :type (common-lisp:or launch-specification common-lisp:null))
   (launched-availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-description common-lisp:nil :type (common-lisp:or riproduct-description common-lisp:null))
   (spot-instance-request-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or spot-instance-state common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or spot-instance-status common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or spot-instance-type common-lisp:null))
   (valid-from common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or instance-interruption-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-instance-request 'make-spot-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-instance-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ActualBlockHourlyPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'actual-block-hourly-price)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZoneGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone-group)))
                       (aws-sdk/generator/shape::to-query-params "BlockDurationMinutes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-duration-minutes)))
                       (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "Fault" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fault)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "LaunchGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-group)))
                       (aws-sdk/generator/shape::to-query-params "LaunchSpecification" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launch-specification)))
                       (aws-sdk/generator/shape::to-query-params "LaunchedAvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'launched-availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "ProductDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-description)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceRequestId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-request-id)))
                       (aws-sdk/generator/shape::to-query-params "SpotPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-price)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "ValidFrom" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-from)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior))))))
(common-lisp:deftype spot-instance-request-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype spot-instance-request-id-list () '(trivial-types:proper-list spot-instance-request-id))
 (common-lisp:defun |make-spot-instance-request-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list spot-instance-request-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype spot-instance-request-list () '(trivial-types:proper-list spot-instance-request))
 (common-lisp:defun |make-spot-instance-request-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list spot-instance-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype spot-instance-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (spot-instance-state-fault (:copier common-lisp:nil)) (code common-lisp:nil :type (common-lisp:or string common-lisp:null)) (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-instance-state-fault 'make-spot-instance-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-instance-state-fault))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-instance-status (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (update-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-instance-status 'make-spot-instance-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-instance-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message)))
                       (aws-sdk/generator/shape::to-query-params "UpdateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'update-time))))))
(common-lisp:deftype spot-instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (spot-market-options (:copier common-lisp:nil))
   (max-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (spot-instance-type common-lisp:nil :type (common-lisp:or spot-instance-type common-lisp:null))
   (block-duration-minutes common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (valid-until common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or instance-interruption-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-market-options 'make-spot-market-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-market-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "MaxPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-price)))
                       (aws-sdk/generator/shape::to-query-params "SpotInstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-instance-type)))
                       (aws-sdk/generator/shape::to-query-params "BlockDurationMinutes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'block-duration-minutes)))
                       (aws-sdk/generator/shape::to-query-params "ValidUntil" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-until)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-options (:copier common-lisp:nil))
   (allocation-strategy common-lisp:nil :type (common-lisp:or spot-allocation-strategy common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or spot-instance-interruption-behavior common-lisp:null))
   (instance-pools-to-use-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (single-instance-type common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (single-availability-zone common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (min-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (max-total-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-options 'make-spot-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationStrategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-strategy)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior)))
                       (aws-sdk/generator/shape::to-query-params "InstancePoolsToUseCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-pools-to-use-count)))
                       (aws-sdk/generator/shape::to-query-params "SingleInstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-instance-type)))
                       (aws-sdk/generator/shape::to-query-params "SingleAvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "MinTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "MaxTotalPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-total-price))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-options-request (:copier common-lisp:nil))
   (allocation-strategy common-lisp:nil :type (common-lisp:or spot-allocation-strategy common-lisp:null))
   (instance-interruption-behavior common-lisp:nil :type (common-lisp:or spot-instance-interruption-behavior common-lisp:null))
   (instance-pools-to-use-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (single-instance-type common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (single-availability-zone common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (min-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (max-total-price common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-options-request 'make-spot-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-options-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AllocationStrategy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allocation-strategy)))
                       (aws-sdk/generator/shape::to-query-params "InstanceInterruptionBehavior"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-interruption-behavior)))
                       (aws-sdk/generator/shape::to-query-params "InstancePoolsToUseCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-pools-to-use-count)))
                       (aws-sdk/generator/shape::to-query-params "SingleInstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-instance-type)))
                       (aws-sdk/generator/shape::to-query-params "SingleAvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'single-availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "MinTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'min-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "MaxTotalPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'max-total-price))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-placement (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-placement 'make-spot-placement))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-placement))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "Tenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tenancy))))))
(common-lisp:progn
 (common-lisp:defstruct (spot-price (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type (common-lisp:or instance-type common-lisp:null))
   (product-description common-lisp:nil :type (common-lisp:or riproduct-description common-lisp:null))
   (spot-price common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'spot-price 'make-spot-price))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape spot-price))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "InstanceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-type)))
                       (aws-sdk/generator/shape::to-query-params "ProductDescription" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'product-description)))
                       (aws-sdk/generator/shape::to-query-params "SpotPrice" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-price)))
                       (aws-sdk/generator/shape::to-query-params "Timestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'timestamp))))))
(common-lisp:progn
 (common-lisp:deftype spot-price-history-list () '(trivial-types:proper-list spot-price))
 (common-lisp:defun |make-spot-price-history-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list spot-price))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (stale-ip-permission (:copier common-lisp:nil))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (ip-protocol common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ip-ranges common-lisp:nil :type (common-lisp:or ip-ranges common-lisp:null))
   (prefix-list-ids common-lisp:nil :type (common-lisp:or prefix-list-id-set common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (user-id-group-pairs common-lisp:nil :type (common-lisp:or user-id-group-pair-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stale-ip-permission 'make-stale-ip-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape stale-ip-permission))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "IpProtocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-protocol)))
                       (aws-sdk/generator/shape::to-query-params "IpRanges" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-ranges)))
                       (aws-sdk/generator/shape::to-query-params "PrefixListIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'prefix-list-ids)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port)))
                       (aws-sdk/generator/shape::to-query-params "UserIdGroupPairs" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-id-group-pairs))))))
(common-lisp:progn
 (common-lisp:deftype stale-ip-permission-set () '(trivial-types:proper-list stale-ip-permission))
 (common-lisp:defun |make-stale-ip-permission-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list stale-ip-permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (stale-security-group (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stale-ip-permissions common-lisp:nil :type (common-lisp:or stale-ip-permission-set common-lisp:null))
   (stale-ip-permissions-egress common-lisp:nil :type (common-lisp:or stale-ip-permission-set common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stale-security-group 'make-stale-security-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape stale-security-group))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "StaleIpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'stale-ip-permissions)))
                       (aws-sdk/generator/shape::to-query-params "StaleIpPermissionsEgress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'stale-ip-permissions-egress)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:deftype stale-security-group-set () '(trivial-types:proper-list stale-security-group))
 (common-lisp:defun |make-stale-security-group-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list stale-security-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (start-instances-request (:copier common-lisp:nil))
   (instance-ids (common-lisp:error ":instance-ids is required") :type (common-lisp:or instance-id-string-list common-lisp:null))
   (additional-info common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'start-instances-request 'make-start-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape start-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "AdditionalInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'additional-info)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (start-instances-result (:copier common-lisp:nil)) (starting-instances common-lisp:nil :type (common-lisp:or instance-state-change-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'start-instances-result 'make-start-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape start-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "StartingInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'starting-instances))))))
(common-lisp:progn
 (common-lisp:defstruct (start-vpc-endpoint-service-private-dns-verification-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (service-id (common-lisp:error ":service-id is required") :type (common-lisp:or vpc-endpoint-service-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'start-vpc-endpoint-service-private-dns-verification-request 'make-start-vpc-endpoint-service-private-dns-verification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape start-vpc-endpoint-service-private-dns-verification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id))))))
(common-lisp:progn
 (common-lisp:defstruct (start-vpc-endpoint-service-private-dns-verification-result (:copier common-lisp:nil)) (return-value common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'start-vpc-endpoint-service-private-dns-verification-result 'make-start-vpc-endpoint-service-private-dns-verification-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape start-vpc-endpoint-service-private-dns-verification-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReturnValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return-value))))))
(common-lisp:deftype state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (state-reason (:copier common-lisp:nil)) (code common-lisp:nil :type (common-lisp:or string common-lisp:null)) (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'state-reason 'make-state-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape state-reason))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype status-name () 'common-lisp:string)
(common-lisp:deftype status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stop-instances-request (:copier common-lisp:nil))
   (instance-ids (common-lisp:error ":instance-ids is required") :type (common-lisp:or instance-id-string-list common-lisp:null))
   (hibernate common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (force common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stop-instances-request 'make-stop-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape stop-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "Hibernate" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'hibernate)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "Force" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'force))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-instances-result (:copier common-lisp:nil)) (stopping-instances common-lisp:nil :type (common-lisp:or instance-state-change-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stop-instances-result 'make-stop-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape stop-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "StoppingInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'stopping-instances))))))
(common-lisp:progn
 (common-lisp:defstruct (storage (:copier common-lisp:nil)) (s3 common-lisp:nil :type (common-lisp:or s3storage common-lisp:null)))
 (common-lisp:export (common-lisp:list 'storage 'make-storage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape storage))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "S3" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3))))))
(common-lisp:progn
 (common-lisp:defstruct (storage-location (:copier common-lisp:nil)) (bucket common-lisp:nil :type (common-lisp:or string common-lisp:null)) (key common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'storage-location 'make-storage-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape storage-location))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'bucket)))
                       (aws-sdk/generator/shape::to-query-params "Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (subnet (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (available-ip-address-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (default-for-az common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (map-public-ip-on-launch common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or subnet-state common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (assign-ipv6address-on-creation common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ipv6cidr-block-association-set common-lisp:nil :type (common-lisp:or subnet-ipv6cidr-block-association-set common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (subnet-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet 'make-subnet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape subnet))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZoneId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone-id)))
                       (aws-sdk/generator/shape::to-query-params "AvailableIpAddressCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'available-ip-address-count)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DefaultForAz" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-for-az)))
                       (aws-sdk/generator/shape::to-query-params "MapPublicIpOnLaunch" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'map-public-ip-on-launch)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "AssignIpv6AddressOnCreation"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'assign-ipv6address-on-creation)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockAssociationSet"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-association-set)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "SubnetArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-arn)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (subnet-association (:copier common-lisp:nil))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-mulitcast-domain-association-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet-association 'make-subnet-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape subnet-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype subnet-association-list () '(trivial-types:proper-list subnet-association))
 (common-lisp:defun |make-subnet-association-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list subnet-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-cidr-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (subnet-cidr-block-state (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or subnet-cidr-block-state-code common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet-cidr-block-state 'make-subnet-cidr-block-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape subnet-cidr-block-state))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message))))))
(common-lisp:deftype subnet-cidr-block-state-code () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-id-string-list () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnet-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (subnet-ipv6cidr-block-association (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6cidr-block-state common-lisp:nil :type (common-lisp:or subnet-cidr-block-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet-ipv6cidr-block-association 'make-subnet-ipv6cidr-block-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape subnet-ipv6cidr-block-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-state))))))
(common-lisp:progn
 (common-lisp:deftype subnet-ipv6cidr-block-association-set () '(trivial-types:proper-list subnet-ipv6cidr-block-association))
 (common-lisp:defun |make-subnet-ipv6cidr-block-association-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list subnet-ipv6cidr-block-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype subnet-list () '(trivial-types:proper-list subnet))
 (common-lisp:defun |make-subnet-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list subnet)) aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (successful-instance-credit-specification-item (:copier common-lisp:nil)) (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'successful-instance-credit-specification-item 'make-successful-instance-credit-specification-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape successful-instance-credit-specification-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:progn
 (common-lisp:deftype successful-instance-credit-specification-set () '(trivial-types:proper-list successful-instance-credit-specification-item))
 (common-lisp:defun |make-successful-instance-credit-specification-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list successful-instance-credit-specification-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (successful-queued-purchase-deletion (:copier common-lisp:nil)) (reserved-instances-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'successful-queued-purchase-deletion 'make-successful-queued-purchase-deletion))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape successful-queued-purchase-deletion))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservedInstancesId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reserved-instances-id))))))
(common-lisp:progn
 (common-lisp:deftype successful-queued-purchase-deletion-set () '(trivial-types:proper-list successful-queued-purchase-deletion))
 (common-lisp:defun |make-successful-queued-purchase-deletion-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list successful-queued-purchase-deletion))
   aws-sdk/generator/shape::members))
(common-lisp:deftype summary-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil)) (key common-lisp:nil :type (common-lisp:or string common-lisp:null)) (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key)))
                       (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-description (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or resource-type common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-description 'make-tag-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape tag-description))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'key)))
                       (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
                       (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
                       (aws-sdk/generator/shape::to-query-params "Value" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'value))))))
(common-lisp:progn
 (common-lisp:deftype tag-description-list () '(trivial-types:proper-list tag-description))
 (common-lisp:defun |make-tag-description-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list tag-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list tag)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-specification (:copier common-lisp:nil))
   (resource-type common-lisp:nil :type (common-lisp:or resource-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-specification 'make-tag-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape tag-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype tag-specification-list () '(trivial-types:proper-list tag-specification))
 (common-lisp:defun |make-tag-specification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list tag-specification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype taggable-resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (target-capacity-specification (:copier common-lisp:nil))
   (total-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (on-demand-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (spot-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (default-target-capacity-type common-lisp:nil :type (common-lisp:or default-target-capacity-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-capacity-specification 'make-target-capacity-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-capacity-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TotalTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "SpotTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "DefaultTargetCapacityType"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-target-capacity-type))))))
(common-lisp:progn
 (common-lisp:defstruct (target-capacity-specification-request (:copier common-lisp:nil))
   (total-target-capacity (common-lisp:error ":total-target-capacity is required") :type (common-lisp:or integer common-lisp:null))
   (on-demand-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (spot-target-capacity common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (default-target-capacity-type common-lisp:nil :type (common-lisp:or default-target-capacity-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-capacity-specification-request 'make-target-capacity-specification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-capacity-specification-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TotalTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'total-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "OnDemandTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'on-demand-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "SpotTargetCapacity" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'spot-target-capacity)))
                       (aws-sdk/generator/shape::to-query-params "DefaultTargetCapacityType"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-target-capacity-type))))))
(common-lisp:progn
 (common-lisp:defstruct (target-configuration (:copier common-lisp:nil))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (offering-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-configuration 'make-target-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-configuration))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "OfferingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-id))))))
(common-lisp:progn
 (common-lisp:defstruct (target-configuration-request (:copier common-lisp:nil))
   (instance-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (offering-id (common-lisp:error ":offering-id is required") :type (common-lisp:or reserved-instances-offering-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-configuration-request 'make-target-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-configuration-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-count)))
                       (aws-sdk/generator/shape::to-query-params "OfferingId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'offering-id))))))
(common-lisp:progn
 (common-lisp:deftype target-configuration-request-set () '(trivial-types:proper-list target-configuration-request))
 (common-lisp:defun |make-target-configuration-request-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list target-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (target-group (:copier common-lisp:nil)) (arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-group 'make-target-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-group))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Arn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'arn))))))
(common-lisp:progn
 (common-lisp:deftype target-groups () '(trivial-types:proper-list target-group))
 (common-lisp:defun |make-target-groups| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list target-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (target-groups-config (:copier common-lisp:nil)) (target-groups common-lisp:nil :type (common-lisp:or target-groups common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-groups-config 'make-target-groups-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-groups-config))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TargetGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-groups))))))
(common-lisp:progn
 (common-lisp:defstruct (target-network (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-network-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (client-vpn-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or association-status common-lisp:null))
   (security-groups common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-network 'make-target-network))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-network))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "TargetNetworkId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-network-id)))
                       (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "SecurityGroups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'security-groups))))))
(common-lisp:progn
 (common-lisp:deftype target-network-set () '(trivial-types:proper-list target-network))
 (common-lisp:defun |make-target-network-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list target-network))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (target-reservation-value (:copier common-lisp:nil))
   (reservation-value common-lisp:nil :type (common-lisp:or reservation-value common-lisp:null))
   (target-configuration common-lisp:nil :type (common-lisp:or target-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-reservation-value 'make-target-reservation-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape target-reservation-value))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ReservationValue" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'reservation-value)))
                       (aws-sdk/generator/shape::to-query-params "TargetConfiguration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-configuration))))))
(common-lisp:progn
 (common-lisp:deftype target-reservation-value-set () '(trivial-types:proper-list target-reservation-value))
 (common-lisp:defun |make-target-reservation-value-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list target-reservation-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype telemetry-status () 'common-lisp:string)
(common-lisp:deftype tenancy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (terminate-client-vpn-connections-request (:copier common-lisp:nil))
   (client-vpn-endpoint-id (common-lisp:error ":client-vpn-endpoint-id is required") :type (common-lisp:or client-vpn-endpoint-id common-lisp:null))
   (connection-id common-lisp:nil :type (common-lisp:or vpn-connection-id common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'terminate-client-vpn-connections-request 'make-terminate-client-vpn-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape terminate-client-vpn-connections-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-id)))
                       (aws-sdk/generator/shape::to-query-params "Username" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'username)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (terminate-client-vpn-connections-result (:copier common-lisp:nil))
   (client-vpn-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-statuses common-lisp:nil :type (common-lisp:or terminate-connection-status-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'terminate-client-vpn-connections-result 'make-terminate-client-vpn-connections-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape terminate-client-vpn-connections-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClientVpnEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'client-vpn-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "Username" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'username)))
                       (aws-sdk/generator/shape::to-query-params "ConnectionStatuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-statuses))))))
(common-lisp:progn
 (common-lisp:defstruct (terminate-connection-status (:copier common-lisp:nil))
   (connection-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (previous-status common-lisp:nil :type (common-lisp:or client-vpn-connection-status common-lisp:null))
   (current-status common-lisp:nil :type (common-lisp:or client-vpn-connection-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'terminate-connection-status 'make-terminate-connection-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape terminate-connection-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'connection-id)))
                       (aws-sdk/generator/shape::to-query-params "PreviousStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'previous-status)))
                       (aws-sdk/generator/shape::to-query-params "CurrentStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'current-status))))))
(common-lisp:progn
 (common-lisp:deftype terminate-connection-status-set () '(trivial-types:proper-list terminate-connection-status))
 (common-lisp:defun |make-terminate-connection-status-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list terminate-connection-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (terminate-instances-request (:copier common-lisp:nil))
   (instance-ids (common-lisp:error ":instance-ids is required") :type (common-lisp:or instance-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'terminate-instances-request 'make-terminate-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape terminate-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (terminate-instances-result (:copier common-lisp:nil)) (terminating-instances common-lisp:nil :type (common-lisp:or instance-state-change-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'terminate-instances-result 'make-terminate-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape terminate-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TerminatingInstances" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'terminating-instances))))))
(common-lisp:deftype threads-per-core () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype threads-per-core-list () '(trivial-types:proper-list threads-per-core))
 (common-lisp:defun |make-threads-per-core-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list threads-per-core))
   aws-sdk/generator/shape::members))
(common-lisp:deftype traffic-direction () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (traffic-mirror-filter (:copier common-lisp:nil))
   (traffic-mirror-filter-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ingress-filter-rules common-lisp:nil :type (common-lisp:or traffic-mirror-filter-rule-list common-lisp:null))
   (egress-filter-rules common-lisp:nil :type (common-lisp:or traffic-mirror-filter-rule-list common-lisp:null))
   (network-services common-lisp:nil :type (common-lisp:or traffic-mirror-network-service-list common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'traffic-mirror-filter 'make-traffic-mirror-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape traffic-mirror-filter))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "IngressFilterRules" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ingress-filter-rules)))
                       (aws-sdk/generator/shape::to-query-params "EgressFilterRules" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'egress-filter-rules)))
                       (aws-sdk/generator/shape::to-query-params "NetworkServices" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-services)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype traffic-mirror-filter-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-filter-id-list () '(trivial-types:proper-list traffic-mirror-filter-id))
 (common-lisp:defun |make-traffic-mirror-filter-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-filter-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (traffic-mirror-filter-rule (:copier common-lisp:nil))
   (traffic-mirror-filter-rule-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (traffic-mirror-filter-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (traffic-direction common-lisp:nil :type (common-lisp:or traffic-direction common-lisp:null))
   (rule-number common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rule-action common-lisp:nil :type (common-lisp:or traffic-mirror-rule-action common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (destination-port-range common-lisp:nil :type (common-lisp:or traffic-mirror-port-range common-lisp:null))
   (source-port-range common-lisp:nil :type (common-lisp:or traffic-mirror-port-range common-lisp:null))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'traffic-mirror-filter-rule 'make-traffic-mirror-filter-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape traffic-mirror-filter-rule))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterRuleId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-rule-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficDirection" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-direction)))
                       (aws-sdk/generator/shape::to-query-params "RuleNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-number)))
                       (aws-sdk/generator/shape::to-query-params "RuleAction" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rule-action)))
                       (aws-sdk/generator/shape::to-query-params "Protocol" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'protocol)))
                       (aws-sdk/generator/shape::to-query-params "DestinationPortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-port-range)))
                       (aws-sdk/generator/shape::to-query-params "SourcePortRange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-port-range)))
                       (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "SourceCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description))))))
(common-lisp:deftype traffic-mirror-filter-rule-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-filter-rule-field-list () '(trivial-types:proper-list traffic-mirror-filter-rule-field))
 (common-lisp:defun |make-traffic-mirror-filter-rule-field-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-filter-rule-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype traffic-mirror-filter-rule-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-filter-rule-list () '(trivial-types:proper-list traffic-mirror-filter-rule))
 (common-lisp:defun |make-traffic-mirror-filter-rule-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-filter-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-filter-set () '(trivial-types:proper-list traffic-mirror-filter))
 (common-lisp:defun |make-traffic-mirror-filter-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype traffic-mirror-network-service () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-network-service-list () '(trivial-types:proper-list traffic-mirror-network-service))
 (common-lisp:defun |make-traffic-mirror-network-service-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-network-service))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (traffic-mirror-port-range (:copier common-lisp:nil))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'traffic-mirror-port-range 'make-traffic-mirror-port-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape traffic-mirror-port-range))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port))))))
(common-lisp:progn
 (common-lisp:defstruct (traffic-mirror-port-range-request (:copier common-lisp:nil))
   (from-port common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'traffic-mirror-port-range-request 'make-traffic-mirror-port-range-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape traffic-mirror-port-range-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "FromPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'from-port)))
                       (aws-sdk/generator/shape::to-query-params "ToPort" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'to-port))))))
(common-lisp:deftype traffic-mirror-rule-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (traffic-mirror-session (:copier common-lisp:nil))
   (traffic-mirror-session-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (traffic-mirror-target-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (traffic-mirror-filter-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (packet-length common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (session-number common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (virtual-network-id common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'traffic-mirror-session 'make-traffic-mirror-session))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape traffic-mirror-session))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorSessionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-session-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target-id)))
                       (aws-sdk/generator/shape::to-query-params "TrafficMirrorFilterId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-filter-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PacketLength" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'packet-length)))
                       (aws-sdk/generator/shape::to-query-params "SessionNumber" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'session-number)))
                       (aws-sdk/generator/shape::to-query-params "VirtualNetworkId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'virtual-network-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype traffic-mirror-session-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-session-field-list () '(trivial-types:proper-list traffic-mirror-session-field))
 (common-lisp:defun |make-traffic-mirror-session-field-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-session-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype traffic-mirror-session-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-session-id-list () '(trivial-types:proper-list traffic-mirror-session-id))
 (common-lisp:defun |make-traffic-mirror-session-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-session-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-session-set () '(trivial-types:proper-list traffic-mirror-session))
 (common-lisp:defun |make-traffic-mirror-session-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-session))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (traffic-mirror-target (:copier common-lisp:nil))
   (traffic-mirror-target-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-load-balancer-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or traffic-mirror-target-type common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'traffic-mirror-target 'make-traffic-mirror-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape traffic-mirror-target))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TrafficMirrorTargetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'traffic-mirror-target-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "NetworkLoadBalancerArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-load-balancer-arn)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype traffic-mirror-target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-target-id-list () '(trivial-types:proper-list traffic-mirror-target-id))
 (common-lisp:defun |make-traffic-mirror-target-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-target-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype traffic-mirror-target-set () '(trivial-types:proper-list traffic-mirror-target))
 (common-lisp:defun |make-traffic-mirror-target-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list traffic-mirror-target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype traffic-mirror-target-type () 'common-lisp:string)
(common-lisp:deftype traffic-mirroring-max-results () 'common-lisp:integer)
(common-lisp:deftype traffic-type () 'common-lisp:string)
(common-lisp:deftype transit-association-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway (:copier common-lisp:nil))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-state common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or transit-gateway-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway 'make-transit-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-arn)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
                       (aws-sdk/generator/shape::to-query-params "Options" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'options)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-association (:copier common-lisp:nil))
   (transit-gateway-route-table-id common-lisp:nil :type (common-lisp:or transit-gateway-route-table-id common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-association-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-association 'make-transit-gateway-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:deftype transit-gateway-association-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-attachment (:copier common-lisp:nil))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-attachment-state common-lisp:null))
   (association common-lisp:nil :type (common-lisp:or transit-gateway-attachment-association common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-attachment 'make-transit-gateway-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-attachment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-owner-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-owner-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "Association" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association)))
    (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-attachment-association (:copier common-lisp:nil))
   (transit-gateway-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-association-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-attachment-association 'make-transit-gateway-attachment-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-attachment-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:deftype transit-gateway-attachment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype transit-gateway-attachment-id-string-list () '(trivial-types:proper-list transit-gateway-attachment-id))
 (common-lisp:defun |make-transit-gateway-attachment-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-attachment-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-attachment-list () '(trivial-types:proper-list transit-gateway-attachment))
 (common-lisp:defun |make-transit-gateway-attachment-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-attachment-propagation (:copier common-lisp:nil))
   (transit-gateway-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-propagation-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-attachment-propagation 'make-transit-gateway-attachment-propagation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-attachment-propagation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-attachment-propagation-list () '(trivial-types:proper-list transit-gateway-attachment-propagation))
 (common-lisp:defun |make-transit-gateway-attachment-propagation-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-attachment-propagation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transit-gateway-attachment-resource-type () 'common-lisp:string)
(common-lisp:deftype transit-gateway-attachment-state () 'common-lisp:string)
(common-lisp:deftype transit-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype transit-gateway-id-string-list () '(trivial-types:proper-list transit-gateway-id))
 (common-lisp:defun |make-transit-gateway-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-list () '(trivial-types:proper-list transit-gateway))
 (common-lisp:defun |make-transit-gateway-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transit-gateway-max-results () 'common-lisp:integer)
(common-lisp:deftype transit-gateway-mulitcast-domain-association-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-deregistered-group-members (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deregistered-network-interface-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-deregistered-group-members 'make-transit-gateway-multicast-deregistered-group-members))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-deregistered-group-members))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "DeregisteredNetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deregistered-network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-deregistered-group-sources (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deregistered-network-interface-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-deregistered-group-sources 'make-transit-gateway-multicast-deregistered-group-sources))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-deregistered-group-sources))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "DeregisteredNetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'deregistered-network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-domain (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-multicast-domain-state common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-domain 'make-transit-gateway-multicast-domain))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-domain))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-domain-association (:copier common-lisp:nil))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (subnet common-lisp:nil :type (common-lisp:or subnet-association common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-domain-association 'make-transit-gateway-multicast-domain-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-domain-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Subnet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-multicast-domain-association-list () '(trivial-types:proper-list transit-gateway-multicast-domain-association))
 (common-lisp:defun |make-transit-gateway-multicast-domain-association-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-multicast-domain-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-domain-associations (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (subnets common-lisp:nil :type (common-lisp:or subnet-association-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-domain-associations 'make-transit-gateway-multicast-domain-associations))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-domain-associations))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Subnets" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnets))))))
(common-lisp:deftype transit-gateway-multicast-domain-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype transit-gateway-multicast-domain-id-string-list () '(trivial-types:proper-list transit-gateway-multicast-domain-id))
 (common-lisp:defun |make-transit-gateway-multicast-domain-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-multicast-domain-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-multicast-domain-list () '(trivial-types:proper-list transit-gateway-multicast-domain))
 (common-lisp:defun |make-transit-gateway-multicast-domain-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-multicast-domain))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transit-gateway-multicast-domain-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-group (:copier common-lisp:nil))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-member common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-source common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (member-type common-lisp:nil :type (common-lisp:or membership-type common-lisp:null))
   (source-type common-lisp:nil :type (common-lisp:or membership-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-group 'make-transit-gateway-multicast-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-group))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "SubnetId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-id)))
                       (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
                       (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupMember" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-member)))
                       (aws-sdk/generator/shape::to-query-params "GroupSource" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-source)))
                       (aws-sdk/generator/shape::to-query-params "MemberType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'member-type)))
                       (aws-sdk/generator/shape::to-query-params "SourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source-type))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-multicast-group-list () '(trivial-types:proper-list transit-gateway-multicast-group))
 (common-lisp:defun |make-transit-gateway-multicast-group-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-multicast-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-registered-group-members (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (registered-network-interface-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-registered-group-members 'make-transit-gateway-multicast-registered-group-members))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-registered-group-members))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "RegisteredNetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'registered-network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-multicast-registered-group-sources (:copier common-lisp:nil))
   (transit-gateway-multicast-domain-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (registered-network-interface-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (group-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-multicast-registered-group-sources 'make-transit-gateway-multicast-registered-group-sources))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-multicast-registered-group-sources))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayMulticastDomainId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-multicast-domain-id)))
    (aws-sdk/generator/shape::to-query-params "RegisteredNetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'registered-network-interface-ids)))
    (aws-sdk/generator/shape::to-query-params "GroupIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-ip-address))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-network-interface-id-list () '(trivial-types:proper-list network-interface-id))
 (common-lisp:defun |make-transit-gateway-network-interface-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list network-interface-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-options (:copier common-lisp:nil))
   (amazon-side-asn common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (auto-accept-shared-attachments common-lisp:nil :type (common-lisp:or auto-accept-shared-attachments-value common-lisp:null))
   (default-route-table-association common-lisp:nil :type (common-lisp:or default-route-table-association-value common-lisp:null))
   (association-default-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (default-route-table-propagation common-lisp:nil :type (common-lisp:or default-route-table-propagation-value common-lisp:null))
   (propagation-default-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpn-ecmp-support common-lisp:nil :type (common-lisp:or vpn-ecmp-support-value common-lisp:null))
   (dns-support common-lisp:nil :type (common-lisp:or dns-support-value common-lisp:null))
   (multicast-support common-lisp:nil :type (common-lisp:or multicast-support-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-options 'make-transit-gateway-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AmazonSideAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amazon-side-asn)))
                       (aws-sdk/generator/shape::to-query-params "AutoAcceptSharedAttachments"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-accept-shared-attachments)))
                       (aws-sdk/generator/shape::to-query-params "DefaultRouteTableAssociation"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-route-table-association)))
                       (aws-sdk/generator/shape::to-query-params "AssociationDefaultRouteTableId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-default-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "DefaultRouteTablePropagation"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-route-table-propagation)))
                       (aws-sdk/generator/shape::to-query-params "PropagationDefaultRouteTableId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'propagation-default-route-table-id)))
                       (aws-sdk/generator/shape::to-query-params "VpnEcmpSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-ecmp-support)))
                       (aws-sdk/generator/shape::to-query-params "DnsSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-support)))
                       (aws-sdk/generator/shape::to-query-params "MulticastSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'multicast-support))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-peering-attachment (:copier common-lisp:nil))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-tgw-info common-lisp:nil :type (common-lisp:or peering-tgw-info common-lisp:null))
   (accepter-tgw-info common-lisp:nil :type (common-lisp:or peering-tgw-info common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or peering-attachment-status common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-attachment-state common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-peering-attachment 'make-transit-gateway-peering-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-peering-attachment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "RequesterTgwInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-tgw-info)))
    (aws-sdk/generator/shape::to-query-params "AccepterTgwInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'accepter-tgw-info)))
    (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-peering-attachment-list () '(trivial-types:proper-list transit-gateway-peering-attachment))
 (common-lisp:defun |make-transit-gateway-peering-attachment-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-peering-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-propagation (:copier common-lisp:nil))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or transit-gateway-attachment-id common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (transit-gateway-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-propagation-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-propagation 'make-transit-gateway-propagation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-propagation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:deftype transit-gateway-propagation-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-request-options (:copier common-lisp:nil))
   (amazon-side-asn common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (auto-accept-shared-attachments common-lisp:nil :type (common-lisp:or auto-accept-shared-attachments-value common-lisp:null))
   (default-route-table-association common-lisp:nil :type (common-lisp:or default-route-table-association-value common-lisp:null))
   (default-route-table-propagation common-lisp:nil :type (common-lisp:or default-route-table-propagation-value common-lisp:null))
   (vpn-ecmp-support common-lisp:nil :type (common-lisp:or vpn-ecmp-support-value common-lisp:null))
   (dns-support common-lisp:nil :type (common-lisp:or dns-support-value common-lisp:null))
   (multicast-support common-lisp:nil :type (common-lisp:or multicast-support-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-request-options 'make-transit-gateway-request-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-request-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AmazonSideAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amazon-side-asn)))
                       (aws-sdk/generator/shape::to-query-params "AutoAcceptSharedAttachments"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'auto-accept-shared-attachments)))
                       (aws-sdk/generator/shape::to-query-params "DefaultRouteTableAssociation"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-route-table-association)))
                       (aws-sdk/generator/shape::to-query-params "DefaultRouteTablePropagation"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-route-table-propagation)))
                       (aws-sdk/generator/shape::to-query-params "VpnEcmpSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-ecmp-support)))
                       (aws-sdk/generator/shape::to-query-params "DnsSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-support)))
                       (aws-sdk/generator/shape::to-query-params "MulticastSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'multicast-support))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-route (:copier common-lisp:nil))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-attachments common-lisp:nil :type (common-lisp:or transit-gateway-route-attachment-list common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or transit-gateway-route-type common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-route-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-route 'make-transit-gateway-route))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-route))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachments)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-route-attachment (:copier common-lisp:nil))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-route-attachment 'make-transit-gateway-route-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-route-attachment))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
                       (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
                       (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-route-attachment-list () '(trivial-types:proper-list transit-gateway-route-attachment))
 (common-lisp:defun |make-transit-gateway-route-attachment-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-route-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-route-list () '(trivial-types:proper-list transit-gateway-route))
 (common-lisp:defun |make-transit-gateway-route-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-route))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transit-gateway-route-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-route-table (:copier common-lisp:nil))
   (transit-gateway-route-table-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-route-table-state common-lisp:null))
   (default-association-route-table common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (default-propagation-route-table common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-route-table 'make-transit-gateway-route-table))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-route-table))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayRouteTableId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-route-table-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "DefaultAssociationRouteTable" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-association-route-table)))
    (aws-sdk/generator/shape::to-query-params "DefaultPropagationRouteTable" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-propagation-route-table)))
    (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-route-table-association (:copier common-lisp:nil))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-association-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-route-table-association 'make-transit-gateway-route-table-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-route-table-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-route-table-association-list () '(trivial-types:proper-list transit-gateway-route-table-association))
 (common-lisp:defun |make-transit-gateway-route-table-association-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-route-table-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transit-gateway-route-table-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype transit-gateway-route-table-id-string-list () '(trivial-types:proper-list transit-gateway-route-table-id))
 (common-lisp:defun |make-transit-gateway-route-table-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-route-table-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-route-table-list () '(trivial-types:proper-list transit-gateway-route-table))
 (common-lisp:defun |make-transit-gateway-route-table-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-route-table))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-route-table-propagation (:copier common-lisp:nil))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type (common-lisp:or transit-gateway-attachment-resource-type common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-propagation-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-route-table-propagation 'make-transit-gateway-route-table-propagation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-route-table-propagation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-type)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-route-table-propagation-list () '(trivial-types:proper-list transit-gateway-route-table-propagation))
 (common-lisp:defun |make-transit-gateway-route-table-propagation-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-route-table-propagation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype transit-gateway-route-table-state () 'common-lisp:string)
(common-lisp:deftype transit-gateway-route-type () 'common-lisp:string)
(common-lisp:deftype transit-gateway-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype transit-gateway-subnet-id-list () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-transit-gateway-subnet-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-vpc-attachment (:copier common-lisp:nil))
   (transit-gateway-attachment-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or transit-gateway-attachment-state common-lisp:null))
   (subnet-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or transit-gateway-vpc-attachment-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-vpc-attachment 'make-transit-gateway-vpc-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-vpc-attachment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TransitGatewayAttachmentId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-attachment-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "VpcOwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-owner-id)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "SubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "CreationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-time)))
    (aws-sdk/generator/shape::to-query-params "Options" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'options)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:deftype transit-gateway-vpc-attachment-list () '(trivial-types:proper-list transit-gateway-vpc-attachment))
 (common-lisp:defun |make-transit-gateway-vpc-attachment-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list transit-gateway-vpc-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (transit-gateway-vpc-attachment-options (:copier common-lisp:nil))
   (dns-support common-lisp:nil :type (common-lisp:or dns-support-value common-lisp:null))
   (ipv6support common-lisp:nil :type (common-lisp:or ipv6support-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transit-gateway-vpc-attachment-options 'make-transit-gateway-vpc-attachment-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape transit-gateway-vpc-attachment-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DnsSupport" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-support)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Support" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6support))))))
(common-lisp:deftype transport-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tunnel-option (:copier common-lisp:nil))
   (outside-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tunnel-inside-cidr common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pre-shared-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (phase1lifetime-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (phase2lifetime-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rekey-margin-time-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rekey-fuzz-percentage common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (replay-window-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (dpd-timeout-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (phase1encryption-algorithms common-lisp:nil :type (common-lisp:or phase1encryption-algorithms-list common-lisp:null))
   (phase2encryption-algorithms common-lisp:nil :type (common-lisp:or phase2encryption-algorithms-list common-lisp:null))
   (phase1integrity-algorithms common-lisp:nil :type (common-lisp:or phase1integrity-algorithms-list common-lisp:null))
   (phase2integrity-algorithms common-lisp:nil :type (common-lisp:or phase2integrity-algorithms-list common-lisp:null))
   (phase1dhgroup-numbers common-lisp:nil :type (common-lisp:or phase1dhgroup-numbers-list common-lisp:null))
   (phase2dhgroup-numbers common-lisp:nil :type (common-lisp:or phase2dhgroup-numbers-list common-lisp:null))
   (ike-versions common-lisp:nil :type (common-lisp:or ikeversions-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tunnel-option 'make-tunnel-option))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape tunnel-option))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "OutsideIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outside-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "TunnelInsideCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tunnel-inside-cidr)))
                       (aws-sdk/generator/shape::to-query-params "PreSharedKey" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pre-shared-key)))
                       (aws-sdk/generator/shape::to-query-params "Phase1LifetimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1lifetime-seconds)))
                       (aws-sdk/generator/shape::to-query-params "Phase2LifetimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2lifetime-seconds)))
                       (aws-sdk/generator/shape::to-query-params "RekeyMarginTimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rekey-margin-time-seconds)))
                       (aws-sdk/generator/shape::to-query-params "RekeyFuzzPercentage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rekey-fuzz-percentage)))
                       (aws-sdk/generator/shape::to-query-params "ReplayWindowSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'replay-window-size)))
                       (aws-sdk/generator/shape::to-query-params "DpdTimeoutSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dpd-timeout-seconds)))
                       (aws-sdk/generator/shape::to-query-params "Phase1EncryptionAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1encryption-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase2EncryptionAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2encryption-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase1IntegrityAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1integrity-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase2IntegrityAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2integrity-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase1DHGroupNumbers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1dhgroup-numbers)))
                       (aws-sdk/generator/shape::to-query-params "Phase2DHGroupNumbers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2dhgroup-numbers)))
                       (aws-sdk/generator/shape::to-query-params "IkeVersions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ike-versions))))))
(common-lisp:progn
 (common-lisp:deftype tunnel-options-list () '(trivial-types:proper-list tunnel-option))
 (common-lisp:defun |make-tunnel-options-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list tunnel-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (unassign-ipv6addresses-request (:copier common-lisp:nil))
   (ipv6addresses (common-lisp:error ":ipv6addresses is required") :type (common-lisp:or ipv6address-list common-lisp:null))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unassign-ipv6addresses-request 'make-unassign-ipv6addresses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unassign-ipv6addresses-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Ipv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6addresses)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id))))))
(common-lisp:progn
 (common-lisp:defstruct (unassign-ipv6addresses-result (:copier common-lisp:nil))
   (network-interface-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (unassigned-ipv6addresses common-lisp:nil :type (common-lisp:or ipv6address-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unassign-ipv6addresses-result 'make-unassign-ipv6addresses-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unassign-ipv6addresses-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "UnassignedIpv6Addresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'unassigned-ipv6addresses))))))
(common-lisp:progn
 (common-lisp:defstruct (unassign-private-ip-addresses-request (:copier common-lisp:nil))
   (network-interface-id (common-lisp:error ":network-interface-id is required") :type (common-lisp:or network-interface-id common-lisp:null))
   (private-ip-addresses (common-lisp:error ":private-ip-addresses is required") :type (common-lisp:or private-ip-address-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unassign-private-ip-addresses-request 'make-unassign-private-ip-addresses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unassign-private-ip-addresses-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "NetworkInterfaceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-id)))
                       (aws-sdk/generator/shape::to-query-params "PrivateIpAddresses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-ip-addresses))))))
(common-lisp:deftype unlimited-supported-instance-family () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (unmonitor-instances-request (:copier common-lisp:nil))
   (instance-ids (common-lisp:error ":instance-ids is required") :type (common-lisp:or instance-id-string-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unmonitor-instances-request 'make-unmonitor-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unmonitor-instances-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-ids)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (unmonitor-instances-result (:copier common-lisp:nil)) (instance-monitorings common-lisp:nil :type (common-lisp:or instance-monitoring-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unmonitor-instances-result 'make-unmonitor-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unmonitor-instances-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceMonitorings" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-monitorings))))))
(common-lisp:deftype unsuccessful-instance-credit-specification-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (unsuccessful-instance-credit-specification-item (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or unsuccessful-instance-credit-specification-item-error common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unsuccessful-instance-credit-specification-item 'make-unsuccessful-instance-credit-specification-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unsuccessful-instance-credit-specification-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "Error" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error))))))
(common-lisp:progn
 (common-lisp:defstruct (unsuccessful-instance-credit-specification-item-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or unsuccessful-instance-credit-specification-error-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unsuccessful-instance-credit-specification-item-error 'make-unsuccessful-instance-credit-specification-item-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unsuccessful-instance-credit-specification-item-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:deftype unsuccessful-instance-credit-specification-set () '(trivial-types:proper-list unsuccessful-instance-credit-specification-item))
 (common-lisp:defun |make-unsuccessful-instance-credit-specification-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list unsuccessful-instance-credit-specification-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (unsuccessful-item (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or unsuccessful-item-error common-lisp:null))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unsuccessful-item 'make-unsuccessful-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unsuccessful-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Error" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'error)))
                       (aws-sdk/generator/shape::to-query-params "ResourceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'resource-id))))))
(common-lisp:progn
 (common-lisp:defstruct (unsuccessful-item-error (:copier common-lisp:nil)) (code common-lisp:nil :type (common-lisp:or string common-lisp:null)) (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unsuccessful-item-error 'make-unsuccessful-item-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape unsuccessful-item-error))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:progn
 (common-lisp:deftype unsuccessful-item-list () '(trivial-types:proper-list unsuccessful-item))
 (common-lisp:defun |make-unsuccessful-item-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list unsuccessful-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype unsuccessful-item-set () '(trivial-types:proper-list unsuccessful-item))
 (common-lisp:defun |make-unsuccessful-item-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list unsuccessful-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (update-security-group-rule-descriptions-egress-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or security-group-id common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or security-group-name common-lisp:null))
   (ip-permissions (common-lisp:error ":ip-permissions is required") :type (common-lisp:or ip-permission-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'update-security-group-rule-descriptions-egress-request 'make-update-security-group-rule-descriptions-egress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape update-security-group-rule-descriptions-egress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions))))))
(common-lisp:progn
 (common-lisp:defstruct (update-security-group-rule-descriptions-egress-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'update-security-group-rule-descriptions-egress-result 'make-update-security-group-rule-descriptions-egress-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape update-security-group-rule-descriptions-egress-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:progn
 (common-lisp:defstruct (update-security-group-rule-descriptions-ingress-request (:copier common-lisp:nil))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or security-group-id common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or security-group-name common-lisp:null))
   (ip-permissions (common-lisp:error ":ip-permissions is required") :type (common-lisp:or ip-permission-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'update-security-group-rule-descriptions-ingress-request 'make-update-security-group-rule-descriptions-ingress-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape update-security-group-rule-descriptions-ingress-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "IpPermissions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ip-permissions))))))
(common-lisp:progn
 (common-lisp:defstruct (update-security-group-rule-descriptions-ingress-result (:copier common-lisp:nil)) (return common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'update-security-group-rule-descriptions-ingress-result 'make-update-security-group-rule-descriptions-ingress-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape update-security-group-rule-descriptions-ingress-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Return" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'return))))))
(common-lisp:deftype usage-class-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype usage-class-type-list () '(trivial-types:proper-list usage-class-type))
 (common-lisp:defun |make-usage-class-type-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list usage-class-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (user-bucket (:copier common-lisp:nil)) (s3bucket common-lisp:nil :type (common-lisp:or string common-lisp:null)) (s3key common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-bucket 'make-user-bucket))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape user-bucket))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "S3Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3bucket)))
                       (aws-sdk/generator/shape::to-query-params "S3Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3key))))))
(common-lisp:progn
 (common-lisp:defstruct (user-bucket-details (:copier common-lisp:nil)) (s3bucket common-lisp:nil :type (common-lisp:or string common-lisp:null)) (s3key common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-bucket-details 'make-user-bucket-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape user-bucket-details))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "S3Bucket" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3bucket)))
                       (aws-sdk/generator/shape::to-query-params "S3Key" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 's3key))))))
(common-lisp:progn
 (common-lisp:defstruct (user-data (:copier common-lisp:nil)) (data common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-data 'make-user-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape user-data))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Data" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'data))))))
(common-lisp:progn
 (common-lisp:deftype user-group-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-user-group-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (user-id-group-pair (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (peering-status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (user-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-peering-connection-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-id-group-pair 'make-user-id-group-pair))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape user-id-group-pair))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "GroupId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-id)))
                       (aws-sdk/generator/shape::to-query-params "GroupName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'group-name)))
                       (aws-sdk/generator/shape::to-query-params "PeeringStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peering-status)))
                       (aws-sdk/generator/shape::to-query-params "UserId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'user-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:progn
 (common-lisp:deftype user-id-group-pair-list () '(trivial-types:proper-list user-id-group-pair))
 (common-lisp:defun |make-user-id-group-pair-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list user-id-group-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype user-id-group-pair-set () '(trivial-types:proper-list user-id-group-pair))
 (common-lisp:defun |make-user-id-group-pair-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list user-id-group-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype user-id-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-user-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vcpu-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (vcpu-info (:copier common-lisp:nil))
   (default-vcpus common-lisp:nil :type (common-lisp:or vcpu-count common-lisp:null))
   (default-cores common-lisp:nil :type (common-lisp:or core-count common-lisp:null))
   (default-threads-per-core common-lisp:nil :type (common-lisp:or threads-per-core common-lisp:null))
   (valid-cores common-lisp:nil :type (common-lisp:or core-count-list common-lisp:null))
   (valid-threads-per-core common-lisp:nil :type (common-lisp:or threads-per-core-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vcpu-info 'make-vcpu-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vcpu-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DefaultVCpus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-vcpus)))
                       (aws-sdk/generator/shape::to-query-params "DefaultCores" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-cores)))
                       (aws-sdk/generator/shape::to-query-params "DefaultThreadsPerCore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'default-threads-per-core)))
                       (aws-sdk/generator/shape::to-query-params "ValidCores" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-cores)))
                       (aws-sdk/generator/shape::to-query-params "ValidThreadsPerCore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'valid-threads-per-core))))))
(common-lisp:progn
 (common-lisp:deftype value-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-value-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype version-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype version-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-version-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vgw-telemetry (:copier common-lisp:nil))
   (accepted-route-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (last-status-change common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (outside-ip-address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or telemetry-status common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (certificate-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vgw-telemetry 'make-vgw-telemetry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vgw-telemetry))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AcceptedRouteCount" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'accepted-route-count)))
                       (aws-sdk/generator/shape::to-query-params "LastStatusChange" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'last-status-change)))
                       (aws-sdk/generator/shape::to-query-params "OutsideIpAddress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outside-ip-address)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "CertificateArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'certificate-arn))))))
(common-lisp:progn
 (common-lisp:deftype vgw-telemetry-list () '(trivial-types:proper-list vgw-telemetry))
 (common-lisp:defun |make-vgw-telemetry-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vgw-telemetry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype virtualization-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (volume (:copier common-lisp:nil))
   (attachments common-lisp:nil :type (common-lisp:or volume-attachment-list common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (create-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (encrypted common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or volume-state common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null))
   (fast-restored common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (multi-attach-enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume 'make-volume))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Attachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachments)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "CreateTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'create-time)))
                       (aws-sdk/generator/shape::to-query-params "Encrypted" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'encrypted)))
                       (aws-sdk/generator/shape::to-query-params "KmsKeyId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'kms-key-id)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "Size" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size)))
                       (aws-sdk/generator/shape::to-query-params "SnapshotId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'snapshot-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "Iops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'iops)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-type)))
                       (aws-sdk/generator/shape::to-query-params "FastRestored" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'fast-restored)))
                       (aws-sdk/generator/shape::to-query-params "MultiAttachEnabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'multi-attach-enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (volume-attachment (:copier common-lisp:nil))
   (attach-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or volume-attachment-state common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (delete-on-termination common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-attachment 'make-volume-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-attachment))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AttachTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attach-time)))
                       (aws-sdk/generator/shape::to-query-params "Device" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'device)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "DeleteOnTermination" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'delete-on-termination))))))
(common-lisp:progn
 (common-lisp:deftype volume-attachment-list () '(trivial-types:proper-list volume-attachment))
 (common-lisp:defun |make-volume-attachment-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-attachment-state () 'common-lisp:string)
(common-lisp:deftype volume-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (volume-detail (:copier common-lisp:nil)) (size (common-lisp:error ":size is required") :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-detail 'make-volume-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-detail))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Size" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'size))))))
(common-lisp:deftype volume-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype volume-id-string-list () '(trivial-types:proper-list volume-id))
 (common-lisp:defun |make-volume-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype volume-list () '(trivial-types:proper-list volume))
 (common-lisp:defun |make-volume-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (volume-modification (:copier common-lisp:nil))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (modification-state common-lisp:nil :type (common-lisp:or volume-modification-state common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (target-iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (target-volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null))
   (original-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (original-iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (original-volume-type common-lisp:nil :type (common-lisp:or volume-type common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-modification 'make-volume-modification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-modification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "ModificationState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'modification-state)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message)))
                       (aws-sdk/generator/shape::to-query-params "TargetSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-size)))
                       (aws-sdk/generator/shape::to-query-params "TargetIops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-iops)))
                       (aws-sdk/generator/shape::to-query-params "TargetVolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'target-volume-type)))
                       (aws-sdk/generator/shape::to-query-params "OriginalSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'original-size)))
                       (aws-sdk/generator/shape::to-query-params "OriginalIops" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'original-iops)))
                       (aws-sdk/generator/shape::to-query-params "OriginalVolumeType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'original-volume-type)))
                       (aws-sdk/generator/shape::to-query-params "Progress" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'progress)))
                       (aws-sdk/generator/shape::to-query-params "StartTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'start-time)))
                       (aws-sdk/generator/shape::to-query-params "EndTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'end-time))))))
(common-lisp:progn
 (common-lisp:deftype volume-modification-list () '(trivial-types:proper-list volume-modification))
 (common-lisp:defun |make-volume-modification-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-modification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-modification-state () 'common-lisp:string)
(common-lisp:deftype volume-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (volume-status-action (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-status-action 'make-volume-status-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-status-action))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "EventId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-id)))
                       (aws-sdk/generator/shape::to-query-params "EventType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-type))))))
(common-lisp:progn
 (common-lisp:deftype volume-status-actions-list () '(trivial-types:proper-list volume-status-action))
 (common-lisp:defun |make-volume-status-actions-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-status-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (volume-status-attachment-status (:copier common-lisp:nil))
   (io-performance common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-status-attachment-status 'make-volume-status-attachment-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-status-attachment-status))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "IoPerformance" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'io-performance)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:progn
 (common-lisp:deftype volume-status-attachment-status-list () '(trivial-types:proper-list volume-status-attachment-status))
 (common-lisp:defun |make-volume-status-attachment-status-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-status-attachment-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (volume-status-details (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or volume-status-name common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-status-details 'make-volume-status-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-status-details))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Name" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'name)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:progn
 (common-lisp:deftype volume-status-details-list () '(trivial-types:proper-list volume-status-details))
 (common-lisp:defun |make-volume-status-details-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-status-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (volume-status-event (:copier common-lisp:nil))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (not-after common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (not-before common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-status-event 'make-volume-status-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-status-event))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Description" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'description)))
                       (aws-sdk/generator/shape::to-query-params "EventId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-id)))
                       (aws-sdk/generator/shape::to-query-params "EventType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'event-type)))
                       (aws-sdk/generator/shape::to-query-params "NotAfter" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'not-after)))
                       (aws-sdk/generator/shape::to-query-params "NotBefore" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'not-before)))
                       (aws-sdk/generator/shape::to-query-params "InstanceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-id))))))
(common-lisp:progn
 (common-lisp:deftype volume-status-events-list () '(trivial-types:proper-list volume-status-event))
 (common-lisp:defun |make-volume-status-events-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-status-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (volume-status-info (:copier common-lisp:nil))
   (details common-lisp:nil :type (common-lisp:or volume-status-details-list common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or volume-status-info-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-status-info 'make-volume-status-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-status-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Details" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'details)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status))))))
(common-lisp:deftype volume-status-info-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (volume-status-item (:copier common-lisp:nil))
   (actions common-lisp:nil :type (common-lisp:or volume-status-actions-list common-lisp:null))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (outpost-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (events common-lisp:nil :type (common-lisp:or volume-status-events-list common-lisp:null))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-status common-lisp:nil :type (common-lisp:or volume-status-info common-lisp:null))
   (attachment-statuses common-lisp:nil :type (common-lisp:or volume-status-attachment-status-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-status-item 'make-volume-status-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape volume-status-item))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Actions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'actions)))
                       (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "OutpostArn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'outpost-arn)))
                       (aws-sdk/generator/shape::to-query-params "Events" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'events)))
                       (aws-sdk/generator/shape::to-query-params "VolumeId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-id)))
                       (aws-sdk/generator/shape::to-query-params "VolumeStatus" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'volume-status)))
                       (aws-sdk/generator/shape::to-query-params "AttachmentStatuses" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'attachment-statuses))))))
(common-lisp:progn
 (common-lisp:deftype volume-status-list () '(trivial-types:proper-list volume-status-item))
 (common-lisp:defun |make-volume-status-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list volume-status-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-status-name () 'common-lisp:string)
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpc (:copier common-lisp:nil))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dhcp-options-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or vpc-state common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-tenancy common-lisp:nil :type (common-lisp:or tenancy common-lisp:null))
   (ipv6cidr-block-association-set common-lisp:nil :type (common-lisp:or vpc-ipv6cidr-block-association-set common-lisp:null))
   (cidr-block-association-set common-lisp:nil :type (common-lisp:or vpc-cidr-block-association-set common-lisp:null))
   (is-default common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc 'make-vpc))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "DhcpOptionsId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dhcp-options-id)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "InstanceTenancy" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'instance-tenancy)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockAssociationSet"
                                                                 (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-association-set)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlockAssociationSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block-association-set)))
                       (aws-sdk/generator/shape::to-query-params "IsDefault" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'is-default)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (vpc-attachment (:copier common-lisp:nil)) (state common-lisp:nil :type (common-lisp:or attachment-status common-lisp:null)) (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-attachment 'make-vpc-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-attachment))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:deftype vpc-attachment-list () '(trivial-types:proper-list vpc-attachment))
 (common-lisp:defun |make-vpc-attachment-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-attribute-name () 'common-lisp:string)
(common-lisp:deftype vpc-cidr-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpc-cidr-block-association (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cidr-block-state common-lisp:nil :type (common-lisp:or vpc-cidr-block-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-cidr-block-association 'make-vpc-cidr-block-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-cidr-block-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlockState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block-state))))))
(common-lisp:progn
 (common-lisp:deftype vpc-cidr-block-association-set () '(trivial-types:proper-list vpc-cidr-block-association))
 (common-lisp:defun |make-vpc-cidr-block-association-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-cidr-block-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vpc-cidr-block-state (:copier common-lisp:nil))
   (state common-lisp:nil :type (common-lisp:or vpc-cidr-block-state-code common-lisp:null))
   (status-message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-cidr-block-state 'make-vpc-cidr-block-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-cidr-block-state))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "StatusMessage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status-message))))))
(common-lisp:deftype vpc-cidr-block-state-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpc-classic-link (:copier common-lisp:nil))
   (classic-link-enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-classic-link 'make-vpc-classic-link))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-classic-link))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ClassicLinkEnabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'classic-link-enabled)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id))))))
(common-lisp:progn
 (common-lisp:deftype vpc-classic-link-id-list () '(trivial-types:proper-list vpc-id))
 (common-lisp:defun |make-vpc-classic-link-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpc-classic-link-list () '(trivial-types:proper-list vpc-classic-link))
 (common-lisp:defun |make-vpc-classic-link-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-classic-link))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vpc-endpoint (:copier common-lisp:nil))
   (vpc-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-type common-lisp:nil :type (common-lisp:or vpc-endpoint-type common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or state common-lisp:null))
   (policy-document common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (route-table-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (subnet-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (groups common-lisp:nil :type (common-lisp:or group-identifier-set common-lisp:null))
   (private-dns-enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (requester-managed common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (network-interface-ids common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null))
   (dns-entries common-lisp:nil :type (common-lisp:or dns-entry-set common-lisp:null))
   (creation-timestamp common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (last-error common-lisp:nil :type (common-lisp:or last-error common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-endpoint 'make-vpc-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-endpoint))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "VpcEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointType" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-type)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "ServiceName" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-name)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "PolicyDocument" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'policy-document)))
                       (aws-sdk/generator/shape::to-query-params "RouteTableIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'route-table-ids)))
                       (aws-sdk/generator/shape::to-query-params "SubnetIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'subnet-ids)))
                       (aws-sdk/generator/shape::to-query-params "Groups" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'groups)))
                       (aws-sdk/generator/shape::to-query-params "PrivateDnsEnabled" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'private-dns-enabled)))
                       (aws-sdk/generator/shape::to-query-params "RequesterManaged" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-managed)))
                       (aws-sdk/generator/shape::to-query-params "NetworkInterfaceIds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-interface-ids)))
                       (aws-sdk/generator/shape::to-query-params "DnsEntries" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-entries)))
                       (aws-sdk/generator/shape::to-query-params "CreationTimestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-timestamp)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "LastError" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'last-error))))))
(common-lisp:progn
 (common-lisp:defstruct (vpc-endpoint-connection (:copier common-lisp:nil))
   (service-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-owner common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-state common-lisp:nil :type (common-lisp:or state common-lisp:null))
   (creation-timestamp common-lisp:nil :type (common-lisp:or millisecond-date-time common-lisp:null))
   (dns-entries common-lisp:nil :type (common-lisp:or dns-entry-set common-lisp:null))
   (network-load-balancer-arns common-lisp:nil :type (common-lisp:or value-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-endpoint-connection 'make-vpc-endpoint-connection))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-endpoint-connection))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ServiceId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'service-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-id)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointOwner" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-owner)))
                       (aws-sdk/generator/shape::to-query-params "VpcEndpointState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-endpoint-state)))
                       (aws-sdk/generator/shape::to-query-params "CreationTimestamp" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'creation-timestamp)))
                       (aws-sdk/generator/shape::to-query-params "DnsEntries" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dns-entries)))
                       (aws-sdk/generator/shape::to-query-params "NetworkLoadBalancerArns" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-load-balancer-arns))))))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-connection-set () '(trivial-types:proper-list vpc-endpoint-connection))
 (common-lisp:defun |make-vpc-endpoint-connection-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-endpoint-connection))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-endpoint-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-id-list () '(trivial-types:proper-list vpc-endpoint-id))
 (common-lisp:defun |make-vpc-endpoint-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-endpoint-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-route-table-id-list () '(trivial-types:proper-list route-table-id))
 (common-lisp:defun |make-vpc-endpoint-route-table-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list route-table-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-security-group-id-list () '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-vpc-endpoint-security-group-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-endpoint-service-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-service-id-list () '(trivial-types:proper-list vpc-endpoint-service-id))
 (common-lisp:defun |make-vpc-endpoint-service-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-endpoint-service-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-set () '(trivial-types:proper-list vpc-endpoint))
 (common-lisp:defun |make-vpc-endpoint-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-subnet-id-list () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-vpc-endpoint-subnet-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-endpoint-type () 'common-lisp:string)
(common-lisp:deftype vpc-flow-log-id () 'common-lisp:string)
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-id-string-list () '(trivial-types:proper-list vpc-id))
 (common-lisp:defun |make-vpc-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vpc-ipv6cidr-block-association (:copier common-lisp:nil))
   (association-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6cidr-block-state common-lisp:nil :type (common-lisp:or vpc-cidr-block-state common-lisp:null))
   (network-border-group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6pool common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-ipv6cidr-block-association 'make-vpc-ipv6cidr-block-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-ipv6cidr-block-association))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AssociationId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'association-id)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockState" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-state)))
                       (aws-sdk/generator/shape::to-query-params "NetworkBorderGroup" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'network-border-group)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6Pool" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6pool))))))
(common-lisp:progn
 (common-lisp:deftype vpc-ipv6cidr-block-association-set () '(trivial-types:proper-list vpc-ipv6cidr-block-association))
 (common-lisp:defun |make-vpc-ipv6cidr-block-association-set| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-ipv6cidr-block-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpc-list () '(trivial-types:proper-list vpc))
 (common-lisp:defun |make-vpc-list| (common-lisp:&rest aws-sdk/generator/shape::members) (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc)) aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vpc-peering-connection (:copier common-lisp:nil))
   (accepter-vpc-info common-lisp:nil :type (common-lisp:or vpc-peering-connection-vpc-info common-lisp:null))
   (expiration-time common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (requester-vpc-info common-lisp:nil :type (common-lisp:or vpc-peering-connection-vpc-info common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or vpc-peering-connection-state-reason common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vpc-peering-connection-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-peering-connection 'make-vpc-peering-connection))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-peering-connection))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AccepterVpcInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'accepter-vpc-info)))
                       (aws-sdk/generator/shape::to-query-params "ExpirationTime" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'expiration-time)))
                       (aws-sdk/generator/shape::to-query-params "RequesterVpcInfo" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'requester-vpc-info)))
                       (aws-sdk/generator/shape::to-query-params "Status" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'status)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
                       (aws-sdk/generator/shape::to-query-params "VpcPeeringConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-peering-connection-id))))))
(common-lisp:deftype vpc-peering-connection-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-peering-connection-id-list () '(trivial-types:proper-list vpc-peering-connection-id))
 (common-lisp:defun |make-vpc-peering-connection-id-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-peering-connection-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpc-peering-connection-list () '(trivial-types:proper-list vpc-peering-connection))
 (common-lisp:defun |make-vpc-peering-connection-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpc-peering-connection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vpc-peering-connection-options-description (:copier common-lisp:nil))
   (allow-dns-resolution-from-remote-vpc common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-egress-from-local-classic-link-to-remote-vpc common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-egress-from-local-vpc-to-remote-classic-link common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-peering-connection-options-description 'make-vpc-peering-connection-options-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-peering-connection-options-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AllowDnsResolutionFromRemoteVpc" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-dns-resolution-from-remote-vpc)))
    (aws-sdk/generator/shape::to-query-params "AllowEgressFromLocalClassicLinkToRemoteVpc"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-egress-from-local-classic-link-to-remote-vpc)))
    (aws-sdk/generator/shape::to-query-params "AllowEgressFromLocalVpcToRemoteClassicLink"
                                              (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'allow-egress-from-local-vpc-to-remote-classic-link))))))
(common-lisp:progn
 (common-lisp:defstruct (vpc-peering-connection-state-reason (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or vpc-peering-connection-state-reason-code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-peering-connection-state-reason 'make-vpc-peering-connection-state-reason))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-peering-connection-state-reason))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Code" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'code)))
                       (aws-sdk/generator/shape::to-query-params "Message" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'message))))))
(common-lisp:deftype vpc-peering-connection-state-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpc-peering-connection-vpc-info (:copier common-lisp:nil))
   (cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ipv6cidr-block-set common-lisp:nil :type (common-lisp:or ipv6cidr-block-set common-lisp:null))
   (cidr-block-set common-lisp:nil :type (common-lisp:or cidr-block-set common-lisp:null))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (peering-options common-lisp:nil :type (common-lisp:or vpc-peering-connection-options-description common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-peering-connection-vpc-info 'make-vpc-peering-connection-vpc-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpc-peering-connection-vpc-info))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "CidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Ipv6CidrBlockSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ipv6cidr-block-set)))
                       (aws-sdk/generator/shape::to-query-params "CidrBlockSet" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr-block-set)))
                       (aws-sdk/generator/shape::to-query-params "OwnerId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'owner-id)))
                       (aws-sdk/generator/shape::to-query-params "PeeringOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'peering-options)))
                       (aws-sdk/generator/shape::to-query-params "VpcId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-id)))
                       (aws-sdk/generator/shape::to-query-params "Region" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'region))))))
(common-lisp:deftype vpc-state () 'common-lisp:string)
(common-lisp:deftype vpc-tenancy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpn-connection (:copier common-lisp:nil))
   (customer-gateway-configuration common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (category common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or vpn-state common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or gateway-type common-lisp:null))
   (vpn-connection-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpn-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (transit-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or vpn-connection-options common-lisp:null))
   (routes common-lisp:nil :type (common-lisp:or vpn-static-route-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (vgw-telemetry common-lisp:nil :type (common-lisp:or vgw-telemetry-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpn-connection 'make-vpn-connection))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpn-connection))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CustomerGatewayConfiguration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway-configuration)))
    (aws-sdk/generator/shape::to-query-params "CustomerGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'customer-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "Category" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'category)))
    (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
    (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
    (aws-sdk/generator/shape::to-query-params "VpnConnectionId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-connection-id)))
    (aws-sdk/generator/shape::to-query-params "VpnGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "TransitGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'transit-gateway-id)))
    (aws-sdk/generator/shape::to-query-params "Options" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'options)))
    (aws-sdk/generator/shape::to-query-params "Routes" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'routes)))
    (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags)))
    (aws-sdk/generator/shape::to-query-params "VgwTelemetry" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vgw-telemetry))))))
(common-lisp:deftype vpn-connection-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpn-connection-id-string-list () '(trivial-types:proper-list vpn-connection-id))
 (common-lisp:defun |make-vpn-connection-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpn-connection-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpn-connection-list () '(trivial-types:proper-list vpn-connection))
 (common-lisp:defun |make-vpn-connection-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpn-connection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vpn-connection-options (:copier common-lisp:nil))
   (enable-acceleration common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (static-routes-only common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tunnel-options common-lisp:nil :type (common-lisp:or tunnel-options-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpn-connection-options 'make-vpn-connection-options))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpn-connection-options))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EnableAcceleration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enable-acceleration)))
                       (aws-sdk/generator/shape::to-query-params "StaticRoutesOnly" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'static-routes-only)))
                       (aws-sdk/generator/shape::to-query-params "TunnelOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tunnel-options))))))
(common-lisp:progn
 (common-lisp:defstruct (vpn-connection-options-specification (:copier common-lisp:nil))
   (enable-acceleration common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (static-routes-only common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (tunnel-options common-lisp:nil :type (common-lisp:or vpn-tunnel-options-specifications-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpn-connection-options-specification 'make-vpn-connection-options-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpn-connection-options-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "EnableAcceleration" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'enable-acceleration)))
                       (aws-sdk/generator/shape::to-query-params "StaticRoutesOnly" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'static-routes-only)))
                       (aws-sdk/generator/shape::to-query-params "TunnelOptions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tunnel-options))))))
(common-lisp:deftype vpn-ecmp-support-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpn-gateway (:copier common-lisp:nil))
   (availability-zone common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or vpn-state common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or gateway-type common-lisp:null))
   (vpc-attachments common-lisp:nil :type (common-lisp:or vpc-attachment-list common-lisp:null))
   (vpn-gateway-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (amazon-side-asn common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpn-gateway 'make-vpn-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpn-gateway))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "AvailabilityZone" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'availability-zone)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state)))
                       (aws-sdk/generator/shape::to-query-params "Type" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'type)))
                       (aws-sdk/generator/shape::to-query-params "VpcAttachments" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpc-attachments)))
                       (aws-sdk/generator/shape::to-query-params "VpnGatewayId" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'vpn-gateway-id)))
                       (aws-sdk/generator/shape::to-query-params "AmazonSideAsn" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'amazon-side-asn)))
                       (aws-sdk/generator/shape::to-query-params "Tags" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tags))))))
(common-lisp:deftype vpn-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpn-gateway-id-string-list () '(trivial-types:proper-list vpn-gateway-id))
 (common-lisp:defun |make-vpn-gateway-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpn-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype vpn-gateway-list () '(trivial-types:proper-list vpn-gateway))
 (common-lisp:defun |make-vpn-gateway-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpn-gateway))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpn-protocol () 'common-lisp:string)
(common-lisp:deftype vpn-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpn-static-route (:copier common-lisp:nil))
   (destination-cidr-block common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or vpn-static-route-source common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or vpn-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpn-static-route 'make-vpn-static-route))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpn-static-route))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "DestinationCidrBlock" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'destination-cidr-block)))
                       (aws-sdk/generator/shape::to-query-params "Source" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'source)))
                       (aws-sdk/generator/shape::to-query-params "State" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'state))))))
(common-lisp:progn
 (common-lisp:deftype vpn-static-route-list () '(trivial-types:proper-list vpn-static-route))
 (common-lisp:defun |make-vpn-static-route-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpn-static-route))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpn-static-route-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (vpn-tunnel-options-specification (:copier common-lisp:nil))
   (tunnel-inside-cidr common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pre-shared-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (phase1lifetime-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (phase2lifetime-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rekey-margin-time-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rekey-fuzz-percentage common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (replay-window-size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (dpdtimeout-seconds common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (phase1encryption-algorithms common-lisp:nil :type (common-lisp:or phase1encryption-algorithms-request-list common-lisp:null))
   (phase2encryption-algorithms common-lisp:nil :type (common-lisp:or phase2encryption-algorithms-request-list common-lisp:null))
   (phase1integrity-algorithms common-lisp:nil :type (common-lisp:or phase1integrity-algorithms-request-list common-lisp:null))
   (phase2integrity-algorithms common-lisp:nil :type (common-lisp:or phase2integrity-algorithms-request-list common-lisp:null))
   (phase1dhgroup-numbers common-lisp:nil :type (common-lisp:or phase1dhgroup-numbers-request-list common-lisp:null))
   (phase2dhgroup-numbers common-lisp:nil :type (common-lisp:or phase2dhgroup-numbers-request-list common-lisp:null))
   (ikeversions common-lisp:nil :type (common-lisp:or ikeversions-request-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpn-tunnel-options-specification 'make-vpn-tunnel-options-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape vpn-tunnel-options-specification))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "TunnelInsideCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'tunnel-inside-cidr)))
                       (aws-sdk/generator/shape::to-query-params "PreSharedKey" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'pre-shared-key)))
                       (aws-sdk/generator/shape::to-query-params "Phase1LifetimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1lifetime-seconds)))
                       (aws-sdk/generator/shape::to-query-params "Phase2LifetimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2lifetime-seconds)))
                       (aws-sdk/generator/shape::to-query-params "RekeyMarginTimeSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rekey-margin-time-seconds)))
                       (aws-sdk/generator/shape::to-query-params "RekeyFuzzPercentage" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'rekey-fuzz-percentage)))
                       (aws-sdk/generator/shape::to-query-params "ReplayWindowSize" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'replay-window-size)))
                       (aws-sdk/generator/shape::to-query-params "DPDTimeoutSeconds" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dpdtimeout-seconds)))
                       (aws-sdk/generator/shape::to-query-params "Phase1EncryptionAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1encryption-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase2EncryptionAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2encryption-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase1IntegrityAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1integrity-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase2IntegrityAlgorithms" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2integrity-algorithms)))
                       (aws-sdk/generator/shape::to-query-params "Phase1DHGroupNumbers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase1dhgroup-numbers)))
                       (aws-sdk/generator/shape::to-query-params "Phase2DHGroupNumbers" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'phase2dhgroup-numbers)))
                       (aws-sdk/generator/shape::to-query-params "IKEVersions" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'ikeversions))))))
(common-lisp:progn
 (common-lisp:deftype vpn-tunnel-options-specifications-list () '(trivial-types:proper-list vpn-tunnel-options-specification))
 (common-lisp:defun |make-vpn-tunnel-options-specifications-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list vpn-tunnel-options-specification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (withdraw-byoip-cidr-request (:copier common-lisp:nil))
   (cidr (common-lisp:error ":cidr is required") :type (common-lisp:or string common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'withdraw-byoip-cidr-request 'make-withdraw-byoip-cidr-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape withdraw-byoip-cidr-request))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "Cidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'cidr)))
                       (aws-sdk/generator/shape::to-query-params "DryRun" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'dry-run))))))
(common-lisp:progn
 (common-lisp:defstruct (withdraw-byoip-cidr-result (:copier common-lisp:nil)) (byoip-cidr common-lisp:nil :type (common-lisp:or byoip-cidr common-lisp:null)))
 (common-lisp:export (common-lisp:list 'withdraw-byoip-cidr-result 'make-withdraw-byoip-cidr-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params ((aws-sdk/generator/shape::shape withdraw-byoip-cidr-result))
   (common-lisp:append (aws-sdk/generator/shape::to-query-params "ByoipCidr" (aws-sdk/generator/shape:shape-to-params (common-lisp:slot-value aws-sdk/generator/shape::shape 'byoip-cidr))))))
(common-lisp:progn
 (common-lisp:deftype zone-id-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-zone-id-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype zone-name-string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-zone-name-string-list| (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |scope| () 'common-lisp:string)
(common-lisp:deftype |totalFpgaMemory| () 'common-lisp:integer)
(common-lisp:deftype |totalGpuMemory| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defun accept-reserved-instances-exchange-quote (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run reserved-instance-ids target-configurations)
   (common-lisp:declare (common-lisp:ignorable dry-run reserved-instance-ids target-configurations))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-accept-reserved-instances-exchange-quote-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AcceptReservedInstancesExchangeQuote") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AcceptReservedInstancesExchangeQuoteResult" common-lisp:nil)))
 (common-lisp:export 'accept-reserved-instances-exchange-quote))
(common-lisp:progn
 (common-lisp:defun accept-transit-gateway-peering-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-accept-transit-gateway-peering-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AcceptTransitGatewayPeeringAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AcceptTransitGatewayPeeringAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'accept-transit-gateway-peering-attachment))
(common-lisp:progn
 (common-lisp:defun accept-transit-gateway-vpc-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-accept-transit-gateway-vpc-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AcceptTransitGatewayVpcAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AcceptTransitGatewayVpcAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'accept-transit-gateway-vpc-attachment))
(common-lisp:progn
 (common-lisp:defun accept-vpc-endpoint-connections (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-id vpc-endpoint-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run service-id vpc-endpoint-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-accept-vpc-endpoint-connections-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AcceptVpcEndpointConnections") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AcceptVpcEndpointConnectionsResult" common-lisp:nil)))
 (common-lisp:export 'accept-vpc-endpoint-connections))
(common-lisp:progn
 (common-lisp:defun accept-vpc-peering-connection (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-peering-connection-id)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-peering-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-accept-vpc-peering-connection-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AcceptVpcPeeringConnection") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AcceptVpcPeeringConnectionResult" common-lisp:nil)))
 (common-lisp:export 'accept-vpc-peering-connection))
(common-lisp:progn
 (common-lisp:defun advertise-byoip-cidr (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cidr dry-run)
   (common-lisp:declare (common-lisp:ignorable cidr dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-advertise-byoip-cidr-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AdvertiseByoipCidr") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AdvertiseByoipCidrResult" common-lisp:nil)))
 (common-lisp:export 'advertise-byoip-cidr))
(common-lisp:progn
 (common-lisp:defun allocate-address (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key domain address public-ipv4pool network-border-group customer-owned-ipv4pool dry-run)
   (common-lisp:declare (common-lisp:ignorable domain address public-ipv4pool network-border-group customer-owned-ipv4pool dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-allocate-address-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AllocateAddress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AllocateAddressResult" common-lisp:nil)))
 (common-lisp:export 'allocate-address))
(common-lisp:progn
 (common-lisp:defun allocate-hosts
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key auto-placement availability-zone client-token instance-type instance-family quantity tag-specifications host-recovery)
   (common-lisp:declare (common-lisp:ignorable auto-placement availability-zone client-token instance-type instance-family quantity tag-specifications host-recovery))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-allocate-hosts-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AllocateHosts") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AllocateHostsResult" common-lisp:nil)))
 (common-lisp:export 'allocate-hosts))
(common-lisp:progn
 (common-lisp:defun apply-security-groups-to-client-vpn-target-network (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id vpc-id security-group-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id vpc-id security-group-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-apply-security-groups-to-client-vpn-target-network-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ApplySecurityGroupsToClientVpnTargetNetwork") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ApplySecurityGroupsToClientVpnTargetNetworkResult" common-lisp:nil)))
 (common-lisp:export 'apply-security-groups-to-client-vpn-target-network))
(common-lisp:progn
 (common-lisp:defun assign-ipv6addresses (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key ipv6address-count ipv6addresses network-interface-id)
   (common-lisp:declare (common-lisp:ignorable ipv6address-count ipv6addresses network-interface-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-assign-ipv6addresses-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssignIpv6Addresses") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssignIpv6AddressesResult" common-lisp:nil)))
 (common-lisp:export 'assign-ipv6addresses))
(common-lisp:progn
 (common-lisp:defun assign-private-ip-addresses (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key allow-reassignment network-interface-id private-ip-addresses secondary-private-ip-address-count)
   (common-lisp:declare (common-lisp:ignorable allow-reassignment network-interface-id private-ip-addresses secondary-private-ip-address-count))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-assign-private-ip-addresses-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssignPrivateIpAddresses") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssignPrivateIpAddressesResult" common-lisp:nil)))
 (common-lisp:export 'assign-private-ip-addresses))
(common-lisp:progn
 (common-lisp:defun associate-address (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key allocation-id instance-id public-ip allow-reassociation dry-run network-interface-id private-ip-address)
   (common-lisp:declare (common-lisp:ignorable allocation-id instance-id public-ip allow-reassociation dry-run network-interface-id private-ip-address))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-address-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateAddress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateAddressResult" common-lisp:nil)))
 (common-lisp:export 'associate-address))
(common-lisp:progn
 (common-lisp:defun associate-client-vpn-target-network (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id subnet-id client-token dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id subnet-id client-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-client-vpn-target-network-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateClientVpnTargetNetwork") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateClientVpnTargetNetworkResult" common-lisp:nil)))
 (common-lisp:export 'associate-client-vpn-target-network))
(common-lisp:progn
 (common-lisp:defun associate-dhcp-options (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dhcp-options-id vpc-id dry-run)
   (common-lisp:declare (common-lisp:ignorable dhcp-options-id vpc-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-dhcp-options-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateDhcpOptions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'associate-dhcp-options))
(common-lisp:progn
 (common-lisp:defun associate-iam-instance-profile (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key iam-instance-profile instance-id)
   (common-lisp:declare (common-lisp:ignorable iam-instance-profile instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-iam-instance-profile-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateIamInstanceProfile") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateIamInstanceProfileResult" common-lisp:nil)))
 (common-lisp:export 'associate-iam-instance-profile))
(common-lisp:progn
 (common-lisp:defun associate-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run route-table-id subnet-id gateway-id)
   (common-lisp:declare (common-lisp:ignorable dry-run route-table-id subnet-id gateway-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateRouteTableResult" common-lisp:nil)))
 (common-lisp:export 'associate-route-table))
(common-lisp:progn
 (common-lisp:defun associate-subnet-cidr-block (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key ipv6cidr-block subnet-id)
   (common-lisp:declare (common-lisp:ignorable ipv6cidr-block subnet-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-subnet-cidr-block-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateSubnetCidrBlock") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateSubnetCidrBlockResult" common-lisp:nil)))
 (common-lisp:export 'associate-subnet-cidr-block))
(common-lisp:progn
 (common-lisp:defun associate-transit-gateway-multicast-domain (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id transit-gateway-attachment-id subnet-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id transit-gateway-attachment-id subnet-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-transit-gateway-multicast-domain-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateTransitGatewayMulticastDomain") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateTransitGatewayMulticastDomainResult" common-lisp:nil)))
 (common-lisp:export 'associate-transit-gateway-multicast-domain))
(common-lisp:progn
 (common-lisp:defun associate-transit-gateway-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-transit-gateway-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateTransitGatewayRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateTransitGatewayRouteTableResult" common-lisp:nil)))
 (common-lisp:export 'associate-transit-gateway-route-table))
(common-lisp:progn
 (common-lisp:defun associate-vpc-cidr-block
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key amazon-provided-ipv6cidr-block cidr-block vpc-id ipv6cidr-block-network-border-group ipv6pool ipv6cidr-block)
   (common-lisp:declare (common-lisp:ignorable amazon-provided-ipv6cidr-block cidr-block vpc-id ipv6cidr-block-network-border-group ipv6pool ipv6cidr-block))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-associate-vpc-cidr-block-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AssociateVpcCidrBlock") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AssociateVpcCidrBlockResult" common-lisp:nil)))
 (common-lisp:export 'associate-vpc-cidr-block))
(common-lisp:progn
 (common-lisp:defun attach-classic-link-vpc (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run groups instance-id vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run groups instance-id vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-attach-classic-link-vpc-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AttachClassicLinkVpc") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AttachClassicLinkVpcResult" common-lisp:nil)))
 (common-lisp:export 'attach-classic-link-vpc))
(common-lisp:progn
 (common-lisp:defun attach-internet-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run internet-gateway-id vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run internet-gateway-id vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-attach-internet-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AttachInternetGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'attach-internet-gateway))
(common-lisp:progn
 (common-lisp:defun attach-network-interface (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key device-index dry-run instance-id network-interface-id)
   (common-lisp:declare (common-lisp:ignorable device-index dry-run instance-id network-interface-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-attach-network-interface-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AttachNetworkInterface") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AttachNetworkInterfaceResult" common-lisp:nil)))
 (common-lisp:export 'attach-network-interface))
(common-lisp:progn
 (common-lisp:defun attach-volume (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key device instance-id volume-id dry-run)
   (common-lisp:declare (common-lisp:ignorable device instance-id volume-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-attach-volume-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AttachVolume") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "VolumeAttachment" common-lisp:nil)))
 (common-lisp:export 'attach-volume))
(common-lisp:progn
 (common-lisp:defun attach-vpn-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpc-id vpn-gateway-id dry-run)
   (common-lisp:declare (common-lisp:ignorable vpc-id vpn-gateway-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-attach-vpn-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AttachVpnGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AttachVpnGatewayResult" common-lisp:nil)))
 (common-lisp:export 'attach-vpn-gateway))
(common-lisp:progn
 (common-lisp:defun authorize-client-vpn-ingress
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id target-network-cidr access-group-id authorize-all-groups description client-token dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id target-network-cidr access-group-id authorize-all-groups description client-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-authorize-client-vpn-ingress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AuthorizeClientVpnIngress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "AuthorizeClientVpnIngressResult" common-lisp:nil)))
 (common-lisp:export 'authorize-client-vpn-ingress))
(common-lisp:progn
 (common-lisp:defun authorize-security-group-egress
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run group-id ip-permissions cidr-ip from-port ip-protocol to-port source-security-group-name source-security-group-owner-id)
   (common-lisp:declare (common-lisp:ignorable dry-run group-id ip-permissions cidr-ip from-port ip-protocol to-port source-security-group-name source-security-group-owner-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-authorize-security-group-egress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AuthorizeSecurityGroupEgress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'authorize-security-group-egress))
(common-lisp:progn
 (common-lisp:defun authorize-security-group-ingress
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cidr-ip from-port group-id group-name ip-permissions ip-protocol source-security-group-name source-security-group-owner-id to-port dry-run)
   (common-lisp:declare (common-lisp:ignorable cidr-ip from-port group-id group-name ip-permissions ip-protocol source-security-group-name source-security-group-owner-id to-port dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-authorize-security-group-ingress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"AuthorizeSecurityGroupIngress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'authorize-security-group-ingress))
(common-lisp:progn
 (common-lisp:defun bundle-instance (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-id storage dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-id storage dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-bundle-instance-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"BundleInstance") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "BundleInstanceResult" common-lisp:nil)))
 (common-lisp:export 'bundle-instance))
(common-lisp:progn
 (common-lisp:defun cancel-bundle-task (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key bundle-id dry-run)
   (common-lisp:declare (common-lisp:ignorable bundle-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-bundle-task-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelBundleTask") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CancelBundleTaskResult" common-lisp:nil)))
 (common-lisp:export 'cancel-bundle-task))
(common-lisp:progn
 (common-lisp:defun cancel-capacity-reservation (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key capacity-reservation-id dry-run)
   (common-lisp:declare (common-lisp:ignorable capacity-reservation-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-capacity-reservation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelCapacityReservation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CancelCapacityReservationResult" common-lisp:nil)))
 (common-lisp:export 'cancel-capacity-reservation))
(common-lisp:progn
 (common-lisp:defun cancel-conversion-task (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key conversion-task-id dry-run reason-message)
   (common-lisp:declare (common-lisp:ignorable conversion-task-id dry-run reason-message))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-conversion-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelConversionTask") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'cancel-conversion-task))
(common-lisp:progn
 (common-lisp:defun cancel-export-task (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key export-task-id)
   (common-lisp:declare (common-lisp:ignorable export-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-export-task-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelExportTask") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'cancel-export-task))
(common-lisp:progn
 (common-lisp:defun cancel-import-task (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cancel-reason dry-run import-task-id)
   (common-lisp:declare (common-lisp:ignorable cancel-reason dry-run import-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-import-task-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelImportTask") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CancelImportTaskResult" common-lisp:nil)))
 (common-lisp:export 'cancel-import-task))
(common-lisp:progn
 (common-lisp:defun cancel-reserved-instances-listing (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key reserved-instances-listing-id)
   (common-lisp:declare (common-lisp:ignorable reserved-instances-listing-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-reserved-instances-listing-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelReservedInstancesListing") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CancelReservedInstancesListingResult" common-lisp:nil)))
 (common-lisp:export 'cancel-reserved-instances-listing))
(common-lisp:progn
 (common-lisp:defun cancel-spot-fleet-requests (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run spot-fleet-request-ids terminate-instances)
   (common-lisp:declare (common-lisp:ignorable dry-run spot-fleet-request-ids terminate-instances))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-spot-fleet-requests-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelSpotFleetRequests") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CancelSpotFleetRequestsResponse" common-lisp:nil)))
 (common-lisp:export 'cancel-spot-fleet-requests))
(common-lisp:progn
 (common-lisp:defun cancel-spot-instance-requests (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run spot-instance-request-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run spot-instance-request-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-cancel-spot-instance-requests-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CancelSpotInstanceRequests") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CancelSpotInstanceRequestsResult" common-lisp:nil)))
 (common-lisp:export 'cancel-spot-instance-requests))
(common-lisp:progn
 (common-lisp:defun confirm-product-instance (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-id product-code dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-id product-code dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-confirm-product-instance-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ConfirmProductInstance") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ConfirmProductInstanceResult" common-lisp:nil)))
 (common-lisp:export 'confirm-product-instance))
(common-lisp:progn
 (common-lisp:defun copy-fpga-image (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run source-fpga-image-id description name source-region client-token)
   (common-lisp:declare (common-lisp:ignorable dry-run source-fpga-image-id description name source-region client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-copy-fpga-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CopyFpgaImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CopyFpgaImageResult" common-lisp:nil)))
 (common-lisp:export 'copy-fpga-image))
(common-lisp:progn
 (common-lisp:defun copy-image (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-token description encrypted kms-key-id name source-image-id source-region dry-run)
   (common-lisp:declare (common-lisp:ignorable client-token description encrypted kms-key-id name source-image-id source-region dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-copy-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params (common-lisp:append `(("Action" ,@"CopyImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CopyImageResult" common-lisp:nil)))
 (common-lisp:export 'copy-image))
(common-lisp:progn
 (common-lisp:defun copy-snapshot
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description destination-region encrypted kms-key-id presigned-url source-region source-snapshot-id tag-specifications dry-run)
   (common-lisp:declare (common-lisp:ignorable description destination-region encrypted kms-key-id presigned-url source-region source-snapshot-id tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-copy-snapshot-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CopySnapshot") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CopySnapshotResult" common-lisp:nil)))
 (common-lisp:export 'copy-snapshot))
(common-lisp:progn
 (common-lisp:defun create-capacity-reservation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token instance-type instance-platform availability-zone availability-zone-id tenancy instance-count ebs-optimized ephemeral-storage end-date end-date-type
                     instance-match-criteria tag-specifications dry-run)
   (common-lisp:declare
    (common-lisp:ignorable client-token instance-type instance-platform availability-zone availability-zone-id tenancy instance-count ebs-optimized ephemeral-storage end-date end-date-type instance-match-criteria
     tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-capacity-reservation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateCapacityReservation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateCapacityReservationResult" common-lisp:nil)))
 (common-lisp:export 'create-capacity-reservation))
(common-lisp:progn
 (common-lisp:defun create-client-vpn-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-cidr-block server-certificate-arn authentication-options connection-log-options dns-servers transport-protocol vpn-port description split-tunnel dry-run client-token
                     tag-specifications security-group-ids vpc-id)
   (common-lisp:declare
    (common-lisp:ignorable client-cidr-block server-certificate-arn authentication-options connection-log-options dns-servers transport-protocol vpn-port description split-tunnel dry-run client-token tag-specifications
     security-group-ids vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-client-vpn-endpoint-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateClientVpnEndpoint") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateClientVpnEndpointResult" common-lisp:nil)))
 (common-lisp:export 'create-client-vpn-endpoint))
(common-lisp:progn
 (common-lisp:defun create-client-vpn-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id destination-cidr-block target-vpc-subnet-id description client-token dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id destination-cidr-block target-vpc-subnet-id description client-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-client-vpn-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateClientVpnRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateClientVpnRouteResult" common-lisp:nil)))
 (common-lisp:export 'create-client-vpn-route))
(common-lisp:progn
 (common-lisp:defun create-customer-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key bgp-asn public-ip certificate-arn type device-name dry-run)
   (common-lisp:declare (common-lisp:ignorable bgp-asn public-ip certificate-arn type device-name dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-customer-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateCustomerGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateCustomerGatewayResult" common-lisp:nil)))
 (common-lisp:export 'create-customer-gateway))
(common-lisp:progn
 (common-lisp:defun create-default-subnet (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key availability-zone dry-run)
   (common-lisp:declare (common-lisp:ignorable availability-zone dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-default-subnet-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateDefaultSubnet") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateDefaultSubnetResult" common-lisp:nil)))
 (common-lisp:export 'create-default-subnet))
(common-lisp:progn
 (common-lisp:defun create-default-vpc (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-default-vpc-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateDefaultVpc") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateDefaultVpcResult" common-lisp:nil)))
 (common-lisp:export 'create-default-vpc))
(common-lisp:progn
 (common-lisp:defun create-dhcp-options (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dhcp-configurations dry-run)
   (common-lisp:declare (common-lisp:ignorable dhcp-configurations dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-dhcp-options-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateDhcpOptions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateDhcpOptionsResult" common-lisp:nil)))
 (common-lisp:export 'create-dhcp-options))
(common-lisp:progn
 (common-lisp:defun create-egress-only-internet-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-token dry-run vpc-id)
   (common-lisp:declare (common-lisp:ignorable client-token dry-run vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-egress-only-internet-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateEgressOnlyInternetGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateEgressOnlyInternetGatewayResult" common-lisp:nil)))
 (common-lisp:export 'create-egress-only-internet-gateway))
(common-lisp:progn
 (common-lisp:defun create-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dry-run client-token spot-options on-demand-options excess-capacity-termination-policy launch-template-configs target-capacity-specification terminate-instances-with-expiration type
                     valid-from valid-until replace-unhealthy-instances tag-specifications)
   (common-lisp:declare
    (common-lisp:ignorable dry-run client-token spot-options on-demand-options excess-capacity-termination-policy launch-template-configs target-capacity-specification terminate-instances-with-expiration type valid-from
     valid-until replace-unhealthy-instances tag-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-fleet-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateFleet") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateFleetResult" common-lisp:nil)))
 (common-lisp:export 'create-fleet))
(common-lisp:progn
 (common-lisp:defun create-flow-logs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dry-run client-token deliver-logs-permission-arn log-group-name resource-ids resource-type traffic-type log-destination-type log-destination log-format tag-specifications
                     max-aggregation-interval)
   (common-lisp:declare
    (common-lisp:ignorable dry-run client-token deliver-logs-permission-arn log-group-name resource-ids resource-type traffic-type log-destination-type log-destination log-format tag-specifications
     max-aggregation-interval))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-flow-logs-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateFlowLogs") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateFlowLogsResult" common-lisp:nil)))
 (common-lisp:export 'create-flow-logs))
(common-lisp:progn
 (common-lisp:defun create-fpga-image (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run input-storage-location logs-storage-location description name client-token tag-specifications)
   (common-lisp:declare (common-lisp:ignorable dry-run input-storage-location logs-storage-location description name client-token tag-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-fpga-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateFpgaImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateFpgaImageResult" common-lisp:nil)))
 (common-lisp:export 'create-fpga-image))
(common-lisp:progn
 (common-lisp:defun create-image (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key block-device-mappings description dry-run instance-id name no-reboot)
   (common-lisp:declare (common-lisp:ignorable block-device-mappings description dry-run instance-id name no-reboot))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateImageResult" common-lisp:nil)))
 (common-lisp:export 'create-image))
(common-lisp:progn
 (common-lisp:defun create-instance-export-task (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description export-to-s3task instance-id target-environment)
   (common-lisp:declare (common-lisp:ignorable description export-to-s3task instance-id target-environment))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-instance-export-task-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateInstanceExportTask") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateInstanceExportTaskResult" common-lisp:nil)))
 (common-lisp:export 'create-instance-export-task))
(common-lisp:progn
 (common-lisp:defun create-internet-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-internet-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateInternetGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateInternetGatewayResult" common-lisp:nil)))
 (common-lisp:export 'create-internet-gateway))
(common-lisp:progn
 (common-lisp:defun create-key-pair (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key key-name dry-run)
   (common-lisp:declare (common-lisp:ignorable key-name dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-key-pair-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateKeyPair") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "KeyPair" common-lisp:nil)))
 (common-lisp:export 'create-key-pair))
(common-lisp:progn
 (common-lisp:defun create-launch-template (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run client-token launch-template-name version-description launch-template-data tag-specifications)
   (common-lisp:declare (common-lisp:ignorable dry-run client-token launch-template-name version-description launch-template-data tag-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-launch-template-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateLaunchTemplate") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateLaunchTemplateResult" common-lisp:nil)))
 (common-lisp:export 'create-launch-template))
(common-lisp:progn
 (common-lisp:defun create-launch-template-version
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run client-token launch-template-id launch-template-name source-version version-description launch-template-data)
   (common-lisp:declare (common-lisp:ignorable dry-run client-token launch-template-id launch-template-name source-version version-description launch-template-data))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-launch-template-version-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateLaunchTemplateVersion") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateLaunchTemplateVersionResult" common-lisp:nil)))
 (common-lisp:export 'create-launch-template-version))
(common-lisp:progn
 (common-lisp:defun create-local-gateway-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key destination-cidr-block local-gateway-route-table-id local-gateway-virtual-interface-group-id dry-run)
   (common-lisp:declare (common-lisp:ignorable destination-cidr-block local-gateway-route-table-id local-gateway-virtual-interface-group-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-local-gateway-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateLocalGatewayRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateLocalGatewayRouteResult" common-lisp:nil)))
 (common-lisp:export 'create-local-gateway-route))
(common-lisp:progn
 (common-lisp:defun create-local-gateway-route-table-vpc-association (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-route-table-id vpc-id dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-route-table-id vpc-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-local-gateway-route-table-vpc-association-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateLocalGatewayRouteTableVpcAssociation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateLocalGatewayRouteTableVpcAssociationResult" common-lisp:nil)))
 (common-lisp:export 'create-local-gateway-route-table-vpc-association))
(common-lisp:progn
 (common-lisp:defun create-nat-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key allocation-id client-token dry-run subnet-id tag-specifications)
   (common-lisp:declare (common-lisp:ignorable allocation-id client-token dry-run subnet-id tag-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-nat-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateNatGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateNatGatewayResult" common-lisp:nil)))
 (common-lisp:export 'create-nat-gateway))
(common-lisp:progn
 (common-lisp:defun create-network-acl (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-network-acl-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateNetworkAcl") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateNetworkAclResult" common-lisp:nil)))
 (common-lisp:export 'create-network-acl))
(common-lisp:progn
 (common-lisp:defun create-network-acl-entry
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cidr-block dry-run egress icmp-type-code ipv6cidr-block network-acl-id port-range protocol rule-action rule-number)
   (common-lisp:declare (common-lisp:ignorable cidr-block dry-run egress icmp-type-code ipv6cidr-block network-acl-id port-range protocol rule-action rule-number))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-network-acl-entry-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateNetworkAclEntry") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-network-acl-entry))
(common-lisp:progn
 (common-lisp:defun create-network-interface
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description dry-run groups ipv6address-count ipv6addresses private-ip-address private-ip-addresses secondary-private-ip-address-count interface-type subnet-id)
   (common-lisp:declare (common-lisp:ignorable description dry-run groups ipv6address-count ipv6addresses private-ip-address private-ip-addresses secondary-private-ip-address-count interface-type subnet-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-network-interface-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateNetworkInterface") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateNetworkInterfaceResult" common-lisp:nil)))
 (common-lisp:export 'create-network-interface))
(common-lisp:progn
 (common-lisp:defun create-network-interface-permission (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key network-interface-id aws-account-id aws-service permission dry-run)
   (common-lisp:declare (common-lisp:ignorable network-interface-id aws-account-id aws-service permission dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-network-interface-permission-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateNetworkInterfacePermission") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateNetworkInterfacePermissionResult" common-lisp:nil)))
 (common-lisp:export 'create-network-interface-permission))
(common-lisp:progn
 (common-lisp:defun create-placement-group (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run group-name strategy partition-count)
   (common-lisp:declare (common-lisp:ignorable dry-run group-name strategy partition-count))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-placement-group-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreatePlacementGroup") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-placement-group))
(common-lisp:progn
 (common-lisp:defun create-reserved-instances-listing (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-token instance-count price-schedules reserved-instances-id)
   (common-lisp:declare (common-lisp:ignorable client-token instance-count price-schedules reserved-instances-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-reserved-instances-listing-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateReservedInstancesListing") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateReservedInstancesListingResult" common-lisp:nil)))
 (common-lisp:export 'create-reserved-instances-listing))
(common-lisp:progn
 (common-lisp:defun create-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-cidr-block destination-ipv6cidr-block dry-run egress-only-internet-gateway-id gateway-id instance-id nat-gateway-id transit-gateway-id local-gateway-id network-interface-id
                     route-table-id vpc-peering-connection-id)
   (common-lisp:declare
    (common-lisp:ignorable destination-cidr-block destination-ipv6cidr-block dry-run egress-only-internet-gateway-id gateway-id instance-id nat-gateway-id transit-gateway-id local-gateway-id network-interface-id
     route-table-id vpc-peering-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateRouteResult" common-lisp:nil)))
 (common-lisp:export 'create-route))
(common-lisp:progn
 (common-lisp:defun create-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateRouteTableResult" common-lisp:nil)))
 (common-lisp:export 'create-route-table))
(common-lisp:progn
 (common-lisp:defun create-security-group (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description group-name vpc-id dry-run)
   (common-lisp:declare (common-lisp:ignorable description group-name vpc-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-security-group-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateSecurityGroup") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateSecurityGroupResult" common-lisp:nil)))
 (common-lisp:export 'create-security-group))
(common-lisp:progn
 (common-lisp:defun create-snapshot (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description volume-id tag-specifications dry-run)
   (common-lisp:declare (common-lisp:ignorable description volume-id tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-snapshot-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateSnapshot") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "Snapshot" common-lisp:nil)))
 (common-lisp:export 'create-snapshot))
(common-lisp:progn
 (common-lisp:defun create-snapshots (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description instance-specification tag-specifications dry-run copy-tags-from-source)
   (common-lisp:declare (common-lisp:ignorable description instance-specification tag-specifications dry-run copy-tags-from-source))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-snapshots-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateSnapshots") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateSnapshotsResult" common-lisp:nil)))
 (common-lisp:export 'create-snapshots))
(common-lisp:progn
 (common-lisp:defun create-spot-datafeed-subscription (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key bucket dry-run prefix)
   (common-lisp:declare (common-lisp:ignorable bucket dry-run prefix))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-spot-datafeed-subscription-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateSpotDatafeedSubscription") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateSpotDatafeedSubscriptionResult" common-lisp:nil)))
 (common-lisp:export 'create-spot-datafeed-subscription))
(common-lisp:progn
 (common-lisp:defun create-subnet (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key availability-zone availability-zone-id cidr-block ipv6cidr-block outpost-arn vpc-id dry-run)
   (common-lisp:declare (common-lisp:ignorable availability-zone availability-zone-id cidr-block ipv6cidr-block outpost-arn vpc-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-subnet-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateSubnet") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateSubnetResult" common-lisp:nil)))
 (common-lisp:export 'create-subnet))
(common-lisp:progn
 (common-lisp:defun create-tags (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run resources tags)
   (common-lisp:declare (common-lisp:ignorable dry-run resources tags))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-tags-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params (common-lisp:append `(("Action" ,@"CreateTags") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-tags))
(common-lisp:progn
 (common-lisp:defun create-traffic-mirror-filter (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description tag-specifications dry-run client-token)
   (common-lisp:declare (common-lisp:ignorable description tag-specifications dry-run client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-traffic-mirror-filter-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTrafficMirrorFilter") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTrafficMirrorFilterResult" common-lisp:nil)))
 (common-lisp:export 'create-traffic-mirror-filter))
(common-lisp:progn
 (common-lisp:defun create-traffic-mirror-filter-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key traffic-mirror-filter-id traffic-direction rule-number rule-action destination-port-range source-port-range protocol destination-cidr-block source-cidr-block description dry-run
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable traffic-mirror-filter-id traffic-direction rule-number rule-action destination-port-range source-port-range protocol destination-cidr-block source-cidr-block description dry-run client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-traffic-mirror-filter-rule-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTrafficMirrorFilterRule") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTrafficMirrorFilterRuleResult" common-lisp:nil)))
 (common-lisp:export 'create-traffic-mirror-filter-rule))
(common-lisp:progn
 (common-lisp:defun create-traffic-mirror-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key network-interface-id traffic-mirror-target-id traffic-mirror-filter-id packet-length session-number virtual-network-id description tag-specifications dry-run client-token)
   (common-lisp:declare (common-lisp:ignorable network-interface-id traffic-mirror-target-id traffic-mirror-filter-id packet-length session-number virtual-network-id description tag-specifications dry-run client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-traffic-mirror-session-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTrafficMirrorSession") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTrafficMirrorSessionResult" common-lisp:nil)))
 (common-lisp:export 'create-traffic-mirror-session))
(common-lisp:progn
 (common-lisp:defun create-traffic-mirror-target (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key network-interface-id network-load-balancer-arn description tag-specifications dry-run client-token)
   (common-lisp:declare (common-lisp:ignorable network-interface-id network-load-balancer-arn description tag-specifications dry-run client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-traffic-mirror-target-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTrafficMirrorTarget") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTrafficMirrorTargetResult" common-lisp:nil)))
 (common-lisp:export 'create-traffic-mirror-target))
(common-lisp:progn
 (common-lisp:defun create-transit-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description options tag-specifications dry-run)
   (common-lisp:declare (common-lisp:ignorable description options tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-transit-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTransitGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTransitGatewayResult" common-lisp:nil)))
 (common-lisp:export 'create-transit-gateway))
(common-lisp:progn
 (common-lisp:defun create-transit-gateway-multicast-domain (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-id tag-specifications dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-id tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-transit-gateway-multicast-domain-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTransitGatewayMulticastDomain") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTransitGatewayMulticastDomainResult" common-lisp:nil)))
 (common-lisp:export 'create-transit-gateway-multicast-domain))
(common-lisp:progn
 (common-lisp:defun create-transit-gateway-peering-attachment
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-id peer-transit-gateway-id peer-account-id peer-region tag-specifications dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-id peer-transit-gateway-id peer-account-id peer-region tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-transit-gateway-peering-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTransitGatewayPeeringAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTransitGatewayPeeringAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'create-transit-gateway-peering-attachment))
(common-lisp:progn
 (common-lisp:defun create-transit-gateway-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key destination-cidr-block transit-gateway-route-table-id transit-gateway-attachment-id blackhole dry-run)
   (common-lisp:declare (common-lisp:ignorable destination-cidr-block transit-gateway-route-table-id transit-gateway-attachment-id blackhole dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-transit-gateway-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTransitGatewayRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTransitGatewayRouteResult" common-lisp:nil)))
 (common-lisp:export 'create-transit-gateway-route))
(common-lisp:progn
 (common-lisp:defun create-transit-gateway-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-id tag-specifications dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-id tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-transit-gateway-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTransitGatewayRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTransitGatewayRouteTableResult" common-lisp:nil)))
 (common-lisp:export 'create-transit-gateway-route-table))
(common-lisp:progn
 (common-lisp:defun create-transit-gateway-vpc-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-id vpc-id subnet-ids options tag-specifications dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-id vpc-id subnet-ids options tag-specifications dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-transit-gateway-vpc-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateTransitGatewayVpcAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateTransitGatewayVpcAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'create-transit-gateway-vpc-attachment))
(common-lisp:progn
 (common-lisp:defun create-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key availability-zone encrypted iops kms-key-id outpost-arn size snapshot-id volume-type dry-run tag-specifications multi-attach-enabled)
   (common-lisp:declare (common-lisp:ignorable availability-zone encrypted iops kms-key-id outpost-arn size snapshot-id volume-type dry-run tag-specifications multi-attach-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-volume-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVolume") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "Volume" common-lisp:nil)))
 (common-lisp:export 'create-volume))
(common-lisp:progn
 (common-lisp:defun create-vpc
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cidr-block amazon-provided-ipv6cidr-block ipv6pool ipv6cidr-block dry-run instance-tenancy ipv6cidr-block-network-border-group)
   (common-lisp:declare (common-lisp:ignorable cidr-block amazon-provided-ipv6cidr-block ipv6pool ipv6cidr-block dry-run instance-tenancy ipv6cidr-block-network-border-group))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpc-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params (common-lisp:append `(("Action" ,@"CreateVpc") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateVpcResult" common-lisp:nil)))
 (common-lisp:export 'create-vpc))
(common-lisp:progn
 (common-lisp:defun create-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dry-run vpc-endpoint-type vpc-id service-name policy-document route-table-ids subnet-ids security-group-ids client-token private-dns-enabled tag-specifications)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-endpoint-type vpc-id service-name policy-document route-table-ids subnet-ids security-group-ids client-token private-dns-enabled tag-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpc-endpoint-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVpcEndpoint") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateVpcEndpointResult" common-lisp:nil)))
 (common-lisp:export 'create-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun create-vpc-endpoint-connection-notification
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-id vpc-endpoint-id connection-notification-arn connection-events client-token)
   (common-lisp:declare (common-lisp:ignorable dry-run service-id vpc-endpoint-id connection-notification-arn connection-events client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpc-endpoint-connection-notification-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVpcEndpointConnectionNotification") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateVpcEndpointConnectionNotificationResult" common-lisp:nil)))
 (common-lisp:export 'create-vpc-endpoint-connection-notification))
(common-lisp:progn
 (common-lisp:defun create-vpc-endpoint-service-configuration
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run acceptance-required private-dns-name network-load-balancer-arns client-token tag-specifications)
   (common-lisp:declare (common-lisp:ignorable dry-run acceptance-required private-dns-name network-load-balancer-arns client-token tag-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpc-endpoint-service-configuration-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVpcEndpointServiceConfiguration") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateVpcEndpointServiceConfigurationResult" common-lisp:nil)))
 (common-lisp:export 'create-vpc-endpoint-service-configuration))
(common-lisp:progn
 (common-lisp:defun create-vpc-peering-connection (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run peer-owner-id peer-vpc-id vpc-id peer-region)
   (common-lisp:declare (common-lisp:ignorable dry-run peer-owner-id peer-vpc-id vpc-id peer-region))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpc-peering-connection-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVpcPeeringConnection") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateVpcPeeringConnectionResult" common-lisp:nil)))
 (common-lisp:export 'create-vpc-peering-connection))
(common-lisp:progn
 (common-lisp:defun create-vpn-connection (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key customer-gateway-id type vpn-gateway-id transit-gateway-id dry-run options)
   (common-lisp:declare (common-lisp:ignorable customer-gateway-id type vpn-gateway-id transit-gateway-id dry-run options))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpn-connection-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVpnConnection") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateVpnConnectionResult" common-lisp:nil)))
 (common-lisp:export 'create-vpn-connection))
(common-lisp:progn
 (common-lisp:defun create-vpn-connection-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key destination-cidr-block vpn-connection-id)
   (common-lisp:declare (common-lisp:ignorable destination-cidr-block vpn-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpn-connection-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVpnConnectionRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-vpn-connection-route))
(common-lisp:progn
 (common-lisp:defun create-vpn-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key availability-zone type amazon-side-asn dry-run)
   (common-lisp:declare (common-lisp:ignorable availability-zone type amazon-side-asn dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-create-vpn-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"CreateVpnGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "CreateVpnGatewayResult" common-lisp:nil)))
 (common-lisp:export 'create-vpn-gateway))
(common-lisp:progn
 (common-lisp:defun delete-client-vpn-endpoint (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-client-vpn-endpoint-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteClientVpnEndpoint") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteClientVpnEndpointResult" common-lisp:nil)))
 (common-lisp:export 'delete-client-vpn-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-client-vpn-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id target-vpc-subnet-id destination-cidr-block dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id target-vpc-subnet-id destination-cidr-block dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-client-vpn-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteClientVpnRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteClientVpnRouteResult" common-lisp:nil)))
 (common-lisp:export 'delete-client-vpn-route))
(common-lisp:progn
 (common-lisp:defun delete-customer-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key customer-gateway-id dry-run)
   (common-lisp:declare (common-lisp:ignorable customer-gateway-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-customer-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteCustomerGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-customer-gateway))
(common-lisp:progn
 (common-lisp:defun delete-dhcp-options (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dhcp-options-id dry-run)
   (common-lisp:declare (common-lisp:ignorable dhcp-options-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-dhcp-options-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteDhcpOptions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-dhcp-options))
(common-lisp:progn
 (common-lisp:defun delete-egress-only-internet-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run egress-only-internet-gateway-id)
   (common-lisp:declare (common-lisp:ignorable dry-run egress-only-internet-gateway-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-egress-only-internet-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteEgressOnlyInternetGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteEgressOnlyInternetGatewayResult" common-lisp:nil)))
 (common-lisp:export 'delete-egress-only-internet-gateway))
(common-lisp:progn
 (common-lisp:defun delete-fleets (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run fleet-ids terminate-instances)
   (common-lisp:declare (common-lisp:ignorable dry-run fleet-ids terminate-instances))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-fleets-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteFleets") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteFleetsResult" common-lisp:nil)))
 (common-lisp:export 'delete-fleets))
(common-lisp:progn
 (common-lisp:defun delete-flow-logs (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run flow-log-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run flow-log-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-flow-logs-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteFlowLogs") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteFlowLogsResult" common-lisp:nil)))
 (common-lisp:export 'delete-flow-logs))
(common-lisp:progn
 (common-lisp:defun delete-fpga-image (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run fpga-image-id)
   (common-lisp:declare (common-lisp:ignorable dry-run fpga-image-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-fpga-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteFpgaImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteFpgaImageResult" common-lisp:nil)))
 (common-lisp:export 'delete-fpga-image))
(common-lisp:progn
 (common-lisp:defun delete-internet-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run internet-gateway-id)
   (common-lisp:declare (common-lisp:ignorable dry-run internet-gateway-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-internet-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteInternetGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-internet-gateway))
(common-lisp:progn
 (common-lisp:defun delete-key-pair (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key key-name dry-run)
   (common-lisp:declare (common-lisp:ignorable key-name dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-key-pair-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteKeyPair") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-key-pair))
(common-lisp:progn
 (common-lisp:defun delete-launch-template (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run launch-template-id launch-template-name)
   (common-lisp:declare (common-lisp:ignorable dry-run launch-template-id launch-template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-launch-template-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteLaunchTemplate") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteLaunchTemplateResult" common-lisp:nil)))
 (common-lisp:export 'delete-launch-template))
(common-lisp:progn
 (common-lisp:defun delete-launch-template-versions (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run launch-template-id launch-template-name versions)
   (common-lisp:declare (common-lisp:ignorable dry-run launch-template-id launch-template-name versions))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-launch-template-versions-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteLaunchTemplateVersions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteLaunchTemplateVersionsResult" common-lisp:nil)))
 (common-lisp:export 'delete-launch-template-versions))
(common-lisp:progn
 (common-lisp:defun delete-local-gateway-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key destination-cidr-block local-gateway-route-table-id dry-run)
   (common-lisp:declare (common-lisp:ignorable destination-cidr-block local-gateway-route-table-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-local-gateway-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteLocalGatewayRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteLocalGatewayRouteResult" common-lisp:nil)))
 (common-lisp:export 'delete-local-gateway-route))
(common-lisp:progn
 (common-lisp:defun delete-local-gateway-route-table-vpc-association (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-route-table-vpc-association-id dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-route-table-vpc-association-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-local-gateway-route-table-vpc-association-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteLocalGatewayRouteTableVpcAssociation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteLocalGatewayRouteTableVpcAssociationResult" common-lisp:nil)))
 (common-lisp:export 'delete-local-gateway-route-table-vpc-association))
(common-lisp:progn
 (common-lisp:defun delete-nat-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run nat-gateway-id)
   (common-lisp:declare (common-lisp:ignorable dry-run nat-gateway-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-nat-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteNatGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteNatGatewayResult" common-lisp:nil)))
 (common-lisp:export 'delete-nat-gateway))
(common-lisp:progn
 (common-lisp:defun delete-network-acl (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run network-acl-id)
   (common-lisp:declare (common-lisp:ignorable dry-run network-acl-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-network-acl-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteNetworkAcl") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-network-acl))
(common-lisp:progn
 (common-lisp:defun delete-network-acl-entry (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run egress network-acl-id rule-number)
   (common-lisp:declare (common-lisp:ignorable dry-run egress network-acl-id rule-number))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-network-acl-entry-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteNetworkAclEntry") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-network-acl-entry))
(common-lisp:progn
 (common-lisp:defun delete-network-interface (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run network-interface-id)
   (common-lisp:declare (common-lisp:ignorable dry-run network-interface-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-network-interface-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteNetworkInterface") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-network-interface))
(common-lisp:progn
 (common-lisp:defun delete-network-interface-permission (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key network-interface-permission-id force dry-run)
   (common-lisp:declare (common-lisp:ignorable network-interface-permission-id force dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-network-interface-permission-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteNetworkInterfacePermission") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteNetworkInterfacePermissionResult" common-lisp:nil)))
 (common-lisp:export 'delete-network-interface-permission))
(common-lisp:progn
 (common-lisp:defun delete-placement-group (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run group-name)
   (common-lisp:declare (common-lisp:ignorable dry-run group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-placement-group-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeletePlacementGroup") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-placement-group))
(common-lisp:progn
 (common-lisp:defun delete-queued-reserved-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run reserved-instances-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run reserved-instances-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-queued-reserved-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteQueuedReservedInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteQueuedReservedInstancesResult" common-lisp:nil)))
 (common-lisp:export 'delete-queued-reserved-instances))
(common-lisp:progn
 (common-lisp:defun delete-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key destination-cidr-block destination-ipv6cidr-block dry-run route-table-id)
   (common-lisp:declare (common-lisp:ignorable destination-cidr-block destination-ipv6cidr-block dry-run route-table-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-route))
(common-lisp:progn
 (common-lisp:defun delete-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run route-table-id)
   (common-lisp:declare (common-lisp:ignorable dry-run route-table-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-route-table))
(common-lisp:progn
 (common-lisp:defun delete-security-group (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key group-id group-name dry-run)
   (common-lisp:declare (common-lisp:ignorable group-id group-name dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-security-group-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteSecurityGroup") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-security-group))
(common-lisp:progn
 (common-lisp:defun delete-snapshot (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key snapshot-id dry-run)
   (common-lisp:declare (common-lisp:ignorable snapshot-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-snapshot-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteSnapshot") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-snapshot))
(common-lisp:progn
 (common-lisp:defun delete-spot-datafeed-subscription (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-spot-datafeed-subscription-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteSpotDatafeedSubscription") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-spot-datafeed-subscription))
(common-lisp:progn
 (common-lisp:defun delete-subnet (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key subnet-id dry-run)
   (common-lisp:declare (common-lisp:ignorable subnet-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-subnet-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteSubnet") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-subnet))
(common-lisp:progn
 (common-lisp:defun delete-tags (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run resources tags)
   (common-lisp:declare (common-lisp:ignorable dry-run resources tags))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-tags-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params (common-lisp:append `(("Action" ,@"DeleteTags") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun delete-traffic-mirror-filter (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-filter-id dry-run)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-filter-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-traffic-mirror-filter-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTrafficMirrorFilter") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTrafficMirrorFilterResult" common-lisp:nil)))
 (common-lisp:export 'delete-traffic-mirror-filter))
(common-lisp:progn
 (common-lisp:defun delete-traffic-mirror-filter-rule (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-filter-rule-id dry-run)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-filter-rule-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-traffic-mirror-filter-rule-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTrafficMirrorFilterRule") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTrafficMirrorFilterRuleResult" common-lisp:nil)))
 (common-lisp:export 'delete-traffic-mirror-filter-rule))
(common-lisp:progn
 (common-lisp:defun delete-traffic-mirror-session (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-session-id dry-run)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-session-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-traffic-mirror-session-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTrafficMirrorSession") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTrafficMirrorSessionResult" common-lisp:nil)))
 (common-lisp:export 'delete-traffic-mirror-session))
(common-lisp:progn
 (common-lisp:defun delete-traffic-mirror-target (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-target-id dry-run)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-target-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-traffic-mirror-target-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTrafficMirrorTarget") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTrafficMirrorTargetResult" common-lisp:nil)))
 (common-lisp:export 'delete-traffic-mirror-target))
(common-lisp:progn
 (common-lisp:defun delete-transit-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-transit-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTransitGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTransitGatewayResult" common-lisp:nil)))
 (common-lisp:export 'delete-transit-gateway))
(common-lisp:progn
 (common-lisp:defun delete-transit-gateway-multicast-domain (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-transit-gateway-multicast-domain-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTransitGatewayMulticastDomain") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTransitGatewayMulticastDomainResult" common-lisp:nil)))
 (common-lisp:export 'delete-transit-gateway-multicast-domain))
(common-lisp:progn
 (common-lisp:defun delete-transit-gateway-peering-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-transit-gateway-peering-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTransitGatewayPeeringAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTransitGatewayPeeringAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'delete-transit-gateway-peering-attachment))
(common-lisp:progn
 (common-lisp:defun delete-transit-gateway-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id destination-cidr-block dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id destination-cidr-block dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-transit-gateway-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTransitGatewayRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTransitGatewayRouteResult" common-lisp:nil)))
 (common-lisp:export 'delete-transit-gateway-route))
(common-lisp:progn
 (common-lisp:defun delete-transit-gateway-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-transit-gateway-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTransitGatewayRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTransitGatewayRouteTableResult" common-lisp:nil)))
 (common-lisp:export 'delete-transit-gateway-route-table))
(common-lisp:progn
 (common-lisp:defun delete-transit-gateway-vpc-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-transit-gateway-vpc-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteTransitGatewayVpcAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteTransitGatewayVpcAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'delete-transit-gateway-vpc-attachment))
(common-lisp:progn
 (common-lisp:defun delete-volume (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key volume-id dry-run)
   (common-lisp:declare (common-lisp:ignorable volume-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-volume-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVolume") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-volume))
(common-lisp:progn
 (common-lisp:defun delete-vpc (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpc-id dry-run)
   (common-lisp:declare (common-lisp:ignorable vpc-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpc-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params (common-lisp:append `(("Action" ,@"DeleteVpc") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-vpc))
(common-lisp:progn
 (common-lisp:defun delete-vpc-endpoint-connection-notifications (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run connection-notification-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run connection-notification-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpc-endpoint-connection-notifications-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVpcEndpointConnectionNotifications") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteVpcEndpointConnectionNotificationsResult" common-lisp:nil)))
 (common-lisp:export 'delete-vpc-endpoint-connection-notifications))
(common-lisp:progn
 (common-lisp:defun delete-vpc-endpoint-service-configurations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run service-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpc-endpoint-service-configurations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVpcEndpointServiceConfigurations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteVpcEndpointServiceConfigurationsResult" common-lisp:nil)))
 (common-lisp:export 'delete-vpc-endpoint-service-configurations))
(common-lisp:progn
 (common-lisp:defun delete-vpc-endpoints (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-endpoint-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-endpoint-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpc-endpoints-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVpcEndpoints") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteVpcEndpointsResult" common-lisp:nil)))
 (common-lisp:export 'delete-vpc-endpoints))
(common-lisp:progn
 (common-lisp:defun delete-vpc-peering-connection (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-peering-connection-id)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-peering-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpc-peering-connection-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVpcPeeringConnection") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeleteVpcPeeringConnectionResult" common-lisp:nil)))
 (common-lisp:export 'delete-vpc-peering-connection))
(common-lisp:progn
 (common-lisp:defun delete-vpn-connection (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpn-connection-id dry-run)
   (common-lisp:declare (common-lisp:ignorable vpn-connection-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpn-connection-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVpnConnection") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-vpn-connection))
(common-lisp:progn
 (common-lisp:defun delete-vpn-connection-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key destination-cidr-block vpn-connection-id)
   (common-lisp:declare (common-lisp:ignorable destination-cidr-block vpn-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpn-connection-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVpnConnectionRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-vpn-connection-route))
(common-lisp:progn
 (common-lisp:defun delete-vpn-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpn-gateway-id dry-run)
   (common-lisp:declare (common-lisp:ignorable vpn-gateway-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-delete-vpn-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeleteVpnGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-vpn-gateway))
(common-lisp:progn
 (common-lisp:defun deprovision-byoip-cidr (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cidr dry-run)
   (common-lisp:declare (common-lisp:ignorable cidr dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-deprovision-byoip-cidr-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeprovisionByoipCidr") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeprovisionByoipCidrResult" common-lisp:nil)))
 (common-lisp:export 'deprovision-byoip-cidr))
(common-lisp:progn
 (common-lisp:defun deregister-image (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key image-id dry-run)
   (common-lisp:declare (common-lisp:ignorable image-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-deregister-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeregisterImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-image))
(common-lisp:progn
 (common-lisp:defun deregister-transit-gateway-multicast-group-members
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-deregister-transit-gateway-multicast-group-members-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeregisterTransitGatewayMulticastGroupMembers") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeregisterTransitGatewayMulticastGroupMembersResult" common-lisp:nil)))
 (common-lisp:export 'deregister-transit-gateway-multicast-group-members))
(common-lisp:progn
 (common-lisp:defun deregister-transit-gateway-multicast-group-sources
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-deregister-transit-gateway-multicast-group-sources-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DeregisterTransitGatewayMulticastGroupSources") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DeregisterTransitGatewayMulticastGroupSourcesResult" common-lisp:nil)))
 (common-lisp:export 'deregister-transit-gateway-multicast-group-sources))
(common-lisp:progn
 (common-lisp:defun describe-account-attributes (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute-names dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute-names dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-account-attributes-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeAccountAttributes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeAccountAttributesResult" common-lisp:nil)))
 (common-lisp:export 'describe-account-attributes))
(common-lisp:progn
 (common-lisp:defun describe-addresses (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters public-ips allocation-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable filters public-ips allocation-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-addresses-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeAddresses") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeAddressesResult" common-lisp:nil)))
 (common-lisp:export 'describe-addresses))
(common-lisp:progn
 (common-lisp:defun describe-aggregate-id-format (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-aggregate-id-format-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeAggregateIdFormat") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeAggregateIdFormatResult" common-lisp:nil)))
 (common-lisp:export 'describe-aggregate-id-format))
(common-lisp:progn
 (common-lisp:defun describe-availability-zones (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters zone-names zone-ids all-availability-zones dry-run)
   (common-lisp:declare (common-lisp:ignorable filters zone-names zone-ids all-availability-zones dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-availability-zones-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeAvailabilityZones") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeAvailabilityZonesResult" common-lisp:nil)))
 (common-lisp:export 'describe-availability-zones))
(common-lisp:progn
 (common-lisp:defun describe-bundle-tasks (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key bundle-ids filters dry-run)
   (common-lisp:declare (common-lisp:ignorable bundle-ids filters dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-bundle-tasks-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeBundleTasks") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeBundleTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-bundle-tasks))
(common-lisp:progn
 (common-lisp:defun describe-byoip-cidrs (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-byoip-cidrs-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeByoipCidrs") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeByoipCidrsResult" common-lisp:nil)))
 (common-lisp:export 'describe-byoip-cidrs))
(common-lisp:progn
 (common-lisp:defun describe-capacity-reservations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key capacity-reservation-ids next-token max-results filters dry-run)
   (common-lisp:declare (common-lisp:ignorable capacity-reservation-ids next-token max-results filters dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-capacity-reservations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeCapacityReservations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeCapacityReservationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-capacity-reservations))
(common-lisp:progn
 (common-lisp:defun describe-classic-link-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run instance-ids max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters dry-run instance-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-classic-link-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeClassicLinkInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeClassicLinkInstancesResult" common-lisp:nil)))
 (common-lisp:export 'describe-classic-link-instances))
(common-lisp:progn
 (common-lisp:defun describe-client-vpn-authorization-rules (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id dry-run next-token filters max-results)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id dry-run next-token filters max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-client-vpn-authorization-rules-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeClientVpnAuthorizationRules") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeClientVpnAuthorizationRulesResult" common-lisp:nil)))
 (common-lisp:export 'describe-client-vpn-authorization-rules))
(common-lisp:progn
 (common-lisp:defun describe-client-vpn-connections (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id filters next-token max-results dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id filters next-token max-results dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-client-vpn-connections-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeClientVpnConnections") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeClientVpnConnectionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-client-vpn-connections))
(common-lisp:progn
 (common-lisp:defun describe-client-vpn-endpoints (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-ids max-results next-token filters dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-ids max-results next-token filters dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-client-vpn-endpoints-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeClientVpnEndpoints") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeClientVpnEndpointsResult" common-lisp:nil)))
 (common-lisp:export 'describe-client-vpn-endpoints))
(common-lisp:progn
 (common-lisp:defun describe-client-vpn-routes (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-client-vpn-routes-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeClientVpnRoutes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeClientVpnRoutesResult" common-lisp:nil)))
 (common-lisp:export 'describe-client-vpn-routes))
(common-lisp:progn
 (common-lisp:defun describe-client-vpn-target-networks (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id association-ids max-results next-token filters dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id association-ids max-results next-token filters dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-client-vpn-target-networks-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeClientVpnTargetNetworks") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeClientVpnTargetNetworksResult" common-lisp:nil)))
 (common-lisp:export 'describe-client-vpn-target-networks))
(common-lisp:progn
 (common-lisp:defun describe-coip-pools (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key pool-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable pool-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-coip-pools-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeCoipPools") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeCoipPoolsResult" common-lisp:nil)))
 (common-lisp:export 'describe-coip-pools))
(common-lisp:progn
 (common-lisp:defun describe-conversion-tasks (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key conversion-task-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable conversion-task-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-conversion-tasks-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeConversionTasks") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeConversionTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-conversion-tasks))
(common-lisp:progn
 (common-lisp:defun describe-customer-gateways (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key customer-gateway-ids filters dry-run)
   (common-lisp:declare (common-lisp:ignorable customer-gateway-ids filters dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-customer-gateways-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeCustomerGateways") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeCustomerGatewaysResult" common-lisp:nil)))
 (common-lisp:export 'describe-customer-gateways))
(common-lisp:progn
 (common-lisp:defun describe-dhcp-options (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dhcp-options-ids filters dry-run next-token max-results)
   (common-lisp:declare (common-lisp:ignorable dhcp-options-ids filters dry-run next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-dhcp-options-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeDhcpOptions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeDhcpOptionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-dhcp-options))
(common-lisp:progn
 (common-lisp:defun describe-egress-only-internet-gateways (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run egress-only-internet-gateway-ids max-results next-token filters)
   (common-lisp:declare (common-lisp:ignorable dry-run egress-only-internet-gateway-ids max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-egress-only-internet-gateways-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeEgressOnlyInternetGateways") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeEgressOnlyInternetGatewaysResult" common-lisp:nil)))
 (common-lisp:export 'describe-egress-only-internet-gateways))
(common-lisp:progn
 (common-lisp:defun describe-elastic-gpus (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key elastic-gpu-ids dry-run filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable elastic-gpu-ids dry-run filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-elastic-gpus-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeElasticGpus") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeElasticGpusResult" common-lisp:nil)))
 (common-lisp:export 'describe-elastic-gpus))
(common-lisp:progn
 (common-lisp:defun describe-export-image-tasks (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters export-image-task-ids max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filters export-image-task-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-export-image-tasks-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeExportImageTasks") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeExportImageTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-export-image-tasks))
(common-lisp:progn
 (common-lisp:defun describe-export-tasks (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key export-task-ids filters)
   (common-lisp:declare (common-lisp:ignorable export-task-ids filters))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-export-tasks-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeExportTasks") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeExportTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-export-tasks))
(common-lisp:progn
 (common-lisp:defun describe-fast-snapshot-restores (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-fast-snapshot-restores-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeFastSnapshotRestores") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeFastSnapshotRestoresResult" common-lisp:nil)))
 (common-lisp:export 'describe-fast-snapshot-restores))
(common-lisp:progn
 (common-lisp:defun describe-fleet-history (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run event-type max-results next-token fleet-id start-time)
   (common-lisp:declare (common-lisp:ignorable dry-run event-type max-results next-token fleet-id start-time))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-fleet-history-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeFleetHistory") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeFleetHistoryResult" common-lisp:nil)))
 (common-lisp:export 'describe-fleet-history))
(common-lisp:progn
 (common-lisp:defun describe-fleet-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run max-results next-token fleet-id filters)
   (common-lisp:declare (common-lisp:ignorable dry-run max-results next-token fleet-id filters))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-fleet-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeFleetInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeFleetInstancesResult" common-lisp:nil)))
 (common-lisp:export 'describe-fleet-instances))
(common-lisp:progn
 (common-lisp:defun describe-fleets (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run max-results next-token fleet-ids filters)
   (common-lisp:declare (common-lisp:ignorable dry-run max-results next-token fleet-ids filters))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-fleets-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeFleets") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeFleetsResult" common-lisp:nil)))
 (common-lisp:export 'describe-fleets))
(common-lisp:progn
 (common-lisp:defun describe-flow-logs (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filter flow-log-ids max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filter flow-log-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-flow-logs-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeFlowLogs") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeFlowLogsResult" common-lisp:nil)))
 (common-lisp:export 'describe-flow-logs))
(common-lisp:progn
 (common-lisp:defun describe-fpga-image-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run fpga-image-id attribute)
   (common-lisp:declare (common-lisp:ignorable dry-run fpga-image-id attribute))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-fpga-image-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeFpgaImageAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeFpgaImageAttributeResult" common-lisp:nil)))
 (common-lisp:export 'describe-fpga-image-attribute))
(common-lisp:progn
 (common-lisp:defun describe-fpga-images (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run fpga-image-ids owners filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable dry-run fpga-image-ids owners filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-fpga-images-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeFpgaImages") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeFpgaImagesResult" common-lisp:nil)))
 (common-lisp:export 'describe-fpga-images))
(common-lisp:progn
 (common-lisp:defun describe-host-reservation-offerings (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filter max-duration max-results min-duration next-token offering-id)
   (common-lisp:declare (common-lisp:ignorable filter max-duration max-results min-duration next-token offering-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-host-reservation-offerings-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeHostReservationOfferings") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeHostReservationOfferingsResult" common-lisp:nil)))
 (common-lisp:export 'describe-host-reservation-offerings))
(common-lisp:progn
 (common-lisp:defun describe-host-reservations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filter host-reservation-id-set max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filter host-reservation-id-set max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-host-reservations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeHostReservations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeHostReservationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-host-reservations))
(common-lisp:progn
 (common-lisp:defun describe-hosts (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filter host-ids max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filter host-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-hosts-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeHosts") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeHostsResult" common-lisp:nil)))
 (common-lisp:export 'describe-hosts))
(common-lisp:progn
 (common-lisp:defun describe-iam-instance-profile-associations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-ids filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable association-ids filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-iam-instance-profile-associations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeIamInstanceProfileAssociations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeIamInstanceProfileAssociationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-iam-instance-profile-associations))
(common-lisp:progn
 (common-lisp:defun describe-id-format (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key resource)
   (common-lisp:declare (common-lisp:ignorable resource))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-id-format-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeIdFormat") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeIdFormatResult" common-lisp:nil)))
 (common-lisp:export 'describe-id-format))
(common-lisp:progn
 (common-lisp:defun describe-identity-id-format (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key principal-arn resource)
   (common-lisp:declare (common-lisp:ignorable principal-arn resource))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-identity-id-format-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeIdentityIdFormat") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeIdentityIdFormatResult" common-lisp:nil)))
 (common-lisp:export 'describe-identity-id-format))
(common-lisp:progn
 (common-lisp:defun describe-image-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute image-id dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute image-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-image-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeImageAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ImageAttribute" common-lisp:nil)))
 (common-lisp:export 'describe-image-attribute))
(common-lisp:progn
 (common-lisp:defun describe-images (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key executable-users filters image-ids owners dry-run)
   (common-lisp:declare (common-lisp:ignorable executable-users filters image-ids owners dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-images-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeImages") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeImagesResult" common-lisp:nil)))
 (common-lisp:export 'describe-images))
(common-lisp:progn
 (common-lisp:defun describe-import-image-tasks (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters import-task-ids max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filters import-task-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-import-image-tasks-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeImportImageTasks") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeImportImageTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-import-image-tasks))
(common-lisp:progn
 (common-lisp:defun describe-import-snapshot-tasks (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters import-task-ids max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filters import-task-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-import-snapshot-tasks-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeImportSnapshotTasks") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeImportSnapshotTasksResult" common-lisp:nil)))
 (common-lisp:export 'describe-import-snapshot-tasks))
(common-lisp:progn
 (common-lisp:defun describe-instance-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute dry-run instance-id)
   (common-lisp:declare (common-lisp:ignorable attribute dry-run instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-instance-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeInstanceAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "InstanceAttribute" common-lisp:nil)))
 (common-lisp:export 'describe-instance-attribute))
(common-lisp:progn
 (common-lisp:defun describe-instance-credit-specifications (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters instance-ids max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filters instance-ids max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-instance-credit-specifications-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeInstanceCreditSpecifications") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeInstanceCreditSpecificationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-credit-specifications))
(common-lisp:progn
 (common-lisp:defun describe-instance-status (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters instance-ids max-results next-token dry-run include-all-instances)
   (common-lisp:declare (common-lisp:ignorable filters instance-ids max-results next-token dry-run include-all-instances))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-instance-status-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeInstanceStatus") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeInstanceStatusResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-status))
(common-lisp:progn
 (common-lisp:defun describe-instance-type-offerings (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run location-type filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run location-type filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-instance-type-offerings-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeInstanceTypeOfferings") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeInstanceTypeOfferingsResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-type-offerings))
(common-lisp:progn
 (common-lisp:defun describe-instance-types (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run instance-types filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run instance-types filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-instance-types-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeInstanceTypes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeInstanceTypesResult" common-lisp:nil)))
 (common-lisp:export 'describe-instance-types))
(common-lisp:progn
 (common-lisp:defun describe-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters instance-ids dry-run max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters instance-ids dry-run max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeInstancesResult" common-lisp:nil)))
 (common-lisp:export 'describe-instances))
(common-lisp:progn
 (common-lisp:defun describe-internet-gateways (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run internet-gateway-ids next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters dry-run internet-gateway-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-internet-gateways-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeInternetGateways") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeInternetGatewaysResult" common-lisp:nil)))
 (common-lisp:export 'describe-internet-gateways))
(common-lisp:progn
 (common-lisp:defun describe-ipv6pools (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key pool-ids next-token max-results dry-run filters)
   (common-lisp:declare (common-lisp:ignorable pool-ids next-token max-results dry-run filters))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-ipv6pools-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeIpv6Pools") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeIpv6PoolsResult" common-lisp:nil)))
 (common-lisp:export 'describe-ipv6pools))
(common-lisp:progn
 (common-lisp:defun describe-key-pairs (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters key-names key-pair-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable filters key-names key-pair-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-key-pairs-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeKeyPairs") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeKeyPairsResult" common-lisp:nil)))
 (common-lisp:export 'describe-key-pairs))
(common-lisp:progn
 (common-lisp:defun describe-launch-template-versions
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run launch-template-id launch-template-name versions min-version max-version next-token max-results filters)
   (common-lisp:declare (common-lisp:ignorable dry-run launch-template-id launch-template-name versions min-version max-version next-token max-results filters))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-launch-template-versions-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLaunchTemplateVersions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLaunchTemplateVersionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-launch-template-versions))
(common-lisp:progn
 (common-lisp:defun describe-launch-templates (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run launch-template-ids launch-template-names filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable dry-run launch-template-ids launch-template-names filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-launch-templates-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLaunchTemplates") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLaunchTemplatesResult" common-lisp:nil)))
 (common-lisp:export 'describe-launch-templates))
(common-lisp:progn
 (common-lisp:defun describe-local-gateway-route-table-virtual-interface-group-associations
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-route-table-virtual-interface-group-association-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-route-table-virtual-interface-group-association-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-local-gateway-route-table-virtual-interface-group-associations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations") ("Version" ,@"2016-11-15"))
                                                   (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-local-gateway-route-table-virtual-interface-group-associations))
(common-lisp:progn
 (common-lisp:defun describe-local-gateway-route-table-vpc-associations
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-route-table-vpc-association-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-route-table-vpc-association-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-local-gateway-route-table-vpc-associations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLocalGatewayRouteTableVpcAssociations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLocalGatewayRouteTableVpcAssociationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-local-gateway-route-table-vpc-associations))
(common-lisp:progn
 (common-lisp:defun describe-local-gateway-route-tables (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-route-table-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-route-table-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-local-gateway-route-tables-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLocalGatewayRouteTables") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLocalGatewayRouteTablesResult" common-lisp:nil)))
 (common-lisp:export 'describe-local-gateway-route-tables))
(common-lisp:progn
 (common-lisp:defun describe-local-gateway-virtual-interface-groups (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-virtual-interface-group-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-virtual-interface-group-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-local-gateway-virtual-interface-groups-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLocalGatewayVirtualInterfaceGroups") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLocalGatewayVirtualInterfaceGroupsResult" common-lisp:nil)))
 (common-lisp:export 'describe-local-gateway-virtual-interface-groups))
(common-lisp:progn
 (common-lisp:defun describe-local-gateway-virtual-interfaces (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-virtual-interface-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-virtual-interface-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-local-gateway-virtual-interfaces-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLocalGatewayVirtualInterfaces") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLocalGatewayVirtualInterfacesResult" common-lisp:nil)))
 (common-lisp:export 'describe-local-gateway-virtual-interfaces))
(common-lisp:progn
 (common-lisp:defun describe-local-gateways (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-local-gateways-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeLocalGateways") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeLocalGatewaysResult" common-lisp:nil)))
 (common-lisp:export 'describe-local-gateways))
(common-lisp:progn
 (common-lisp:defun describe-moving-addresses (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run max-results next-token public-ips)
   (common-lisp:declare (common-lisp:ignorable filters dry-run max-results next-token public-ips))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-moving-addresses-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeMovingAddresses") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeMovingAddressesResult" common-lisp:nil)))
 (common-lisp:export 'describe-moving-addresses))
(common-lisp:progn
 (common-lisp:defun describe-nat-gateways (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filter max-results nat-gateway-ids next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filter max-results nat-gateway-ids next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-nat-gateways-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeNatGateways") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeNatGatewaysResult" common-lisp:nil)))
 (common-lisp:export 'describe-nat-gateways))
(common-lisp:progn
 (common-lisp:defun describe-network-acls (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run network-acl-ids next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters dry-run network-acl-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-network-acls-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeNetworkAcls") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeNetworkAclsResult" common-lisp:nil)))
 (common-lisp:export 'describe-network-acls))
(common-lisp:progn
 (common-lisp:defun describe-network-interface-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute dry-run network-interface-id)
   (common-lisp:declare (common-lisp:ignorable attribute dry-run network-interface-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-network-interface-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeNetworkInterfaceAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeNetworkInterfaceAttributeResult" common-lisp:nil)))
 (common-lisp:export 'describe-network-interface-attribute))
(common-lisp:progn
 (common-lisp:defun describe-network-interface-permissions (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key network-interface-permission-ids filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable network-interface-permission-ids filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-network-interface-permissions-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeNetworkInterfacePermissions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeNetworkInterfacePermissionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-network-interface-permissions))
(common-lisp:progn
 (common-lisp:defun describe-network-interfaces (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run network-interface-ids next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters dry-run network-interface-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-network-interfaces-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeNetworkInterfaces") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeNetworkInterfacesResult" common-lisp:nil)))
 (common-lisp:export 'describe-network-interfaces))
(common-lisp:progn
 (common-lisp:defun describe-placement-groups (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run group-names group-ids)
   (common-lisp:declare (common-lisp:ignorable filters dry-run group-names group-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-placement-groups-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribePlacementGroups") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribePlacementGroupsResult" common-lisp:nil)))
 (common-lisp:export 'describe-placement-groups))
(common-lisp:progn
 (common-lisp:defun describe-prefix-lists (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters max-results next-token prefix-list-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run filters max-results next-token prefix-list-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-prefix-lists-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribePrefixLists") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribePrefixListsResult" common-lisp:nil)))
 (common-lisp:export 'describe-prefix-lists))
(common-lisp:progn
 (common-lisp:defun describe-principal-id-format (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run resources max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run resources max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-principal-id-format-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribePrincipalIdFormat") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribePrincipalIdFormatResult" common-lisp:nil)))
 (common-lisp:export 'describe-principal-id-format))
(common-lisp:progn
 (common-lisp:defun describe-public-ipv4pools (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key pool-ids next-token max-results filters)
   (common-lisp:declare (common-lisp:ignorable pool-ids next-token max-results filters))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-public-ipv4pools-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribePublicIpv4Pools") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribePublicIpv4PoolsResult" common-lisp:nil)))
 (common-lisp:export 'describe-public-ipv4pools))
(common-lisp:progn
 (common-lisp:defun describe-regions (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters region-names dry-run all-regions)
   (common-lisp:declare (common-lisp:ignorable filters region-names dry-run all-regions))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-regions-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeRegions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeRegionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-regions))
(common-lisp:progn
 (common-lisp:defun describe-reserved-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters offering-class reserved-instances-ids dry-run offering-type)
   (common-lisp:declare (common-lisp:ignorable filters offering-class reserved-instances-ids dry-run offering-type))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-reserved-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeReservedInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeReservedInstancesResult" common-lisp:nil)))
 (common-lisp:export 'describe-reserved-instances))
(common-lisp:progn
 (common-lisp:defun describe-reserved-instances-listings (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters reserved-instances-id reserved-instances-listing-id)
   (common-lisp:declare (common-lisp:ignorable filters reserved-instances-id reserved-instances-listing-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-reserved-instances-listings-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeReservedInstancesListings") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeReservedInstancesListingsResult" common-lisp:nil)))
 (common-lisp:export 'describe-reserved-instances-listings))
(common-lisp:progn
 (common-lisp:defun describe-reserved-instances-modifications (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters reserved-instances-modification-ids next-token)
   (common-lisp:declare (common-lisp:ignorable filters reserved-instances-modification-ids next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-reserved-instances-modifications-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeReservedInstancesModifications") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeReservedInstancesModificationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-reserved-instances-modifications))
(common-lisp:progn
 (common-lisp:defun describe-reserved-instances-offerings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key availability-zone filters include-marketplace instance-type max-duration max-instance-count min-duration offering-class product-description reserved-instances-offering-ids dry-run
                     instance-tenancy max-results next-token offering-type)
   (common-lisp:declare
    (common-lisp:ignorable availability-zone filters include-marketplace instance-type max-duration max-instance-count min-duration offering-class product-description reserved-instances-offering-ids dry-run
     instance-tenancy max-results next-token offering-type))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-reserved-instances-offerings-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeReservedInstancesOfferings") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeReservedInstancesOfferingsResult" common-lisp:nil)))
 (common-lisp:export 'describe-reserved-instances-offerings))
(common-lisp:progn
 (common-lisp:defun describe-route-tables (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run route-table-ids next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters dry-run route-table-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-route-tables-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeRouteTables") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeRouteTablesResult" common-lisp:nil)))
 (common-lisp:export 'describe-route-tables))
(common-lisp:progn
 (common-lisp:defun describe-scheduled-instance-availability
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters first-slot-start-time-range max-results max-slot-duration-in-hours min-slot-duration-in-hours next-token recurrence)
   (common-lisp:declare (common-lisp:ignorable dry-run filters first-slot-start-time-range max-results max-slot-duration-in-hours min-slot-duration-in-hours next-token recurrence))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-scheduled-instance-availability-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeScheduledInstanceAvailability") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeScheduledInstanceAvailabilityResult" common-lisp:nil)))
 (common-lisp:export 'describe-scheduled-instance-availability))
(common-lisp:progn
 (common-lisp:defun describe-scheduled-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters max-results next-token scheduled-instance-ids slot-start-time-range)
   (common-lisp:declare (common-lisp:ignorable dry-run filters max-results next-token scheduled-instance-ids slot-start-time-range))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-scheduled-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeScheduledInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeScheduledInstancesResult" common-lisp:nil)))
 (common-lisp:export 'describe-scheduled-instances))
(common-lisp:progn
 (common-lisp:defun describe-security-group-references (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run group-id)
   (common-lisp:declare (common-lisp:ignorable dry-run group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-security-group-references-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSecurityGroupReferences") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSecurityGroupReferencesResult" common-lisp:nil)))
 (common-lisp:export 'describe-security-group-references))
(common-lisp:progn
 (common-lisp:defun describe-security-groups (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters group-ids group-names dry-run next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters group-ids group-names dry-run next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-security-groups-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSecurityGroups") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSecurityGroupsResult" common-lisp:nil)))
 (common-lisp:export 'describe-security-groups))
(common-lisp:progn
 (common-lisp:defun describe-snapshot-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute snapshot-id dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute snapshot-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-snapshot-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSnapshotAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSnapshotAttributeResult" common-lisp:nil)))
 (common-lisp:export 'describe-snapshot-attribute))
(common-lisp:progn
 (common-lisp:defun describe-snapshots (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters max-results next-token owner-ids restorable-by-user-ids snapshot-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token owner-ids restorable-by-user-ids snapshot-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-snapshots-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSnapshots") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSnapshotsResult" common-lisp:nil)))
 (common-lisp:export 'describe-snapshots))
(common-lisp:progn
 (common-lisp:defun describe-spot-datafeed-subscription (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-spot-datafeed-subscription-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSpotDatafeedSubscription") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSpotDatafeedSubscriptionResult" common-lisp:nil)))
 (common-lisp:export 'describe-spot-datafeed-subscription))
(common-lisp:progn
 (common-lisp:defun describe-spot-fleet-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run max-results next-token spot-fleet-request-id)
   (common-lisp:declare (common-lisp:ignorable dry-run max-results next-token spot-fleet-request-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-spot-fleet-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSpotFleetInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSpotFleetInstancesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-spot-fleet-instances))
(common-lisp:progn
 (common-lisp:defun describe-spot-fleet-request-history (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run event-type max-results next-token spot-fleet-request-id start-time)
   (common-lisp:declare (common-lisp:ignorable dry-run event-type max-results next-token spot-fleet-request-id start-time))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-spot-fleet-request-history-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSpotFleetRequestHistory") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSpotFleetRequestHistoryResponse" common-lisp:nil)))
 (common-lisp:export 'describe-spot-fleet-request-history))
(common-lisp:progn
 (common-lisp:defun describe-spot-fleet-requests (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run max-results next-token spot-fleet-request-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run max-results next-token spot-fleet-request-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-spot-fleet-requests-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSpotFleetRequests") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSpotFleetRequestsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-spot-fleet-requests))
(common-lisp:progn
 (common-lisp:defun describe-spot-instance-requests (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run spot-instance-request-ids next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters dry-run spot-instance-request-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-spot-instance-requests-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSpotInstanceRequests") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSpotInstanceRequestsResult" common-lisp:nil)))
 (common-lisp:export 'describe-spot-instance-requests))
(common-lisp:progn
 (common-lisp:defun describe-spot-price-history
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters availability-zone dry-run end-time instance-types max-results next-token product-descriptions start-time)
   (common-lisp:declare (common-lisp:ignorable filters availability-zone dry-run end-time instance-types max-results next-token product-descriptions start-time))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-spot-price-history-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSpotPriceHistory") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSpotPriceHistoryResult" common-lisp:nil)))
 (common-lisp:export 'describe-spot-price-history))
(common-lisp:progn
 (common-lisp:defun describe-stale-security-groups (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run max-results next-token vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run max-results next-token vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-stale-security-groups-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeStaleSecurityGroups") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeStaleSecurityGroupsResult" common-lisp:nil)))
 (common-lisp:export 'describe-stale-security-groups))
(common-lisp:progn
 (common-lisp:defun describe-subnets (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters subnet-ids dry-run next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters subnet-ids dry-run next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-subnets-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeSubnets") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeSubnetsResult" common-lisp:nil)))
 (common-lisp:export 'describe-subnets))
(common-lisp:progn
 (common-lisp:defun describe-tags (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-tags-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTags") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTagsResult" common-lisp:nil)))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun describe-traffic-mirror-filters (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-filter-ids dry-run filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-filter-ids dry-run filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-traffic-mirror-filters-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTrafficMirrorFilters") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTrafficMirrorFiltersResult" common-lisp:nil)))
 (common-lisp:export 'describe-traffic-mirror-filters))
(common-lisp:progn
 (common-lisp:defun describe-traffic-mirror-sessions (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-session-ids dry-run filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-session-ids dry-run filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-traffic-mirror-sessions-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTrafficMirrorSessions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTrafficMirrorSessionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-traffic-mirror-sessions))
(common-lisp:progn
 (common-lisp:defun describe-traffic-mirror-targets (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-target-ids dry-run filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-target-ids dry-run filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-traffic-mirror-targets-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTrafficMirrorTargets") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTrafficMirrorTargetsResult" common-lisp:nil)))
 (common-lisp:export 'describe-traffic-mirror-targets))
(common-lisp:progn
 (common-lisp:defun describe-transit-gateway-attachments (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-transit-gateway-attachments-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTransitGatewayAttachments") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTransitGatewayAttachmentsResult" common-lisp:nil)))
 (common-lisp:export 'describe-transit-gateway-attachments))
(common-lisp:progn
 (common-lisp:defun describe-transit-gateway-multicast-domains (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-transit-gateway-multicast-domains-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTransitGatewayMulticastDomains") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTransitGatewayMulticastDomainsResult" common-lisp:nil)))
 (common-lisp:export 'describe-transit-gateway-multicast-domains))
(common-lisp:progn
 (common-lisp:defun describe-transit-gateway-peering-attachments (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-transit-gateway-peering-attachments-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTransitGatewayPeeringAttachments") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTransitGatewayPeeringAttachmentsResult" common-lisp:nil)))
 (common-lisp:export 'describe-transit-gateway-peering-attachments))
(common-lisp:progn
 (common-lisp:defun describe-transit-gateway-route-tables (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-transit-gateway-route-tables-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTransitGatewayRouteTables") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTransitGatewayRouteTablesResult" common-lisp:nil)))
 (common-lisp:export 'describe-transit-gateway-route-tables))
(common-lisp:progn
 (common-lisp:defun describe-transit-gateway-vpc-attachments (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-transit-gateway-vpc-attachments-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTransitGatewayVpcAttachments") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTransitGatewayVpcAttachmentsResult" common-lisp:nil)))
 (common-lisp:export 'describe-transit-gateway-vpc-attachments))
(common-lisp:progn
 (common-lisp:defun describe-transit-gateways (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-ids filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-ids filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-transit-gateways-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeTransitGateways") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeTransitGatewaysResult" common-lisp:nil)))
 (common-lisp:export 'describe-transit-gateways))
(common-lisp:progn
 (common-lisp:defun describe-volume-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute volume-id dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute volume-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-volume-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVolumeAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVolumeAttributeResult" common-lisp:nil)))
 (common-lisp:export 'describe-volume-attribute))
(common-lisp:progn
 (common-lisp:defun describe-volume-status (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters max-results next-token volume-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token volume-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-volume-status-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVolumeStatus") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVolumeStatusResult" common-lisp:nil)))
 (common-lisp:export 'describe-volume-status))
(common-lisp:progn
 (common-lisp:defun describe-volumes (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters volume-ids dry-run max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters volume-ids dry-run max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-volumes-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVolumes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVolumesResult" common-lisp:nil)))
 (common-lisp:export 'describe-volumes))
(common-lisp:progn
 (common-lisp:defun describe-volumes-modifications (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run volume-ids filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable dry-run volume-ids filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-volumes-modifications-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVolumesModifications") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVolumesModificationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-volumes-modifications))
(common-lisp:progn
 (common-lisp:defun describe-vpc-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute vpc-id dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute vpc-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcAttributeResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-attribute))
(common-lisp:progn
 (common-lisp:defun describe-vpc-classic-link (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run vpc-ids)
   (common-lisp:declare (common-lisp:ignorable filters dry-run vpc-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-classic-link-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcClassicLink") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcClassicLinkResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-classic-link))
(common-lisp:progn
 (common-lisp:defun describe-vpc-classic-link-dns-support (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key max-results next-token vpc-ids)
   (common-lisp:declare (common-lisp:ignorable max-results next-token vpc-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-classic-link-dns-support-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcClassicLinkDnsSupport") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcClassicLinkDnsSupportResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-classic-link-dns-support))
(common-lisp:progn
 (common-lisp:defun describe-vpc-endpoint-connection-notifications (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run connection-notification-id filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run connection-notification-id filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-endpoint-connection-notifications-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcEndpointConnectionNotifications") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcEndpointConnectionNotificationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-endpoint-connection-notifications))
(common-lisp:progn
 (common-lisp:defun describe-vpc-endpoint-connections (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-endpoint-connections-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcEndpointConnections") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcEndpointConnectionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-endpoint-connections))
(common-lisp:progn
 (common-lisp:defun describe-vpc-endpoint-service-configurations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-ids filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run service-ids filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-endpoint-service-configurations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcEndpointServiceConfigurations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcEndpointServiceConfigurationsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-endpoint-service-configurations))
(common-lisp:progn
 (common-lisp:defun describe-vpc-endpoint-service-permissions (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-id filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run service-id filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-endpoint-service-permissions-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcEndpointServicePermissions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcEndpointServicePermissionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-endpoint-service-permissions))
(common-lisp:progn
 (common-lisp:defun describe-vpc-endpoint-services (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-names filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run service-names filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-endpoint-services-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcEndpointServices") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcEndpointServicesResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-endpoint-services))
(common-lisp:progn
 (common-lisp:defun describe-vpc-endpoints (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-endpoint-ids filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-endpoint-ids filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-endpoints-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcEndpoints") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcEndpointsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-endpoints))
(common-lisp:progn
 (common-lisp:defun describe-vpc-peering-connections (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters dry-run vpc-peering-connection-ids next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters dry-run vpc-peering-connection-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpc-peering-connections-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcPeeringConnections") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcPeeringConnectionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpc-peering-connections))
(common-lisp:progn
 (common-lisp:defun describe-vpcs (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters vpc-ids dry-run next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters vpc-ids dry-run next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpcs-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpcs") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpcsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpcs))
(common-lisp:progn
 (common-lisp:defun describe-vpn-connections (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters vpn-connection-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable filters vpn-connection-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpn-connections-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpnConnections") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpnConnectionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpn-connections))
(common-lisp:progn
 (common-lisp:defun describe-vpn-gateways (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key filters vpn-gateway-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable filters vpn-gateway-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-describe-vpn-gateways-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DescribeVpnGateways") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DescribeVpnGatewaysResult" common-lisp:nil)))
 (common-lisp:export 'describe-vpn-gateways))
(common-lisp:progn
 (common-lisp:defun detach-classic-link-vpc (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run instance-id vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run instance-id vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-detach-classic-link-vpc-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DetachClassicLinkVpc") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DetachClassicLinkVpcResult" common-lisp:nil)))
 (common-lisp:export 'detach-classic-link-vpc))
(common-lisp:progn
 (common-lisp:defun detach-internet-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run internet-gateway-id vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run internet-gateway-id vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-detach-internet-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DetachInternetGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'detach-internet-gateway))
(common-lisp:progn
 (common-lisp:defun detach-network-interface (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attachment-id dry-run force)
   (common-lisp:declare (common-lisp:ignorable attachment-id dry-run force))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-detach-network-interface-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DetachNetworkInterface") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'detach-network-interface))
(common-lisp:progn
 (common-lisp:defun detach-volume (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key device force instance-id volume-id dry-run)
   (common-lisp:declare (common-lisp:ignorable device force instance-id volume-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-detach-volume-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DetachVolume") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "VolumeAttachment" common-lisp:nil)))
 (common-lisp:export 'detach-volume))
(common-lisp:progn
 (common-lisp:defun detach-vpn-gateway (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpc-id vpn-gateway-id dry-run)
   (common-lisp:declare (common-lisp:ignorable vpc-id vpn-gateway-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-detach-vpn-gateway-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DetachVpnGateway") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'detach-vpn-gateway))
(common-lisp:progn
 (common-lisp:defun disable-ebs-encryption-by-default (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disable-ebs-encryption-by-default-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisableEbsEncryptionByDefault") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisableEbsEncryptionByDefaultResult" common-lisp:nil)))
 (common-lisp:export 'disable-ebs-encryption-by-default))
(common-lisp:progn
 (common-lisp:defun disable-fast-snapshot-restores (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key availability-zones source-snapshot-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable availability-zones source-snapshot-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disable-fast-snapshot-restores-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisableFastSnapshotRestores") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisableFastSnapshotRestoresResult" common-lisp:nil)))
 (common-lisp:export 'disable-fast-snapshot-restores))
(common-lisp:progn
 (common-lisp:defun disable-transit-gateway-route-table-propagation (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disable-transit-gateway-route-table-propagation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisableTransitGatewayRouteTablePropagation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisableTransitGatewayRouteTablePropagationResult" common-lisp:nil)))
 (common-lisp:export 'disable-transit-gateway-route-table-propagation))
(common-lisp:progn
 (common-lisp:defun disable-vgw-route-propagation (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key gateway-id route-table-id dry-run)
   (common-lisp:declare (common-lisp:ignorable gateway-id route-table-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disable-vgw-route-propagation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisableVgwRoutePropagation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disable-vgw-route-propagation))
(common-lisp:progn
 (common-lisp:defun disable-vpc-classic-link (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disable-vpc-classic-link-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisableVpcClassicLink") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisableVpcClassicLinkResult" common-lisp:nil)))
 (common-lisp:export 'disable-vpc-classic-link))
(common-lisp:progn
 (common-lisp:defun disable-vpc-classic-link-dns-support (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpc-id)
   (common-lisp:declare (common-lisp:ignorable vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disable-vpc-classic-link-dns-support-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisableVpcClassicLinkDnsSupport") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisableVpcClassicLinkDnsSupportResult" common-lisp:nil)))
 (common-lisp:export 'disable-vpc-classic-link-dns-support))
(common-lisp:progn
 (common-lisp:defun disassociate-address (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-id public-ip dry-run)
   (common-lisp:declare (common-lisp:ignorable association-id public-ip dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-address-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateAddress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disassociate-address))
(common-lisp:progn
 (common-lisp:defun disassociate-client-vpn-target-network (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id association-id dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id association-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-client-vpn-target-network-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateClientVpnTargetNetwork") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisassociateClientVpnTargetNetworkResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-client-vpn-target-network))
(common-lisp:progn
 (common-lisp:defun disassociate-iam-instance-profile (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-id)
   (common-lisp:declare (common-lisp:ignorable association-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-iam-instance-profile-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateIamInstanceProfile") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisassociateIamInstanceProfileResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-iam-instance-profile))
(common-lisp:progn
 (common-lisp:defun disassociate-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-id dry-run)
   (common-lisp:declare (common-lisp:ignorable association-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disassociate-route-table))
(common-lisp:progn
 (common-lisp:defun disassociate-subnet-cidr-block (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-id)
   (common-lisp:declare (common-lisp:ignorable association-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-subnet-cidr-block-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateSubnetCidrBlock") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisassociateSubnetCidrBlockResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-subnet-cidr-block))
(common-lisp:progn
 (common-lisp:defun disassociate-transit-gateway-multicast-domain (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id transit-gateway-attachment-id subnet-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id transit-gateway-attachment-id subnet-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-transit-gateway-multicast-domain-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateTransitGatewayMulticastDomain") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisassociateTransitGatewayMulticastDomainResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-transit-gateway-multicast-domain))
(common-lisp:progn
 (common-lisp:defun disassociate-transit-gateway-route-table (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-transit-gateway-route-table-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateTransitGatewayRouteTable") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisassociateTransitGatewayRouteTableResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-transit-gateway-route-table))
(common-lisp:progn
 (common-lisp:defun disassociate-vpc-cidr-block (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-id)
   (common-lisp:declare (common-lisp:ignorable association-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-disassociate-vpc-cidr-block-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"DisassociateVpcCidrBlock") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "DisassociateVpcCidrBlockResult" common-lisp:nil)))
 (common-lisp:export 'disassociate-vpc-cidr-block))
(common-lisp:progn
 (common-lisp:defun enable-ebs-encryption-by-default (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-enable-ebs-encryption-by-default-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"EnableEbsEncryptionByDefault") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "EnableEbsEncryptionByDefaultResult" common-lisp:nil)))
 (common-lisp:export 'enable-ebs-encryption-by-default))
(common-lisp:progn
 (common-lisp:defun enable-fast-snapshot-restores (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key availability-zones source-snapshot-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable availability-zones source-snapshot-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-enable-fast-snapshot-restores-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"EnableFastSnapshotRestores") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "EnableFastSnapshotRestoresResult" common-lisp:nil)))
 (common-lisp:export 'enable-fast-snapshot-restores))
(common-lisp:progn
 (common-lisp:defun enable-transit-gateway-route-table-propagation (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-enable-transit-gateway-route-table-propagation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"EnableTransitGatewayRouteTablePropagation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "EnableTransitGatewayRouteTablePropagationResult" common-lisp:nil)))
 (common-lisp:export 'enable-transit-gateway-route-table-propagation))
(common-lisp:progn
 (common-lisp:defun enable-vgw-route-propagation (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key gateway-id route-table-id dry-run)
   (common-lisp:declare (common-lisp:ignorable gateway-id route-table-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-enable-vgw-route-propagation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"EnableVgwRoutePropagation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-vgw-route-propagation))
(common-lisp:progn
 (common-lisp:defun enable-volume-io (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run volume-id)
   (common-lisp:declare (common-lisp:ignorable dry-run volume-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-enable-volume-iorequest aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"EnableVolumeIO") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-volume-io))
(common-lisp:progn
 (common-lisp:defun enable-vpc-classic-link (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-id)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-enable-vpc-classic-link-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"EnableVpcClassicLink") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "EnableVpcClassicLinkResult" common-lisp:nil)))
 (common-lisp:export 'enable-vpc-classic-link))
(common-lisp:progn
 (common-lisp:defun enable-vpc-classic-link-dns-support (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpc-id)
   (common-lisp:declare (common-lisp:ignorable vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-enable-vpc-classic-link-dns-support-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"EnableVpcClassicLinkDnsSupport") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "EnableVpcClassicLinkDnsSupportResult" common-lisp:nil)))
 (common-lisp:export 'enable-vpc-classic-link-dns-support))
(common-lisp:progn
 (common-lisp:defun export-client-vpn-client-certificate-revocation-list (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-export-client-vpn-client-certificate-revocation-list-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ExportClientVpnClientCertificateRevocationList") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ExportClientVpnClientCertificateRevocationListResult" common-lisp:nil)))
 (common-lisp:export 'export-client-vpn-client-certificate-revocation-list))
(common-lisp:progn
 (common-lisp:defun export-client-vpn-client-configuration (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-export-client-vpn-client-configuration-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ExportClientVpnClientConfiguration") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ExportClientVpnClientConfigurationResult" common-lisp:nil)))
 (common-lisp:export 'export-client-vpn-client-configuration))
(common-lisp:progn
 (common-lisp:defun export-image (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-token description disk-image-format dry-run image-id s3export-location role-name)
   (common-lisp:declare (common-lisp:ignorable client-token description disk-image-format dry-run image-id s3export-location role-name))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-export-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ExportImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ExportImageResult" common-lisp:nil)))
 (common-lisp:export 'export-image))
(common-lisp:progn
 (common-lisp:defun export-transit-gateway-routes (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id filters s3bucket dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id filters s3bucket dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-export-transit-gateway-routes-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ExportTransitGatewayRoutes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ExportTransitGatewayRoutesResult" common-lisp:nil)))
 (common-lisp:export 'export-transit-gateway-routes))
(common-lisp:progn
 (common-lisp:defun get-associated-ipv6pool-cidrs (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key pool-id next-token max-results dry-run)
   (common-lisp:declare (common-lisp:ignorable pool-id next-token max-results dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-associated-ipv6pool-cidrs-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetAssociatedIpv6PoolCidrs") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetAssociatedIpv6PoolCidrsResult" common-lisp:nil)))
 (common-lisp:export 'get-associated-ipv6pool-cidrs))
(common-lisp:progn
 (common-lisp:defun get-capacity-reservation-usage (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key capacity-reservation-id next-token max-results dry-run)
   (common-lisp:declare (common-lisp:ignorable capacity-reservation-id next-token max-results dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-capacity-reservation-usage-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetCapacityReservationUsage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetCapacityReservationUsageResult" common-lisp:nil)))
 (common-lisp:export 'get-capacity-reservation-usage))
(common-lisp:progn
 (common-lisp:defun get-coip-pool-usage (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key pool-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable pool-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-coip-pool-usage-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetCoipPoolUsage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetCoipPoolUsageResult" common-lisp:nil)))
 (common-lisp:export 'get-coip-pool-usage))
(common-lisp:progn
 (common-lisp:defun get-console-output (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-id dry-run latest)
   (common-lisp:declare (common-lisp:ignorable instance-id dry-run latest))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-console-output-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetConsoleOutput") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetConsoleOutputResult" common-lisp:nil)))
 (common-lisp:export 'get-console-output))
(common-lisp:progn
 (common-lisp:defun get-console-screenshot (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run instance-id wake-up)
   (common-lisp:declare (common-lisp:ignorable dry-run instance-id wake-up))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-console-screenshot-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetConsoleScreenshot") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetConsoleScreenshotResult" common-lisp:nil)))
 (common-lisp:export 'get-console-screenshot))
(common-lisp:progn
 (common-lisp:defun get-default-credit-specification (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run instance-family)
   (common-lisp:declare (common-lisp:ignorable dry-run instance-family))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-default-credit-specification-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetDefaultCreditSpecification") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetDefaultCreditSpecificationResult" common-lisp:nil)))
 (common-lisp:export 'get-default-credit-specification))
(common-lisp:progn
 (common-lisp:defun get-ebs-default-kms-key-id (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-ebs-default-kms-key-id-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetEbsDefaultKmsKeyId") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetEbsDefaultKmsKeyIdResult" common-lisp:nil)))
 (common-lisp:export 'get-ebs-default-kms-key-id))
(common-lisp:progn
 (common-lisp:defun get-ebs-encryption-by-default (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-ebs-encryption-by-default-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetEbsEncryptionByDefault") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetEbsEncryptionByDefaultResult" common-lisp:nil)))
 (common-lisp:export 'get-ebs-encryption-by-default))
(common-lisp:progn
 (common-lisp:defun get-host-reservation-purchase-preview (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key host-id-set offering-id)
   (common-lisp:declare (common-lisp:ignorable host-id-set offering-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-host-reservation-purchase-preview-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetHostReservationPurchasePreview") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetHostReservationPurchasePreviewResult" common-lisp:nil)))
 (common-lisp:export 'get-host-reservation-purchase-preview))
(common-lisp:progn
 (common-lisp:defun get-launch-template-data (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run instance-id)
   (common-lisp:declare (common-lisp:ignorable dry-run instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-launch-template-data-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetLaunchTemplateData") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetLaunchTemplateDataResult" common-lisp:nil)))
 (common-lisp:export 'get-launch-template-data))
(common-lisp:progn
 (common-lisp:defun get-password-data (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-id dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-password-data-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetPasswordData") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetPasswordDataResult" common-lisp:nil)))
 (common-lisp:export 'get-password-data))
(common-lisp:progn
 (common-lisp:defun get-reserved-instances-exchange-quote (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run reserved-instance-ids target-configurations)
   (common-lisp:declare (common-lisp:ignorable dry-run reserved-instance-ids target-configurations))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-reserved-instances-exchange-quote-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetReservedInstancesExchangeQuote") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetReservedInstancesExchangeQuoteResult" common-lisp:nil)))
 (common-lisp:export 'get-reserved-instances-exchange-quote))
(common-lisp:progn
 (common-lisp:defun get-transit-gateway-attachment-propagations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-transit-gateway-attachment-propagations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetTransitGatewayAttachmentPropagations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetTransitGatewayAttachmentPropagationsResult" common-lisp:nil)))
 (common-lisp:export 'get-transit-gateway-attachment-propagations))
(common-lisp:progn
 (common-lisp:defun get-transit-gateway-multicast-domain-associations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-transit-gateway-multicast-domain-associations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetTransitGatewayMulticastDomainAssociations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetTransitGatewayMulticastDomainAssociationsResult" common-lisp:nil)))
 (common-lisp:export 'get-transit-gateway-multicast-domain-associations))
(common-lisp:progn
 (common-lisp:defun get-transit-gateway-route-table-associations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-transit-gateway-route-table-associations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetTransitGatewayRouteTableAssociations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetTransitGatewayRouteTableAssociationsResult" common-lisp:nil)))
 (common-lisp:export 'get-transit-gateway-route-table-associations))
(common-lisp:progn
 (common-lisp:defun get-transit-gateway-route-table-propagations (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-get-transit-gateway-route-table-propagations-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"GetTransitGatewayRouteTablePropagations") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "GetTransitGatewayRouteTablePropagationsResult" common-lisp:nil)))
 (common-lisp:export 'get-transit-gateway-route-table-propagations))
(common-lisp:progn
 (common-lisp:defun import-client-vpn-client-certificate-revocation-list (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id certificate-revocation-list dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id certificate-revocation-list dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-import-client-vpn-client-certificate-revocation-list-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ImportClientVpnClientCertificateRevocationList") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ImportClientVpnClientCertificateRevocationListResult" common-lisp:nil)))
 (common-lisp:export 'import-client-vpn-client-certificate-revocation-list))
(common-lisp:progn
 (common-lisp:defun import-image
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key architecture client-data client-token description disk-containers dry-run encrypted hypervisor kms-key-id license-type platform role-name license-specifications)
   (common-lisp:declare (common-lisp:ignorable architecture client-data client-token description disk-containers dry-run encrypted hypervisor kms-key-id license-type platform role-name license-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-import-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ImportImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ImportImageResult" common-lisp:nil)))
 (common-lisp:export 'import-image))
(common-lisp:progn
 (common-lisp:defun import-instance (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description disk-images dry-run launch-specification platform)
   (common-lisp:declare (common-lisp:ignorable description disk-images dry-run launch-specification platform))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-import-instance-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ImportInstance") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ImportInstanceResult" common-lisp:nil)))
 (common-lisp:export 'import-instance))
(common-lisp:progn
 (common-lisp:defun import-key-pair (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run key-name public-key-material)
   (common-lisp:declare (common-lisp:ignorable dry-run key-name public-key-material))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-import-key-pair-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ImportKeyPair") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ImportKeyPairResult" common-lisp:nil)))
 (common-lisp:export 'import-key-pair))
(common-lisp:progn
 (common-lisp:defun import-snapshot (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-data client-token description disk-container dry-run encrypted kms-key-id role-name)
   (common-lisp:declare (common-lisp:ignorable client-data client-token description disk-container dry-run encrypted kms-key-id role-name))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-import-snapshot-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ImportSnapshot") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ImportSnapshotResult" common-lisp:nil)))
 (common-lisp:export 'import-snapshot))
(common-lisp:progn
 (common-lisp:defun import-volume (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key availability-zone description dry-run image volume)
   (common-lisp:declare (common-lisp:ignorable availability-zone description dry-run image volume))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-import-volume-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ImportVolume") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ImportVolumeResult" common-lisp:nil)))
 (common-lisp:export 'import-volume))
(common-lisp:progn
 (common-lisp:defun modify-availability-zone-group (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key group-name opt-in-status dry-run)
   (common-lisp:declare (common-lisp:ignorable group-name opt-in-status dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-availability-zone-group-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyAvailabilityZoneGroup") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyAvailabilityZoneGroupResult" common-lisp:nil)))
 (common-lisp:export 'modify-availability-zone-group))
(common-lisp:progn
 (common-lisp:defun modify-capacity-reservation (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key capacity-reservation-id instance-count end-date end-date-type dry-run)
   (common-lisp:declare (common-lisp:ignorable capacity-reservation-id instance-count end-date end-date-type dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-capacity-reservation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyCapacityReservation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyCapacityReservationResult" common-lisp:nil)))
 (common-lisp:export 'modify-capacity-reservation))
(common-lisp:progn
 (common-lisp:defun modify-client-vpn-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-vpn-endpoint-id server-certificate-arn connection-log-options dns-servers vpn-port description split-tunnel dry-run security-group-ids vpc-id)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id server-certificate-arn connection-log-options dns-servers vpn-port description split-tunnel dry-run security-group-ids vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-client-vpn-endpoint-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyClientVpnEndpoint") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyClientVpnEndpointResult" common-lisp:nil)))
 (common-lisp:export 'modify-client-vpn-endpoint))
(common-lisp:progn
 (common-lisp:defun modify-default-credit-specification (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run instance-family cpu-credits)
   (common-lisp:declare (common-lisp:ignorable dry-run instance-family cpu-credits))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-default-credit-specification-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyDefaultCreditSpecification") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyDefaultCreditSpecificationResult" common-lisp:nil)))
 (common-lisp:export 'modify-default-credit-specification))
(common-lisp:progn
 (common-lisp:defun modify-ebs-default-kms-key-id (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key kms-key-id dry-run)
   (common-lisp:declare (common-lisp:ignorable kms-key-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-ebs-default-kms-key-id-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyEbsDefaultKmsKeyId") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyEbsDefaultKmsKeyIdResult" common-lisp:nil)))
 (common-lisp:export 'modify-ebs-default-kms-key-id))
(common-lisp:progn
 (common-lisp:defun modify-fleet (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run excess-capacity-termination-policy fleet-id target-capacity-specification)
   (common-lisp:declare (common-lisp:ignorable dry-run excess-capacity-termination-policy fleet-id target-capacity-specification))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-fleet-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyFleet") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyFleetResult" common-lisp:nil)))
 (common-lisp:export 'modify-fleet))
(common-lisp:progn
 (common-lisp:defun modify-fpga-image-attribute
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run fpga-image-id attribute operation-type user-ids user-groups product-codes load-permission description name)
   (common-lisp:declare (common-lisp:ignorable dry-run fpga-image-id attribute operation-type user-ids user-groups product-codes load-permission description name))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-fpga-image-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyFpgaImageAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyFpgaImageAttributeResult" common-lisp:nil)))
 (common-lisp:export 'modify-fpga-image-attribute))
(common-lisp:progn
 (common-lisp:defun modify-hosts (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key auto-placement host-ids host-recovery instance-type instance-family)
   (common-lisp:declare (common-lisp:ignorable auto-placement host-ids host-recovery instance-type instance-family))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-hosts-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyHosts") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyHostsResult" common-lisp:nil)))
 (common-lisp:export 'modify-hosts))
(common-lisp:progn
 (common-lisp:defun modify-id-format (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key resource use-long-ids)
   (common-lisp:declare (common-lisp:ignorable resource use-long-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-id-format-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyIdFormat") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-id-format))
(common-lisp:progn
 (common-lisp:defun modify-identity-id-format (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key principal-arn resource use-long-ids)
   (common-lisp:declare (common-lisp:ignorable principal-arn resource use-long-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-identity-id-format-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyIdentityIdFormat") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-identity-id-format))
(common-lisp:progn
 (common-lisp:defun modify-image-attribute
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute description image-id launch-permission operation-type product-codes user-groups user-ids value dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute description image-id launch-permission operation-type product-codes user-groups user-ids value dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-image-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyImageAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-image-attribute))
(common-lisp:progn
 (common-lisp:defun modify-instance-attribute
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-dest-check attribute block-device-mappings disable-api-termination dry-run ebs-optimized ena-support groups instance-id instance-initiated-shutdown-behavior instance-type kernel
                     ramdisk sriov-net-support user-data value)
   (common-lisp:declare
    (common-lisp:ignorable source-dest-check attribute block-device-mappings disable-api-termination dry-run ebs-optimized ena-support groups instance-id instance-initiated-shutdown-behavior instance-type kernel ramdisk
     sriov-net-support user-data value))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-instance-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyInstanceAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-instance-attribute))
(common-lisp:progn
 (common-lisp:defun modify-instance-capacity-reservation-attributes (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-id capacity-reservation-specification dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-id capacity-reservation-specification dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-instance-capacity-reservation-attributes-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyInstanceCapacityReservationAttributes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyInstanceCapacityReservationAttributesResult" common-lisp:nil)))
 (common-lisp:export 'modify-instance-capacity-reservation-attributes))
(common-lisp:progn
 (common-lisp:defun modify-instance-credit-specification (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run client-token instance-credit-specifications)
   (common-lisp:declare (common-lisp:ignorable dry-run client-token instance-credit-specifications))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-instance-credit-specification-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyInstanceCreditSpecification") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyInstanceCreditSpecificationResult" common-lisp:nil)))
 (common-lisp:export 'modify-instance-credit-specification))
(common-lisp:progn
 (common-lisp:defun modify-instance-event-start-time (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run instance-id instance-event-id not-before)
   (common-lisp:declare (common-lisp:ignorable dry-run instance-id instance-event-id not-before))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-instance-event-start-time-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyInstanceEventStartTime") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyInstanceEventStartTimeResult" common-lisp:nil)))
 (common-lisp:export 'modify-instance-event-start-time))
(common-lisp:progn
 (common-lisp:defun modify-instance-metadata-options (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-id http-tokens http-put-response-hop-limit http-endpoint dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-id http-tokens http-put-response-hop-limit http-endpoint dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-instance-metadata-options-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyInstanceMetadataOptions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyInstanceMetadataOptionsResult" common-lisp:nil)))
 (common-lisp:export 'modify-instance-metadata-options))
(common-lisp:progn
 (common-lisp:defun modify-instance-placement (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key affinity group-name host-id instance-id tenancy partition-number host-resource-group-arn)
   (common-lisp:declare (common-lisp:ignorable affinity group-name host-id instance-id tenancy partition-number host-resource-group-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-instance-placement-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyInstancePlacement") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyInstancePlacementResult" common-lisp:nil)))
 (common-lisp:export 'modify-instance-placement))
(common-lisp:progn
 (common-lisp:defun modify-launch-template (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run client-token launch-template-id launch-template-name default-version)
   (common-lisp:declare (common-lisp:ignorable dry-run client-token launch-template-id launch-template-name default-version))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-launch-template-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyLaunchTemplate") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyLaunchTemplateResult" common-lisp:nil)))
 (common-lisp:export 'modify-launch-template))
(common-lisp:progn
 (common-lisp:defun modify-network-interface-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attachment description dry-run groups network-interface-id source-dest-check)
   (common-lisp:declare (common-lisp:ignorable attachment description dry-run groups network-interface-id source-dest-check))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-network-interface-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyNetworkInterfaceAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-network-interface-attribute))
(common-lisp:progn
 (common-lisp:defun modify-reserved-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key reserved-instances-ids client-token target-configurations)
   (common-lisp:declare (common-lisp:ignorable reserved-instances-ids client-token target-configurations))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-reserved-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyReservedInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyReservedInstancesResult" common-lisp:nil)))
 (common-lisp:export 'modify-reserved-instances))
(common-lisp:progn
 (common-lisp:defun modify-snapshot-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute create-volume-permission group-names operation-type snapshot-id user-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute create-volume-permission group-names operation-type snapshot-id user-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-snapshot-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifySnapshotAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-snapshot-attribute))
(common-lisp:progn
 (common-lisp:defun modify-spot-fleet-request (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key excess-capacity-termination-policy spot-fleet-request-id target-capacity on-demand-target-capacity)
   (common-lisp:declare (common-lisp:ignorable excess-capacity-termination-policy spot-fleet-request-id target-capacity on-demand-target-capacity))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-spot-fleet-request-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifySpotFleetRequest") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifySpotFleetRequestResponse" common-lisp:nil)))
 (common-lisp:export 'modify-spot-fleet-request))
(common-lisp:progn
 (common-lisp:defun modify-subnet-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key assign-ipv6address-on-creation map-public-ip-on-launch subnet-id)
   (common-lisp:declare (common-lisp:ignorable assign-ipv6address-on-creation map-public-ip-on-launch subnet-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-subnet-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifySubnetAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-subnet-attribute))
(common-lisp:progn
 (common-lisp:defun modify-traffic-mirror-filter-network-services (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key traffic-mirror-filter-id add-network-services remove-network-services dry-run)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-filter-id add-network-services remove-network-services dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-traffic-mirror-filter-network-services-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyTrafficMirrorFilterNetworkServices") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyTrafficMirrorFilterNetworkServicesResult" common-lisp:nil)))
 (common-lisp:export 'modify-traffic-mirror-filter-network-services))
(common-lisp:progn
 (common-lisp:defun modify-traffic-mirror-filter-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key traffic-mirror-filter-rule-id traffic-direction rule-number rule-action destination-port-range source-port-range protocol destination-cidr-block source-cidr-block description
                     remove-fields dry-run)
   (common-lisp:declare
    (common-lisp:ignorable traffic-mirror-filter-rule-id traffic-direction rule-number rule-action destination-port-range source-port-range protocol destination-cidr-block source-cidr-block description remove-fields
     dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-traffic-mirror-filter-rule-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyTrafficMirrorFilterRule") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyTrafficMirrorFilterRuleResult" common-lisp:nil)))
 (common-lisp:export 'modify-traffic-mirror-filter-rule))
(common-lisp:progn
 (common-lisp:defun modify-traffic-mirror-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key traffic-mirror-session-id traffic-mirror-target-id traffic-mirror-filter-id packet-length session-number virtual-network-id description remove-fields dry-run)
   (common-lisp:declare (common-lisp:ignorable traffic-mirror-session-id traffic-mirror-target-id traffic-mirror-filter-id packet-length session-number virtual-network-id description remove-fields dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-traffic-mirror-session-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyTrafficMirrorSession") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyTrafficMirrorSessionResult" common-lisp:nil)))
 (common-lisp:export 'modify-traffic-mirror-session))
(common-lisp:progn
 (common-lisp:defun modify-transit-gateway-vpc-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id add-subnet-ids remove-subnet-ids options dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id add-subnet-ids remove-subnet-ids options dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-transit-gateway-vpc-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyTransitGatewayVpcAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyTransitGatewayVpcAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'modify-transit-gateway-vpc-attachment))
(common-lisp:progn
 (common-lisp:defun modify-volume (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run volume-id size volume-type iops)
   (common-lisp:declare (common-lisp:ignorable dry-run volume-id size volume-type iops))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-volume-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVolume") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVolumeResult" common-lisp:nil)))
 (common-lisp:export 'modify-volume))
(common-lisp:progn
 (common-lisp:defun modify-volume-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key auto-enable-io volume-id dry-run)
   (common-lisp:declare (common-lisp:ignorable auto-enable-io volume-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-volume-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVolumeAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-volume-attribute))
(common-lisp:progn
 (common-lisp:defun modify-vpc-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key enable-dns-hostnames enable-dns-support vpc-id)
   (common-lisp:declare (common-lisp:ignorable enable-dns-hostnames enable-dns-support vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpc-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpcAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'modify-vpc-attribute))
(common-lisp:progn
 (common-lisp:defun modify-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dry-run vpc-endpoint-id reset-policy policy-document add-route-table-ids remove-route-table-ids add-subnet-ids remove-subnet-ids add-security-group-ids remove-security-group-ids
                     private-dns-enabled)
   (common-lisp:declare
    (common-lisp:ignorable dry-run vpc-endpoint-id reset-policy policy-document add-route-table-ids remove-route-table-ids add-subnet-ids remove-subnet-ids add-security-group-ids remove-security-group-ids
     private-dns-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpc-endpoint-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpcEndpoint") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpcEndpointResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun modify-vpc-endpoint-connection-notification (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run connection-notification-id connection-notification-arn connection-events)
   (common-lisp:declare (common-lisp:ignorable dry-run connection-notification-id connection-notification-arn connection-events))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpc-endpoint-connection-notification-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpcEndpointConnectionNotification") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpcEndpointConnectionNotificationResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpc-endpoint-connection-notification))
(common-lisp:progn
 (common-lisp:defun modify-vpc-endpoint-service-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dry-run service-id private-dns-name remove-private-dns-name acceptance-required add-network-load-balancer-arns remove-network-load-balancer-arns)
   (common-lisp:declare (common-lisp:ignorable dry-run service-id private-dns-name remove-private-dns-name acceptance-required add-network-load-balancer-arns remove-network-load-balancer-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpc-endpoint-service-configuration-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpcEndpointServiceConfiguration") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpcEndpointServiceConfigurationResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpc-endpoint-service-configuration))
(common-lisp:progn
 (common-lisp:defun modify-vpc-endpoint-service-permissions (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-id add-allowed-principals remove-allowed-principals)
   (common-lisp:declare (common-lisp:ignorable dry-run service-id add-allowed-principals remove-allowed-principals))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpc-endpoint-service-permissions-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpcEndpointServicePermissions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpcEndpointServicePermissionsResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpc-endpoint-service-permissions))
(common-lisp:progn
 (common-lisp:defun modify-vpc-peering-connection-options
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key accepter-peering-connection-options dry-run requester-peering-connection-options vpc-peering-connection-id)
   (common-lisp:declare (common-lisp:ignorable accepter-peering-connection-options dry-run requester-peering-connection-options vpc-peering-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpc-peering-connection-options-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpcPeeringConnectionOptions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpcPeeringConnectionOptionsResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpc-peering-connection-options))
(common-lisp:progn
 (common-lisp:defun modify-vpc-tenancy (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpc-id instance-tenancy dry-run)
   (common-lisp:declare (common-lisp:ignorable vpc-id instance-tenancy dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpc-tenancy-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpcTenancy") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpcTenancyResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpc-tenancy))
(common-lisp:progn
 (common-lisp:defun modify-vpn-connection (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpn-connection-id transit-gateway-id customer-gateway-id vpn-gateway-id dry-run)
   (common-lisp:declare (common-lisp:ignorable vpn-connection-id transit-gateway-id customer-gateway-id vpn-gateway-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpn-connection-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpnConnection") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpnConnectionResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpn-connection))
(common-lisp:progn
 (common-lisp:defun modify-vpn-tunnel-certificate (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpn-connection-id vpn-tunnel-outside-ip-address dry-run)
   (common-lisp:declare (common-lisp:ignorable vpn-connection-id vpn-tunnel-outside-ip-address dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpn-tunnel-certificate-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpnTunnelCertificate") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpnTunnelCertificateResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpn-tunnel-certificate))
(common-lisp:progn
 (common-lisp:defun modify-vpn-tunnel-options (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key vpn-connection-id vpn-tunnel-outside-ip-address tunnel-options dry-run)
   (common-lisp:declare (common-lisp:ignorable vpn-connection-id vpn-tunnel-outside-ip-address tunnel-options dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-modify-vpn-tunnel-options-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ModifyVpnTunnelOptions") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ModifyVpnTunnelOptionsResult" common-lisp:nil)))
 (common-lisp:export 'modify-vpn-tunnel-options))
(common-lisp:progn
 (common-lisp:defun monitor-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-monitor-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"MonitorInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "MonitorInstancesResult" common-lisp:nil)))
 (common-lisp:export 'monitor-instances))
(common-lisp:progn
 (common-lisp:defun move-address-to-vpc (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run public-ip)
   (common-lisp:declare (common-lisp:ignorable dry-run public-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-move-address-to-vpc-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"MoveAddressToVpc") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "MoveAddressToVpcResult" common-lisp:nil)))
 (common-lisp:export 'move-address-to-vpc))
(common-lisp:progn
 (common-lisp:defun provision-byoip-cidr (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cidr cidr-authorization-context publicly-advertisable description dry-run)
   (common-lisp:declare (common-lisp:ignorable cidr cidr-authorization-context publicly-advertisable description dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-provision-byoip-cidr-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ProvisionByoipCidr") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ProvisionByoipCidrResult" common-lisp:nil)))
 (common-lisp:export 'provision-byoip-cidr))
(common-lisp:progn
 (common-lisp:defun purchase-host-reservation (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-token currency-code host-id-set limit-price offering-id)
   (common-lisp:declare (common-lisp:ignorable client-token currency-code host-id-set limit-price offering-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-purchase-host-reservation-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"PurchaseHostReservation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "PurchaseHostReservationResult" common-lisp:nil)))
 (common-lisp:export 'purchase-host-reservation))
(common-lisp:progn
 (common-lisp:defun purchase-reserved-instances-offering (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-count reserved-instances-offering-id dry-run limit-price purchase-time)
   (common-lisp:declare (common-lisp:ignorable instance-count reserved-instances-offering-id dry-run limit-price purchase-time))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-purchase-reserved-instances-offering-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"PurchaseReservedInstancesOffering") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "PurchaseReservedInstancesOfferingResult" common-lisp:nil)))
 (common-lisp:export 'purchase-reserved-instances-offering))
(common-lisp:progn
 (common-lisp:defun purchase-scheduled-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-token dry-run purchase-requests)
   (common-lisp:declare (common-lisp:ignorable client-token dry-run purchase-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-purchase-scheduled-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"PurchaseScheduledInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "PurchaseScheduledInstancesResult" common-lisp:nil)))
 (common-lisp:export 'purchase-scheduled-instances))
(common-lisp:progn
 (common-lisp:defun reboot-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reboot-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RebootInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'reboot-instances))
(common-lisp:progn
 (common-lisp:defun register-image
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key image-location architecture block-device-mappings description dry-run ena-support kernel-id name billing-products ramdisk-id root-device-name sriov-net-support virtualization-type)
   (common-lisp:declare
    (common-lisp:ignorable image-location architecture block-device-mappings description dry-run ena-support kernel-id name billing-products ramdisk-id root-device-name sriov-net-support virtualization-type))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-register-image-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RegisterImage") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RegisterImageResult" common-lisp:nil)))
 (common-lisp:export 'register-image))
(common-lisp:progn
 (common-lisp:defun register-transit-gateway-multicast-group-members (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-register-transit-gateway-multicast-group-members-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RegisterTransitGatewayMulticastGroupMembers") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RegisterTransitGatewayMulticastGroupMembersResult" common-lisp:nil)))
 (common-lisp:export 'register-transit-gateway-multicast-group-members))
(common-lisp:progn
 (common-lisp:defun register-transit-gateway-multicast-group-sources (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id group-ip-address network-interface-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-register-transit-gateway-multicast-group-sources-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RegisterTransitGatewayMulticastGroupSources") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RegisterTransitGatewayMulticastGroupSourcesResult" common-lisp:nil)))
 (common-lisp:export 'register-transit-gateway-multicast-group-sources))
(common-lisp:progn
 (common-lisp:defun reject-transit-gateway-peering-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reject-transit-gateway-peering-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RejectTransitGatewayPeeringAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RejectTransitGatewayPeeringAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'reject-transit-gateway-peering-attachment))
(common-lisp:progn
 (common-lisp:defun reject-transit-gateway-vpc-attachment (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-attachment-id dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-attachment-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reject-transit-gateway-vpc-attachment-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RejectTransitGatewayVpcAttachment") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RejectTransitGatewayVpcAttachmentResult" common-lisp:nil)))
 (common-lisp:export 'reject-transit-gateway-vpc-attachment))
(common-lisp:progn
 (common-lisp:defun reject-vpc-endpoint-connections (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-id vpc-endpoint-ids)
   (common-lisp:declare (common-lisp:ignorable dry-run service-id vpc-endpoint-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reject-vpc-endpoint-connections-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RejectVpcEndpointConnections") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RejectVpcEndpointConnectionsResult" common-lisp:nil)))
 (common-lisp:export 'reject-vpc-endpoint-connections))
(common-lisp:progn
 (common-lisp:defun reject-vpc-peering-connection (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run vpc-peering-connection-id)
   (common-lisp:declare (common-lisp:ignorable dry-run vpc-peering-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reject-vpc-peering-connection-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RejectVpcPeeringConnection") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RejectVpcPeeringConnectionResult" common-lisp:nil)))
 (common-lisp:export 'reject-vpc-peering-connection))
(common-lisp:progn
 (common-lisp:defun release-address (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key allocation-id public-ip network-border-group dry-run)
   (common-lisp:declare (common-lisp:ignorable allocation-id public-ip network-border-group dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-release-address-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReleaseAddress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'release-address))
(common-lisp:progn
 (common-lisp:defun release-hosts (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key host-ids)
   (common-lisp:declare (common-lisp:ignorable host-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-release-hosts-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReleaseHosts") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ReleaseHostsResult" common-lisp:nil)))
 (common-lisp:export 'release-hosts))
(common-lisp:progn
 (common-lisp:defun replace-iam-instance-profile-association (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key iam-instance-profile association-id)
   (common-lisp:declare (common-lisp:ignorable iam-instance-profile association-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-replace-iam-instance-profile-association-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReplaceIamInstanceProfileAssociation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ReplaceIamInstanceProfileAssociationResult" common-lisp:nil)))
 (common-lisp:export 'replace-iam-instance-profile-association))
(common-lisp:progn
 (common-lisp:defun replace-network-acl-association (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-id dry-run network-acl-id)
   (common-lisp:declare (common-lisp:ignorable association-id dry-run network-acl-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-replace-network-acl-association-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReplaceNetworkAclAssociation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ReplaceNetworkAclAssociationResult" common-lisp:nil)))
 (common-lisp:export 'replace-network-acl-association))
(common-lisp:progn
 (common-lisp:defun replace-network-acl-entry
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cidr-block dry-run egress icmp-type-code ipv6cidr-block network-acl-id port-range protocol rule-action rule-number)
   (common-lisp:declare (common-lisp:ignorable cidr-block dry-run egress icmp-type-code ipv6cidr-block network-acl-id port-range protocol rule-action rule-number))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-replace-network-acl-entry-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReplaceNetworkAclEntry") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'replace-network-acl-entry))
(common-lisp:progn
 (common-lisp:defun replace-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-cidr-block destination-ipv6cidr-block dry-run egress-only-internet-gateway-id gateway-id instance-id local-target nat-gateway-id transit-gateway-id local-gateway-id
                     network-interface-id route-table-id vpc-peering-connection-id)
   (common-lisp:declare
    (common-lisp:ignorable destination-cidr-block destination-ipv6cidr-block dry-run egress-only-internet-gateway-id gateway-id instance-id local-target nat-gateway-id transit-gateway-id local-gateway-id
     network-interface-id route-table-id vpc-peering-connection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-replace-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReplaceRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'replace-route))
(common-lisp:progn
 (common-lisp:defun replace-route-table-association (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key association-id dry-run route-table-id)
   (common-lisp:declare (common-lisp:ignorable association-id dry-run route-table-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-replace-route-table-association-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReplaceRouteTableAssociation") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ReplaceRouteTableAssociationResult" common-lisp:nil)))
 (common-lisp:export 'replace-route-table-association))
(common-lisp:progn
 (common-lisp:defun replace-transit-gateway-route (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key destination-cidr-block transit-gateway-route-table-id transit-gateway-attachment-id blackhole dry-run)
   (common-lisp:declare (common-lisp:ignorable destination-cidr-block transit-gateway-route-table-id transit-gateway-attachment-id blackhole dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-replace-transit-gateway-route-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReplaceTransitGatewayRoute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ReplaceTransitGatewayRouteResult" common-lisp:nil)))
 (common-lisp:export 'replace-transit-gateway-route))
(common-lisp:progn
 (common-lisp:defun report-instance-status (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key description dry-run end-time instances reason-codes start-time status)
   (common-lisp:declare (common-lisp:ignorable description dry-run end-time instances reason-codes start-time status))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-report-instance-status-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ReportInstanceStatus") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'report-instance-status))
(common-lisp:progn
 (common-lisp:defun request-spot-fleet (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run spot-fleet-request-config)
   (common-lisp:declare (common-lisp:ignorable dry-run spot-fleet-request-config))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-request-spot-fleet-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RequestSpotFleet") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RequestSpotFleetResponse" common-lisp:nil)))
 (common-lisp:export 'request-spot-fleet))
(common-lisp:progn
 (common-lisp:defun request-spot-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key availability-zone-group block-duration-minutes client-token dry-run instance-count launch-group launch-specification spot-price type valid-from valid-until
                     instance-interruption-behavior)
   (common-lisp:declare
    (common-lisp:ignorable availability-zone-group block-duration-minutes client-token dry-run instance-count launch-group launch-specification spot-price type valid-from valid-until instance-interruption-behavior))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-request-spot-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RequestSpotInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RequestSpotInstancesResult" common-lisp:nil)))
 (common-lisp:export 'request-spot-instances))
(common-lisp:progn
 (common-lisp:defun reset-ebs-default-kms-key-id (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run)
   (common-lisp:declare (common-lisp:ignorable dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reset-ebs-default-kms-key-id-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ResetEbsDefaultKmsKeyId") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ResetEbsDefaultKmsKeyIdResult" common-lisp:nil)))
 (common-lisp:export 'reset-ebs-default-kms-key-id))
(common-lisp:progn
 (common-lisp:defun reset-fpga-image-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run fpga-image-id attribute)
   (common-lisp:declare (common-lisp:ignorable dry-run fpga-image-id attribute))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reset-fpga-image-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ResetFpgaImageAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "ResetFpgaImageAttributeResult" common-lisp:nil)))
 (common-lisp:export 'reset-fpga-image-attribute))
(common-lisp:progn
 (common-lisp:defun reset-image-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute image-id dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute image-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reset-image-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ResetImageAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'reset-image-attribute))
(common-lisp:progn
 (common-lisp:defun reset-instance-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute dry-run instance-id)
   (common-lisp:declare (common-lisp:ignorable attribute dry-run instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reset-instance-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ResetInstanceAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'reset-instance-attribute))
(common-lisp:progn
 (common-lisp:defun reset-network-interface-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run network-interface-id source-dest-check)
   (common-lisp:declare (common-lisp:ignorable dry-run network-interface-id source-dest-check))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reset-network-interface-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ResetNetworkInterfaceAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'reset-network-interface-attribute))
(common-lisp:progn
 (common-lisp:defun reset-snapshot-attribute (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key attribute snapshot-id dry-run)
   (common-lisp:declare (common-lisp:ignorable attribute snapshot-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-reset-snapshot-attribute-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"ResetSnapshotAttribute") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'reset-snapshot-attribute))
(common-lisp:progn
 (common-lisp:defun restore-address-to-classic (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run public-ip)
   (common-lisp:declare (common-lisp:ignorable dry-run public-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-restore-address-to-classic-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RestoreAddressToClassic") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RestoreAddressToClassicResult" common-lisp:nil)))
 (common-lisp:export 'restore-address-to-classic))
(common-lisp:progn
 (common-lisp:defun revoke-client-vpn-ingress (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id target-network-cidr access-group-id revoke-all-groups dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id target-network-cidr access-group-id revoke-all-groups dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-revoke-client-vpn-ingress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RevokeClientVpnIngress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RevokeClientVpnIngressResult" common-lisp:nil)))
 (common-lisp:export 'revoke-client-vpn-ingress))
(common-lisp:progn
 (common-lisp:defun revoke-security-group-egress
                    (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run group-id ip-permissions cidr-ip from-port ip-protocol to-port source-security-group-name source-security-group-owner-id)
   (common-lisp:declare (common-lisp:ignorable dry-run group-id ip-permissions cidr-ip from-port ip-protocol to-port source-security-group-name source-security-group-owner-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-revoke-security-group-egress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RevokeSecurityGroupEgress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'revoke-security-group-egress))
(common-lisp:progn
 (common-lisp:defun revoke-security-group-ingress
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cidr-ip from-port group-id group-name ip-permissions ip-protocol source-security-group-name source-security-group-owner-id to-port dry-run)
   (common-lisp:declare (common-lisp:ignorable cidr-ip from-port group-id group-name ip-permissions ip-protocol source-security-group-name source-security-group-owner-id to-port dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-revoke-security-group-ingress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RevokeSecurityGroupIngress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'revoke-security-group-ingress))
(common-lisp:progn
 (common-lisp:defun run-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key block-device-mappings image-id instance-type ipv6address-count ipv6addresses kernel-id key-name max-count min-count monitoring placement ramdisk-id security-group-ids security-groups
                     subnet-id user-data additional-info client-token disable-api-termination dry-run ebs-optimized iam-instance-profile instance-initiated-shutdown-behavior network-interfaces private-ip-address
                     elastic-gpu-specification elastic-inference-accelerators tag-specifications launch-template instance-market-options credit-specification cpu-options capacity-reservation-specification
                     hibernation-options license-specifications metadata-options)
   (common-lisp:declare
    (common-lisp:ignorable block-device-mappings image-id instance-type ipv6address-count ipv6addresses kernel-id key-name max-count min-count monitoring placement ramdisk-id security-group-ids security-groups subnet-id
     user-data additional-info client-token disable-api-termination dry-run ebs-optimized iam-instance-profile instance-initiated-shutdown-behavior network-interfaces private-ip-address elastic-gpu-specification
     elastic-inference-accelerators tag-specifications launch-template instance-market-options credit-specification cpu-options capacity-reservation-specification hibernation-options license-specifications
     metadata-options))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-run-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RunInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "Reservation" common-lisp:nil)))
 (common-lisp:export 'run-instances))
(common-lisp:progn
 (common-lisp:defun run-scheduled-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-token dry-run instance-count launch-specification scheduled-instance-id)
   (common-lisp:declare (common-lisp:ignorable client-token dry-run instance-count launch-specification scheduled-instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-run-scheduled-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"RunScheduledInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "RunScheduledInstancesResult" common-lisp:nil)))
 (common-lisp:export 'run-scheduled-instances))
(common-lisp:progn
 (common-lisp:defun search-local-gateway-routes (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key local-gateway-route-table-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable local-gateway-route-table-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-search-local-gateway-routes-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"SearchLocalGatewayRoutes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "SearchLocalGatewayRoutesResult" common-lisp:nil)))
 (common-lisp:export 'search-local-gateway-routes))
(common-lisp:progn
 (common-lisp:defun search-transit-gateway-multicast-groups (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-multicast-domain-id filters max-results next-token dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-multicast-domain-id filters max-results next-token dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-search-transit-gateway-multicast-groups-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"SearchTransitGatewayMulticastGroups") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "SearchTransitGatewayMulticastGroupsResult" common-lisp:nil)))
 (common-lisp:export 'search-transit-gateway-multicast-groups))
(common-lisp:progn
 (common-lisp:defun search-transit-gateway-routes (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key transit-gateway-route-table-id filters max-results dry-run)
   (common-lisp:declare (common-lisp:ignorable transit-gateway-route-table-id filters max-results dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-search-transit-gateway-routes-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"SearchTransitGatewayRoutes") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "SearchTransitGatewayRoutesResult" common-lisp:nil)))
 (common-lisp:export 'search-transit-gateway-routes))
(common-lisp:progn
 (common-lisp:defun send-diagnostic-interrupt (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-id dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-id dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-send-diagnostic-interrupt-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"SendDiagnosticInterrupt") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'send-diagnostic-interrupt))
(common-lisp:progn
 (common-lisp:defun start-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-ids additional-info dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-ids additional-info dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-start-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"StartInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "StartInstancesResult" common-lisp:nil)))
 (common-lisp:export 'start-instances))
(common-lisp:progn
 (common-lisp:defun start-vpc-endpoint-service-private-dns-verification (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run service-id)
   (common-lisp:declare (common-lisp:ignorable dry-run service-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-start-vpc-endpoint-service-private-dns-verification-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"StartVpcEndpointServicePrivateDnsVerification") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "StartVpcEndpointServicePrivateDnsVerificationResult" common-lisp:nil)))
 (common-lisp:export 'start-vpc-endpoint-service-private-dns-verification))
(common-lisp:progn
 (common-lisp:defun stop-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-ids hibernate dry-run force)
   (common-lisp:declare (common-lisp:ignorable instance-ids hibernate dry-run force))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-stop-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"StopInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "StopInstancesResult" common-lisp:nil)))
 (common-lisp:export 'stop-instances))
(common-lisp:progn
 (common-lisp:defun terminate-client-vpn-connections (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key client-vpn-endpoint-id connection-id username dry-run)
   (common-lisp:declare (common-lisp:ignorable client-vpn-endpoint-id connection-id username dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-terminate-client-vpn-connections-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"TerminateClientVpnConnections") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "TerminateClientVpnConnectionsResult" common-lisp:nil)))
 (common-lisp:export 'terminate-client-vpn-connections))
(common-lisp:progn
 (common-lisp:defun terminate-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-terminate-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"TerminateInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "TerminateInstancesResult" common-lisp:nil)))
 (common-lisp:export 'terminate-instances))
(common-lisp:progn
 (common-lisp:defun unassign-ipv6addresses (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key ipv6addresses network-interface-id)
   (common-lisp:declare (common-lisp:ignorable ipv6addresses network-interface-id))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-unassign-ipv6addresses-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"UnassignIpv6Addresses") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "UnassignIpv6AddressesResult" common-lisp:nil)))
 (common-lisp:export 'unassign-ipv6addresses))
(common-lisp:progn
 (common-lisp:defun unassign-private-ip-addresses (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key network-interface-id private-ip-addresses)
   (common-lisp:declare (common-lisp:ignorable network-interface-id private-ip-addresses))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-unassign-private-ip-addresses-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"UnassignPrivateIpAddresses") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'unassign-private-ip-addresses))
(common-lisp:progn
 (common-lisp:defun unmonitor-instances (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key instance-ids dry-run)
   (common-lisp:declare (common-lisp:ignorable instance-ids dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-unmonitor-instances-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"UnmonitorInstances") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "UnmonitorInstancesResult" common-lisp:nil)))
 (common-lisp:export 'unmonitor-instances))
(common-lisp:progn
 (common-lisp:defun update-security-group-rule-descriptions-egress (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run group-id group-name ip-permissions)
   (common-lisp:declare (common-lisp:ignorable dry-run group-id group-name ip-permissions))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-update-security-group-rule-descriptions-egress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"UpdateSecurityGroupRuleDescriptionsEgress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "UpdateSecurityGroupRuleDescriptionsEgressResult" common-lisp:nil)))
 (common-lisp:export 'update-security-group-rule-descriptions-egress))
(common-lisp:progn
 (common-lisp:defun update-security-group-rule-descriptions-ingress (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key dry-run group-id group-name ip-permissions)
   (common-lisp:declare (common-lisp:ignorable dry-run group-id group-name ip-permissions))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-update-security-group-rule-descriptions-ingress-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"UpdateSecurityGroupRuleDescriptionsIngress") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "UpdateSecurityGroupRuleDescriptionsIngressResult" common-lisp:nil)))
 (common-lisp:export 'update-security-group-rule-descriptions-ingress))
(common-lisp:progn
 (common-lisp:defun withdraw-byoip-cidr (common-lisp:&rest aws-sdk/generator/operation::args common-lisp:&key cidr dry-run)
   (common-lisp:declare (common-lisp:ignorable cidr dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input (common-lisp:apply 'make-withdraw-byoip-cidr-request aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ec2" :method :post :params
                               (common-lisp:append `(("Action" ,@"WithdrawByoipCidr") ("Version" ,@"2016-11-15")) (aws-sdk/generator/shape:shape-to-params aws-sdk/generator/operation::input)))
      "WithdrawByoipCidrResult" common-lisp:nil)))
 (common-lisp:export 'withdraw-byoip-cidr))
